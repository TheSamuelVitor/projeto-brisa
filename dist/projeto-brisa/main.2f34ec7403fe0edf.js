"use strict";
(self.webpackChunkprojeto_brisa = self.webpackChunkprojeto_brisa || []).push([
  [179],
  {
    335: () => {
      function ye(n) {
        return "function" == typeof n;
      }
      function Us(n) {
        const e = n((i) => {
          Error.call(i), (i.stack = new Error().stack);
        });
        return (
          (e.prototype = Object.create(Error.prototype)),
          (e.prototype.constructor = e),
          e
        );
      }
      const Il = Us(
        (n) =>
          function (e) {
            n(this),
              (this.message = e
                ? `${e.length} errors occurred during unsubscription:\n${e
                    .map((i, r) => `${r + 1}) ${i.toString()}`)
                    .join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = e);
          }
      );
      function To(n, t) {
        if (n) {
          const e = n.indexOf(t);
          0 <= e && n.splice(e, 1);
        }
      }
      class tt {
        constructor(t) {
          (this.initialTeardown = t),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let t;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: e } = this;
            if (e)
              if (((this._parentage = null), Array.isArray(e)))
                for (const o of e) o.remove(this);
              else e.remove(this);
            const { initialTeardown: i } = this;
            if (ye(i))
              try {
                i();
              } catch (o) {
                t = o instanceof Il ? o.errors : [o];
              }
            const { _finalizers: r } = this;
            if (r) {
              this._finalizers = null;
              for (const o of r)
                try {
                  r_(o);
                } catch (s) {
                  (t = t ?? []),
                    s instanceof Il ? (t = [...t, ...s.errors]) : t.push(s);
                }
            }
            if (t) throw new Il(t);
          }
        }
        add(t) {
          var e;
          if (t && t !== this)
            if (this.closed) r_(t);
            else {
              if (t instanceof tt) {
                if (t.closed || t._hasParent(this)) return;
                t._addParent(this);
              }
              (this._finalizers =
                null !== (e = this._finalizers) && void 0 !== e ? e : []).push(
                t
              );
            }
        }
        _hasParent(t) {
          const { _parentage: e } = this;
          return e === t || (Array.isArray(e) && e.includes(t));
        }
        _addParent(t) {
          const { _parentage: e } = this;
          this._parentage = Array.isArray(e) ? (e.push(t), e) : e ? [e, t] : t;
        }
        _removeParent(t) {
          const { _parentage: e } = this;
          e === t ? (this._parentage = null) : Array.isArray(e) && To(e, t);
        }
        remove(t) {
          const { _finalizers: e } = this;
          e && To(e, t), t instanceof tt && t._removeParent(this);
        }
      }
      tt.EMPTY = (() => {
        const n = new tt();
        return (n.closed = !0), n;
      })();
      const n_ = tt.EMPTY;
      function i_(n) {
        return (
          n instanceof tt ||
          (n && "closed" in n && ye(n.remove) && ye(n.add) && ye(n.unsubscribe))
        );
      }
      function r_(n) {
        ye(n) ? n() : n.unsubscribe();
      }
      const Lr = {
          onUnhandledError: null,
          onStoppedNotification: null,
          Promise: void 0,
          useDeprecatedSynchronousErrorHandling: !1,
          useDeprecatedNextContext: !1,
        },
        kl = {
          setTimeout(n, t, ...e) {
            const { delegate: i } = kl;
            return i?.setTimeout
              ? i.setTimeout(n, t, ...e)
              : setTimeout(n, t, ...e);
          },
          clearTimeout(n) {
            const { delegate: t } = kl;
            return (t?.clearTimeout || clearTimeout)(n);
          },
          delegate: void 0,
        };
      function o_(n) {
        kl.setTimeout(() => {
          const { onUnhandledError: t } = Lr;
          if (!t) throw n;
          t(n);
        });
      }
      function Nd() {}
      const ux = Ld("C", void 0, void 0);
      function Ld(n, t, e) {
        return { kind: n, value: t, error: e };
      }
      let Vr = null;
      function Rl(n) {
        if (Lr.useDeprecatedSynchronousErrorHandling) {
          const t = !Vr;
          if ((t && (Vr = { errorThrown: !1, error: null }), n(), t)) {
            const { errorThrown: e, error: i } = Vr;
            if (((Vr = null), e)) throw i;
          }
        } else n();
      }
      class Vd extends tt {
        constructor(t) {
          super(),
            (this.isStopped = !1),
            t
              ? ((this.destination = t), i_(t) && t.add(this))
              : (this.destination = _x);
        }
        static create(t, e, i) {
          return new $s(t, e, i);
        }
        next(t) {
          this.isStopped
            ? jd(
                (function hx(n) {
                  return Ld("N", n, void 0);
                })(t),
                this
              )
            : this._next(t);
        }
        error(t) {
          this.isStopped
            ? jd(
                (function dx(n) {
                  return Ld("E", void 0, n);
                })(t),
                this
              )
            : ((this.isStopped = !0), this._error(t));
        }
        complete() {
          this.isStopped
            ? jd(ux, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(t) {
          this.destination.next(t);
        }
        _error(t) {
          try {
            this.destination.error(t);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const px = Function.prototype.bind;
      function Bd(n, t) {
        return px.call(n, t);
      }
      class mx {
        constructor(t) {
          this.partialObserver = t;
        }
        next(t) {
          const { partialObserver: e } = this;
          if (e.next)
            try {
              e.next(t);
            } catch (i) {
              Ol(i);
            }
        }
        error(t) {
          const { partialObserver: e } = this;
          if (e.error)
            try {
              e.error(t);
            } catch (i) {
              Ol(i);
            }
          else Ol(t);
        }
        complete() {
          const { partialObserver: t } = this;
          if (t.complete)
            try {
              t.complete();
            } catch (e) {
              Ol(e);
            }
        }
      }
      class $s extends Vd {
        constructor(t, e, i) {
          let r;
          if ((super(), ye(t) || !t))
            r = {
              next: t ?? void 0,
              error: e ?? void 0,
              complete: i ?? void 0,
            };
          else {
            let o;
            this && Lr.useDeprecatedNextContext
              ? ((o = Object.create(t)),
                (o.unsubscribe = () => this.unsubscribe()),
                (r = {
                  next: t.next && Bd(t.next, o),
                  error: t.error && Bd(t.error, o),
                  complete: t.complete && Bd(t.complete, o),
                }))
              : (r = t);
          }
          this.destination = new mx(r);
        }
      }
      function Ol(n) {
        Lr.useDeprecatedSynchronousErrorHandling
          ? (function fx(n) {
              Lr.useDeprecatedSynchronousErrorHandling &&
                Vr &&
                ((Vr.errorThrown = !0), (Vr.error = n));
            })(n)
          : o_(n);
      }
      function jd(n, t) {
        const { onStoppedNotification: e } = Lr;
        e && kl.setTimeout(() => e(n, t));
      }
      const _x = {
          closed: !0,
          next: Nd,
          error: function gx(n) {
            throw n;
          },
          complete: Nd,
        },
        Hd =
          ("function" == typeof Symbol && Symbol.observable) || "@@observable";
      function dr(n) {
        return n;
      }
      function s_(n) {
        return 0 === n.length
          ? dr
          : 1 === n.length
          ? n[0]
          : function (e) {
              return n.reduce((i, r) => r(i), e);
            };
      }
      let Oe = (() => {
        class n {
          constructor(e) {
            e && (this._subscribe = e);
          }
          lift(e) {
            const i = new n();
            return (i.source = this), (i.operator = e), i;
          }
          subscribe(e, i, r) {
            const o = (function bx(n) {
              return (
                (n && n instanceof Vd) ||
                ((function yx(n) {
                  return n && ye(n.next) && ye(n.error) && ye(n.complete);
                })(n) &&
                  i_(n))
              );
            })(e)
              ? e
              : new $s(e, i, r);
            return (
              Rl(() => {
                const { operator: s, source: a } = this;
                o.add(
                  s
                    ? s.call(o, a)
                    : a
                    ? this._subscribe(o)
                    : this._trySubscribe(o)
                );
              }),
              o
            );
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (i) {
              e.error(i);
            }
          }
          forEach(e, i) {
            return new (i = a_(i))((r, o) => {
              const s = new $s({
                next: (a) => {
                  try {
                    e(a);
                  } catch (l) {
                    o(l), s.unsubscribe();
                  }
                },
                error: o,
                complete: r,
              });
              this.subscribe(s);
            });
          }
          _subscribe(e) {
            var i;
            return null === (i = this.source) || void 0 === i
              ? void 0
              : i.subscribe(e);
          }
          [Hd]() {
            return this;
          }
          pipe(...e) {
            return s_(e)(this);
          }
          toPromise(e) {
            return new (e = a_(e))((i, r) => {
              let o;
              this.subscribe(
                (s) => (o = s),
                (s) => r(s),
                () => i(o)
              );
            });
          }
        }
        return (n.create = (t) => new n(t)), n;
      })();
      function a_(n) {
        var t;
        return null !== (t = n ?? Lr.Promise) && void 0 !== t ? t : Promise;
      }
      const Cx = Us(
        (n) =>
          function () {
            n(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      let V = (() => {
        class n extends Oe {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(e) {
            const i = new l_(this, this);
            return (i.operator = e), i;
          }
          _throwIfClosed() {
            if (this.closed) throw new Cx();
          }
          next(e) {
            Rl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const i of this.currentObservers) i.next(e);
              }
            });
          }
          error(e) {
            Rl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = e);
                const { observers: i } = this;
                for (; i.length; ) i.shift().error(e);
              }
            });
          }
          complete() {
            Rl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: e } = this;
                for (; e.length; ) e.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var e;
            return (
              (null === (e = this.observers) || void 0 === e
                ? void 0
                : e.length) > 0
            );
          }
          _trySubscribe(e) {
            return this._throwIfClosed(), super._trySubscribe(e);
          }
          _subscribe(e) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(e),
              this._innerSubscribe(e)
            );
          }
          _innerSubscribe(e) {
            const { hasError: i, isStopped: r, observers: o } = this;
            return i || r
              ? n_
              : ((this.currentObservers = null),
                o.push(e),
                new tt(() => {
                  (this.currentObservers = null), To(o, e);
                }));
          }
          _checkFinalizedStatuses(e) {
            const { hasError: i, thrownError: r, isStopped: o } = this;
            i ? e.error(r) : o && e.complete();
          }
          asObservable() {
            const e = new Oe();
            return (e.source = this), e;
          }
        }
        return (n.create = (t, e) => new l_(t, e)), n;
      })();
      class l_ extends V {
        constructor(t, e) {
          super(), (this.destination = t), (this.source = e);
        }
        next(t) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.next) ||
            void 0 === i ||
            i.call(e, t);
        }
        error(t) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.error) ||
            void 0 === i ||
            i.call(e, t);
        }
        complete() {
          var t, e;
          null ===
            (e =
              null === (t = this.destination) || void 0 === t
                ? void 0
                : t.complete) ||
            void 0 === e ||
            e.call(t);
        }
        _subscribe(t) {
          var e, i;
          return null !==
            (i =
              null === (e = this.source) || void 0 === e
                ? void 0
                : e.subscribe(t)) && void 0 !== i
            ? i
            : n_;
        }
      }
      function c_(n) {
        return ye(n?.lift);
      }
      function Ze(n) {
        return (t) => {
          if (c_(t))
            return t.lift(function (e) {
              try {
                return n(e, this);
              } catch (i) {
                this.error(i);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
      function Ue(n, t, e, i, r) {
        return new wx(n, t, e, i, r);
      }
      class wx extends Vd {
        constructor(t, e, i, r, o, s) {
          super(t),
            (this.onFinalize = o),
            (this.shouldUnsubscribe = s),
            (this._next = e
              ? function (a) {
                  try {
                    e(a);
                  } catch (l) {
                    t.error(l);
                  }
                }
              : super._next),
            (this._error = r
              ? function (a) {
                  try {
                    r(a);
                  } catch (l) {
                    t.error(l);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = i
              ? function () {
                  try {
                    i();
                  } catch (a) {
                    t.error(a);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var t;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: e } = this;
            super.unsubscribe(),
              !e &&
                (null === (t = this.onFinalize) ||
                  void 0 === t ||
                  t.call(this));
          }
        }
      }
      function q(n, t) {
        return Ze((e, i) => {
          let r = 0;
          e.subscribe(
            Ue(i, (o) => {
              i.next(n.call(t, o, r++));
            })
          );
        });
      }
      function Br(n) {
        return this instanceof Br ? ((this.v = n), this) : new Br(n);
      }
      function Ex(n, t, e) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var r,
          i = e.apply(n, t || []),
          o = [];
        return (
          (r = {}),
          s("next"),
          s("throw"),
          s("return"),
          (r[Symbol.asyncIterator] = function () {
            return this;
          }),
          r
        );
        function s(f) {
          i[f] &&
            (r[f] = function (p) {
              return new Promise(function (_, y) {
                o.push([f, p, _, y]) > 1 || a(f, p);
              });
            });
        }
        function a(f, p) {
          try {
            !(function l(f) {
              f.value instanceof Br
                ? Promise.resolve(f.value.v).then(c, u)
                : d(o[0][2], f);
            })(i[f](p));
          } catch (_) {
            d(o[0][3], _);
          }
        }
        function c(f) {
          a("next", f);
        }
        function u(f) {
          a("throw", f);
        }
        function d(f, p) {
          f(p), o.shift(), o.length && a(o[0][0], o[0][1]);
        }
      }
      function Sx(n) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var e,
          t = n[Symbol.asyncIterator];
        return t
          ? t.call(n)
          : ((n = (function h_(n) {
              var t = "function" == typeof Symbol && Symbol.iterator,
                e = t && n[t],
                i = 0;
              if (e) return e.call(n);
              if (n && "number" == typeof n.length)
                return {
                  next: function () {
                    return (
                      n && i >= n.length && (n = void 0),
                      { value: n && n[i++], done: !n }
                    );
                  },
                };
              throw new TypeError(
                t
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(n)),
            (e = {}),
            i("next"),
            i("throw"),
            i("return"),
            (e[Symbol.asyncIterator] = function () {
              return this;
            }),
            e);
        function i(o) {
          e[o] =
            n[o] &&
            function (s) {
              return new Promise(function (a, l) {
                !(function r(o, s, a, l) {
                  Promise.resolve(l).then(function (c) {
                    o({ value: c, done: a });
                  }, s);
                })(a, l, (s = n[o](s)).done, s.value);
              });
            };
        }
      }
      const $d = (n) =>
        n && "number" == typeof n.length && "function" != typeof n;
      function f_(n) {
        return ye(n?.then);
      }
      function p_(n) {
        return ye(n[Hd]);
      }
      function m_(n) {
        return Symbol.asyncIterator && ye(n?.[Symbol.asyncIterator]);
      }
      function g_(n) {
        return new TypeError(
          `You provided ${
            null !== n && "object" == typeof n ? "an invalid object" : `'${n}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      const __ = (function xx() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
      function v_(n) {
        return ye(n?.[__]);
      }
      function y_(n) {
        return Ex(this, arguments, function* () {
          const e = n.getReader();
          try {
            for (;;) {
              const { value: i, done: r } = yield Br(e.read());
              if (r) return yield Br(void 0);
              yield yield Br(i);
            }
          } finally {
            e.releaseLock();
          }
        });
      }
      function b_(n) {
        return ye(n?.getReader);
      }
      function zt(n) {
        if (n instanceof Oe) return n;
        if (null != n) {
          if (p_(n))
            return (function Ax(n) {
              return new Oe((t) => {
                const e = n[Hd]();
                if (ye(e.subscribe)) return e.subscribe(t);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(n);
          if ($d(n))
            return (function Ix(n) {
              return new Oe((t) => {
                for (let e = 0; e < n.length && !t.closed; e++) t.next(n[e]);
                t.complete();
              });
            })(n);
          if (f_(n))
            return (function kx(n) {
              return new Oe((t) => {
                n.then(
                  (e) => {
                    t.closed || (t.next(e), t.complete());
                  },
                  (e) => t.error(e)
                ).then(null, o_);
              });
            })(n);
          if (m_(n)) return C_(n);
          if (v_(n))
            return (function Rx(n) {
              return new Oe((t) => {
                for (const e of n) if ((t.next(e), t.closed)) return;
                t.complete();
              });
            })(n);
          if (b_(n))
            return (function Ox(n) {
              return C_(y_(n));
            })(n);
        }
        throw g_(n);
      }
      function C_(n) {
        return new Oe((t) => {
          (function Fx(n, t) {
            var e, i, r, o;
            return (function Dx(n, t, e, i) {
              return new (e || (e = Promise))(function (o, s) {
                function a(u) {
                  try {
                    c(i.next(u));
                  } catch (d) {
                    s(d);
                  }
                }
                function l(u) {
                  try {
                    c(i.throw(u));
                  } catch (d) {
                    s(d);
                  }
                }
                function c(u) {
                  u.done
                    ? o(u.value)
                    : (function r(o) {
                        return o instanceof e
                          ? o
                          : new e(function (s) {
                              s(o);
                            });
                      })(u.value).then(a, l);
                }
                c((i = i.apply(n, t || [])).next());
              });
            })(this, void 0, void 0, function* () {
              try {
                for (e = Sx(n); !(i = yield e.next()).done; )
                  if ((t.next(i.value), t.closed)) return;
              } catch (s) {
                r = { error: s };
              } finally {
                try {
                  i && !i.done && (o = e.return) && (yield o.call(e));
                } finally {
                  if (r) throw r.error;
                }
              }
              t.complete();
            });
          })(n, t).catch((e) => t.error(e));
        });
      }
      function Fi(n, t, e, i = 0, r = !1) {
        const o = t.schedule(function () {
          e(), r ? n.add(this.schedule(null, i)) : this.unsubscribe();
        }, i);
        if ((n.add(o), !r)) return o;
      }
      function bt(n, t, e = 1 / 0) {
        return ye(t)
          ? bt((i, r) => q((o, s) => t(i, o, r, s))(zt(n(i, r))), e)
          : ("number" == typeof t && (e = t),
            Ze((i, r) =>
              (function Px(n, t, e, i, r, o, s, a) {
                const l = [];
                let c = 0,
                  u = 0,
                  d = !1;
                const f = () => {
                    d && !l.length && !c && t.complete();
                  },
                  p = (y) => (c < i ? _(y) : l.push(y)),
                  _ = (y) => {
                    o && t.next(y), c++;
                    let w = !1;
                    zt(e(y, u++)).subscribe(
                      Ue(
                        t,
                        (D) => {
                          r?.(D), o ? p(D) : t.next(D);
                        },
                        () => {
                          w = !0;
                        },
                        void 0,
                        () => {
                          if (w)
                            try {
                              for (c--; l.length && c < i; ) {
                                const D = l.shift();
                                s ? Fi(t, s, () => _(D)) : _(D);
                              }
                              f();
                            } catch (D) {
                              t.error(D);
                            }
                        }
                      )
                    );
                  };
                return (
                  n.subscribe(
                    Ue(t, p, () => {
                      (d = !0), f();
                    })
                  ),
                  () => {
                    a?.();
                  }
                );
              })(i, r, n, e)
            ));
      }
      function xo(n = 1 / 0) {
        return bt(dr, n);
      }
      const ni = new Oe((n) => n.complete());
      function w_(n) {
        return n && ye(n.schedule);
      }
      function zd(n) {
        return n[n.length - 1];
      }
      function D_(n) {
        return ye(zd(n)) ? n.pop() : void 0;
      }
      function zs(n) {
        return w_(zd(n)) ? n.pop() : void 0;
      }
      function M_(n, t = 0) {
        return Ze((e, i) => {
          e.subscribe(
            Ue(
              i,
              (r) => Fi(i, n, () => i.next(r), t),
              () => Fi(i, n, () => i.complete(), t),
              (r) => Fi(i, n, () => i.error(r), t)
            )
          );
        });
      }
      function E_(n, t = 0) {
        return Ze((e, i) => {
          i.add(n.schedule(() => e.subscribe(i), t));
        });
      }
      function S_(n, t) {
        if (!n) throw new Error("Iterable cannot be null");
        return new Oe((e) => {
          Fi(e, t, () => {
            const i = n[Symbol.asyncIterator]();
            Fi(
              e,
              t,
              () => {
                i.next().then((r) => {
                  r.done ? e.complete() : e.next(r.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      function rt(n, t) {
        return t
          ? (function $x(n, t) {
              if (null != n) {
                if (p_(n))
                  return (function Vx(n, t) {
                    return zt(n).pipe(E_(t), M_(t));
                  })(n, t);
                if ($d(n))
                  return (function jx(n, t) {
                    return new Oe((e) => {
                      let i = 0;
                      return t.schedule(function () {
                        i === n.length
                          ? e.complete()
                          : (e.next(n[i++]), e.closed || this.schedule());
                      });
                    });
                  })(n, t);
                if (f_(n))
                  return (function Bx(n, t) {
                    return zt(n).pipe(E_(t), M_(t));
                  })(n, t);
                if (m_(n)) return S_(n, t);
                if (v_(n))
                  return (function Hx(n, t) {
                    return new Oe((e) => {
                      let i;
                      return (
                        Fi(e, t, () => {
                          (i = n[__]()),
                            Fi(
                              e,
                              t,
                              () => {
                                let r, o;
                                try {
                                  ({ value: r, done: o } = i.next());
                                } catch (s) {
                                  return void e.error(s);
                                }
                                o ? e.complete() : e.next(r);
                              },
                              0,
                              !0
                            );
                        }),
                        () => ye(i?.return) && i.return()
                      );
                    });
                  })(n, t);
                if (b_(n))
                  return (function Ux(n, t) {
                    return S_(y_(n), t);
                  })(n, t);
              }
              throw g_(n);
            })(n, t)
          : zt(n);
      }
      function hr(...n) {
        const t = zs(n),
          e = (function Lx(n, t) {
            return "number" == typeof zd(n) ? n.pop() : t;
          })(n, 1 / 0),
          i = n;
        return i.length ? (1 === i.length ? zt(i[0]) : xo(e)(rt(i, t))) : ni;
      }
      function qd(n, t, ...e) {
        if (!0 === t) return void n();
        if (!1 === t) return;
        const i = new $s({
          next: () => {
            i.unsubscribe(), n();
          },
        });
        return t(...e).subscribe(i);
      }
      function Le(n) {
        for (let t in n) if (n[t] === Le) return t;
        throw Error("Could not find renamed property on target object.");
      }
      function Gd(n, t) {
        for (const e in t)
          t.hasOwnProperty(e) && !n.hasOwnProperty(e) && (n[e] = t[e]);
      }
      function Ve(n) {
        if ("string" == typeof n) return n;
        if (Array.isArray(n)) return "[" + n.map(Ve).join(", ") + "]";
        if (null == n) return "" + n;
        if (n.overriddenName) return `${n.overriddenName}`;
        if (n.name) return `${n.name}`;
        const t = n.toString();
        if (null == t) return "" + t;
        const e = t.indexOf("\n");
        return -1 === e ? t : t.substring(0, e);
      }
      function Wd(n, t) {
        return null == n || "" === n
          ? null === t
            ? ""
            : t
          : null == t || "" === t
          ? n
          : n + " " + t;
      }
      const zx = Le({ __forward_ref__: Le });
      function Me(n) {
        return (
          (n.__forward_ref__ = Me),
          (n.toString = function () {
            return Ve(this());
          }),
          n
        );
      }
      function K(n) {
        return Yd(n) ? n() : n;
      }
      function Yd(n) {
        return (
          "function" == typeof n &&
          n.hasOwnProperty(zx) &&
          n.__forward_ref__ === Me
        );
      }
      class S extends Error {
        constructor(t, e) {
          super(
            (function Fl(n, t) {
              return `NG0${Math.abs(n)}${t ? ": " + t.trim() : ""}`;
            })(t, e)
          ),
            (this.code = t);
        }
      }
      function re(n) {
        return "string" == typeof n ? n : null == n ? "" : String(n);
      }
      function Pl(n, t) {
        throw new S(-201, !1);
      }
      function rn(n, t) {
        null == n &&
          (function xe(n, t, e, i) {
            throw new Error(
              `ASSERTION ERROR: ${n}` +
                (null == i ? "" : ` [Expected=> ${e} ${i} ${t} <=Actual]`)
            );
          })(t, n, null, "!=");
      }
      function k(n) {
        return {
          token: n.token,
          providedIn: n.providedIn || null,
          factory: n.factory,
          value: void 0,
        };
      }
      function Z(n) {
        return { providers: n.providers || [], imports: n.imports || [] };
      }
      function Kd(n) {
        return x_(n, Nl) || x_(n, I_);
      }
      function x_(n, t) {
        return n.hasOwnProperty(t) ? n[t] : null;
      }
      function A_(n) {
        return n && (n.hasOwnProperty(Zd) || n.hasOwnProperty(Xx))
          ? n[Zd]
          : null;
      }
      const Nl = Le({ ɵprov: Le }),
        Zd = Le({ ɵinj: Le }),
        I_ = Le({ ngInjectableDef: Le }),
        Xx = Le({ ngInjectorDef: Le });
      var $ = (() => (
        (($ = $ || {})[($.Default = 0)] = "Default"),
        ($[($.Host = 1)] = "Host"),
        ($[($.Self = 2)] = "Self"),
        ($[($.SkipSelf = 4)] = "SkipSelf"),
        ($[($.Optional = 8)] = "Optional"),
        $
      ))();
      let Qd;
      function En(n) {
        const t = Qd;
        return (Qd = n), t;
      }
      function k_(n, t, e) {
        const i = Kd(n);
        return i && "root" == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : e & $.Optional
          ? null
          : void 0 !== t
          ? t
          : void Pl(Ve(n));
      }
      function fr(n) {
        return { toString: n }.toString();
      }
      var Bn = (() => (
          ((Bn = Bn || {})[(Bn.OnPush = 0)] = "OnPush"),
          (Bn[(Bn.Default = 1)] = "Default"),
          Bn
        ))(),
        jn = (() => {
          return (
            ((n = jn || (jn = {}))[(n.Emulated = 0)] = "Emulated"),
            (n[(n.None = 2)] = "None"),
            (n[(n.ShadowDom = 3)] = "ShadowDom"),
            jn
          );
          var n;
        })();
      const Fe = (() =>
          (typeof globalThis < "u" && globalThis) ||
          (typeof global < "u" && global) ||
          (typeof window < "u" && window) ||
          (typeof self < "u" &&
            typeof WorkerGlobalScope < "u" &&
            self instanceof WorkerGlobalScope &&
            self))(),
        Ao = {},
        Se = [],
        Ll = Le({ ɵcmp: Le }),
        Xd = Le({ ɵdir: Le }),
        Jd = Le({ ɵpipe: Le }),
        R_ = Le({ ɵmod: Le }),
        Ni = Le({ ɵfac: Le }),
        qs = Le({ __NG_ELEMENT_ID__: Le });
      let eA = 0;
      function H(n) {
        return fr(() => {
          const e = !0 === n.standalone,
            i = {},
            r = {
              type: n.type,
              providersResolver: null,
              decls: n.decls,
              vars: n.vars,
              factory: null,
              template: n.template || null,
              consts: n.consts || null,
              ngContentSelectors: n.ngContentSelectors,
              hostBindings: n.hostBindings || null,
              hostVars: n.hostVars || 0,
              hostAttrs: n.hostAttrs || null,
              contentQueries: n.contentQueries || null,
              declaredInputs: i,
              inputs: null,
              outputs: null,
              exportAs: n.exportAs || null,
              onPush: n.changeDetection === Bn.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              standalone: e,
              dependencies: (e && n.dependencies) || null,
              getStandaloneInjector: null,
              selectors: n.selectors || Se,
              viewQuery: n.viewQuery || null,
              features: n.features || null,
              data: n.data || {},
              encapsulation: n.encapsulation || jn.Emulated,
              id: "c" + eA++,
              styles: n.styles || Se,
              _: null,
              setInput: null,
              schemas: n.schemas || null,
              tView: null,
            },
            o = n.dependencies,
            s = n.features;
          return (
            (r.inputs = P_(n.inputs, i)),
            (r.outputs = P_(n.outputs)),
            s && s.forEach((a) => a(r)),
            (r.directiveDefs = o
              ? () => ("function" == typeof o ? o() : o).map(O_).filter(F_)
              : null),
            (r.pipeDefs = o
              ? () => ("function" == typeof o ? o() : o).map(Nt).filter(F_)
              : null),
            r
          );
        });
      }
      function O_(n) {
        return Re(n) || Pt(n);
      }
      function F_(n) {
        return null !== n;
      }
      const nA = {};
      function Q(n) {
        return fr(() => {
          const t = {
            type: n.type,
            bootstrap: n.bootstrap || Se,
            declarations: n.declarations || Se,
            imports: n.imports || Se,
            exports: n.exports || Se,
            transitiveCompileScopes: null,
            schemas: n.schemas || null,
            id: n.id || null,
          };
          return null != n.id && (nA[n.id] = n.type), t;
        });
      }
      function P_(n, t) {
        if (null == n) return Ao;
        const e = {};
        for (const i in n)
          if (n.hasOwnProperty(i)) {
            let r = n[i],
              o = r;
            Array.isArray(r) && ((o = r[1]), (r = r[0])),
              (e[r] = i),
              t && (t[r] = o);
          }
        return e;
      }
      const R = H;
      function qt(n) {
        return {
          type: n.type,
          name: n.name,
          factory: null,
          pure: !1 !== n.pure,
          standalone: !0 === n.standalone,
          onDestroy: n.type.prototype.ngOnDestroy || null,
        };
      }
      function Re(n) {
        return n[Ll] || null;
      }
      function Pt(n) {
        return n[Xd] || null;
      }
      function Nt(n) {
        return n[Jd] || null;
      }
      function on(n, t) {
        const e = n[R_] || null;
        if (!e && !0 === t)
          throw new Error(`Type ${Ve(n)} does not have '\u0275mod' property.`);
        return e;
      }
      function Gt(n) {
        return Array.isArray(n) && "object" == typeof n[1];
      }
      function Un(n) {
        return Array.isArray(n) && !0 === n[1];
      }
      function nh(n) {
        return 0 != (8 & n.flags);
      }
      function Hl(n) {
        return 2 == (2 & n.flags);
      }
      function Ul(n) {
        return 1 == (1 & n.flags);
      }
      function $n(n) {
        return null !== n.template;
      }
      function aA(n) {
        return 0 != (256 & n[2]);
      }
      function zr(n, t) {
        return n.hasOwnProperty(Ni) ? n[Ni] : null;
      }
      class uA {
        constructor(t, e, i) {
          (this.previousValue = t),
            (this.currentValue = e),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Mt() {
        return V_;
      }
      function V_(n) {
        return n.type.prototype.ngOnChanges && (n.setInput = hA), dA;
      }
      function dA() {
        const n = j_(this),
          t = n?.current;
        if (t) {
          const e = n.previous;
          if (e === Ao) n.previous = t;
          else for (let i in t) e[i] = t[i];
          (n.current = null), this.ngOnChanges(t);
        }
      }
      function hA(n, t, e, i) {
        const r =
            j_(n) ||
            (function fA(n, t) {
              return (n[B_] = t);
            })(n, { previous: Ao, current: null }),
          o = r.current || (r.current = {}),
          s = r.previous,
          a = this.declaredInputs[e],
          l = s[a];
        (o[a] = new uA(l && l.currentValue, t, s === Ao)), (n[i] = t);
      }
      Mt.ngInherit = !0;
      const B_ = "__ngSimpleChanges__";
      function j_(n) {
        return n[B_] || null;
      }
      function ot(n) {
        for (; Array.isArray(n); ) n = n[0];
        return n;
      }
      function $l(n, t) {
        return ot(t[n]);
      }
      function xn(n, t) {
        return ot(t[n.index]);
      }
      function ah(n, t) {
        return n.data[t];
      }
      function Fo(n, t) {
        return n[t];
      }
      function an(n, t) {
        const e = t[n];
        return Gt(e) ? e : e[0];
      }
      function H_(n) {
        return 4 == (4 & n[2]);
      }
      function lh(n) {
        return 64 == (64 & n[2]);
      }
      function pr(n, t) {
        return null == t ? null : n[t];
      }
      function U_(n) {
        n[18] = 0;
      }
      function ch(n, t) {
        n[5] += t;
        let e = n,
          i = n[3];
        for (
          ;
          null !== i && ((1 === t && 1 === e[5]) || (-1 === t && 0 === e[5]));

        )
          (i[5] += t), (e = i), (i = i[3]);
      }
      const ne = { lFrame: Q_(null), bindingsEnabled: !0 };
      function z_() {
        return ne.bindingsEnabled;
      }
      function T() {
        return ne.lFrame.lView;
      }
      function Ce() {
        return ne.lFrame.tView;
      }
      function ii(n) {
        return (ne.lFrame.contextLView = n), n[8];
      }
      function ri(n) {
        return (ne.lFrame.contextLView = null), n;
      }
      function ft() {
        let n = q_();
        for (; null !== n && 64 === n.type; ) n = n.parent;
        return n;
      }
      function q_() {
        return ne.lFrame.currentTNode;
      }
      function oi(n, t) {
        const e = ne.lFrame;
        (e.currentTNode = n), (e.isParent = t);
      }
      function uh() {
        return ne.lFrame.isParent;
      }
      function dh() {
        ne.lFrame.isParent = !1;
      }
      function Po() {
        return ne.lFrame.bindingIndex++;
      }
      function Vi(n) {
        const t = ne.lFrame,
          e = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + n), e;
      }
      function TA(n, t) {
        const e = ne.lFrame;
        (e.bindingIndex = e.bindingRootIndex = n), hh(t);
      }
      function hh(n) {
        ne.lFrame.currentDirectiveIndex = n;
      }
      function fh(n) {
        const t = ne.lFrame.currentDirectiveIndex;
        return -1 === t ? null : n[t];
      }
      function Y_() {
        return ne.lFrame.currentQueryIndex;
      }
      function ph(n) {
        ne.lFrame.currentQueryIndex = n;
      }
      function AA(n) {
        const t = n[1];
        return 2 === t.type ? t.declTNode : 1 === t.type ? n[6] : null;
      }
      function K_(n, t, e) {
        if (e & $.SkipSelf) {
          let r = t,
            o = n;
          for (
            ;
            !((r = r.parent),
            null !== r ||
              e & $.Host ||
              ((r = AA(o)), null === r || ((o = o[15]), 10 & r.type)));

          );
          if (null === r) return !1;
          (t = r), (n = o);
        }
        const i = (ne.lFrame = Z_());
        return (i.currentTNode = t), (i.lView = n), !0;
      }
      function mh(n) {
        const t = Z_(),
          e = n[1];
        (ne.lFrame = t),
          (t.currentTNode = e.firstChild),
          (t.lView = n),
          (t.tView = e),
          (t.contextLView = n),
          (t.bindingIndex = e.bindingStartIndex),
          (t.inI18n = !1);
      }
      function Z_() {
        const n = ne.lFrame,
          t = null === n ? null : n.child;
        return null === t ? Q_(n) : t;
      }
      function Q_(n) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: n,
          child: null,
          inI18n: !1,
        };
        return null !== n && (n.child = t), t;
      }
      function X_() {
        const n = ne.lFrame;
        return (
          (ne.lFrame = n.parent), (n.currentTNode = null), (n.lView = null), n
        );
      }
      const J_ = X_;
      function gh() {
        const n = X_();
        (n.isParent = !0),
          (n.tView = null),
          (n.selectedIndex = -1),
          (n.contextLView = null),
          (n.elementDepthCount = 0),
          (n.currentDirectiveIndex = -1),
          (n.currentNamespace = null),
          (n.bindingRootIndex = -1),
          (n.bindingIndex = -1),
          (n.currentQueryIndex = 0);
      }
      function Vt() {
        return ne.lFrame.selectedIndex;
      }
      function mr(n) {
        ne.lFrame.selectedIndex = n;
      }
      function Xe() {
        const n = ne.lFrame;
        return ah(n.tView, n.selectedIndex);
      }
      function ql(n, t) {
        for (let e = t.directiveStart, i = t.directiveEnd; e < i; e++) {
          const o = n.data[e].type.prototype,
            {
              ngAfterContentInit: s,
              ngAfterContentChecked: a,
              ngAfterViewInit: l,
              ngAfterViewChecked: c,
              ngOnDestroy: u,
            } = o;
          s && (n.contentHooks || (n.contentHooks = [])).push(-e, s),
            a &&
              ((n.contentHooks || (n.contentHooks = [])).push(e, a),
              (n.contentCheckHooks || (n.contentCheckHooks = [])).push(e, a)),
            l && (n.viewHooks || (n.viewHooks = [])).push(-e, l),
            c &&
              ((n.viewHooks || (n.viewHooks = [])).push(e, c),
              (n.viewCheckHooks || (n.viewCheckHooks = [])).push(e, c)),
            null != u && (n.destroyHooks || (n.destroyHooks = [])).push(e, u);
        }
      }
      function Gl(n, t, e) {
        ev(n, t, 3, e);
      }
      function Wl(n, t, e, i) {
        (3 & n[2]) === e && ev(n, t, e, i);
      }
      function _h(n, t) {
        let e = n[2];
        (3 & e) === t && ((e &= 2047), (e += 1), (n[2] = e));
      }
      function ev(n, t, e, i) {
        const o = i ?? -1,
          s = t.length - 1;
        let a = 0;
        for (let l = void 0 !== i ? 65535 & n[18] : 0; l < s; l++)
          if ("number" == typeof t[l + 1]) {
            if (((a = t[l]), null != i && a >= i)) break;
          } else
            t[l] < 0 && (n[18] += 65536),
              (a < o || -1 == o) &&
                (VA(n, e, t, l), (n[18] = (4294901760 & n[18]) + l + 2)),
              l++;
      }
      function VA(n, t, e, i) {
        const r = e[i] < 0,
          o = e[i + 1],
          a = n[r ? -e[i] : e[i]];
        if (r) {
          if (n[2] >> 11 < n[18] >> 16 && (3 & n[2]) === t) {
            n[2] += 2048;
            try {
              o.call(a);
            } finally {
            }
          }
        } else
          try {
            o.call(a);
          } finally {
          }
      }
      class Zs {
        constructor(t, e, i) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = e),
            (this.injectImpl = i);
        }
      }
      function Yl(n, t, e) {
        let i = 0;
        for (; i < e.length; ) {
          const r = e[i];
          if ("number" == typeof r) {
            if (0 !== r) break;
            i++;
            const o = e[i++],
              s = e[i++],
              a = e[i++];
            n.setAttribute(t, s, a, o);
          } else {
            const o = r,
              s = e[++i];
            nv(o) ? n.setProperty(t, o, s) : n.setAttribute(t, o, s), i++;
          }
        }
        return i;
      }
      function tv(n) {
        return 3 === n || 4 === n || 6 === n;
      }
      function nv(n) {
        return 64 === n.charCodeAt(0);
      }
      function Kl(n, t) {
        if (null !== t && 0 !== t.length)
          if (null === n || 0 === n.length) n = t.slice();
          else {
            let e = -1;
            for (let i = 0; i < t.length; i++) {
              const r = t[i];
              "number" == typeof r
                ? (e = r)
                : 0 === e ||
                  iv(n, e, r, null, -1 === e || 2 === e ? t[++i] : null);
            }
          }
        return n;
      }
      function iv(n, t, e, i, r) {
        let o = 0,
          s = n.length;
        if (-1 === t) s = -1;
        else
          for (; o < n.length; ) {
            const a = n[o++];
            if ("number" == typeof a) {
              if (a === t) {
                s = -1;
                break;
              }
              if (a > t) {
                s = o - 1;
                break;
              }
            }
          }
        for (; o < n.length; ) {
          const a = n[o];
          if ("number" == typeof a) break;
          if (a === e) {
            if (null === i) return void (null !== r && (n[o + 1] = r));
            if (i === n[o + 1]) return void (n[o + 2] = r);
          }
          o++, null !== i && o++, null !== r && o++;
        }
        -1 !== s && (n.splice(s, 0, t), (o = s + 1)),
          n.splice(o++, 0, e),
          null !== i && n.splice(o++, 0, i),
          null !== r && n.splice(o++, 0, r);
      }
      function rv(n) {
        return -1 !== n;
      }
      function No(n) {
        return 32767 & n;
      }
      function Lo(n, t) {
        let e = (function $A(n) {
            return n >> 16;
          })(n),
          i = t;
        for (; e > 0; ) (i = i[15]), e--;
        return i;
      }
      let yh = !0;
      function Zl(n) {
        const t = yh;
        return (yh = n), t;
      }
      let zA = 0;
      const si = {};
      function Xs(n, t) {
        const e = Ch(n, t);
        if (-1 !== e) return e;
        const i = t[1];
        i.firstCreatePass &&
          ((n.injectorIndex = t.length),
          bh(i.data, n),
          bh(t, null),
          bh(i.blueprint, null));
        const r = Ql(n, t),
          o = n.injectorIndex;
        if (rv(r)) {
          const s = No(r),
            a = Lo(r, t),
            l = a[1].data;
          for (let c = 0; c < 8; c++) t[o + c] = a[s + c] | l[s + c];
        }
        return (t[o + 8] = r), o;
      }
      function bh(n, t) {
        n.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function Ch(n, t) {
        return -1 === n.injectorIndex ||
          (n.parent && n.parent.injectorIndex === n.injectorIndex) ||
          null === t[n.injectorIndex + 8]
          ? -1
          : n.injectorIndex;
      }
      function Ql(n, t) {
        if (n.parent && -1 !== n.parent.injectorIndex)
          return n.parent.injectorIndex;
        let e = 0,
          i = null,
          r = t;
        for (; null !== r; ) {
          if (((i = fv(r)), null === i)) return -1;
          if ((e++, (r = r[15]), -1 !== i.injectorIndex))
            return i.injectorIndex | (e << 16);
        }
        return -1;
      }
      function Xl(n, t, e) {
        !(function qA(n, t, e) {
          let i;
          "string" == typeof e
            ? (i = e.charCodeAt(0) || 0)
            : e.hasOwnProperty(qs) && (i = e[qs]),
            null == i && (i = e[qs] = zA++);
          const r = 255 & i;
          t.data[n + (r >> 5)] |= 1 << r;
        })(n, t, e);
      }
      function av(n, t, e) {
        if (e & $.Optional) return n;
        Pl();
      }
      function lv(n, t, e, i) {
        if (
          (e & $.Optional && void 0 === i && (i = null),
          0 == (e & ($.Self | $.Host)))
        ) {
          const r = n[9],
            o = En(void 0);
          try {
            return r ? r.get(t, i, e & $.Optional) : k_(t, i, e & $.Optional);
          } finally {
            En(o);
          }
        }
        return av(i, 0, e);
      }
      function cv(n, t, e, i = $.Default, r) {
        if (null !== n) {
          if (1024 & t[2]) {
            const s = (function ZA(n, t, e, i, r) {
              let o = n,
                s = t;
              for (
                ;
                null !== o && null !== s && 1024 & s[2] && !(256 & s[2]);

              ) {
                const a = uv(o, s, e, i | $.Self, si);
                if (a !== si) return a;
                let l = o.parent;
                if (!l) {
                  const c = s[21];
                  if (c) {
                    const u = c.get(e, si, i);
                    if (u !== si) return u;
                  }
                  (l = fv(s)), (s = s[15]);
                }
                o = l;
              }
              return r;
            })(n, t, e, i, si);
            if (s !== si) return s;
          }
          const o = uv(n, t, e, i, si);
          if (o !== si) return o;
        }
        return lv(t, e, i, r);
      }
      function uv(n, t, e, i, r) {
        const o = (function YA(n) {
          if ("string" == typeof n) return n.charCodeAt(0) || 0;
          const t = n.hasOwnProperty(qs) ? n[qs] : void 0;
          return "number" == typeof t ? (t >= 0 ? 255 & t : KA) : t;
        })(e);
        if ("function" == typeof o) {
          if (!K_(t, n, i)) return i & $.Host ? av(r, 0, i) : lv(t, e, i, r);
          try {
            const s = o(i);
            if (null != s || i & $.Optional) return s;
            Pl();
          } finally {
            J_();
          }
        } else if ("number" == typeof o) {
          let s = null,
            a = Ch(n, t),
            l = -1,
            c = i & $.Host ? t[16][6] : null;
          for (
            (-1 === a || i & $.SkipSelf) &&
            ((l = -1 === a ? Ql(n, t) : t[a + 8]),
            -1 !== l && hv(i, !1)
              ? ((s = t[1]), (a = No(l)), (t = Lo(l, t)))
              : (a = -1));
            -1 !== a;

          ) {
            const u = t[1];
            if (dv(o, a, u.data)) {
              const d = WA(a, t, e, s, i, c);
              if (d !== si) return d;
            }
            (l = t[a + 8]),
              -1 !== l && hv(i, t[1].data[a + 8] === c) && dv(o, a, t)
                ? ((s = u), (a = No(l)), (t = Lo(l, t)))
                : (a = -1);
          }
        }
        return r;
      }
      function WA(n, t, e, i, r, o) {
        const s = t[1],
          a = s.data[n + 8],
          u = Jl(
            a,
            s,
            e,
            null == i ? Hl(a) && yh : i != s && 0 != (3 & a.type),
            r & $.Host && o === a
          );
        return null !== u ? Js(t, s, u, a) : si;
      }
      function Jl(n, t, e, i, r) {
        const o = n.providerIndexes,
          s = t.data,
          a = 1048575 & o,
          l = n.directiveStart,
          u = o >> 20,
          f = r ? a + u : n.directiveEnd;
        for (let p = i ? a : a + u; p < f; p++) {
          const _ = s[p];
          if ((p < l && e === _) || (p >= l && _.type === e)) return p;
        }
        if (r) {
          const p = s[l];
          if (p && $n(p) && p.type === e) return l;
        }
        return null;
      }
      function Js(n, t, e, i) {
        let r = n[e];
        const o = t.data;
        if (
          (function BA(n) {
            return n instanceof Zs;
          })(r)
        ) {
          const s = r;
          s.resolving &&
            (function qx(n, t) {
              const e = t ? `. Dependency path: ${t.join(" > ")} > ${n}` : "";
              throw new S(
                -200,
                `Circular dependency in DI detected for ${n}${e}`
              );
            })(
              (function Ee(n) {
                return "function" == typeof n
                  ? n.name || n.toString()
                  : "object" == typeof n &&
                    null != n &&
                    "function" == typeof n.type
                  ? n.type.name || n.type.toString()
                  : re(n);
              })(o[e])
            );
          const a = Zl(s.canSeeViewProviders);
          s.resolving = !0;
          const l = s.injectImpl ? En(s.injectImpl) : null;
          K_(n, i, $.Default);
          try {
            (r = n[e] = s.factory(void 0, o, n, i)),
              t.firstCreatePass &&
                e >= i.directiveStart &&
                (function LA(n, t, e) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: r,
                    ngDoCheck: o,
                  } = t.type.prototype;
                  if (i) {
                    const s = V_(t);
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(n, s),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(n, s);
                  }
                  r &&
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(0 - n, r),
                    o &&
                      ((e.preOrderHooks || (e.preOrderHooks = [])).push(n, o),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(n, o));
                })(e, o[e], t);
          } finally {
            null !== l && En(l), Zl(a), (s.resolving = !1), J_();
          }
        }
        return r;
      }
      function dv(n, t, e) {
        return !!(e[t + (n >> 5)] & (1 << n));
      }
      function hv(n, t) {
        return !(n & $.Self || (n & $.Host && t));
      }
      class Vo {
        constructor(t, e) {
          (this._tNode = t), (this._lView = e);
        }
        get(t, e, i) {
          return cv(this._tNode, this._lView, t, i, e);
        }
      }
      function KA() {
        return new Vo(ft(), T());
      }
      function je(n) {
        return fr(() => {
          const t = n.prototype.constructor,
            e = t[Ni] || wh(t),
            i = Object.prototype;
          let r = Object.getPrototypeOf(n.prototype).constructor;
          for (; r && r !== i; ) {
            const o = r[Ni] || wh(r);
            if (o && o !== e) return o;
            r = Object.getPrototypeOf(r);
          }
          return (o) => new o();
        });
      }
      function wh(n) {
        return Yd(n)
          ? () => {
              const t = wh(K(n));
              return t && t();
            }
          : zr(n);
      }
      function fv(n) {
        const t = n[1],
          e = t.type;
        return 2 === e ? t.declTNode : 1 === e ? n[6] : null;
      }
      function ai(n) {
        return (function GA(n, t) {
          if ("class" === t) return n.classes;
          if ("style" === t) return n.styles;
          const e = n.attrs;
          if (e) {
            const i = e.length;
            let r = 0;
            for (; r < i; ) {
              const o = e[r];
              if (tv(o)) break;
              if (0 === o) r += 2;
              else if ("number" == typeof o)
                for (r++; r < i && "string" == typeof e[r]; ) r++;
              else {
                if (o === t) return e[r + 1];
                r += 2;
              }
            }
          }
          return null;
        })(ft(), n);
      }
      const jo = "__parameters__";
      function Uo(n, t, e) {
        return fr(() => {
          const i = (function Dh(n) {
            return function (...e) {
              if (n) {
                const i = n(...e);
                for (const r in i) this[r] = i[r];
              }
            };
          })(t);
          function r(...o) {
            if (this instanceof r) return i.apply(this, o), this;
            const s = new r(...o);
            return (a.annotation = s), a;
            function a(l, c, u) {
              const d = l.hasOwnProperty(jo)
                ? l[jo]
                : Object.defineProperty(l, jo, { value: [] })[jo];
              for (; d.length <= u; ) d.push(null);
              return (d[u] = d[u] || []).push(s), l;
            }
          }
          return (
            e && (r.prototype = Object.create(e.prototype)),
            (r.prototype.ngMetadataName = n),
            (r.annotationCls = r),
            r
          );
        });
      }
      class x {
        constructor(t, e) {
          (this._desc = t),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = k({
                  token: this,
                  providedIn: e.providedIn || "root",
                  factory: e.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const XA = new x("AnalyzeForEntryComponents");
      function ln(n, t) {
        void 0 === t && (t = n);
        for (let e = 0; e < n.length; e++) {
          let i = n[e];
          Array.isArray(i)
            ? (t === n && (t = n.slice(0, e)), ln(i, t))
            : t !== n && t.push(i);
        }
        return t;
      }
      function Bi(n, t) {
        n.forEach((e) => (Array.isArray(e) ? Bi(e, t) : t(e)));
      }
      function mv(n, t, e) {
        t >= n.length ? n.push(e) : n.splice(t, 0, e);
      }
      function ec(n, t) {
        return t >= n.length - 1 ? n.pop() : n.splice(t, 1)[0];
      }
      function na(n, t) {
        const e = [];
        for (let i = 0; i < n; i++) e.push(t);
        return e;
      }
      function cn(n, t, e) {
        let i = $o(n, t);
        return (
          i >= 0
            ? (n[1 | i] = e)
            : ((i = ~i),
              (function tI(n, t, e, i) {
                let r = n.length;
                if (r == t) n.push(e, i);
                else if (1 === r) n.push(i, n[0]), (n[0] = e);
                else {
                  for (r--, n.push(n[r - 1], n[r]); r > t; )
                    (n[r] = n[r - 2]), r--;
                  (n[t] = e), (n[t + 1] = i);
                }
              })(n, i, t, e)),
          i
        );
      }
      function Eh(n, t) {
        const e = $o(n, t);
        if (e >= 0) return n[1 | e];
      }
      function $o(n, t) {
        return (function vv(n, t, e) {
          let i = 0,
            r = n.length >> e;
          for (; r !== i; ) {
            const o = i + ((r - i) >> 1),
              s = n[o << e];
            if (t === s) return o << e;
            s > t ? (r = o) : (i = o + 1);
          }
          return ~(r << e);
        })(n, t, 1);
      }
      const ia = {},
        Th = "__NG_DI_FLAG__",
        nc = "ngTempTokenPath",
        cI = /\n/gm,
        yv = "__source";
      let ra;
      function zo(n) {
        const t = ra;
        return (ra = n), t;
      }
      function dI(n, t = $.Default) {
        if (void 0 === ra) throw new S(-203, !1);
        return null === ra
          ? k_(n, void 0, t)
          : ra.get(n, t & $.Optional ? null : void 0, t);
      }
      function b(n, t = $.Default) {
        return (
          (function Jx() {
            return Qd;
          })() || dI
        )(K(n), t);
      }
      function un(n, t = $.Default) {
        return (
          "number" != typeof t &&
            (t =
              0 |
              (t.optional && 8) |
              (t.host && 1) |
              (t.self && 2) |
              (t.skipSelf && 4)),
          b(n, t)
        );
      }
      function xh(n) {
        const t = [];
        for (let e = 0; e < n.length; e++) {
          const i = K(n[e]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new S(900, !1);
            let r,
              o = $.Default;
            for (let s = 0; s < i.length; s++) {
              const a = i[s],
                l = hI(a);
              "number" == typeof l
                ? -1 === l
                  ? (r = a.token)
                  : (o |= l)
                : (r = a);
            }
            t.push(b(r, o));
          } else t.push(b(i));
        }
        return t;
      }
      function oa(n, t) {
        return (n[Th] = t), (n.prototype[Th] = t), n;
      }
      function hI(n) {
        return n[Th];
      }
      const li = oa(Uo("Optional"), 8),
        qo = oa(Uo("SkipSelf"), 4);
      let Ih;
      class qr {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      function dn(n) {
        return n instanceof qr ? n.changingThisBreaksApplicationSecurity : n;
      }
      const HI =
          /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
        UI =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      var Te = (() => (
        ((Te = Te || {})[(Te.NONE = 0)] = "NONE"),
        (Te[(Te.HTML = 1)] = "HTML"),
        (Te[(Te.STYLE = 2)] = "STYLE"),
        (Te[(Te.SCRIPT = 3)] = "SCRIPT"),
        (Te[(Te.URL = 4)] = "URL"),
        (Te[(Te.RESOURCE_URL = 5)] = "RESOURCE_URL"),
        Te
      ))();
      function Lh(n) {
        const t = (function ua() {
          const n = T();
          return n && n[12];
        })();
        return t
          ? t.sanitize(Te.URL, n) || ""
          : (function ci(n, t) {
              const e = (function RI(n) {
                return (n instanceof qr && n.getTypeName()) || null;
              })(n);
              if (null != e && e !== t) {
                if ("ResourceURL" === e && "URL" === t) return !0;
                throw new Error(
                  `Required a safe ${t}, got a ${e} (see https://g.co/ng/security#xss)`
                );
              }
              return e === t;
            })(n, "URL")
          ? dn(n)
          : (function la(n) {
              return (n = String(n)).match(HI) || n.match(UI)
                ? n
                : "unsafe:" + n;
            })(re(n));
      }
      const Vh = new x("ENVIRONMENT_INITIALIZER"),
        Hv = new x("INJECTOR", -1),
        Uv = new x("INJECTOR_DEF_TYPES");
      class $v {
        get(t, e = ia) {
          if (e === ia) {
            const i = new Error(`NullInjectorError: No provider for ${Ve(t)}!`);
            throw ((i.name = "NullInjectorError"), i);
          }
          return e;
        }
      }
      function t1(...n) {
        return { ɵproviders: zv(0, n) };
      }
      function zv(n, ...t) {
        const e = [],
          i = new Set();
        let r;
        return (
          Bi(t, (o) => {
            const s = o;
            Bh(s, e, [], i) && (r || (r = []), r.push(s));
          }),
          void 0 !== r && qv(r, e),
          e
        );
      }
      function qv(n, t) {
        for (let e = 0; e < n.length; e++) {
          const { providers: r } = n[e];
          Bi(r, (o) => {
            t.push(o);
          });
        }
      }
      function Bh(n, t, e, i) {
        if (!(n = K(n))) return !1;
        let r = null,
          o = A_(n);
        const s = !o && Re(n);
        if (o || s) {
          if (s && !s.standalone) return !1;
          r = n;
        } else {
          const l = n.ngModule;
          if (((o = A_(l)), !o)) return !1;
          r = l;
        }
        const a = i.has(r);
        if (s) {
          if (a) return !1;
          if ((i.add(r), s.dependencies)) {
            const l =
              "function" == typeof s.dependencies
                ? s.dependencies()
                : s.dependencies;
            for (const c of l) Bh(c, t, e, i);
          }
        } else {
          if (!o) return !1;
          {
            if (null != o.imports && !a) {
              let c;
              i.add(r);
              try {
                Bi(o.imports, (u) => {
                  Bh(u, t, e, i) && (c || (c = []), c.push(u));
                });
              } finally {
              }
              void 0 !== c && qv(c, t);
            }
            if (!a) {
              const c = zr(r) || (() => new r());
              t.push(
                { provide: r, useFactory: c, deps: Se },
                { provide: Uv, useValue: r, multi: !0 },
                { provide: Vh, useValue: () => b(r), multi: !0 }
              );
            }
            const l = o.providers;
            null == l ||
              a ||
              Bi(l, (u) => {
                t.push(u);
              });
          }
        }
        return r !== n && void 0 !== n.providers;
      }
      const n1 = Le({ provide: String, useValue: Le });
      function jh(n) {
        return null !== n && "object" == typeof n && n1 in n;
      }
      function Gr(n) {
        return "function" == typeof n;
      }
      const Hh = new x("Set Injector scope."),
        lc = {},
        o1 = {};
      let Uh;
      function cc() {
        return void 0 === Uh && (Uh = new $v()), Uh;
      }
      class _r {}
      class Yv extends _r {
        constructor(t, e, i, r) {
          super(),
            (this.parent = e),
            (this.source = i),
            (this.scopes = r),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            zh(t, (s) => this.processProvider(s)),
            this.records.set(Hv, Yo(void 0, this)),
            r.has("environment") && this.records.set(_r, Yo(void 0, this));
          const o = this.records.get(Hh);
          null != o && "string" == typeof o.value && this.scopes.add(o.value),
            (this.injectorDefTypes = new Set(this.get(Uv.multi, Se, $.Self)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const t of this._ngOnDestroyHooks) t.ngOnDestroy();
            for (const t of this._onDestroyHooks) t();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(t) {
          this._onDestroyHooks.push(t);
        }
        runInContext(t) {
          this.assertNotDestroyed();
          const e = zo(this),
            i = En(void 0);
          try {
            return t();
          } finally {
            zo(e), En(i);
          }
        }
        get(t, e = ia, i = $.Default) {
          this.assertNotDestroyed();
          const r = zo(this),
            o = En(void 0);
          try {
            if (!(i & $.SkipSelf)) {
              let a = this.records.get(t);
              if (void 0 === a) {
                const l =
                  (function u1(n) {
                    return (
                      "function" == typeof n ||
                      ("object" == typeof n && n instanceof x)
                    );
                  })(t) && Kd(t);
                (a = l && this.injectableDefInScope(l) ? Yo($h(t), lc) : null),
                  this.records.set(t, a);
              }
              if (null != a) return this.hydrate(t, a);
            }
            return (i & $.Self ? cc() : this.parent).get(
              t,
              (e = i & $.Optional && e === ia ? null : e)
            );
          } catch (s) {
            if ("NullInjectorError" === s.name) {
              if (((s[nc] = s[nc] || []).unshift(Ve(t)), r)) throw s;
              return (function fI(n, t, e, i) {
                const r = n[nc];
                throw (
                  (t[yv] && r.unshift(t[yv]),
                  (n.message = (function pI(n, t, e, i = null) {
                    n =
                      n && "\n" === n.charAt(0) && "\u0275" == n.charAt(1)
                        ? n.slice(2)
                        : n;
                    let r = Ve(t);
                    if (Array.isArray(t)) r = t.map(Ve).join(" -> ");
                    else if ("object" == typeof t) {
                      let o = [];
                      for (let s in t)
                        if (t.hasOwnProperty(s)) {
                          let a = t[s];
                          o.push(
                            s +
                              ":" +
                              ("string" == typeof a ? JSON.stringify(a) : Ve(a))
                          );
                        }
                      r = `{${o.join(", ")}}`;
                    }
                    return `${e}${i ? "(" + i + ")" : ""}[${r}]: ${n.replace(
                      cI,
                      "\n  "
                    )}`;
                  })("\n" + n.message, r, e, i)),
                  (n.ngTokenPath = r),
                  (n[nc] = null),
                  n)
                );
              })(s, t, "R3InjectorError", this.source);
            }
            throw s;
          } finally {
            En(o), zo(r);
          }
        }
        resolveInjectorInitializers() {
          const t = zo(this),
            e = En(void 0);
          try {
            const i = this.get(Vh.multi, Se, $.Self);
            for (const r of i) r();
          } finally {
            zo(t), En(e);
          }
        }
        toString() {
          const t = [],
            e = this.records;
          for (const i of e.keys()) t.push(Ve(i));
          return `R3Injector[${t.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new S(205, !1);
        }
        processProvider(t) {
          let e = Gr((t = K(t))) ? t : K(t && t.provide);
          const i = (function a1(n) {
            return jh(n) ? Yo(void 0, n.useValue) : Yo(Kv(n), lc);
          })(t);
          if (Gr(t) || !0 !== t.multi) this.records.get(e);
          else {
            let r = this.records.get(e);
            r ||
              ((r = Yo(void 0, lc, !0)),
              (r.factory = () => xh(r.multi)),
              this.records.set(e, r)),
              (e = t),
              r.multi.push(t);
          }
          this.records.set(e, i);
        }
        hydrate(t, e) {
          return (
            e.value === lc && ((e.value = o1), (e.value = e.factory())),
            "object" == typeof e.value &&
              e.value &&
              (function c1(n) {
                return (
                  null !== n &&
                  "object" == typeof n &&
                  "function" == typeof n.ngOnDestroy
                );
              })(e.value) &&
              this._ngOnDestroyHooks.add(e.value),
            e.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const e = K(t.providedIn);
          return "string" == typeof e
            ? "any" === e || this.scopes.has(e)
            : this.injectorDefTypes.has(e);
        }
      }
      function $h(n) {
        const t = Kd(n),
          e = null !== t ? t.factory : zr(n);
        if (null !== e) return e;
        if (n instanceof x) throw new S(204, !1);
        if (n instanceof Function)
          return (function s1(n) {
            const t = n.length;
            if (t > 0) throw (na(t, "?"), new S(204, !1));
            const e = (function Zx(n) {
              const t = n && (n[Nl] || n[I_]);
              if (t) {
                const e = (function Qx(n) {
                  if (n.hasOwnProperty("name")) return n.name;
                  const t = ("" + n).match(/^function\s*([^\s(]+)/);
                  return null === t ? "" : t[1];
                })(n);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`
                  ),
                  t
                );
              }
              return null;
            })(n);
            return null !== e ? () => e.factory(n) : () => new n();
          })(n);
        throw new S(204, !1);
      }
      function Kv(n, t, e) {
        let i;
        if (Gr(n)) {
          const r = K(n);
          return zr(r) || $h(r);
        }
        if (jh(n)) i = () => K(n.useValue);
        else if (
          (function Wv(n) {
            return !(!n || !n.useFactory);
          })(n)
        )
          i = () => n.useFactory(...xh(n.deps || []));
        else if (
          (function Gv(n) {
            return !(!n || !n.useExisting);
          })(n)
        )
          i = () => b(K(n.useExisting));
        else {
          const r = K(n && (n.useClass || n.provide));
          if (
            !(function l1(n) {
              return !!n.deps;
            })(n)
          )
            return zr(r) || $h(r);
          i = () => new r(...xh(n.deps));
        }
        return i;
      }
      function Yo(n, t, e = !1) {
        return { factory: n, value: t, multi: e ? [] : void 0 };
      }
      function d1(n) {
        return !!n.ɵproviders;
      }
      function zh(n, t) {
        for (const e of n)
          Array.isArray(e) ? zh(e, t) : d1(e) ? zh(e.ɵproviders, t) : t(e);
      }
      class Zv {}
      class p1 {
        resolveComponentFactory(t) {
          throw (function f1(n) {
            const t = Error(
              `No component factory found for ${Ve(
                n
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (t.ngComponent = n), t;
          })(t);
        }
      }
      let Wr = (() => {
        class n {}
        return (n.NULL = new p1()), n;
      })();
      function m1() {
        return Ko(ft(), T());
      }
      function Ko(n, t) {
        return new ie(xn(n, t));
      }
      let ie = (() => {
        class n {
          constructor(e) {
            this.nativeElement = e;
          }
        }
        return (n.__NG_ELEMENT_ID__ = m1), n;
      })();
      function g1(n) {
        return n instanceof ie ? n.nativeElement : n;
      }
      class da {}
      let ji = (() => {
          class n {}
          return (
            (n.__NG_ELEMENT_ID__ = () =>
              (function _1() {
                const n = T(),
                  e = an(ft().index, n);
                return (Gt(e) ? e : n)[11];
              })()),
            n
          );
        })(),
        v1 = (() => {
          class n {}
          return (
            (n.ɵprov = k({
              token: n,
              providedIn: "root",
              factory: () => null,
            })),
            n
          );
        })();
      class Yr {
        constructor(t) {
          (this.full = t),
            (this.major = t.split(".")[0]),
            (this.minor = t.split(".")[1]),
            (this.patch = t.split(".").slice(2).join("."));
        }
      }
      const y1 = new Yr("14.1.0"),
        qh = {};
      function Zh(n) {
        return n.ngOriginalError;
      }
      class vr {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const e = this._findOriginalError(t);
          this._console.error("ERROR", t),
            e && this._console.error("ORIGINAL ERROR", e);
        }
        _findOriginalError(t) {
          let e = t && Zh(t);
          for (; e && Zh(e); ) e = Zh(e);
          return e || null;
        }
      }
      const Qh = new Map();
      let R1 = 0;
      const Jh = "__ngContext__";
      function It(n, t) {
        Gt(t)
          ? ((n[Jh] = t[20]),
            (function F1(n) {
              Qh.set(n[20], n);
            })(t))
          : (n[Jh] = t);
      }
      function ha(n) {
        const t = n[Jh];
        return "number" == typeof t
          ? (function ny(n) {
              return Qh.get(n) || null;
            })(t)
          : t || null;
      }
      function ef(n) {
        const t = ha(n);
        return t ? (Gt(t) ? t : t.lView) : null;
      }
      const $1 = (() =>
        (
          (typeof requestAnimationFrame < "u" && requestAnimationFrame) ||
          setTimeout
        ).bind(Fe))();
      function Hi(n) {
        return n instanceof Function ? n() : n;
      }
      var Wt = (() => (
        ((Wt = Wt || {})[(Wt.Important = 1)] = "Important"),
        (Wt[(Wt.DashCase = 2)] = "DashCase"),
        Wt
      ))();
      function nf(n, t) {
        return undefined(n, t);
      }
      function fa(n) {
        const t = n[3];
        return Un(t) ? t[3] : t;
      }
      function rf(n) {
        return uy(n[13]);
      }
      function sf(n) {
        return uy(n[4]);
      }
      function uy(n) {
        for (; null !== n && !Un(n); ) n = n[4];
        return n;
      }
      function Qo(n, t, e, i, r) {
        if (null != i) {
          let o,
            s = !1;
          Un(i) ? (o = i) : Gt(i) && ((s = !0), (i = i[0]));
          const a = ot(i);
          0 === n && null !== e
            ? null == r
              ? gy(t, e, a)
              : Kr(t, e, a, r || null, !0)
            : 1 === n && null !== e
            ? Kr(t, e, a, r || null, !0)
            : 2 === n
            ? (function Dy(n, t, e) {
                const i = uc(n, t);
                i &&
                  (function ak(n, t, e, i) {
                    n.removeChild(t, e, i);
                  })(n, i, t, e);
              })(t, a, s)
            : 3 === n && t.destroyNode(a),
            null != o &&
              (function uk(n, t, e, i, r) {
                const o = e[7];
                o !== ot(e) && Qo(t, n, i, o, r);
                for (let a = 10; a < e.length; a++) {
                  const l = e[a];
                  pa(l[1], l, n, t, i, o);
                }
              })(t, n, o, e, r);
        }
      }
      function lf(n, t, e) {
        return n.createElement(t, e);
      }
      function hy(n, t) {
        const e = n[9],
          i = e.indexOf(t),
          r = t[3];
        512 & t[2] && ((t[2] &= -513), ch(r, -1)), e.splice(i, 1);
      }
      function cf(n, t) {
        if (n.length <= 10) return;
        const e = 10 + t,
          i = n[e];
        if (i) {
          const r = i[17];
          null !== r && r !== n && hy(r, i), t > 0 && (n[e - 1][4] = i[4]);
          const o = ec(n, 10 + t);
          !(function J1(n, t) {
            pa(n, t, t[11], 2, null, null), (t[0] = null), (t[6] = null);
          })(i[1], i);
          const s = o[19];
          null !== s && s.detachView(o[1]),
            (i[3] = null),
            (i[4] = null),
            (i[2] &= -65);
        }
        return i;
      }
      function fy(n, t) {
        if (!(128 & t[2])) {
          const e = t[11];
          e.destroyNode && pa(n, t, e, 3, null, null),
            (function nk(n) {
              let t = n[13];
              if (!t) return uf(n[1], n);
              for (; t; ) {
                let e = null;
                if (Gt(t)) e = t[13];
                else {
                  const i = t[10];
                  i && (e = i);
                }
                if (!e) {
                  for (; t && !t[4] && t !== n; )
                    Gt(t) && uf(t[1], t), (t = t[3]);
                  null === t && (t = n), Gt(t) && uf(t[1], t), (e = t && t[4]);
                }
                t = e;
              }
            })(t);
        }
      }
      function uf(n, t) {
        if (!(128 & t[2])) {
          (t[2] &= -65),
            (t[2] |= 128),
            (function sk(n, t) {
              let e;
              if (null != n && null != (e = n.destroyHooks))
                for (let i = 0; i < e.length; i += 2) {
                  const r = t[e[i]];
                  if (!(r instanceof Zs)) {
                    const o = e[i + 1];
                    if (Array.isArray(o))
                      for (let s = 0; s < o.length; s += 2) {
                        const a = r[o[s]],
                          l = o[s + 1];
                        try {
                          l.call(a);
                        } finally {
                        }
                      }
                    else
                      try {
                        o.call(r);
                      } finally {
                      }
                  }
                }
            })(n, t),
            (function ok(n, t) {
              const e = n.cleanup,
                i = t[7];
              let r = -1;
              if (null !== e)
                for (let o = 0; o < e.length - 1; o += 2)
                  if ("string" == typeof e[o]) {
                    const s = e[o + 1],
                      a = "function" == typeof s ? s(t) : ot(t[s]),
                      l = i[(r = e[o + 2])],
                      c = e[o + 3];
                    "boolean" == typeof c
                      ? a.removeEventListener(e[o], l, c)
                      : c >= 0
                      ? i[(r = c)]()
                      : i[(r = -c)].unsubscribe(),
                      (o += 2);
                  } else {
                    const s = i[(r = e[o + 1])];
                    e[o].call(s);
                  }
              if (null !== i) {
                for (let o = r + 1; o < i.length; o++) (0, i[o])();
                t[7] = null;
              }
            })(n, t),
            1 === t[1].type && t[11].destroy();
          const e = t[17];
          if (null !== e && Un(t[3])) {
            e !== t[3] && hy(e, t);
            const i = t[19];
            null !== i && i.detachView(n);
          }
          !(function P1(n) {
            Qh.delete(n[20]);
          })(t);
        }
      }
      function py(n, t, e) {
        return (function my(n, t, e) {
          let i = t;
          for (; null !== i && 40 & i.type; ) i = (t = i).parent;
          if (null === i) return e[0];
          if (2 & i.flags) {
            const r = n.data[i.directiveStart].encapsulation;
            if (r === jn.None || r === jn.Emulated) return null;
          }
          return xn(i, e);
        })(n, t.parent, e);
      }
      function Kr(n, t, e, i, r) {
        n.insertBefore(t, e, i, r);
      }
      function gy(n, t, e) {
        n.appendChild(t, e);
      }
      function _y(n, t, e, i, r) {
        null !== i ? Kr(n, t, e, i, r) : gy(n, t, e);
      }
      function uc(n, t) {
        return n.parentNode(t);
      }
      function vy(n, t, e) {
        return by(n, t, e);
      }
      let by = function yy(n, t, e) {
        return 40 & n.type ? xn(n, e) : null;
      };
      function dc(n, t, e, i) {
        const r = py(n, i, t),
          o = t[11],
          a = vy(i.parent || t[6], i, t);
        if (null != r)
          if (Array.isArray(e))
            for (let l = 0; l < e.length; l++) _y(o, r, e[l], a, !1);
          else _y(o, r, e, a, !1);
      }
      function hc(n, t) {
        if (null !== t) {
          const e = t.type;
          if (3 & e) return xn(t, n);
          if (4 & e) return hf(-1, n[t.index]);
          if (8 & e) {
            const i = t.child;
            if (null !== i) return hc(n, i);
            {
              const r = n[t.index];
              return Un(r) ? hf(-1, r) : ot(r);
            }
          }
          if (32 & e) return nf(t, n)() || ot(n[t.index]);
          {
            const i = wy(n, t);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : hc(fa(n[16]), i)
              : hc(n, t.next);
          }
        }
        return null;
      }
      function wy(n, t) {
        return null !== t ? n[16][6].projection[t.projection] : null;
      }
      function hf(n, t) {
        const e = 10 + n + 1;
        if (e < t.length) {
          const i = t[e],
            r = i[1].firstChild;
          if (null !== r) return hc(i, r);
        }
        return t[7];
      }
      function ff(n, t, e, i, r, o, s) {
        for (; null != e; ) {
          const a = i[e.index],
            l = e.type;
          if (
            (s && 0 === t && (a && It(ot(a), i), (e.flags |= 4)),
            64 != (64 & e.flags))
          )
            if (8 & l) ff(n, t, e.child, i, r, o, !1), Qo(t, n, r, a, o);
            else if (32 & l) {
              const c = nf(e, i);
              let u;
              for (; (u = c()); ) Qo(t, n, r, u, o);
              Qo(t, n, r, a, o);
            } else 16 & l ? My(n, t, i, e, r, o) : Qo(t, n, r, a, o);
          e = s ? e.projectionNext : e.next;
        }
      }
      function pa(n, t, e, i, r, o) {
        ff(e, i, n.firstChild, t, r, o, !1);
      }
      function My(n, t, e, i, r, o) {
        const s = e[16],
          l = s[6].projection[i.projection];
        if (Array.isArray(l))
          for (let c = 0; c < l.length; c++) Qo(t, n, r, l[c], o);
        else ff(n, t, l, s[3], r, o, !0);
      }
      function Ey(n, t, e) {
        n.setAttribute(t, "style", e);
      }
      function pf(n, t, e) {
        "" === e
          ? n.removeAttribute(t, "class")
          : n.setAttribute(t, "class", e);
      }
      function Sy(n, t, e) {
        let i = n.length;
        for (;;) {
          const r = n.indexOf(t, e);
          if (-1 === r) return r;
          if (0 === r || n.charCodeAt(r - 1) <= 32) {
            const o = t.length;
            if (r + o === i || n.charCodeAt(r + o) <= 32) return r;
          }
          e = r + 1;
        }
      }
      const Ty = "ng-template";
      function hk(n, t, e) {
        let i = 0;
        for (; i < n.length; ) {
          let r = n[i++];
          if (e && "class" === r) {
            if (((r = n[i]), -1 !== Sy(r.toLowerCase(), t, 0))) return !0;
          } else if (1 === r) {
            for (; i < n.length && "string" == typeof (r = n[i++]); )
              if (r.toLowerCase() === t) return !0;
            return !1;
          }
        }
        return !1;
      }
      function xy(n) {
        return 4 === n.type && n.value !== Ty;
      }
      function fk(n, t, e) {
        return t === (4 !== n.type || e ? n.value : Ty);
      }
      function pk(n, t, e) {
        let i = 4;
        const r = n.attrs || [],
          o = (function _k(n) {
            for (let t = 0; t < n.length; t++) if (tv(n[t])) return t;
            return n.length;
          })(r);
        let s = !1;
        for (let a = 0; a < t.length; a++) {
          const l = t[a];
          if ("number" != typeof l) {
            if (!s)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ("" !== l && !fk(n, l, e)) || ("" === l && 1 === t.length))
                ) {
                  if (zn(i)) return !1;
                  s = !0;
                }
              } else {
                const c = 8 & i ? l : t[++a];
                if (8 & i && null !== n.attrs) {
                  if (!hk(n.attrs, c, e)) {
                    if (zn(i)) return !1;
                    s = !0;
                  }
                  continue;
                }
                const d = mk(8 & i ? "class" : l, r, xy(n), e);
                if (-1 === d) {
                  if (zn(i)) return !1;
                  s = !0;
                  continue;
                }
                if ("" !== c) {
                  let f;
                  f = d > o ? "" : r[d + 1].toLowerCase();
                  const p = 8 & i ? f : null;
                  if ((p && -1 !== Sy(p, c, 0)) || (2 & i && c !== f)) {
                    if (zn(i)) return !1;
                    s = !0;
                  }
                }
              }
          } else {
            if (!s && !zn(i) && !zn(l)) return !1;
            if (s && zn(l)) continue;
            (s = !1), (i = l | (1 & i));
          }
        }
        return zn(i) || s;
      }
      function zn(n) {
        return 0 == (1 & n);
      }
      function mk(n, t, e, i) {
        if (null === t) return -1;
        let r = 0;
        if (i || !e) {
          let o = !1;
          for (; r < t.length; ) {
            const s = t[r];
            if (s === n) return r;
            if (3 === s || 6 === s) o = !0;
            else {
              if (1 === s || 2 === s) {
                let a = t[++r];
                for (; "string" == typeof a; ) a = t[++r];
                continue;
              }
              if (4 === s) break;
              if (0 === s) {
                r += 4;
                continue;
              }
            }
            r += o ? 1 : 2;
          }
          return -1;
        }
        return (function vk(n, t) {
          let e = n.indexOf(4);
          if (e > -1)
            for (e++; e < n.length; ) {
              const i = n[e];
              if ("number" == typeof i) return -1;
              if (i === t) return e;
              e++;
            }
          return -1;
        })(t, n);
      }
      function Ay(n, t, e = !1) {
        for (let i = 0; i < t.length; i++) if (pk(n, t[i], e)) return !0;
        return !1;
      }
      function yk(n, t) {
        e: for (let e = 0; e < t.length; e++) {
          const i = t[e];
          if (n.length === i.length) {
            for (let r = 0; r < n.length; r++) if (n[r] !== i[r]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function Iy(n, t) {
        return n ? ":not(" + t.trim() + ")" : t;
      }
      function bk(n) {
        let t = n[0],
          e = 1,
          i = 2,
          r = "",
          o = !1;
        for (; e < n.length; ) {
          let s = n[e];
          if ("string" == typeof s)
            if (2 & i) {
              const a = n[++e];
              r += "[" + s + (a.length > 0 ? '="' + a + '"' : "") + "]";
            } else 8 & i ? (r += "." + s) : 4 & i && (r += " " + s);
          else
            "" !== r && !zn(s) && ((t += Iy(o, r)), (r = "")),
              (i = s),
              (o = o || !zn(i));
          e++;
        }
        return "" !== r && (t += Iy(o, r)), t;
      }
      const oe = {};
      function C(n) {
        ky(Ce(), T(), Vt() + n, !1);
      }
      function ky(n, t, e, i) {
        if (!i)
          if (3 == (3 & t[2])) {
            const o = n.preOrderCheckHooks;
            null !== o && Gl(t, o, e);
          } else {
            const o = n.preOrderHooks;
            null !== o && Wl(t, o, 0, e);
          }
        mr(e);
      }
      function Py(n, t = null, e = null, i) {
        const r = Ny(n, t, e, i);
        return r.resolveInjectorInitializers(), r;
      }
      function Ny(n, t = null, e = null, i, r = new Set()) {
        const o = [e || Se, t1(n)];
        return (
          (i = i || ("object" == typeof n ? void 0 : Ve(n))),
          new Yv(o, t || cc(), i || null, r)
        );
      }
      let ze = (() => {
        class n {
          static create(e, i) {
            if (Array.isArray(e)) return Py({ name: "" }, i, e, "");
            {
              const r = e.name ?? "";
              return Py({ name: r }, e.parent, e.providers, r);
            }
          }
        }
        return (
          (n.THROW_IF_NOT_FOUND = ia),
          (n.NULL = new $v()),
          (n.ɵprov = k({ token: n, providedIn: "any", factory: () => b(Hv) })),
          (n.__NG_ELEMENT_ID__ = -1),
          n
        );
      })();
      function h(n, t = $.Default) {
        const e = T();
        return null === e ? b(n, t) : cv(ft(), e, K(n), t);
      }
      function Zr() {
        throw new Error("invalid");
      }
      function pc(n, t) {
        return (n << 17) | (t << 2);
      }
      function qn(n) {
        return (n >> 17) & 32767;
      }
      function yf(n) {
        return 2 | n;
      }
      function Ui(n) {
        return (131068 & n) >> 2;
      }
      function bf(n, t) {
        return (-131069 & n) | (t << 2);
      }
      function Cf(n) {
        return 1 | n;
      }
      function Jy(n, t) {
        const e = n.contentQueries;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) {
            const r = e[i],
              o = e[i + 1];
            if (-1 !== o) {
              const s = n.data[o];
              ph(r), s.contentQueries(2, t[o], o);
            }
          }
      }
      function _c(n, t, e, i, r, o, s, a, l, c, u) {
        const d = t.blueprint.slice();
        return (
          (d[0] = r),
          (d[2] = 76 | i),
          (null !== u || (n && 1024 & n[2])) && (d[2] |= 1024),
          U_(d),
          (d[3] = d[15] = n),
          (d[8] = e),
          (d[10] = s || (n && n[10])),
          (d[11] = a || (n && n[11])),
          (d[12] = l || (n && n[12]) || null),
          (d[9] = c || (n && n[9]) || null),
          (d[6] = o),
          (d[20] = (function O1() {
            return R1++;
          })()),
          (d[21] = u),
          (d[16] = 2 == t.type ? n[16] : d),
          d
        );
      }
      function Jo(n, t, e, i, r) {
        let o = n.data[t];
        if (null === o)
          (o = (function If(n, t, e, i, r) {
            const o = q_(),
              s = uh(),
              l = (n.data[t] = (function iR(n, t, e, i, r, o) {
                return {
                  type: e,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: t ? t.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: r,
                  attrs: o,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: t,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, s ? o : o && o.parent, e, t, i, r));
            return (
              null === n.firstChild && (n.firstChild = l),
              null !== o &&
                (s
                  ? null == o.child && null !== l.parent && (o.child = l)
                  : null === o.next && (o.next = l)),
              l
            );
          })(n, t, e, i, r)),
            (function SA() {
              return ne.lFrame.inI18n;
            })() && (o.flags |= 64);
        else if (64 & o.type) {
          (o.type = e), (o.value = i), (o.attrs = r);
          const s = (function Ks() {
            const n = ne.lFrame,
              t = n.currentTNode;
            return n.isParent ? t : t.parent;
          })();
          o.injectorIndex = null === s ? -1 : s.injectorIndex;
        }
        return oi(o, !0), o;
      }
      function es(n, t, e, i) {
        if (0 === e) return -1;
        const r = t.length;
        for (let o = 0; o < e; o++)
          t.push(i), n.blueprint.push(i), n.data.push(null);
        return r;
      }
      function vc(n, t, e) {
        mh(t);
        try {
          const i = n.viewQuery;
          null !== i && Bf(1, i, e);
          const r = n.template;
          null !== r && eb(n, t, r, 1, e),
            n.firstCreatePass && (n.firstCreatePass = !1),
            n.staticContentQueries && Jy(n, t),
            n.staticViewQueries && Bf(2, n.viewQuery, e);
          const o = n.components;
          null !== o &&
            (function Jk(n, t) {
              for (let e = 0; e < t.length; e++) yR(n, t[e]);
            })(t, o);
        } catch (i) {
          throw (
            (n.firstCreatePass &&
              ((n.incompleteFirstPass = !0), (n.firstCreatePass = !1)),
            i)
          );
        } finally {
          (t[2] &= -5), gh();
        }
      }
      function ma(n, t, e, i) {
        const r = t[2];
        if (128 != (128 & r)) {
          mh(t);
          try {
            U_(t),
              (function G_(n) {
                return (ne.lFrame.bindingIndex = n);
              })(n.bindingStartIndex),
              null !== e && eb(n, t, e, 2, i);
            const s = 3 == (3 & r);
            if (s) {
              const c = n.preOrderCheckHooks;
              null !== c && Gl(t, c, null);
            } else {
              const c = n.preOrderHooks;
              null !== c && Wl(t, c, 0, null), _h(t, 0);
            }
            if (
              ((function _R(n) {
                for (let t = rf(n); null !== t; t = sf(t)) {
                  if (!t[2]) continue;
                  const e = t[9];
                  for (let i = 0; i < e.length; i++) {
                    const r = e[i],
                      o = r[3];
                    0 == (512 & r[2]) && ch(o, 1), (r[2] |= 512);
                  }
                }
              })(t),
              (function gR(n) {
                for (let t = rf(n); null !== t; t = sf(t))
                  for (let e = 10; e < t.length; e++) {
                    const i = t[e],
                      r = i[1];
                    lh(i) && ma(r, i, r.template, i[8]);
                  }
              })(t),
              null !== n.contentQueries && Jy(n, t),
              s)
            ) {
              const c = n.contentCheckHooks;
              null !== c && Gl(t, c);
            } else {
              const c = n.contentHooks;
              null !== c && Wl(t, c, 1), _h(t, 1);
            }
            !(function Qk(n, t) {
              const e = n.hostBindingOpCodes;
              if (null !== e)
                try {
                  for (let i = 0; i < e.length; i++) {
                    const r = e[i];
                    if (r < 0) mr(~r);
                    else {
                      const o = r,
                        s = e[++i],
                        a = e[++i];
                      TA(s, o), a(2, t[o]);
                    }
                  }
                } finally {
                  mr(-1);
                }
            })(n, t);
            const a = n.components;
            null !== a &&
              (function Xk(n, t) {
                for (let e = 0; e < t.length; e++) vR(n, t[e]);
              })(t, a);
            const l = n.viewQuery;
            if ((null !== l && Bf(2, l, i), s)) {
              const c = n.viewCheckHooks;
              null !== c && Gl(t, c);
            } else {
              const c = n.viewHooks;
              null !== c && Wl(t, c, 2), _h(t, 2);
            }
            !0 === n.firstUpdatePass && (n.firstUpdatePass = !1),
              (t[2] &= -41),
              512 & t[2] && ((t[2] &= -513), ch(t[3], -1));
          } finally {
            gh();
          }
        }
      }
      function eR(n, t, e, i) {
        const r = t[10],
          s = H_(t);
        try {
          !s && r.begin && r.begin(), s && vc(n, t, i), ma(n, t, e, i);
        } finally {
          !s && r.end && r.end();
        }
      }
      function eb(n, t, e, i, r) {
        const o = Vt(),
          s = 2 & i;
        try {
          mr(-1), s && t.length > 22 && ky(n, t, 22, !1), e(i, r);
        } finally {
          mr(o);
        }
      }
      function tb(n, t, e) {
        if (nh(t)) {
          const r = t.directiveEnd;
          for (let o = t.directiveStart; o < r; o++) {
            const s = n.data[o];
            s.contentQueries && s.contentQueries(1, e[o], o);
          }
        }
      }
      function kf(n, t, e) {
        !z_() ||
          ((function lR(n, t, e, i) {
            const r = e.directiveStart,
              o = e.directiveEnd;
            n.firstCreatePass || Xs(e, t), It(i, t);
            const s = e.initialInputs;
            for (let a = r; a < o; a++) {
              const l = n.data[a],
                c = $n(l);
              c && fR(t, e, l);
              const u = Js(t, n, a, e);
              It(u, t),
                null !== s && pR(0, a - r, u, l, 0, s),
                c && (an(e.index, t)[8] = u);
            }
          })(n, t, e, xn(e, t)),
          128 == (128 & e.flags) &&
            (function cR(n, t, e) {
              const i = e.directiveStart,
                r = e.directiveEnd,
                o = e.index,
                s = (function xA() {
                  return ne.lFrame.currentDirectiveIndex;
                })();
              try {
                mr(o);
                for (let a = i; a < r; a++) {
                  const l = n.data[a],
                    c = t[a];
                  hh(a),
                    (null !== l.hostBindings ||
                      0 !== l.hostVars ||
                      null !== l.hostAttrs) &&
                      lb(l, c);
                }
              } finally {
                mr(-1), hh(s);
              }
            })(n, t, e));
      }
      function Rf(n, t, e = xn) {
        const i = t.localNames;
        if (null !== i) {
          let r = t.index + 1;
          for (let o = 0; o < i.length; o += 2) {
            const s = i[o + 1],
              a = -1 === s ? e(t, n) : n[s];
            n[r++] = a;
          }
        }
      }
      function nb(n) {
        const t = n.tView;
        return null === t || t.incompleteFirstPass
          ? (n.tView = Of(
              1,
              null,
              n.template,
              n.decls,
              n.vars,
              n.directiveDefs,
              n.pipeDefs,
              n.viewQuery,
              n.schemas,
              n.consts
            ))
          : t;
      }
      function Of(n, t, e, i, r, o, s, a, l, c) {
        const u = 22 + i,
          d = u + r,
          f = (function tR(n, t) {
            const e = [];
            for (let i = 0; i < t; i++) e.push(i < n ? null : oe);
            return e;
          })(u, d),
          p = "function" == typeof c ? c() : c;
        return (f[1] = {
          type: n,
          blueprint: f,
          template: e,
          queries: null,
          viewQuery: a,
          declTNode: t,
          data: f.slice().fill(null, u),
          bindingStartIndex: u,
          expandoStartIndex: d,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof o ? o() : o,
          pipeRegistry: "function" == typeof s ? s() : s,
          firstChild: null,
          schemas: l,
          consts: p,
          incompleteFirstPass: !1,
        });
      }
      function ib(n, t, e, i) {
        const r = mb(t);
        null === e
          ? r.push(i)
          : (r.push(e), n.firstCreatePass && gb(n).push(i, r.length - 1));
      }
      function rb(n, t, e) {
        for (let i in n)
          if (n.hasOwnProperty(i)) {
            const r = n[i];
            (e = null === e ? {} : e).hasOwnProperty(i)
              ? e[i].push(t, r)
              : (e[i] = [t, r]);
          }
        return e;
      }
      function ob(n, t) {
        const i = t.directiveEnd,
          r = n.data,
          o = t.attrs,
          s = [];
        let a = null,
          l = null;
        for (let c = t.directiveStart; c < i; c++) {
          const u = r[c],
            d = u.inputs,
            f = null === o || xy(t) ? null : mR(d, o);
          s.push(f), (a = rb(d, c, a)), (l = rb(u.outputs, c, l));
        }
        null !== a &&
          (a.hasOwnProperty("class") && (t.flags |= 16),
          a.hasOwnProperty("style") && (t.flags |= 32)),
          (t.initialInputs = s),
          (t.inputs = a),
          (t.outputs = l);
      }
      function hn(n, t, e, i, r, o, s, a) {
        const l = xn(t, e);
        let u,
          c = t.inputs;
        !a && null != c && (u = c[i])
          ? (jf(n, e, u, i, r), Hl(t) && sb(e, t.index))
          : 3 & t.type &&
            ((i = (function rR(n) {
              return "class" === n
                ? "className"
                : "for" === n
                ? "htmlFor"
                : "formaction" === n
                ? "formAction"
                : "innerHtml" === n
                ? "innerHTML"
                : "readonly" === n
                ? "readOnly"
                : "tabindex" === n
                ? "tabIndex"
                : n;
            })(i)),
            (r = null != s ? s(r, t.value || "", i) : r),
            o.setProperty(l, i, r));
      }
      function sb(n, t) {
        const e = an(t, n);
        16 & e[2] || (e[2] |= 32);
      }
      function Ff(n, t, e, i) {
        let r = !1;
        if (z_()) {
          const o = (function uR(n, t, e) {
              const i = n.directiveRegistry;
              let r = null;
              if (i)
                for (let o = 0; o < i.length; o++) {
                  const s = i[o];
                  Ay(e, s.selectors, !1) &&
                    (r || (r = []),
                    Xl(Xs(e, t), n, s.type),
                    $n(s) ? (cb(n, e), r.unshift(s)) : r.push(s));
                }
              return r;
            })(n, t, e),
            s = null === i ? null : { "": -1 };
          if (null !== o) {
            (r = !0), ub(e, n.data.length, o.length);
            for (let u = 0; u < o.length; u++) {
              const d = o[u];
              d.providersResolver && d.providersResolver(d);
            }
            let a = !1,
              l = !1,
              c = es(n, t, o.length, null);
            for (let u = 0; u < o.length; u++) {
              const d = o[u];
              (e.mergedAttrs = Kl(e.mergedAttrs, d.hostAttrs)),
                db(n, e, t, c, d),
                hR(c, d, s),
                null !== d.contentQueries && (e.flags |= 8),
                (null !== d.hostBindings ||
                  null !== d.hostAttrs ||
                  0 !== d.hostVars) &&
                  (e.flags |= 128);
              const f = d.type.prototype;
              !a &&
                (f.ngOnChanges || f.ngOnInit || f.ngDoCheck) &&
                ((n.preOrderHooks || (n.preOrderHooks = [])).push(e.index),
                (a = !0)),
                !l &&
                  (f.ngOnChanges || f.ngDoCheck) &&
                  ((n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(
                    e.index
                  ),
                  (l = !0)),
                c++;
            }
            ob(n, e);
          }
          s &&
            (function dR(n, t, e) {
              if (t) {
                const i = (n.localNames = []);
                for (let r = 0; r < t.length; r += 2) {
                  const o = e[t[r + 1]];
                  if (null == o) throw new S(-301, !1);
                  i.push(t[r], o);
                }
              }
            })(e, i, s);
        }
        return (e.mergedAttrs = Kl(e.mergedAttrs, e.attrs)), r;
      }
      function ab(n, t, e, i, r, o) {
        const s = o.hostBindings;
        if (s) {
          let a = n.hostBindingOpCodes;
          null === a && (a = n.hostBindingOpCodes = []);
          const l = ~t.index;
          (function aR(n) {
            let t = n.length;
            for (; t > 0; ) {
              const e = n[--t];
              if ("number" == typeof e && e < 0) return e;
            }
            return 0;
          })(a) != l && a.push(l),
            a.push(i, r, s);
        }
      }
      function lb(n, t) {
        null !== n.hostBindings && n.hostBindings(1, t);
      }
      function cb(n, t) {
        (t.flags |= 2), (n.components || (n.components = [])).push(t.index);
      }
      function hR(n, t, e) {
        if (e) {
          if (t.exportAs)
            for (let i = 0; i < t.exportAs.length; i++) e[t.exportAs[i]] = n;
          $n(t) && (e[""] = n);
        }
      }
      function ub(n, t, e) {
        (n.flags |= 1),
          (n.directiveStart = t),
          (n.directiveEnd = t + e),
          (n.providerIndexes = t);
      }
      function db(n, t, e, i, r) {
        n.data[i] = r;
        const o = r.factory || (r.factory = zr(r.type)),
          s = new Zs(o, $n(r), h);
        (n.blueprint[i] = s),
          (e[i] = s),
          ab(n, t, 0, i, es(n, e, r.hostVars, oe), r);
      }
      function fR(n, t, e) {
        const i = xn(t, n),
          r = nb(e),
          o = n[10],
          s = yc(
            n,
            _c(
              n,
              r,
              null,
              e.onPush ? 32 : 16,
              i,
              t,
              o,
              o.createRenderer(i, e),
              null,
              null,
              null
            )
          );
        n[t.index] = s;
      }
      function di(n, t, e, i, r, o) {
        const s = xn(n, t);
        !(function Pf(n, t, e, i, r, o, s) {
          if (null == o) n.removeAttribute(t, r, e);
          else {
            const a = null == s ? re(o) : s(o, i || "", r);
            n.setAttribute(t, r, a, e);
          }
        })(t[11], s, o, n.value, e, i, r);
      }
      function pR(n, t, e, i, r, o) {
        const s = o[t];
        if (null !== s) {
          const a = i.setInput;
          for (let l = 0; l < s.length; ) {
            const c = s[l++],
              u = s[l++],
              d = s[l++];
            null !== a ? i.setInput(e, d, c, u) : (e[u] = d);
          }
        }
      }
      function mR(n, t) {
        let e = null,
          i = 0;
        for (; i < t.length; ) {
          const r = t[i];
          if (0 !== r)
            if (5 !== r) {
              if ("number" == typeof r) break;
              n.hasOwnProperty(r) &&
                (null === e && (e = []), e.push(r, n[r], t[i + 1])),
                (i += 2);
            } else i += 2;
          else i += 4;
        }
        return e;
      }
      function hb(n, t, e, i) {
        return new Array(n, !0, !1, t, null, 0, i, e, null, null);
      }
      function vR(n, t) {
        const e = an(t, n);
        if (lh(e)) {
          const i = e[1];
          48 & e[2] ? ma(i, e, i.template, e[8]) : e[5] > 0 && Nf(e);
        }
      }
      function Nf(n) {
        for (let i = rf(n); null !== i; i = sf(i))
          for (let r = 10; r < i.length; r++) {
            const o = i[r];
            if (512 & o[2]) {
              const s = o[1];
              ma(s, o, s.template, o[8]);
            } else o[5] > 0 && Nf(o);
          }
        const e = n[1].components;
        if (null !== e)
          for (let i = 0; i < e.length; i++) {
            const r = an(e[i], n);
            lh(r) && r[5] > 0 && Nf(r);
          }
      }
      function yR(n, t) {
        const e = an(t, n),
          i = e[1];
        (function bR(n, t) {
          for (let e = t.length; e < n.blueprint.length; e++)
            t.push(n.blueprint[e]);
        })(i, e),
          vc(i, e, e[8]);
      }
      function yc(n, t) {
        return n[13] ? (n[14][4] = t) : (n[13] = t), (n[14] = t), t;
      }
      function Lf(n) {
        for (; n; ) {
          n[2] |= 32;
          const t = fa(n);
          if (aA(n) && !t) return n;
          n = t;
        }
        return null;
      }
      function pb(n) {
        !(function fb(n) {
          for (let t = 0; t < n.components.length; t++) {
            const e = n.components[t],
              i = ef(e);
            if (null !== i) {
              const r = i[1];
              eR(r, i, r.template, e);
            }
          }
        })(n[8]);
      }
      function Bf(n, t, e) {
        ph(0), t(n, e);
      }
      const wR = (() => Promise.resolve(null))();
      function mb(n) {
        return n[7] || (n[7] = []);
      }
      function gb(n) {
        return n.cleanup || (n.cleanup = []);
      }
      function _b(n, t, e) {
        return (
          (null === n || $n(n)) &&
            (e = (function _A(n) {
              for (; Array.isArray(n); ) {
                if ("object" == typeof n[1]) return n;
                n = n[0];
              }
              return null;
            })(e[t.index])),
          e[11]
        );
      }
      function vb(n, t) {
        const e = n[9],
          i = e ? e.get(vr, null) : null;
        i && i.handleError(t);
      }
      function jf(n, t, e, i, r) {
        for (let o = 0; o < e.length; ) {
          const s = e[o++],
            a = e[o++],
            l = t[s],
            c = n.data[s];
          null !== c.setInput ? c.setInput(l, r, i, a) : (l[a] = r);
        }
      }
      function $i(n, t, e) {
        const i = $l(t, n);
        !(function dy(n, t, e) {
          n.setValue(t, e);
        })(n[11], i, e);
      }
      function bc(n, t, e) {
        let i = e ? n.styles : null,
          r = e ? n.classes : null,
          o = 0;
        if (null !== t)
          for (let s = 0; s < t.length; s++) {
            const a = t[s];
            "number" == typeof a
              ? (o = a)
              : 1 == o
              ? (r = Wd(r, a))
              : 2 == o && (i = Wd(i, a + ": " + t[++s] + ";"));
          }
        e ? (n.styles = i) : (n.stylesWithoutHost = i),
          e ? (n.classes = r) : (n.classesWithoutHost = r);
      }
      function Cc(n, t, e, i, r = !1) {
        for (; null !== e; ) {
          const o = t[e.index];
          if ((null !== o && i.push(ot(o)), Un(o)))
            for (let a = 10; a < o.length; a++) {
              const l = o[a],
                c = l[1].firstChild;
              null !== c && Cc(l[1], l, c, i);
            }
          const s = e.type;
          if (8 & s) Cc(n, t, e.child, i);
          else if (32 & s) {
            const a = nf(e, t);
            let l;
            for (; (l = a()); ) i.push(l);
          } else if (16 & s) {
            const a = wy(t, e);
            if (Array.isArray(a)) i.push(...a);
            else {
              const l = fa(t[16]);
              Cc(l[1], l, a, i, !0);
            }
          }
          e = r ? e.projectionNext : e.next;
        }
        return i;
      }
      class ga {
        constructor(t, e) {
          (this._lView = t),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get rootNodes() {
          const t = this._lView,
            e = t[1];
          return Cc(e, t, e.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        set context(t) {
          this._lView[8] = t;
        }
        get destroyed() {
          return 128 == (128 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[3];
            if (Un(t)) {
              const e = t[8],
                i = e ? e.indexOf(this) : -1;
              i > -1 && (cf(t, i), ec(e, i));
            }
            this._attachedToViewContainer = !1;
          }
          fy(this._lView[1], this._lView);
        }
        onDestroy(t) {
          ib(this._lView[1], this._lView, null, t);
        }
        markForCheck() {
          Lf(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -65;
        }
        reattach() {
          this._lView[2] |= 64;
        }
        detectChanges() {
          !(function Vf(n, t, e) {
            const i = t[10];
            i.begin && i.begin();
            try {
              ma(n, t, n.template, e);
            } catch (r) {
              throw (vb(t, r), r);
            } finally {
              i.end && i.end();
            }
          })(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new S(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function tk(n, t) {
              pa(n, t, t[11], 2, null, null);
            })(this._lView[1], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new S(902, !1);
          this._appRef = t;
        }
      }
      class DR extends ga {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          pb(this._view);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class Hf extends Wr {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const e = Re(t);
          return new _a(e, this.ngModule);
        }
      }
      function yb(n) {
        const t = [];
        for (let e in n)
          n.hasOwnProperty(e) && t.push({ propName: n[e], templateName: e });
        return t;
      }
      class ER {
        constructor(t, e) {
          (this.injector = t), (this.parentInjector = e);
        }
        get(t, e, i) {
          const r = this.injector.get(t, qh, i);
          return r !== qh || e === qh ? r : this.parentInjector.get(t, e, i);
        }
      }
      class _a extends Zv {
        constructor(t, e) {
          super(),
            (this.componentDef = t),
            (this.ngModule = e),
            (this.componentType = t.type),
            (this.selector = (function Ck(n) {
              return n.map(bk).join(",");
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!e);
        }
        get inputs() {
          return yb(this.componentDef.inputs);
        }
        get outputs() {
          return yb(this.componentDef.outputs);
        }
        create(t, e, i, r) {
          let o = (r = r || this.ngModule) instanceof _r ? r : r?.injector;
          o &&
            null !== this.componentDef.getStandaloneInjector &&
            (o = this.componentDef.getStandaloneInjector(o) || o);
          const s = o ? new ER(t, o) : t,
            a = s.get(da, null);
          if (null === a) throw new S(407, !1);
          const l = s.get(v1, null),
            c = a.createRenderer(null, this.componentDef),
            u = this.componentDef.selectors[0][0] || "div",
            d = i
              ? (function nR(n, t, e) {
                  return n.selectRootElement(t, e === jn.ShadowDom);
                })(c, i, this.componentDef.encapsulation)
              : lf(
                  a.createRenderer(null, this.componentDef),
                  u,
                  (function MR(n) {
                    const t = n.toLowerCase();
                    return "svg" === t ? "svg" : "math" === t ? "math" : null;
                  })(u)
                ),
            f = this.componentDef.onPush ? 288 : 272,
            p = (function IR(n, t) {
              return {
                components: [],
                scheduler: n || $1,
                clean: wR,
                playerHandler: t || null,
                flags: 0,
              };
            })(),
            _ = Of(0, null, null, 1, 0, null, null, null, null, null),
            y = _c(null, _, p, f, null, null, a, c, l, s, null);
          let w, D;
          mh(y);
          try {
            const A = (function xR(n, t, e, i, r, o) {
              const s = e[1];
              e[22] = n;
              const l = Jo(s, 22, 2, "#host", null),
                c = (l.mergedAttrs = t.hostAttrs);
              null !== c &&
                (bc(l, c, !0),
                null !== n &&
                  (Yl(r, n, c),
                  null !== l.classes && pf(r, n, l.classes),
                  null !== l.styles && Ey(r, n, l.styles)));
              const u = i.createRenderer(n, t),
                d = _c(
                  e,
                  nb(t),
                  null,
                  t.onPush ? 32 : 16,
                  e[22],
                  l,
                  i,
                  u,
                  o || null,
                  null,
                  null
                );
              return (
                s.firstCreatePass &&
                  (Xl(Xs(l, e), s, t.type), cb(s, l), ub(l, e.length, 1)),
                yc(e, d),
                (e[22] = d)
              );
            })(d, this.componentDef, y, a, c);
            if (d)
              if (i) Yl(c, d, ["ng-version", y1.full]);
              else {
                const { attrs: E, classes: O } = (function wk(n) {
                  const t = [],
                    e = [];
                  let i = 1,
                    r = 2;
                  for (; i < n.length; ) {
                    let o = n[i];
                    if ("string" == typeof o)
                      2 === r
                        ? "" !== o && t.push(o, n[++i])
                        : 8 === r && e.push(o);
                    else {
                      if (!zn(r)) break;
                      r = o;
                    }
                    i++;
                  }
                  return { attrs: t, classes: e };
                })(this.componentDef.selectors[0]);
                E && Yl(c, d, E), O && O.length > 0 && pf(c, d, O.join(" "));
              }
            if (((D = ah(_, 22)), void 0 !== e)) {
              const E = (D.projection = []);
              for (let O = 0; O < this.ngContentSelectors.length; O++) {
                const te = e[O];
                E.push(null != te ? Array.from(te) : null);
              }
            }
            (w = (function AR(n, t, e, i, r) {
              const o = e[1],
                s = (function sR(n, t, e) {
                  const i = ft();
                  n.firstCreatePass &&
                    (e.providersResolver && e.providersResolver(e),
                    db(n, i, t, es(n, t, 1, null), e),
                    ob(n, i));
                  const r = Js(t, n, i.directiveStart, i);
                  It(r, t);
                  const o = xn(i, t);
                  return o && It(o, t), r;
                })(o, e, t);
              if ((i.components.push(s), (n[8] = s), null !== r))
                for (const l of r) l(s, t);
              if (t.contentQueries) {
                const l = ft();
                t.contentQueries(1, s, l.directiveStart);
              }
              const a = ft();
              return (
                !o.firstCreatePass ||
                  (null === t.hostBindings && null === t.hostAttrs) ||
                  (mr(a.index),
                  ab(e[1], a, 0, a.directiveStart, a.directiveEnd, t),
                  lb(t, s)),
                s
              );
            })(A, this.componentDef, y, p, [kR])),
              vc(_, y, null);
          } finally {
            gh();
          }
          return new TR(this.componentType, w, Ko(D, y), y, D);
        }
      }
      class TR extends class h1 {} {
        constructor(t, e, i, r, o) {
          super(),
            (this.location = i),
            (this._rootLView = r),
            (this._tNode = o),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new DR(r)),
            (this.componentType = t);
        }
        setInput(t, e) {
          const i = this._tNode.inputs;
          let r;
          if (null !== i && (r = i[t])) {
            const o = this._rootLView;
            jf(o[1], o, r, t, e), sb(o, this._tNode.index);
          }
        }
        get injector() {
          return new Vo(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      function kR() {
        const n = ft();
        ql(T()[1], n);
      }
      function B(n) {
        let t = (function bb(n) {
            return Object.getPrototypeOf(n.prototype).constructor;
          })(n.type),
          e = !0;
        const i = [n];
        for (; t; ) {
          let r;
          if ($n(n)) r = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new S(903, !1);
            r = t.ɵdir;
          }
          if (r) {
            if (e) {
              i.push(r);
              const s = n;
              (s.inputs = Uf(n.inputs)),
                (s.declaredInputs = Uf(n.declaredInputs)),
                (s.outputs = Uf(n.outputs));
              const a = r.hostBindings;
              a && PR(n, a);
              const l = r.viewQuery,
                c = r.contentQueries;
              if (
                (l && OR(n, l),
                c && FR(n, c),
                Gd(n.inputs, r.inputs),
                Gd(n.declaredInputs, r.declaredInputs),
                Gd(n.outputs, r.outputs),
                $n(r) && r.data.animation)
              ) {
                const u = n.data;
                u.animation = (u.animation || []).concat(r.data.animation);
              }
            }
            const o = r.features;
            if (o)
              for (let s = 0; s < o.length; s++) {
                const a = o[s];
                a && a.ngInherit && a(n), a === B && (e = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function RR(n) {
          let t = 0,
            e = null;
          for (let i = n.length - 1; i >= 0; i--) {
            const r = n[i];
            (r.hostVars = t += r.hostVars),
              (r.hostAttrs = Kl(r.hostAttrs, (e = Kl(e, r.hostAttrs))));
          }
        })(i);
      }
      function Uf(n) {
        return n === Ao ? {} : n === Se ? [] : n;
      }
      function OR(n, t) {
        const e = n.viewQuery;
        n.viewQuery = e
          ? (i, r) => {
              t(i, r), e(i, r);
            }
          : t;
      }
      function FR(n, t) {
        const e = n.contentQueries;
        n.contentQueries = e
          ? (i, r, o) => {
              t(i, r, o), e(i, r, o);
            }
          : t;
      }
      function PR(n, t) {
        const e = n.hostBindings;
        n.hostBindings = e
          ? (i, r) => {
              t(i, r), e(i, r);
            }
          : t;
      }
      let wc = null;
      function Qr() {
        if (!wc) {
          const n = Fe.Symbol;
          if (n && n.iterator) wc = n.iterator;
          else {
            const t = Object.getOwnPropertyNames(Map.prototype);
            for (let e = 0; e < t.length; ++e) {
              const i = t[e];
              "entries" !== i &&
                "size" !== i &&
                Map.prototype[i] === Map.prototype.entries &&
                (wc = i);
            }
          }
        }
        return wc;
      }
      function va(n) {
        return (
          !!$f(n) && (Array.isArray(n) || (!(n instanceof Map) && Qr() in n))
        );
      }
      function $f(n) {
        return null !== n && ("function" == typeof n || "object" == typeof n);
      }
      function kt(n, t, e) {
        return !Object.is(n[t], e) && ((n[t] = e), !0);
      }
      function Ae(n, t, e, i) {
        const r = T();
        return kt(r, Po(), t) && (Ce(), di(Xe(), r, n, t, e, i)), Ae;
      }
      function ns(n, t, e, i) {
        return kt(n, Po(), e) ? t + re(e) + i : oe;
      }
      function is(n, t, e, i, r, o) {
        const a = (function Xr(n, t, e, i) {
          const r = kt(n, t, e);
          return kt(n, t + 1, i) || r;
        })(
          n,
          (function Li() {
            return ne.lFrame.bindingIndex;
          })(),
          e,
          r
        );
        return Vi(2), a ? t + re(e) + i + re(r) + o : oe;
      }
      function N(n, t, e, i, r, o, s, a) {
        const l = T(),
          c = Ce(),
          u = n + 22,
          d = c.firstCreatePass
            ? (function zR(n, t, e, i, r, o, s, a, l) {
                const c = t.consts,
                  u = Jo(t, n, 4, s || null, pr(c, a));
                Ff(t, e, u, pr(c, l)), ql(t, u);
                const d = (u.tViews = Of(
                  2,
                  u,
                  i,
                  r,
                  o,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  c
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, u),
                    (d.queries = t.queries.embeddedTView(u))),
                  u
                );
              })(u, c, l, t, e, i, r, o, s)
            : c.data[u];
        oi(d, !1);
        const f = l[11].createComment("");
        dc(c, l, f, d),
          It(f, l),
          yc(l, (l[u] = hb(f, l, f, d))),
          Ul(d) && kf(c, l, d),
          null != s && Rf(l, d, a);
      }
      function M(n, t, e) {
        const i = T();
        return kt(i, Po(), t) && hn(Ce(), Xe(), i, n, t, i[11], e, !1), M;
      }
      function qf(n, t, e, i, r) {
        const s = r ? "class" : "style";
        jf(n, e, t.inputs[s], s, i);
      }
      function g(n, t, e, i) {
        const r = T(),
          o = Ce(),
          s = 22 + n,
          a = r[11],
          l = (r[s] = lf(
            a,
            t,
            (function NA() {
              return ne.lFrame.currentNamespace;
            })()
          )),
          c = o.firstCreatePass
            ? (function GR(n, t, e, i, r, o, s) {
                const a = t.consts,
                  c = Jo(t, n, 2, r, pr(a, o));
                return (
                  Ff(t, e, c, pr(a, s)),
                  null !== c.attrs && bc(c, c.attrs, !1),
                  null !== c.mergedAttrs && bc(c, c.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, c),
                  c
                );
              })(s, o, r, 0, t, e, i)
            : o.data[s];
        oi(c, !0);
        const u = c.mergedAttrs;
        null !== u && Yl(a, l, u);
        const d = c.classes;
        null !== d && pf(a, l, d);
        const f = c.styles;
        return (
          null !== f && Ey(a, l, f),
          64 != (64 & c.flags) && dc(o, r, l, c),
          0 ===
            (function bA() {
              return ne.lFrame.elementDepthCount;
            })() && It(l, r),
          (function CA() {
            ne.lFrame.elementDepthCount++;
          })(),
          Ul(c) && (kf(o, r, c), tb(o, c, r)),
          null !== i && Rf(r, c),
          g
        );
      }
      function m() {
        let n = ft();
        uh() ? dh() : ((n = n.parent), oi(n, !1));
        const t = n;
        !(function wA() {
          ne.lFrame.elementDepthCount--;
        })();
        const e = Ce();
        return (
          e.firstCreatePass && (ql(e, n), nh(n) && e.queries.elementEnd(n)),
          null != t.classesWithoutHost &&
            (function HA(n) {
              return 0 != (16 & n.flags);
            })(t) &&
            qf(e, t, T(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function UA(n) {
              return 0 != (32 & n.flags);
            })(t) &&
            qf(e, t, T(), t.stylesWithoutHost, !1),
          m
        );
      }
      function ge(n, t, e, i) {
        return g(n, t, e, i), m(), ge;
      }
      function ba(n, t, e) {
        const i = T(),
          r = Ce(),
          o = n + 22,
          s = r.firstCreatePass
            ? (function WR(n, t, e, i, r) {
                const o = t.consts,
                  s = pr(o, i),
                  a = Jo(t, n, 8, "ng-container", s);
                return (
                  null !== s && bc(a, s, !0),
                  Ff(t, e, a, pr(o, r)),
                  null !== t.queries && t.queries.elementStart(t, a),
                  a
                );
              })(o, r, i, t, e)
            : r.data[o];
        oi(s, !0);
        const a = (i[o] = i[11].createComment(""));
        return (
          dc(r, i, a, s),
          It(a, i),
          Ul(s) && (kf(r, i, s), tb(r, s, i)),
          null != e && Rf(i, s),
          ba
        );
      }
      function Ca() {
        let n = ft();
        const t = Ce();
        return (
          uh() ? dh() : ((n = n.parent), oi(n, !1)),
          t.firstCreatePass && (ql(t, n), nh(n) && t.queries.elementEnd(n)),
          Ca
        );
      }
      function zi() {
        return T();
      }
      function wa(n) {
        return !!n && "function" == typeof n.then;
      }
      function Ib(n) {
        return !!n && "function" == typeof n.subscribe;
      }
      const Gf = Ib;
      function I(n, t, e, i) {
        const r = T(),
          o = Ce(),
          s = ft();
        return kb(o, r, r[11], s, n, t, 0, i), I;
      }
      function Da(n, t) {
        const e = ft(),
          i = T(),
          r = Ce();
        return kb(r, i, _b(fh(r.data), e, i), e, n, t), Da;
      }
      function kb(n, t, e, i, r, o, s, a) {
        const l = Ul(i),
          u = n.firstCreatePass && gb(n),
          d = t[8],
          f = mb(t);
        let p = !0;
        if (3 & i.type || a) {
          const w = xn(i, t),
            D = a ? a(w) : w,
            A = f.length,
            E = a ? (te) => a(ot(te[i.index])) : i.index;
          let O = null;
          if (
            (!a &&
              l &&
              (O = (function YR(n, t, e, i) {
                const r = n.cleanup;
                if (null != r)
                  for (let o = 0; o < r.length - 1; o += 2) {
                    const s = r[o];
                    if (s === e && r[o + 1] === i) {
                      const a = t[7],
                        l = r[o + 2];
                      return a.length > l ? a[l] : null;
                    }
                    "string" == typeof s && (o += 2);
                  }
                return null;
              })(n, t, r, i.index)),
            null !== O)
          )
            ((O.__ngLastListenerFn__ || O).__ngNextListenerFn__ = o),
              (O.__ngLastListenerFn__ = o),
              (p = !1);
          else {
            o = Ob(i, t, d, o, !1);
            const te = e.listen(D, r, o);
            f.push(o, te), u && u.push(r, E, A, A + 1);
          }
        } else o = Ob(i, t, d, o, !1);
        const _ = i.outputs;
        let y;
        if (p && null !== _ && (y = _[r])) {
          const w = y.length;
          if (w)
            for (let D = 0; D < w; D += 2) {
              const ve = t[y[D]][y[D + 1]].subscribe(o),
                Ye = f.length;
              f.push(o, ve), u && u.push(r, i.index, Ye, -(Ye + 1));
            }
        }
      }
      function Rb(n, t, e, i) {
        try {
          return !1 !== e(i);
        } catch (r) {
          return vb(n, r), !1;
        }
      }
      function Ob(n, t, e, i, r) {
        return function o(s) {
          if (s === Function) return i;
          Lf(2 & n.flags ? an(n.index, t) : t);
          let l = Rb(t, 0, i, s),
            c = o.__ngNextListenerFn__;
          for (; c; ) (l = Rb(t, 0, c, s) && l), (c = c.__ngNextListenerFn__);
          return r && !1 === l && (s.preventDefault(), (s.returnValue = !1)), l;
        };
      }
      function Ie(n = 1) {
        return (function IA(n) {
          return (ne.lFrame.contextLView = (function kA(n, t) {
            for (; n > 0; ) (t = t[15]), n--;
            return t;
          })(n, ne.lFrame.contextLView))[8];
        })(n);
      }
      function KR(n, t) {
        let e = null;
        const i = (function gk(n) {
          const t = n.attrs;
          if (null != t) {
            const e = t.indexOf(5);
            if (0 == (1 & e)) return t[e + 1];
          }
          return null;
        })(n);
        for (let r = 0; r < t.length; r++) {
          const o = t[r];
          if ("*" !== o) {
            if (null === i ? Ay(n, o, !0) : yk(i, o)) return r;
          } else e = r;
        }
        return e;
      }
      function mt(n) {
        const t = T()[16][6];
        if (!t.projection) {
          const i = (t.projection = na(n ? n.length : 1, null)),
            r = i.slice();
          let o = t.child;
          for (; null !== o; ) {
            const s = n ? KR(o, n) : 0;
            null !== s &&
              (r[s] ? (r[s].projectionNext = o) : (i[s] = o), (r[s] = o)),
              (o = o.next);
          }
        }
      }
      function pe(n, t = 0, e) {
        const i = T(),
          r = Ce(),
          o = Jo(r, 22 + n, 16, null, e || null);
        null === o.projection && (o.projection = t),
          dh(),
          64 != (64 & o.flags) &&
            (function ck(n, t, e) {
              My(t[11], 0, t, e, py(n, e, t), vy(e.parent || t[6], e, t));
            })(r, i, o);
      }
      function Yt(n, t, e, i, r) {
        const o = T(),
          s = ns(o, t, e, i);
        return s !== oe && hn(Ce(), Xe(), o, n, s, o[11], r, !1), Yt;
      }
      function $b(n, t, e, i, r) {
        const o = n[e + 1],
          s = null === t;
        let a = i ? qn(o) : Ui(o),
          l = !1;
        for (; 0 !== a && (!1 === l || s); ) {
          const u = n[a + 1];
          XR(n[a], t) && ((l = !0), (n[a + 1] = i ? Cf(u) : yf(u))),
            (a = i ? qn(u) : Ui(u));
        }
        l && (n[e + 1] = i ? yf(o) : Cf(o));
      }
      function XR(n, t) {
        return (
          null === n ||
          null == t ||
          (Array.isArray(n) ? n[1] : n) === t ||
          (!(!Array.isArray(n) || "string" != typeof t) && $o(n, t) >= 0)
        );
      }
      const gt = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function zb(n) {
        return n.substring(gt.key, gt.keyEnd);
      }
      function qb(n, t) {
        const e = gt.textEnd;
        return e === t
          ? -1
          : ((t = gt.keyEnd =
              (function nO(n, t, e) {
                for (; t < e && n.charCodeAt(t) > 32; ) t++;
                return t;
              })(n, (gt.key = t), e)),
            us(n, t, e));
      }
      function us(n, t, e) {
        for (; t < e && n.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function Jr(n, t, e) {
        return Gn(n, t, e, !1), Jr;
      }
      function Pe(n, t) {
        return Gn(n, t, null, !0), Pe;
      }
      function pi(n, t) {
        for (
          let e = (function eO(n) {
            return (
              (function Wb(n) {
                (gt.key = 0),
                  (gt.keyEnd = 0),
                  (gt.value = 0),
                  (gt.valueEnd = 0),
                  (gt.textEnd = n.length);
              })(n),
              qb(n, us(n, 0, gt.textEnd))
            );
          })(t);
          e >= 0;
          e = qb(t, e)
        )
          cn(n, zb(t), !0);
      }
      function Gn(n, t, e, i) {
        const r = T(),
          o = Ce(),
          s = Vi(2);
        o.firstUpdatePass && Qb(o, n, s, i),
          t !== oe &&
            kt(r, s, t) &&
            Jb(
              o,
              o.data[Vt()],
              r,
              r[11],
              n,
              (r[s + 1] = (function fO(n, t) {
                return (
                  null == n ||
                    ("string" == typeof t
                      ? (n += t)
                      : "object" == typeof n && (n = Ve(dn(n)))),
                  n
                );
              })(t, e)),
              i,
              s
            );
      }
      function Zb(n, t) {
        return t >= n.expandoStartIndex;
      }
      function Qb(n, t, e, i) {
        const r = n.data;
        if (null === r[e + 1]) {
          const o = r[Vt()],
            s = Zb(n, e);
          tC(o, i) && null === t && !s && (t = !1),
            (t = (function aO(n, t, e, i) {
              const r = fh(n);
              let o = i ? t.residualClasses : t.residualStyles;
              if (null === r)
                0 === (i ? t.classBindings : t.styleBindings) &&
                  ((e = Ma((e = Wf(null, n, t, e, i)), t.attrs, i)),
                  (o = null));
              else {
                const s = t.directiveStylingLast;
                if (-1 === s || n[s] !== r)
                  if (((e = Wf(r, n, t, e, i)), null === o)) {
                    let l = (function lO(n, t, e) {
                      const i = e ? t.classBindings : t.styleBindings;
                      if (0 !== Ui(i)) return n[qn(i)];
                    })(n, t, i);
                    void 0 !== l &&
                      Array.isArray(l) &&
                      ((l = Wf(null, n, t, l[1], i)),
                      (l = Ma(l, t.attrs, i)),
                      (function cO(n, t, e, i) {
                        n[qn(e ? t.classBindings : t.styleBindings)] = i;
                      })(n, t, i, l));
                  } else
                    o = (function uO(n, t, e) {
                      let i;
                      const r = t.directiveEnd;
                      for (let o = 1 + t.directiveStylingLast; o < r; o++)
                        i = Ma(i, n[o].hostAttrs, e);
                      return Ma(i, t.attrs, e);
                    })(n, t, i);
              }
              return (
                void 0 !== o &&
                  (i ? (t.residualClasses = o) : (t.residualStyles = o)),
                e
              );
            })(r, o, t, i)),
            (function ZR(n, t, e, i, r, o) {
              let s = o ? t.classBindings : t.styleBindings,
                a = qn(s),
                l = Ui(s);
              n[i] = e;
              let u,
                c = !1;
              if (Array.isArray(e)) {
                const d = e;
                (u = d[1]), (null === u || $o(d, u) > 0) && (c = !0);
              } else u = e;
              if (r)
                if (0 !== l) {
                  const f = qn(n[a + 1]);
                  (n[i + 1] = pc(f, a)),
                    0 !== f && (n[f + 1] = bf(n[f + 1], i)),
                    (n[a + 1] = (function Hk(n, t) {
                      return (131071 & n) | (t << 17);
                    })(n[a + 1], i));
                } else
                  (n[i + 1] = pc(a, 0)),
                    0 !== a && (n[a + 1] = bf(n[a + 1], i)),
                    (a = i);
              else
                (n[i + 1] = pc(l, 0)),
                  0 === a ? (a = i) : (n[l + 1] = bf(n[l + 1], i)),
                  (l = i);
              c && (n[i + 1] = yf(n[i + 1])),
                $b(n, u, i, !0),
                $b(n, u, i, !1),
                (function QR(n, t, e, i, r) {
                  const o = r ? n.residualClasses : n.residualStyles;
                  null != o &&
                    "string" == typeof t &&
                    $o(o, t) >= 0 &&
                    (e[i + 1] = Cf(e[i + 1]));
                })(t, u, n, i, o),
                (s = pc(a, l)),
                o ? (t.classBindings = s) : (t.styleBindings = s);
            })(r, o, t, e, s, i);
        }
      }
      function Wf(n, t, e, i, r) {
        let o = null;
        const s = e.directiveEnd;
        let a = e.directiveStylingLast;
        for (
          -1 === a ? (a = e.directiveStart) : a++;
          a < s && ((o = t[a]), (i = Ma(i, o.hostAttrs, r)), o !== n);

        )
          a++;
        return null !== n && (e.directiveStylingLast = a), i;
      }
      function Ma(n, t, e) {
        const i = e ? 1 : 2;
        let r = -1;
        if (null !== t)
          for (let o = 0; o < t.length; o++) {
            const s = t[o];
            "number" == typeof s
              ? (r = s)
              : r === i &&
                (Array.isArray(n) || (n = void 0 === n ? [] : ["", n]),
                cn(n, s, !!e || t[++o]));
          }
        return void 0 === n ? null : n;
      }
      function Jb(n, t, e, i, r, o, s, a) {
        if (!(3 & t.type)) return;
        const l = n.data,
          c = l[a + 1];
        Ec(
          (function qy(n) {
            return 1 == (1 & n);
          })(c)
            ? eC(l, t, e, r, Ui(c), s)
            : void 0
        ) ||
          (Ec(o) ||
            ((function zy(n) {
              return 2 == (2 & n);
            })(c) &&
              (o = eC(l, null, e, r, a, s))),
          (function dk(n, t, e, i, r) {
            if (t) r ? n.addClass(e, i) : n.removeClass(e, i);
            else {
              let o = -1 === i.indexOf("-") ? void 0 : Wt.DashCase;
              null == r
                ? n.removeStyle(e, i, o)
                : ("string" == typeof r &&
                    r.endsWith("!important") &&
                    ((r = r.slice(0, -10)), (o |= Wt.Important)),
                  n.setStyle(e, i, r, o));
            }
          })(i, s, $l(Vt(), e), r, o));
      }
      function eC(n, t, e, i, r, o) {
        const s = null === t;
        let a;
        for (; r > 0; ) {
          const l = n[r],
            c = Array.isArray(l),
            u = c ? l[1] : l,
            d = null === u;
          let f = e[r + 1];
          f === oe && (f = d ? Se : void 0);
          let p = d ? Eh(f, i) : u === i ? f : void 0;
          if ((c && !Ec(p) && (p = Eh(l, i)), Ec(p) && ((a = p), s))) return a;
          const _ = n[r + 1];
          r = s ? qn(_) : Ui(_);
        }
        if (null !== t) {
          let l = o ? t.residualClasses : t.residualStyles;
          null != l && (a = Eh(l, i));
        }
        return a;
      }
      function Ec(n) {
        return void 0 !== n;
      }
      function tC(n, t) {
        return 0 != (n.flags & (t ? 16 : 32));
      }
      function v(n, t = "") {
        const e = T(),
          i = Ce(),
          r = n + 22,
          o = i.firstCreatePass ? Jo(i, r, 1, t, null) : i.data[r],
          s = (e[r] = (function af(n, t) {
            return n.createText(t);
          })(e[11], t));
        dc(i, e, s, o), oi(o, !1);
      }
      function Je(n) {
        return Ge("", n, ""), Je;
      }
      function Ge(n, t, e) {
        const i = T(),
          r = ns(i, n, t, e);
        return r !== oe && $i(i, Vt(), r), Ge;
      }
      function Cr(n, t, e, i, r) {
        const o = T(),
          s = is(o, n, t, e, i, r);
        return s !== oe && $i(o, Vt(), s), Cr;
      }
      function cC(n, t, e) {
        !(function Wn(n, t, e, i) {
          const r = Ce(),
            o = Vi(2);
          r.firstUpdatePass && Qb(r, null, o, i);
          const s = T();
          if (e !== oe && kt(s, o, e)) {
            const a = r.data[Vt()];
            if (tC(a, i) && !Zb(r, o)) {
              let l = i ? a.classesWithoutHost : a.stylesWithoutHost;
              null !== l && (e = Wd(l, e || "")), qf(r, a, s, e, i);
            } else
              !(function hO(n, t, e, i, r, o, s, a) {
                r === oe && (r = Se);
                let l = 0,
                  c = 0,
                  u = 0 < r.length ? r[0] : null,
                  d = 0 < o.length ? o[0] : null;
                for (; null !== u || null !== d; ) {
                  const f = l < r.length ? r[l + 1] : void 0,
                    p = c < o.length ? o[c + 1] : void 0;
                  let y,
                    _ = null;
                  u === d
                    ? ((l += 2), (c += 2), f !== p && ((_ = d), (y = p)))
                    : null === d || (null !== u && u < d)
                    ? ((l += 2), (_ = u))
                    : ((c += 2), (_ = d), (y = p)),
                    null !== _ && Jb(n, t, e, i, _, y, s, a),
                    (u = l < r.length ? r[l] : null),
                    (d = c < o.length ? o[c] : null);
                }
              })(
                r,
                a,
                s,
                s[11],
                s[o + 1],
                (s[o + 1] = (function dO(n, t, e) {
                  if (null == e || "" === e) return Se;
                  const i = [],
                    r = dn(e);
                  if (Array.isArray(r))
                    for (let o = 0; o < r.length; o++) n(i, r[o], !0);
                  else if ("object" == typeof r)
                    for (const o in r) r.hasOwnProperty(o) && n(i, o, r[o]);
                  else "string" == typeof r && t(i, r);
                  return i;
                })(n, t, e)),
                i,
                o
              );
          }
        })(cn, pi, ns(T(), n, t, e), !0);
      }
      function Ea(n, t, e) {
        const i = T();
        return kt(i, Po(), t) && hn(Ce(), Xe(), i, n, t, i[11], e, !0), Ea;
      }
      function Sa(n, t, e) {
        const i = T();
        if (kt(i, Po(), t)) {
          const o = Ce(),
            s = Xe();
          hn(o, s, i, n, t, _b(fh(o.data), s, i), e, !0);
        }
        return Sa;
      }
      const hs = "en-US";
      let CC = hs;
      function Zf(n, t, e, i, r) {
        if (((n = K(n)), Array.isArray(n)))
          for (let o = 0; o < n.length; o++) Zf(n[o], t, e, i, r);
        else {
          const o = Ce(),
            s = T();
          let a = Gr(n) ? n : K(n.provide),
            l = Kv(n);
          const c = ft(),
            u = 1048575 & c.providerIndexes,
            d = c.directiveStart,
            f = c.providerIndexes >> 20;
          if (Gr(n) || !n.multi) {
            const p = new Zs(l, r, h),
              _ = Xf(a, t, r ? u : u + f, d);
            -1 === _
              ? (Xl(Xs(c, s), o, a),
                Qf(o, n, t.length),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(p),
                s.push(p))
              : ((e[_] = p), (s[_] = p));
          } else {
            const p = Xf(a, t, u + f, d),
              _ = Xf(a, t, u, u + f),
              y = p >= 0 && e[p],
              w = _ >= 0 && e[_];
            if ((r && !w) || (!r && !y)) {
              Xl(Xs(c, s), o, a);
              const D = (function IF(n, t, e, i, r) {
                const o = new Zs(n, e, h);
                return (
                  (o.multi = []),
                  (o.index = t),
                  (o.componentProviders = 0),
                  GC(o, r, i && !e),
                  o
                );
              })(r ? AF : xF, e.length, r, i, l);
              !r && w && (e[_].providerFactory = D),
                Qf(o, n, t.length, 0),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(D),
                s.push(D);
            } else Qf(o, n, p > -1 ? p : _, GC(e[r ? _ : p], l, !r && i));
            !r && i && w && e[_].componentProviders++;
          }
        }
      }
      function Qf(n, t, e, i) {
        const r = Gr(t),
          o = (function r1(n) {
            return !!n.useClass;
          })(t);
        if (r || o) {
          const l = (o ? K(t.useClass) : t).prototype.ngOnDestroy;
          if (l) {
            const c = n.destroyHooks || (n.destroyHooks = []);
            if (!r && t.multi) {
              const u = c.indexOf(e);
              -1 === u ? c.push(e, [i, l]) : c[u + 1].push(i, l);
            } else c.push(e, l);
          }
        }
      }
      function GC(n, t, e) {
        return e && n.componentProviders++, n.multi.push(t) - 1;
      }
      function Xf(n, t, e, i) {
        for (let r = e; r < i; r++) if (t[r] === n) return r;
        return -1;
      }
      function xF(n, t, e, i) {
        return Jf(this.multi, []);
      }
      function AF(n, t, e, i) {
        const r = this.multi;
        let o;
        if (this.providerFactory) {
          const s = this.providerFactory.componentProviders,
            a = Js(e, e[1], this.providerFactory.index, i);
          (o = a.slice(0, s)), Jf(r, o);
          for (let l = s; l < a.length; l++) o.push(a[l]);
        } else (o = []), Jf(r, o);
        return o;
      }
      function Jf(n, t) {
        for (let e = 0; e < n.length; e++) t.push((0, n[e])());
        return t;
      }
      function ae(n, t = []) {
        return (e) => {
          e.providersResolver = (i, r) =>
            (function TF(n, t, e) {
              const i = Ce();
              if (i.firstCreatePass) {
                const r = $n(n);
                Zf(e, i.data, i.blueprint, r, !0),
                  Zf(t, i.data, i.blueprint, r, !1);
              }
            })(i, r ? r(n) : n, t);
        };
      }
      class to {}
      class WC {}
      class YC extends to {
        constructor(t, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Hf(this));
          const i = on(t);
          (this._bootstrapComponents = Hi(i.bootstrap)),
            (this._r3Injector = Ny(
              t,
              e,
              [
                { provide: to, useValue: this },
                { provide: Wr, useValue: this.componentFactoryResolver },
              ],
              Ve(t),
              new Set(["environment"])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(t));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class ep extends WC {
        constructor(t) {
          super(), (this.moduleType = t);
        }
        create(t) {
          return new YC(this.moduleType, t);
        }
      }
      class RF extends to {
        constructor(t, e, i) {
          super(),
            (this.componentFactoryResolver = new Hf(this)),
            (this.instance = null);
          const r = new Yv(
            [
              ...t,
              { provide: to, useValue: this },
              { provide: Wr, useValue: this.componentFactoryResolver },
            ],
            e || cc(),
            i,
            new Set(["environment"])
          );
          (this.injector = r), r.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(t) {
          this.injector.onDestroy(t);
        }
      }
      function Ic(n, t, e = null) {
        return new RF(n, t, e).injector;
      }
      function nw(n, t, e, i, r, o) {
        const s = t + e;
        return kt(n, s, r)
          ? (function hi(n, t, e) {
              return (n[t] = e);
            })(n, s + 1, o ? i.call(o, r) : i(r))
          : (function ka(n, t) {
              const e = n[t];
              return e === oe ? void 0 : e;
            })(n, s + 1);
      }
      function mi(n, t) {
        const e = Ce();
        let i;
        const r = n + 22;
        e.firstCreatePass
          ? ((i = (function XF(n, t) {
              if (t)
                for (let e = t.length - 1; e >= 0; e--) {
                  const i = t[e];
                  if (n === i.name) return i;
                }
            })(t, e.pipeRegistry)),
            (e.data[r] = i),
            i.onDestroy &&
              (e.destroyHooks || (e.destroyHooks = [])).push(r, i.onDestroy))
          : (i = e.data[r]);
        const o = i.factory || (i.factory = zr(i.type)),
          s = En(h);
        try {
          const a = Zl(!1),
            l = o();
          return (
            Zl(a),
            (function qR(n, t, e, i) {
              e >= n.data.length &&
                ((n.data[e] = null), (n.blueprint[e] = null)),
                (t[e] = i);
            })(e, T(), r, l),
            l
          );
        } finally {
          En(s);
        }
      }
      function gi(n, t, e) {
        const i = n + 22,
          r = T(),
          o = Fo(r, i);
        return (function Ra(n, t) {
          return n[1].data[t].pure;
        })(r, i)
          ? nw(
              r,
              (function Lt() {
                const n = ne.lFrame;
                let t = n.bindingRootIndex;
                return (
                  -1 === t &&
                    (t = n.bindingRootIndex = n.tView.bindingStartIndex),
                  t
                );
              })(),
              t,
              o.transform,
              e,
              o
            )
          : o.transform(e);
      }
      function np(n) {
        return (t) => {
          setTimeout(n, void 0, t);
        };
      }
      const se = class iP extends V {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, e, i) {
          let r = t,
            o = e || (() => null),
            s = i;
          if (t && "object" == typeof t) {
            const l = t;
            (r = l.next?.bind(l)),
              (o = l.error?.bind(l)),
              (s = l.complete?.bind(l));
          }
          this.__isAsync && ((o = np(o)), r && (r = np(r)), s && (s = np(s)));
          const a = super.subscribe({ next: r, error: o, complete: s });
          return t instanceof tt && t.add(a), a;
        }
      };
      function rP() {
        return this._results[Qr()]();
      }
      class ps {
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = Qr(),
            i = ps.prototype;
          i[e] || (i[e] = rP);
        }
        get changes() {
          return this._changes || (this._changes = new se());
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, e) {
          return this._results.reduce(t, e);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, e) {
          const i = this;
          i.dirty = !1;
          const r = ln(t);
          (this._changesDetected = !(function JA(n, t, e) {
            if (n.length !== t.length) return !1;
            for (let i = 0; i < n.length; i++) {
              let r = n[i],
                o = t[i];
              if ((e && ((r = e(r)), (o = e(o))), o !== r)) return !1;
            }
            return !0;
          })(i._results, r, e)) &&
            ((i._results = r),
            (i.length = r.length),
            (i.last = r[this.length - 1]),
            (i.first = r[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let fn = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = aP), n;
      })();
      const oP = fn,
        sP = class extends oP {
          constructor(t, e, i) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = e),
              (this.elementRef = i);
          }
          createEmbeddedView(t, e) {
            const i = this._declarationTContainer.tViews,
              r = _c(
                this._declarationLView,
                i,
                t,
                16,
                null,
                i.declTNode,
                null,
                null,
                null,
                null,
                e || null
              );
            r[17] = this._declarationLView[this._declarationTContainer.index];
            const s = this._declarationLView[19];
            return (
              null !== s && (r[19] = s.createEmbeddedView(i)),
              vc(i, r, t),
              new ga(r)
            );
          }
        };
      function aP() {
        return kc(ft(), T());
      }
      function kc(n, t) {
        return 4 & n.type ? new sP(t, n, Ko(n, t)) : null;
      }
      let Rt = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = lP), n;
      })();
      function lP() {
        return cw(ft(), T());
      }
      const cP = Rt,
        aw = class extends cP {
          constructor(t, e, i) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = e),
              (this._hostLView = i);
          }
          get element() {
            return Ko(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Vo(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = Ql(this._hostTNode, this._hostLView);
            if (rv(t)) {
              const e = Lo(t, this._hostLView),
                i = No(t);
              return new Vo(e[1].data[i + 8], e);
            }
            return new Vo(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const e = lw(this._lContainer);
            return (null !== e && e[t]) || null;
          }
          get length() {
            return this._lContainer.length - 10;
          }
          createEmbeddedView(t, e, i) {
            let r, o;
            "number" == typeof i
              ? (r = i)
              : null != i && ((r = i.index), (o = i.injector));
            const s = t.createEmbeddedView(e || {}, o);
            return this.insert(s, r), s;
          }
          createComponent(t, e, i, r, o) {
            const s =
              t &&
              !(function ta(n) {
                return "function" == typeof n;
              })(t);
            let a;
            if (s) a = e;
            else {
              const d = e || {};
              (a = d.index),
                (i = d.injector),
                (r = d.projectableNodes),
                (o = d.environmentInjector || d.ngModuleRef);
            }
            const l = s ? t : new _a(Re(t)),
              c = i || this.parentInjector;
            if (!o && null == l.ngModule) {
              const f = (s ? c : this.parentInjector).get(_r, null);
              f && (o = f);
            }
            const u = l.create(c, r, void 0, o);
            return this.insert(u.hostView, a), u;
          }
          insert(t, e) {
            const i = t._lView,
              r = i[1];
            if (
              (function yA(n) {
                return Un(n[3]);
              })(i)
            ) {
              const u = this.indexOf(t);
              if (-1 !== u) this.detach(u);
              else {
                const d = i[3],
                  f = new aw(d, d[6], d[3]);
                f.detach(f.indexOf(t));
              }
            }
            const o = this._adjustIndex(e),
              s = this._lContainer;
            !(function ik(n, t, e, i) {
              const r = 10 + i,
                o = e.length;
              i > 0 && (e[r - 1][4] = t),
                i < o - 10
                  ? ((t[4] = e[r]), mv(e, 10 + i, t))
                  : (e.push(t), (t[4] = null)),
                (t[3] = e);
              const s = t[17];
              null !== s &&
                e !== s &&
                (function rk(n, t) {
                  const e = n[9];
                  t[16] !== t[3][3][16] && (n[2] = !0),
                    null === e ? (n[9] = [t]) : e.push(t);
                })(s, t);
              const a = t[19];
              null !== a && a.insertView(n), (t[2] |= 64);
            })(r, i, s, o);
            const a = hf(o, s),
              l = i[11],
              c = uc(l, s[7]);
            return (
              null !== c &&
                (function ek(n, t, e, i, r, o) {
                  (i[0] = r), (i[6] = t), pa(n, i, e, 1, r, o);
                })(r, s[6], l, i, c, a),
              t.attachToViewContainerRef(),
              mv(ip(s), o, t),
              t
            );
          }
          move(t, e) {
            return this.insert(t, e);
          }
          indexOf(t) {
            const e = lw(this._lContainer);
            return null !== e ? e.indexOf(t) : -1;
          }
          remove(t) {
            const e = this._adjustIndex(t, -1),
              i = cf(this._lContainer, e);
            i && (ec(ip(this._lContainer), e), fy(i[1], i));
          }
          detach(t) {
            const e = this._adjustIndex(t, -1),
              i = cf(this._lContainer, e);
            return i && null != ec(ip(this._lContainer), e) ? new ga(i) : null;
          }
          _adjustIndex(t, e = 0) {
            return t ?? this.length + e;
          }
        };
      function lw(n) {
        return n[8];
      }
      function ip(n) {
        return n[8] || (n[8] = []);
      }
      function cw(n, t) {
        let e;
        const i = t[n.index];
        if (Un(i)) e = i;
        else {
          let r;
          if (8 & n.type) r = ot(i);
          else {
            const o = t[11];
            r = o.createComment("");
            const s = xn(n, t);
            Kr(
              o,
              uc(o, s),
              r,
              (function lk(n, t) {
                return n.nextSibling(t);
              })(o, s),
              !1
            );
          }
          (t[n.index] = e = hb(i, t, r, n)), yc(t, e);
        }
        return new aw(e, n, t);
      }
      class rp {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new rp(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class op {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const e = t.queries;
          if (null !== e) {
            const i =
                null !== t.contentQueries ? t.contentQueries[0] : e.length,
              r = [];
            for (let o = 0; o < i; o++) {
              const s = e.getByIndex(o);
              r.push(this.queries[s.indexInDeclarationView].clone());
            }
            return new op(r);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let e = 0; e < this.queries.length; e++)
            null !== pw(t, e).matches && this.queries[e].setDirty();
        }
      }
      class uw {
        constructor(t, e, i = null) {
          (this.predicate = t), (this.flags = e), (this.read = i);
        }
      }
      class sp {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(t, e);
        }
        elementEnd(t) {
          for (let e = 0; e < this.queries.length; e++)
            this.queries[e].elementEnd(t);
        }
        embeddedTView(t) {
          let e = null;
          for (let i = 0; i < this.length; i++) {
            const r = null !== e ? e.length : 0,
              o = this.getByIndex(i).embeddedTView(t, r);
            o &&
              ((o.indexInDeclarationView = i),
              null !== e ? e.push(o) : (e = [o]));
          }
          return null !== e ? new sp(e) : null;
        }
        template(t, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(t, e);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class ap {
        constructor(t, e = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(t, e) {
          this.isApplyingToNode(e) && this.matchTNode(t, e);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, e) {
          this.elementStart(t, e);
        }
        embeddedTView(t, e) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, e),
              new ap(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let i = t.parent;
            for (; null !== i && 8 & i.type && i.index !== e; ) i = i.parent;
            return e === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, e) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let r = 0; r < i.length; r++) {
              const o = i[r];
              this.matchTNodeWithReadOption(t, e, hP(e, o)),
                this.matchTNodeWithReadOption(t, e, Jl(e, t, o, !1, !1));
            }
          else
            i === fn
              ? 4 & e.type && this.matchTNodeWithReadOption(t, e, -1)
              : this.matchTNodeWithReadOption(t, e, Jl(e, t, i, !1, !1));
        }
        matchTNodeWithReadOption(t, e, i) {
          if (null !== i) {
            const r = this.metadata.read;
            if (null !== r)
              if (r === ie || r === Rt || (r === fn && 4 & e.type))
                this.addMatch(e.index, -2);
              else {
                const o = Jl(e, t, r, !1, !1);
                null !== o && this.addMatch(e.index, o);
              }
            else this.addMatch(e.index, i);
          }
        }
        addMatch(t, e) {
          null === this.matches
            ? (this.matches = [t, e])
            : this.matches.push(t, e);
        }
      }
      function hP(n, t) {
        const e = n.localNames;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) if (e[i] === t) return e[i + 1];
        return null;
      }
      function pP(n, t, e, i) {
        return -1 === e
          ? (function fP(n, t) {
              return 11 & n.type ? Ko(n, t) : 4 & n.type ? kc(n, t) : null;
            })(t, n)
          : -2 === e
          ? (function mP(n, t, e) {
              return e === ie
                ? Ko(t, n)
                : e === fn
                ? kc(t, n)
                : e === Rt
                ? cw(t, n)
                : void 0;
            })(n, t, i)
          : Js(n, n[1], e, t);
      }
      function dw(n, t, e, i) {
        const r = t[19].queries[i];
        if (null === r.matches) {
          const o = n.data,
            s = e.matches,
            a = [];
          for (let l = 0; l < s.length; l += 2) {
            const c = s[l];
            a.push(c < 0 ? null : pP(t, o[c], s[l + 1], e.metadata.read));
          }
          r.matches = a;
        }
        return r.matches;
      }
      function lp(n, t, e, i) {
        const r = n.queries.getByIndex(e),
          o = r.matches;
        if (null !== o) {
          const s = dw(n, t, r, e);
          for (let a = 0; a < o.length; a += 2) {
            const l = o[a];
            if (l > 0) i.push(s[a / 2]);
            else {
              const c = o[a + 1],
                u = t[-l];
              for (let d = 10; d < u.length; d++) {
                const f = u[d];
                f[17] === f[3] && lp(f[1], f, c, i);
              }
              if (null !== u[9]) {
                const d = u[9];
                for (let f = 0; f < d.length; f++) {
                  const p = d[f];
                  lp(p[1], p, c, i);
                }
              }
            }
          }
        }
        return i;
      }
      function X(n) {
        const t = T(),
          e = Ce(),
          i = Y_();
        ph(i + 1);
        const r = pw(e, i);
        if (n.dirty && H_(t) === (2 == (2 & r.metadata.flags))) {
          if (null === r.matches) n.reset([]);
          else {
            const o = r.crossesNgTemplate ? lp(e, t, i, []) : dw(e, t, r, i);
            n.reset(o, g1), n.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Et(n, t, e) {
        const i = Ce();
        i.firstCreatePass &&
          (fw(i, new uw(n, t, e), -1),
          2 == (2 & t) && (i.staticViewQueries = !0)),
          hw(i, T(), t);
      }
      function ke(n, t, e, i) {
        const r = Ce();
        if (r.firstCreatePass) {
          const o = ft();
          fw(r, new uw(t, e, i), o.index),
            (function _P(n, t) {
              const e = n.contentQueries || (n.contentQueries = []);
              t !== (e.length ? e[e.length - 1] : -1) &&
                e.push(n.queries.length - 1, t);
            })(r, n),
            2 == (2 & e) && (r.staticContentQueries = !0);
        }
        hw(r, T(), e);
      }
      function J() {
        return (function gP(n, t) {
          return n[19].queries[t].queryList;
        })(T(), Y_());
      }
      function hw(n, t, e) {
        const i = new ps(4 == (4 & e));
        ib(n, t, i, i.destroy),
          null === t[19] && (t[19] = new op()),
          t[19].queries.push(new rp(i));
      }
      function fw(n, t, e) {
        null === n.queries && (n.queries = new sp()),
          n.queries.track(new ap(t, e));
      }
      function pw(n, t) {
        return n.queries.getByIndex(t);
      }
      function Oc(...n) {}
      const Fc = new x("Application Initializer");
      let Pc = (() => {
        class n {
          constructor(e) {
            (this.appInits = e),
              (this.resolve = Oc),
              (this.reject = Oc),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, r) => {
                (this.resolve = i), (this.reject = r);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const e = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let r = 0; r < this.appInits.length; r++) {
                const o = this.appInits[r]();
                if (wa(o)) e.push(o);
                else if (Gf(o)) {
                  const s = new Promise((a, l) => {
                    o.subscribe({ complete: a, error: l });
                  });
                  e.push(s);
                }
              }
            Promise.all(e)
              .then(() => {
                i();
              })
              .catch((r) => {
                this.reject(r);
              }),
              0 === e.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(Fc, 8));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const vs = new x("AppId", {
        providedIn: "root",
        factory: function Ow() {
          return `${fp()}${fp()}${fp()}`;
        },
      });
      function fp() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Fw = new x("Platform Initializer"),
        Nc = new x("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        Pw = new x("appBootstrapListener"),
        pn = new x("AnimationModuleType");
      let VP = (() => {
        class n {
          log(e) {
            console.log(e);
          }
          warn(e) {
            console.warn(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "platform" })),
          n
        );
      })();
      const _i = new x("LocaleId", {
        providedIn: "root",
        factory: () =>
          un(_i, $.Optional | $.SkipSelf) ||
          (function BP() {
            return (typeof $localize < "u" && $localize.locale) || hs;
          })(),
      });
      class HP {
        constructor(t, e) {
          (this.ngModuleFactory = t), (this.componentFactories = e);
        }
      }
      let pp = (() => {
        class n {
          compileModuleSync(e) {
            return new ep(e);
          }
          compileModuleAsync(e) {
            return Promise.resolve(this.compileModuleSync(e));
          }
          compileModuleAndAllComponentsSync(e) {
            const i = this.compileModuleSync(e),
              o = Hi(on(e).declarations).reduce((s, a) => {
                const l = Re(a);
                return l && s.push(new _a(l)), s;
              }, []);
            return new HP(i, o);
          }
          compileModuleAndAllComponentsAsync(e) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(e));
          }
          clearCache() {}
          clearCacheFor(e) {}
          getModuleId(e) {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const zP = (() => Promise.resolve(0))();
      function mp(n) {
        typeof Zone > "u"
          ? zP.then(() => {
              n && n.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", n);
      }
      class G {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new se(!1)),
            (this.onMicrotaskEmpty = new se(!1)),
            (this.onStable = new se(!1)),
            (this.onError = new se(!1)),
            typeof Zone > "u")
          )
            throw new S(908, !1);
          Zone.assertZonePatched();
          const r = this;
          if (
            ((r._nesting = 0),
            (r._outer = r._inner = Zone.current),
            Zone.AsyncStackTaggingZoneSpec)
          ) {
            const o = Zone.AsyncStackTaggingZoneSpec;
            r._inner = r._inner.fork(new o("Angular"));
          }
          Zone.TaskTrackingZoneSpec &&
            (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)),
            (r.shouldCoalesceEventChangeDetection = !i && e),
            (r.shouldCoalesceRunChangeDetection = i),
            (r.lastRequestAnimationFrameId = -1),
            (r.nativeRequestAnimationFrame = (function qP() {
              let n = Fe.requestAnimationFrame,
                t = Fe.cancelAnimationFrame;
              if (typeof Zone < "u" && n && t) {
                const e = n[Zone.__symbol__("OriginalDelegate")];
                e && (n = e);
                const i = t[Zone.__symbol__("OriginalDelegate")];
                i && (t = i);
              }
              return {
                nativeRequestAnimationFrame: n,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function YP(n) {
              const t = () => {
                !(function WP(n) {
                  n.isCheckStableRunning ||
                    -1 !== n.lastRequestAnimationFrameId ||
                    ((n.lastRequestAnimationFrameId =
                      n.nativeRequestAnimationFrame.call(Fe, () => {
                        n.fakeTopEventTask ||
                          (n.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (n.lastRequestAnimationFrameId = -1),
                                _p(n),
                                (n.isCheckStableRunning = !0),
                                gp(n),
                                (n.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          n.fakeTopEventTask.invoke();
                      })),
                    _p(n));
                })(n);
              };
              n._inner = n._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (e, i, r, o, s, a) => {
                  try {
                    return Vw(n), e.invokeTask(r, o, s, a);
                  } finally {
                    ((n.shouldCoalesceEventChangeDetection &&
                      "eventTask" === o.type) ||
                      n.shouldCoalesceRunChangeDetection) &&
                      t(),
                      Bw(n);
                  }
                },
                onInvoke: (e, i, r, o, s, a, l) => {
                  try {
                    return Vw(n), e.invoke(r, o, s, a, l);
                  } finally {
                    n.shouldCoalesceRunChangeDetection && t(), Bw(n);
                  }
                },
                onHasTask: (e, i, r, o) => {
                  e.hasTask(r, o),
                    i === r &&
                      ("microTask" == o.change
                        ? ((n._hasPendingMicrotasks = o.microTask),
                          _p(n),
                          gp(n))
                        : "macroTask" == o.change &&
                          (n.hasPendingMacrotasks = o.macroTask));
                },
                onHandleError: (e, i, r, o) => (
                  e.handleError(r, o),
                  n.runOutsideAngular(() => n.onError.emit(o)),
                  !1
                ),
              });
            })(r);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!G.isInAngularZone()) throw new S(909, !1);
        }
        static assertNotInAngularZone() {
          if (G.isInAngularZone()) throw new S(909, !1);
        }
        run(t, e, i) {
          return this._inner.run(t, e, i);
        }
        runTask(t, e, i, r) {
          const o = this._inner,
            s = o.scheduleEventTask("NgZoneEvent: " + r, t, GP, Oc, Oc);
          try {
            return o.runTask(s, e, i);
          } finally {
            o.cancelTask(s);
          }
        }
        runGuarded(t, e, i) {
          return this._inner.runGuarded(t, e, i);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const GP = {};
      function gp(n) {
        if (0 == n._nesting && !n.hasPendingMicrotasks && !n.isStable)
          try {
            n._nesting++, n.onMicrotaskEmpty.emit(null);
          } finally {
            if ((n._nesting--, !n.hasPendingMicrotasks))
              try {
                n.runOutsideAngular(() => n.onStable.emit(null));
              } finally {
                n.isStable = !0;
              }
          }
      }
      function _p(n) {
        n.hasPendingMicrotasks = !!(
          n._hasPendingMicrotasks ||
          ((n.shouldCoalesceEventChangeDetection ||
            n.shouldCoalesceRunChangeDetection) &&
            -1 !== n.lastRequestAnimationFrameId)
        );
      }
      function Vw(n) {
        n._nesting++,
          n.isStable && ((n.isStable = !1), n.onUnstable.emit(null));
      }
      function Bw(n) {
        n._nesting--, gp(n);
      }
      class KP {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new se()),
            (this.onMicrotaskEmpty = new se()),
            (this.onStable = new se()),
            (this.onError = new se());
        }
        run(t, e, i) {
          return t.apply(e, i);
        }
        runGuarded(t, e, i) {
          return t.apply(e, i);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, e, i, r) {
          return t.apply(e, i);
        }
      }
      const jw = new x(""),
        Lc = new x("");
      let bp,
        vp = (() => {
          class n {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                bp ||
                  ((function ZP(n) {
                    bp = n;
                  })(r),
                  r.addToWindow(i)),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      G.assertNotInAngularZone(),
                        mp(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                mp(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (i) =>
                    !i.updateCb ||
                    !i.updateCb(e) ||
                    (clearTimeout(i.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, i, r) {
              let o = -1;
              i &&
                i > 0 &&
                (o = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (s) => s.timeoutId !== o
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: e, timeoutId: o, updateCb: r });
            }
            whenStable(e, i, r) {
              if (r && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(e, i, r), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(e) {
              this.registry.registerApplication(e, this);
            }
            unregisterApplication(e) {
              this.registry.unregisterApplication(e);
            }
            findProviders(e, i, r) {
              return [];
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(G), b(yp), b(Lc));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        yp = (() => {
          class n {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(e, i) {
              this._applications.set(e, i);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, i = !0) {
              return bp?.findTestabilityInTree(this, e, i) ?? null;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = k({
              token: n,
              factory: n.ɵfac,
              providedIn: "platform",
            })),
            n
          );
        })(),
        wr = null;
      const Hw = new x("AllowMultipleToken"),
        Cp = new x("PlatformDestroyListeners");
      class Uw {
        constructor(t, e) {
          (this.name = t), (this.token = e);
        }
      }
      function zw(n, t, e = []) {
        const i = `Platform: ${t}`,
          r = new x(i);
        return (o = []) => {
          let s = wp();
          if (!s || s.injector.get(Hw, !1)) {
            const a = [...e, ...o, { provide: r, useValue: !0 }];
            n
              ? n(a)
              : (function JP(n) {
                  if (wr && !wr.get(Hw, !1)) throw new S(400, !1);
                  wr = n;
                  const t = n.get(Gw);
                  (function $w(n) {
                    const t = n.get(Fw, null);
                    t && t.forEach((e) => e());
                  })(n);
                })(
                  (function qw(n = [], t) {
                    return ze.create({
                      name: t,
                      providers: [
                        { provide: Hh, useValue: "platform" },
                        { provide: Cp, useValue: new Set([() => (wr = null)]) },
                        ...n,
                      ],
                    });
                  })(a, i)
                );
          }
          return (function tN(n) {
            const t = wp();
            if (!t) throw new S(401, !1);
            return t;
          })();
        };
      }
      function wp() {
        return wr?.get(Gw) ?? null;
      }
      let Gw = (() => {
        class n {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, i) {
            const r = (function nN(n, t) {
                let e;
                return (
                  (e =
                    "noop" === n
                      ? new KP()
                      : ("zone.js" === n ? void 0 : n) || new G(t)),
                  e
                );
              })(
                i?.ngZone,
                (function Ww(n) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!n || !n.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!n || !n.ngZoneRunCoalescing) || !1,
                  };
                })(i)
              ),
              o = [{ provide: G, useValue: r }];
            return r.run(() => {
              const s = ze.create({
                  providers: o,
                  parent: this.injector,
                  name: e.moduleType.name,
                }),
                a = e.create(s),
                l = a.injector.get(vr, null);
              if (!l) throw new S(402, !1);
              return (
                r.runOutsideAngular(() => {
                  const c = r.onError.subscribe({
                    next: (u) => {
                      l.handleError(u);
                    },
                  });
                  a.onDestroy(() => {
                    Vc(this._modules, a), c.unsubscribe();
                  });
                }),
                (function Yw(n, t, e) {
                  try {
                    const i = e();
                    return wa(i)
                      ? i.catch((r) => {
                          throw (
                            (t.runOutsideAngular(() => n.handleError(r)), r)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (t.runOutsideAngular(() => n.handleError(i)), i);
                  }
                })(l, r, () => {
                  const c = a.injector.get(Pc);
                  return (
                    c.runInitializers(),
                    c.donePromise.then(
                      () => (
                        (function wC(n) {
                          rn(n, "Expected localeId to be defined"),
                            "string" == typeof n &&
                              (CC = n.toLowerCase().replace(/_/g, "-"));
                        })(a.injector.get(_i, hs) || hs),
                        this._moduleDoBootstrap(a),
                        a
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, i = []) {
            const r = Kw({}, i);
            return (function QP(n, t, e) {
              const i = new ep(e);
              return Promise.resolve(i);
            })(0, 0, e).then((o) => this.bootstrapModuleFactory(o, r));
          }
          _moduleDoBootstrap(e) {
            const i = e.injector.get(ys);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((r) => i.bootstrap(r));
            else {
              if (!e.instance.ngDoBootstrap) throw new S(403, !1);
              e.instance.ngDoBootstrap(i);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new S(404, !1);
            this._modules.slice().forEach((i) => i.destroy()),
              this._destroyListeners.forEach((i) => i());
            const e = this._injector.get(Cp, null);
            e && (e.forEach((i) => i()), e.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(ze));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "platform" })),
          n
        );
      })();
      function Kw(n, t) {
        return Array.isArray(t) ? t.reduce(Kw, n) : { ...n, ...t };
      }
      let ys = (() => {
        class n {
          constructor(e, i, r) {
            (this._zone = e),
              (this._injector = i),
              (this._exceptionHandler = r),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const o = new Oe((a) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    a.next(this._stable), a.complete();
                  });
              }),
              s = new Oe((a) => {
                let l;
                this._zone.runOutsideAngular(() => {
                  l = this._zone.onStable.subscribe(() => {
                    G.assertNotInAngularZone(),
                      mp(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), a.next(!0));
                      });
                  });
                });
                const c = this._zone.onUnstable.subscribe(() => {
                  G.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        a.next(!1);
                      }));
                });
                return () => {
                  l.unsubscribe(), c.unsubscribe();
                };
              });
            this.isStable = hr(
              o,
              s.pipe(
                (function T_(n = {}) {
                  const {
                    connector: t = () => new V(),
                    resetOnError: e = !0,
                    resetOnComplete: i = !0,
                    resetOnRefCountZero: r = !0,
                  } = n;
                  return (o) => {
                    let s,
                      a,
                      l,
                      c = 0,
                      u = !1,
                      d = !1;
                    const f = () => {
                        a?.unsubscribe(), (a = void 0);
                      },
                      p = () => {
                        f(), (s = l = void 0), (u = d = !1);
                      },
                      _ = () => {
                        const y = s;
                        p(), y?.unsubscribe();
                      };
                    return Ze((y, w) => {
                      c++, !d && !u && f();
                      const D = (l = l ?? t());
                      w.add(() => {
                        c--, 0 === c && !d && !u && (a = qd(_, r));
                      }),
                        D.subscribe(w),
                        !s &&
                          c > 0 &&
                          ((s = new $s({
                            next: (A) => D.next(A),
                            error: (A) => {
                              (d = !0), f(), (a = qd(p, e, A)), D.error(A);
                            },
                            complete: () => {
                              (u = !0), f(), (a = qd(p, i)), D.complete();
                            },
                          })),
                          zt(y).subscribe(s));
                    })(o);
                  };
                })()
              )
            );
          }
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          bootstrap(e, i) {
            const r = e instanceof Zv;
            if (!this._injector.get(Pc).done)
              throw (
                (!r &&
                  (function gs(n) {
                    const t = Re(n) || Pt(n) || Nt(n);
                    return null !== t && t.standalone;
                  })(e),
                new S(405, false))
              );
            let s;
            (s = r ? e : this._injector.get(Wr).resolveComponentFactory(e)),
              this.componentTypes.push(s.componentType);
            const a = (function XP(n) {
                return n.isBoundToModule;
              })(s)
                ? void 0
                : this._injector.get(to),
              c = s.create(ze.NULL, [], i || s.selector, a),
              u = c.location.nativeElement,
              d = c.injector.get(jw, null);
            return (
              d?.registerApplication(u),
              c.onDestroy(() => {
                this.detachView(c.hostView),
                  Vc(this.components, c),
                  d?.unregisterApplication(u);
              }),
              this._loadComponent(c),
              c
            );
          }
          tick() {
            if (this._runningTick) throw new S(101, !1);
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
            } catch (e) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(e)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const i = e;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(e) {
            const i = e;
            Vc(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView),
              this.tick(),
              this.components.push(e),
              this._injector
                .get(Pw, [])
                .concat(this._bootstrapListeners)
                .forEach((r) => r(e));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((e) => e()),
                  this._views.slice().forEach((e) => e.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(e) {
            return (
              this._destroyListeners.push(e),
              () => Vc(this._destroyListeners, e)
            );
          }
          destroy() {
            if (this._destroyed) throw new S(406, !1);
            const e = this._injector;
            e.destroy && !e.destroyed && e.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(G), b(_r), b(vr));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function Vc(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      let Qw = !0,
        st = (() => {
          class n {}
          return (n.__NG_ELEMENT_ID__ = oN), n;
        })();
      function oN(n) {
        return (function sN(n, t, e) {
          if (Hl(n) && !e) {
            const i = an(n.index, t);
            return new ga(i, i);
          }
          return 47 & n.type ? new ga(t[16], t) : null;
        })(ft(), T(), 16 == (16 & n));
      }
      class n0 {
        constructor() {}
        supports(t) {
          return va(t);
        }
        create(t) {
          return new hN(t);
        }
      }
      const dN = (n, t) => t;
      class hN {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || dN);
        }
        forEachItem(t) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) t(e);
        }
        forEachOperation(t) {
          let e = this._itHead,
            i = this._removalsHead,
            r = 0,
            o = null;
          for (; e || i; ) {
            const s = !i || (e && e.currentIndex < o0(i, r, o)) ? e : i,
              a = o0(s, r, o),
              l = s.currentIndex;
            if (s === i) r--, (i = i._nextRemoved);
            else if (((e = e._next), null == s.previousIndex)) r++;
            else {
              o || (o = []);
              const c = a - r,
                u = l - r;
              if (c != u) {
                for (let f = 0; f < c; f++) {
                  const p = f < o.length ? o[f] : (o[f] = 0),
                    _ = p + f;
                  u <= _ && _ < c && (o[f] = p + 1);
                }
                o[s.previousIndex] = u - c;
              }
            }
            a !== l && t(s, a, l);
          }
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachMovedItem(t) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        forEachIdentityChange(t) {
          let e;
          for (
            e = this._identityChangesHead;
            null !== e;
            e = e._nextIdentityChange
          )
            t(e);
        }
        diff(t) {
          if ((null == t && (t = []), !va(t))) throw new S(900, !1);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let r,
            o,
            s,
            e = this._itHead,
            i = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let a = 0; a < this.length; a++)
              (o = t[a]),
                (s = this._trackByFn(a, o)),
                null !== e && Object.is(e.trackById, s)
                  ? (i && (e = this._verifyReinsertion(e, o, s, a)),
                    Object.is(e.item, o) || this._addIdentityChange(e, o))
                  : ((e = this._mismatch(e, o, s, a)), (i = !0)),
                (e = e._next);
          } else
            (r = 0),
              (function jR(n, t) {
                if (Array.isArray(n))
                  for (let e = 0; e < n.length; e++) t(n[e]);
                else {
                  const e = n[Qr()]();
                  let i;
                  for (; !(i = e.next()).done; ) t(i.value);
                }
              })(t, (a) => {
                (s = this._trackByFn(r, a)),
                  null !== e && Object.is(e.trackById, s)
                    ? (i && (e = this._verifyReinsertion(e, a, s, r)),
                      Object.is(e.item, a) || this._addIdentityChange(e, a))
                    : ((e = this._mismatch(e, a, s, r)), (i = !0)),
                  (e = e._next),
                  r++;
              }),
              (this.length = r);
          return this._truncate(e), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, e, i, r) {
          let o;
          return (
            null === t ? (o = this._itTail) : ((o = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._reinsertAfter(t, o, r))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, r))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._moveAfter(t, o, r))
              : (t = this._addAfter(new fN(e, i), o, r)),
            t
          );
        }
        _verifyReinsertion(t, e, i, r) {
          let o =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== o
              ? (t = this._reinsertAfter(o, t._prev, r))
              : t.currentIndex != r &&
                ((t.currentIndex = r), this._addToMoves(t, r)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const e = t._next;
            this._addToRemovals(this._unlink(t)), (t = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, e, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const r = t._prevRemoved,
            o = t._nextRemoved;
          return (
            null === r ? (this._removalsHead = o) : (r._nextRemoved = o),
            null === o ? (this._removalsTail = r) : (o._prevRemoved = r),
            this._insertAfter(t, e, i),
            this._addToMoves(t, i),
            t
          );
        }
        _moveAfter(t, e, i) {
          return (
            this._unlink(t),
            this._insertAfter(t, e, i),
            this._addToMoves(t, i),
            t
          );
        }
        _addAfter(t, e, i) {
          return (
            this._insertAfter(t, e, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, e, i) {
          const r = null === e ? this._itHead : e._next;
          return (
            (t._next = r),
            (t._prev = e),
            null === r ? (this._itTail = t) : (r._prev = t),
            null === e ? (this._itHead = t) : (e._next = t),
            null === this._linkedRecords && (this._linkedRecords = new r0()),
            this._linkedRecords.put(t),
            (t.currentIndex = i),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const e = t._prev,
            i = t._next;
          return (
            null === e ? (this._itHead = i) : (e._next = i),
            null === i ? (this._itTail = e) : (i._prev = e),
            t
          );
        }
        _addToMoves(t, e) {
          return (
            t.previousIndex === e ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new r0()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, e) {
          return (
            (t.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class fN {
        constructor(t, e) {
          (this.item = t),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class pN {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, e) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === e || e <= i.currentIndex) &&
              Object.is(i.trackById, t)
            )
              return i;
          return null;
        }
        remove(t) {
          const e = t._prevDup,
            i = t._nextDup;
          return (
            null === e ? (this._head = i) : (e._nextDup = i),
            null === i ? (this._tail = e) : (i._prevDup = e),
            null === this._head
          );
        }
      }
      class r0 {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const e = t.trackById;
          let i = this.map.get(e);
          i || ((i = new pN()), this.map.set(e, i)), i.add(t);
        }
        get(t, e) {
          const r = this.map.get(t);
          return r ? r.get(t, e) : null;
        }
        remove(t) {
          const e = t.trackById;
          return this.map.get(e).remove(t) && this.map.delete(e), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function o0(n, t, e) {
        const i = n.previousIndex;
        if (null === i) return i;
        let r = 0;
        return e && i < e.length && (r = e[i]), i + t + r;
      }
      class s0 {
        constructor() {}
        supports(t) {
          return t instanceof Map || $f(t);
        }
        create() {
          return new mN();
        }
      }
      class mN {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) t(e);
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachChangedItem(t) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || $f(t))) throw new S(900, !1);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (i, r) => {
              if (e && e.key === r)
                this._maybeAddToChanges(e, i),
                  (this._appendAfter = e),
                  (e = e._next);
              else {
                const o = this._getOrCreateRecordForKey(r, i);
                e = this._insertBeforeOrAppend(e, o);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let i = e; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, e) {
          if (t) {
            const i = t._prev;
            return (
              (e._next = t),
              (e._prev = i),
              (t._prev = e),
              i && (i._next = e),
              t === this._mapHead && (this._mapHead = e),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = e), (e._prev = this._appendAfter))
              : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(t, e) {
          if (this._records.has(t)) {
            const r = this._records.get(t);
            this._maybeAddToChanges(r, e);
            const o = r._prev,
              s = r._next;
            return (
              o && (o._next = s),
              s && (s._prev = o),
              (r._next = null),
              (r._prev = null),
              r
            );
          }
          const i = new gN(t);
          return (
            this._records.set(t, i),
            (i.currentValue = e),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, e) {
          Object.is(e, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = e),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, e) {
          t instanceof Map
            ? t.forEach(e)
            : Object.keys(t).forEach((i) => e(t[i], i));
        }
      }
      class gN {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function a0() {
        return new io([new n0()]);
      }
      let io = (() => {
        class n {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (null != i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new n(e);
          }
          static extend(e) {
            return {
              provide: n,
              useFactory: (i) => n.create(e, i || a0()),
              deps: [[n, new qo(), new li()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (null != i) return i;
            throw new S(901, !1);
          }
        }
        return (n.ɵprov = k({ token: n, providedIn: "root", factory: a0 })), n;
      })();
      function l0() {
        return new Fa([new s0()]);
      }
      let Fa = (() => {
        class n {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new n(e);
          }
          static extend(e) {
            return {
              provide: n,
              useFactory: (i) => n.create(e, i || l0()),
              deps: [[n, new qo(), new li()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (i) return i;
            throw new S(901, !1);
          }
        }
        return (n.ɵprov = k({ token: n, providedIn: "root", factory: l0 })), n;
      })();
      const yN = zw(null, "core", []);
      let bN = (() => {
        class n {
          constructor(e) {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(ys));
          }),
          (n.ɵmod = Q({ type: n })),
          (n.ɵinj = Z({})),
          n
        );
      })();
      function Gi(n) {
        return "boolean" == typeof n ? n : null != n && "false" !== n;
      }
      let Hc = null;
      function vi() {
        return Hc;
      }
      const ee = new x("DocumentToken");
      let Uc = (() => {
        class n {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = k({
            token: n,
            factory: function () {
              return (function MN() {
                return b(c0);
              })();
            },
            providedIn: "platform",
          })),
          n
        );
      })();
      const EN = new x("Location Initialized");
      let c0 = (() => {
        class n extends Uc {
          constructor(e) {
            super(), (this._doc = e), this._init();
          }
          _init() {
            (this.location = window.location), (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return vi().getBaseHref(this._doc);
          }
          onPopState(e) {
            const i = vi().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("popstate", e, !1),
              () => i.removeEventListener("popstate", e)
            );
          }
          onHashChange(e) {
            const i = vi().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("hashchange", e, !1),
              () => i.removeEventListener("hashchange", e)
            );
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(e) {
            this.location.pathname = e;
          }
          pushState(e, i, r) {
            u0() ? this._history.pushState(e, i, r) : (this.location.hash = r);
          }
          replaceState(e, i, r) {
            u0()
              ? this._history.replaceState(e, i, r)
              : (this.location.hash = r);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(e = 0) {
            this._history.go(e);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(ee));
          }),
          (n.ɵprov = k({
            token: n,
            factory: function () {
              return (function SN() {
                return new c0(b(ee));
              })();
            },
            providedIn: "platform",
          })),
          n
        );
      })();
      function u0() {
        return !!window.history.pushState;
      }
      function Tp(n, t) {
        if (0 == n.length) return t;
        if (0 == t.length) return n;
        let e = 0;
        return (
          n.endsWith("/") && e++,
          t.startsWith("/") && e++,
          2 == e ? n + t.substring(1) : 1 == e ? n + t : n + "/" + t
        );
      }
      function d0(n) {
        const t = n.match(/#|\?|$/),
          e = (t && t.index) || n.length;
        return n.slice(0, e - ("/" === n[e - 1] ? 1 : 0)) + n.slice(e);
      }
      function Wi(n) {
        return n && "?" !== n[0] ? "?" + n : n;
      }
      let ro = (() => {
        class n {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = k({
            token: n,
            factory: function () {
              return (function TN() {
                const n = b(ee).location;
                return new f0(b(Uc), (n && n.origin) || "");
              })();
            },
            providedIn: "root",
          })),
          n
        );
      })();
      const h0 = new x("appBaseHref");
      let f0 = (() => {
          class n extends ro {
            constructor(e, i) {
              if (
                (super(),
                (this._platformLocation = e),
                (this._removeListenerFns = []),
                null == i && (i = this._platformLocation.getBaseHrefFromDOM()),
                null == i)
              )
                throw new Error(
                  "No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document."
                );
              this._baseHref = i;
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return Tp(this._baseHref, e);
            }
            path(e = !1) {
              const i =
                  this._platformLocation.pathname +
                  Wi(this._platformLocation.search),
                r = this._platformLocation.hash;
              return r && e ? `${i}${r}` : i;
            }
            pushState(e, i, r, o) {
              const s = this.prepareExternalUrl(r + Wi(o));
              this._platformLocation.pushState(e, i, s);
            }
            replaceState(e, i, r, o) {
              const s = this.prepareExternalUrl(r + Wi(o));
              this._platformLocation.replaceState(e, i, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(Uc), b(h0, 8));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        xN = (() => {
          class n extends ro {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != i && (this._baseHref = i);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let i = this._platformLocation.hash;
              return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i;
            }
            prepareExternalUrl(e) {
              const i = Tp(this._baseHref, e);
              return i.length > 0 ? "#" + i : i;
            }
            pushState(e, i, r, o) {
              let s = this.prepareExternalUrl(r + Wi(o));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.pushState(e, i, s);
            }
            replaceState(e, i, r, o) {
              let s = this.prepareExternalUrl(r + Wi(o));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, i, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(Uc), b(h0, 8));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Pa = (() => {
          class n {
            constructor(e) {
              (this._subject = new se()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = e);
              const i = this._locationStrategy.getBaseHref();
              (this._baseHref = d0(p0(i))),
                this._locationStrategy.onPopState((r) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: r.state,
                    type: r.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(e = !1) {
              return this.normalize(this._locationStrategy.path(e));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(e, i = "") {
              return this.path() == this.normalize(e + Wi(i));
            }
            normalize(e) {
              return n.stripTrailingSlash(
                (function IN(n, t) {
                  return n && t.startsWith(n) ? t.substring(n.length) : t;
                })(this._baseHref, p0(e))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._locationStrategy.prepareExternalUrl(e)
              );
            }
            go(e, i = "", r = null) {
              this._locationStrategy.pushState(r, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Wi(i)),
                  r
                );
            }
            replaceState(e, i = "", r = null) {
              this._locationStrategy.replaceState(r, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Wi(i)),
                  r
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(e = 0) {
              this._locationStrategy.historyGo?.(e);
            }
            onUrlChange(e) {
              return (
                this._urlChangeListeners.push(e),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  })),
                () => {
                  const i = this._urlChangeListeners.indexOf(e);
                  this._urlChangeListeners.splice(i, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(e = "", i) {
              this._urlChangeListeners.forEach((r) => r(e, i));
            }
            subscribe(e, i, r) {
              return this._subject.subscribe({
                next: e,
                error: i,
                complete: r,
              });
            }
          }
          return (
            (n.normalizeQueryParams = Wi),
            (n.joinWithSlash = Tp),
            (n.stripTrailingSlash = d0),
            (n.ɵfac = function (e) {
              return new (e || n)(b(ro));
            }),
            (n.ɵprov = k({
              token: n,
              factory: function () {
                return (function AN() {
                  return new Pa(b(ro));
                })();
              },
              providedIn: "root",
            })),
            n
          );
        })();
      function p0(n) {
        return n.replace(/\/index.html$/, "");
      }
      function D0(n, t) {
        t = encodeURIComponent(t);
        for (const e of n.split(";")) {
          const i = e.indexOf("="),
            [r, o] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
          if (r.trim() === t) return decodeURIComponent(o);
        }
        return null;
      }
      let Lp = (() => {
        class n {
          constructor(e, i, r, o) {
            (this._iterableDiffers = e),
              (this._keyValueDiffers = i),
              (this._ngEl = r),
              (this._renderer = o),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._initialClasses = []),
              (this._rawClass = null);
          }
          set klass(e) {
            this._removeClasses(this._initialClasses),
              (this._initialClasses =
                "string" == typeof e ? e.split(/\s+/) : []),
              this._applyClasses(this._initialClasses),
              this._applyClasses(this._rawClass);
          }
          set ngClass(e) {
            this._removeClasses(this._rawClass),
              this._applyClasses(this._initialClasses),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._rawClass = "string" == typeof e ? e.split(/\s+/) : e),
              this._rawClass &&
                (va(this._rawClass)
                  ? (this._iterableDiffer = this._iterableDiffers
                      .find(this._rawClass)
                      .create())
                  : (this._keyValueDiffer = this._keyValueDiffers
                      .find(this._rawClass)
                      .create()));
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const e = this._iterableDiffer.diff(this._rawClass);
              e && this._applyIterableChanges(e);
            } else if (this._keyValueDiffer) {
              const e = this._keyValueDiffer.diff(this._rawClass);
              e && this._applyKeyValueChanges(e);
            }
          }
          _applyKeyValueChanges(e) {
            e.forEachAddedItem((i) => this._toggleClass(i.key, i.currentValue)),
              e.forEachChangedItem((i) =>
                this._toggleClass(i.key, i.currentValue)
              ),
              e.forEachRemovedItem((i) => {
                i.previousValue && this._toggleClass(i.key, !1);
              });
          }
          _applyIterableChanges(e) {
            e.forEachAddedItem((i) => {
              if ("string" != typeof i.item)
                throw new Error(
                  `NgClass can only toggle CSS classes expressed as strings, got ${Ve(
                    i.item
                  )}`
                );
              this._toggleClass(i.item, !0);
            }),
              e.forEachRemovedItem((i) => this._toggleClass(i.item, !1));
          }
          _applyClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((i) => this._toggleClass(i, !0))
                : Object.keys(e).forEach((i) => this._toggleClass(i, !!e[i])));
          }
          _removeClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((i) => this._toggleClass(i, !1))
                : Object.keys(e).forEach((i) => this._toggleClass(i, !1)));
          }
          _toggleClass(e, i) {
            (e = e.trim()) &&
              e.split(/\s+/g).forEach((r) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, r)
                  : this._renderer.removeClass(this._ngEl.nativeElement, r);
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(io), h(Fa), h(ie), h(ji));
          }),
          (n.ɵdir = R({
            type: n,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
            standalone: !0,
          })),
          n
        );
      })();
      class pL {
        constructor(t, e, i, r) {
          (this.$implicit = t),
            (this.ngForOf = e),
            (this.index = i),
            (this.count = r);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let Zt = (() => {
        class n {
          constructor(e, i, r) {
            (this._viewContainer = e),
              (this._template = i),
              (this._differs = r),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            this._trackByFn = e;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const e = this._ngForOf;
              !this._differ &&
                e &&
                (this._differ = this._differs
                  .find(e)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const i = this._viewContainer;
            e.forEachOperation((r, o, s) => {
              if (null == r.previousIndex)
                i.createEmbeddedView(
                  this._template,
                  new pL(r.item, this._ngForOf, -1, -1),
                  null === s ? void 0 : s
                );
              else if (null == s) i.remove(null === o ? void 0 : o);
              else if (null !== o) {
                const a = i.get(o);
                i.move(a, s), S0(a, r);
              }
            });
            for (let r = 0, o = i.length; r < o; r++) {
              const a = i.get(r).context;
              (a.index = r), (a.count = o), (a.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((r) => {
              S0(i.get(r.currentIndex), r);
            });
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(Rt), h(fn), h(io));
          }),
          (n.ɵdir = R({
            type: n,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
            standalone: !0,
          })),
          n
        );
      })();
      function S0(n, t) {
        n.context.$implicit = t.item;
      }
      let ct = (() => {
        class n {
          constructor(e, i) {
            (this._viewContainer = e),
              (this._context = new gL()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            T0("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            T0("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(Rt), h(fn));
          }),
          (n.ɵdir = R({
            type: n,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          })),
          n
        );
      })();
      class gL {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function T0(n, t) {
        if (t && !t.createEmbeddedView)
          throw new Error(
            `${n} must be a TemplateRef, but received '${Ve(t)}'.`
          );
      }
      class Vp {
        constructor(t, e) {
          (this._viewContainerRef = t),
            (this._templateRef = e),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(t) {
          t && !this._created
            ? this.create()
            : !t && this._created && this.destroy();
        }
      }
      let Va = (() => {
          class n {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews || (this._defaultViews = []),
                this._defaultViews.push(e);
            }
            _matchCase(e) {
              const i = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || i),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                i
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (let i = 0; i < this._defaultViews.length; i++)
                  this._defaultViews[i].enforceState(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
              standalone: !0,
            })),
            n
          );
        })(),
        Bp = (() => {
          class n {
            constructor(e, i, r) {
              (this.ngSwitch = r), r._addCase(), (this._view = new Vp(e, i));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(Rt), h(fn), h(Va, 9));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
              standalone: !0,
            })),
            n
          );
        })(),
        x0 = (() => {
          class n {
            constructor(e, i, r) {
              r._addDefault(new Vp(e, i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(Rt), h(fn), h(Va, 9));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [["", "ngSwitchDefault", ""]],
              standalone: !0,
            })),
            n
          );
        })();
      class bL {
        createSubscription(t, e) {
          return t.subscribe({
            next: e,
            error: (i) => {
              throw i;
            },
          });
        }
        dispose(t) {
          t.unsubscribe();
        }
      }
      class CL {
        createSubscription(t, e) {
          return t.then(e, (i) => {
            throw i;
          });
        }
        dispose(t) {}
      }
      const wL = new CL(),
        DL = new bL();
      let Dr = (() => {
          class n {
            constructor(e) {
              (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null),
                (this._strategy = null),
                (this._ref = e);
            }
            ngOnDestroy() {
              this._subscription && this._dispose(), (this._ref = null);
            }
            transform(e) {
              return this._obj
                ? e !== this._obj
                  ? (this._dispose(), this.transform(e))
                  : this._latestValue
                : (e && this._subscribe(e), this._latestValue);
            }
            _subscribe(e) {
              (this._obj = e),
                (this._strategy = this._selectStrategy(e)),
                (this._subscription = this._strategy.createSubscription(
                  e,
                  (i) => this._updateLatestValue(e, i)
                ));
            }
            _selectStrategy(e) {
              if (wa(e)) return wL;
              if (Ib(e)) return DL;
              throw (function Zn(n, t) {
                return new S(2100, !1);
              })();
            }
            _dispose() {
              this._strategy.dispose(this._subscription),
                (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null);
            }
            _updateLatestValue(e, i) {
              e === this._obj &&
                ((this._latestValue = i), this._ref.markForCheck());
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(st, 16));
            }),
            (n.ɵpipe = qt({
              name: "async",
              type: n,
              pure: !1,
              standalone: !0,
            })),
            n
          );
        })(),
        yi = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({})),
            n
          );
        })();
      const k0 = "browser";
      let zL = (() => {
        class n {}
        return (
          (n.ɵprov = k({
            token: n,
            providedIn: "root",
            factory: () => new qL(b(ee), window),
          })),
          n
        );
      })();
      class qL {
        constructor(t, e) {
          (this.document = t), (this.window = e), (this.offset = () => [0, 0]);
        }
        setOffset(t) {
          this.offset = Array.isArray(t) ? () => t : t;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(t) {
          this.supportsScrolling() && this.window.scrollTo(t[0], t[1]);
        }
        scrollToAnchor(t) {
          if (!this.supportsScrolling()) return;
          const e = (function GL(n, t) {
            const e = n.getElementById(t) || n.getElementsByName(t)[0];
            if (e) return e;
            if (
              "function" == typeof n.createTreeWalker &&
              n.body &&
              (n.body.createShadowRoot || n.body.attachShadow)
            ) {
              const i = n.createTreeWalker(n.body, NodeFilter.SHOW_ELEMENT);
              let r = i.currentNode;
              for (; r; ) {
                const o = r.shadowRoot;
                if (o) {
                  const s =
                    o.getElementById(t) || o.querySelector(`[name="${t}"]`);
                  if (s) return s;
                }
                r = i.nextNode();
              }
            }
            return null;
          })(this.document, t);
          e && (this.scrollToElement(e), e.focus());
        }
        setHistoryScrollRestoration(t) {
          if (this.supportScrollRestoration()) {
            const e = this.window.history;
            e && e.scrollRestoration && (e.scrollRestoration = t);
          }
        }
        scrollToElement(t) {
          const e = t.getBoundingClientRect(),
            i = e.left + this.window.pageXOffset,
            r = e.top + this.window.pageYOffset,
            o = this.offset();
          this.window.scrollTo(i - o[0], r - o[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const t =
              R0(this.window.history) ||
              R0(Object.getPrototypeOf(this.window.history));
            return !(!t || (!t.writable && !t.set));
          } catch {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      function R0(n) {
        return Object.getOwnPropertyDescriptor(n, "scrollRestoration");
      }
      class O0 {}
      class Up extends class WL extends class DN {} {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      } {
        static makeCurrent() {
          !(function wN(n) {
            Hc || (Hc = n);
          })(new Up());
        }
        onAndCancel(t, e, i) {
          return (
            t.addEventListener(e, i, !1),
            () => {
              t.removeEventListener(e, i, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          t.parentNode && t.parentNode.removeChild(t);
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return "window" === e
            ? window
            : "document" === e
            ? t
            : "body" === e
            ? t.body
            : null;
        }
        getBaseHref(t) {
          const e = (function YL() {
            return (
              (Ba = Ba || document.querySelector("base")),
              Ba ? Ba.getAttribute("href") : null
            );
          })();
          return null == e
            ? null
            : (function KL(n) {
                (Xc = Xc || document.createElement("a")),
                  Xc.setAttribute("href", n);
                const t = Xc.pathname;
                return "/" === t.charAt(0) ? t : `/${t}`;
              })(e);
        }
        resetBaseElement() {
          Ba = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(t) {
          return D0(document.cookie, t);
        }
      }
      let Xc,
        Ba = null;
      const F0 = new x("TRANSITION_ID"),
        QL = [
          {
            provide: Fc,
            useFactory: function ZL(n, t, e) {
              return () => {
                e.get(Pc).donePromise.then(() => {
                  const i = vi(),
                    r = t.querySelectorAll(`style[ng-transition="${n}"]`);
                  for (let o = 0; o < r.length; o++) i.remove(r[o]);
                });
              };
            },
            deps: [F0, ee, ze],
            multi: !0,
          },
        ];
      let JL = (() => {
        class n {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Jc = new x("EventManagerPlugins");
      let eu = (() => {
        class n {
          constructor(e, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              e.forEach((r) => (r.manager = this)),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, i, r) {
            return this._findPluginFor(i).addEventListener(e, i, r);
          }
          addGlobalEventListener(e, i, r) {
            return this._findPluginFor(i).addGlobalEventListener(e, i, r);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            const i = this._eventNameToPlugin.get(e);
            if (i) return i;
            const r = this._plugins;
            for (let o = 0; o < r.length; o++) {
              const s = r[o];
              if (s.supports(e)) return this._eventNameToPlugin.set(e, s), s;
            }
            throw new Error(`No event manager plugin found for event ${e}`);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(Jc), b(G));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class P0 {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, i) {
          const r = vi().getGlobalEventTarget(this._doc, t);
          if (!r)
            throw new Error(`Unsupported event target ${r} for event ${e}`);
          return this.addEventListener(r, e, i);
        }
      }
      let N0 = (() => {
          class n {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(e) {
              const i = new Set();
              e.forEach((r) => {
                this._stylesSet.has(r) || (this._stylesSet.add(r), i.add(r));
              }),
                this.onStylesAdded(i);
            }
            onStylesAdded(e) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        ja = (() => {
          class n extends N0 {
            constructor(e) {
              super(),
                (this._doc = e),
                (this._hostNodes = new Map()),
                this._hostNodes.set(e.head, []);
            }
            _addStylesToHost(e, i, r) {
              e.forEach((o) => {
                const s = this._doc.createElement("style");
                (s.textContent = o), r.push(i.appendChild(s));
              });
            }
            addHost(e) {
              const i = [];
              this._addStylesToHost(this._stylesSet, e, i),
                this._hostNodes.set(e, i);
            }
            removeHost(e) {
              const i = this._hostNodes.get(e);
              i && i.forEach(L0), this._hostNodes.delete(e);
            }
            onStylesAdded(e) {
              this._hostNodes.forEach((i, r) => {
                this._addStylesToHost(e, r, i);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((e) => e.forEach(L0));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ee));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      function L0(n) {
        vi().remove(n);
      }
      const $p = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        zp = /%COMP%/g;
      function tu(n, t, e) {
        for (let i = 0; i < t.length; i++) {
          let r = t[i];
          Array.isArray(r) ? tu(n, r, e) : ((r = r.replace(zp, n)), e.push(r));
        }
        return e;
      }
      function j0(n) {
        return (t) => {
          if ("__ngUnwrap__" === t) return n;
          !1 === n(t) && (t.preventDefault(), (t.returnValue = !1));
        };
      }
      let nu = (() => {
        class n {
          constructor(e, i, r) {
            (this.eventManager = e),
              (this.sharedStylesHost = i),
              (this.appId = r),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new qp(e));
          }
          createRenderer(e, i) {
            if (!e || !i) return this.defaultRenderer;
            switch (i.encapsulation) {
              case jn.Emulated: {
                let r = this.rendererByCompId.get(i.id);
                return (
                  r ||
                    ((r = new oV(
                      this.eventManager,
                      this.sharedStylesHost,
                      i,
                      this.appId
                    )),
                    this.rendererByCompId.set(i.id, r)),
                  r.applyToHost(e),
                  r
                );
              }
              case 1:
              case jn.ShadowDom:
                return new sV(this.eventManager, this.sharedStylesHost, e, i);
              default:
                if (!this.rendererByCompId.has(i.id)) {
                  const r = tu(i.id, i.styles, []);
                  this.sharedStylesHost.addStyles(r),
                    this.rendererByCompId.set(i.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(eu), b(ja), b(vs));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class qp {
        constructor(t) {
          (this.eventManager = t),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(t, e) {
          return e
            ? document.createElementNS($p[e] || e, t)
            : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          (U0(t) ? t.content : t).appendChild(e);
        }
        insertBefore(t, e, i) {
          t && (U0(t) ? t.content : t).insertBefore(e, i);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let i = "string" == typeof t ? document.querySelector(t) : t;
          if (!i)
            throw new Error(`The selector "${t}" did not match any elements`);
          return e || (i.textContent = ""), i;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, i, r) {
          if (r) {
            e = r + ":" + e;
            const o = $p[r];
            o ? t.setAttributeNS(o, e, i) : t.setAttribute(e, i);
          } else t.setAttribute(e, i);
        }
        removeAttribute(t, e, i) {
          if (i) {
            const r = $p[i];
            r ? t.removeAttributeNS(r, e) : t.removeAttribute(`${i}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, i, r) {
          r & (Wt.DashCase | Wt.Important)
            ? t.style.setProperty(e, i, r & Wt.Important ? "important" : "")
            : (t.style[e] = i);
        }
        removeStyle(t, e, i) {
          i & Wt.DashCase ? t.style.removeProperty(e) : (t.style[e] = "");
        }
        setProperty(t, e, i) {
          t[e] = i;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, i) {
          return "string" == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, j0(i))
            : this.eventManager.addEventListener(t, e, j0(i));
        }
      }
      function U0(n) {
        return "TEMPLATE" === n.tagName && void 0 !== n.content;
      }
      class oV extends qp {
        constructor(t, e, i, r) {
          super(t), (this.component = i);
          const o = tu(r + "-" + i.id, i.styles, []);
          e.addStyles(o),
            (this.contentAttr = (function nV(n) {
              return "_ngcontent-%COMP%".replace(zp, n);
            })(r + "-" + i.id)),
            (this.hostAttr = (function iV(n) {
              return "_nghost-%COMP%".replace(zp, n);
            })(r + "-" + i.id));
        }
        applyToHost(t) {
          super.setAttribute(t, this.hostAttr, "");
        }
        createElement(t, e) {
          const i = super.createElement(t, e);
          return super.setAttribute(i, this.contentAttr, ""), i;
        }
      }
      class sV extends qp {
        constructor(t, e, i, r) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const o = tu(r.id, r.styles, []);
          for (let s = 0; s < o.length; s++) {
            const a = document.createElement("style");
            (a.textContent = o[s]), this.shadowRoot.appendChild(a);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, i) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, i);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(t))
          );
        }
      }
      let aV = (() => {
        class n extends P0 {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, i, r) {
            return (
              e.addEventListener(i, r, !1),
              () => this.removeEventListener(e, i, r)
            );
          }
          removeEventListener(e, i, r) {
            return e.removeEventListener(i, r);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(ee));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const $0 = ["alt", "control", "meta", "shift"],
        cV = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        z0 = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        uV = {
          alt: (n) => n.altKey,
          control: (n) => n.ctrlKey,
          meta: (n) => n.metaKey,
          shift: (n) => n.shiftKey,
        };
      let dV = (() => {
        class n extends P0 {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return null != n.parseEventName(e);
          }
          addEventListener(e, i, r) {
            const o = n.parseEventName(i),
              s = n.eventCallback(o.fullKey, r, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => vi().onAndCancel(e, o.domEventName, s));
          }
          static parseEventName(e) {
            const i = e.toLowerCase().split("."),
              r = i.shift();
            if (0 === i.length || ("keydown" !== r && "keyup" !== r))
              return null;
            const o = n._normalizeKey(i.pop());
            let s = "";
            if (
              ($0.forEach((l) => {
                const c = i.indexOf(l);
                c > -1 && (i.splice(c, 1), (s += l + "."));
              }),
              (s += o),
              0 != i.length || 0 === o.length)
            )
              return null;
            const a = {};
            return (a.domEventName = r), (a.fullKey = s), a;
          }
          static getEventFullKey(e) {
            let i = "",
              r = (function hV(n) {
                let t = n.key;
                if (null == t) {
                  if (((t = n.keyIdentifier), null == t)) return "Unidentified";
                  t.startsWith("U+") &&
                    ((t = String.fromCharCode(parseInt(t.substring(2), 16))),
                    3 === n.location && z0.hasOwnProperty(t) && (t = z0[t]));
                }
                return cV[t] || t;
              })(e);
            return (
              (r = r.toLowerCase()),
              " " === r ? (r = "space") : "." === r && (r = "dot"),
              $0.forEach((o) => {
                o != r && (0, uV[o])(e) && (i += o + ".");
              }),
              (i += r),
              i
            );
          }
          static eventCallback(e, i, r) {
            return (o) => {
              n.getEventFullKey(o) === e && r.runGuarded(() => i(o));
            };
          }
          static _normalizeKey(e) {
            return "esc" === e ? "escape" : e;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(ee));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const gV = zw(yN, "browser", [
          { provide: Nc, useValue: k0 },
          {
            provide: Fw,
            useValue: function fV() {
              Up.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: ee,
            useFactory: function mV() {
              return (
                (function MI(n) {
                  Ih = n;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        G0 = new x(""),
        W0 = [
          {
            provide: Lc,
            useClass: class XL {
              addToWindow(t) {
                (Fe.getAngularTestability = (i, r = !0) => {
                  const o = t.findTestabilityInTree(i, r);
                  if (null == o)
                    throw new Error("Could not find testability for element.");
                  return o;
                }),
                  (Fe.getAllAngularTestabilities = () =>
                    t.getAllTestabilities()),
                  (Fe.getAllAngularRootElements = () => t.getAllRootElements()),
                  Fe.frameworkStabilizers || (Fe.frameworkStabilizers = []),
                  Fe.frameworkStabilizers.push((i) => {
                    const r = Fe.getAllAngularTestabilities();
                    let o = r.length,
                      s = !1;
                    const a = function (l) {
                      (s = s || l), o--, 0 == o && i(s);
                    };
                    r.forEach(function (l) {
                      l.whenStable(a);
                    });
                  });
              }
              findTestabilityInTree(t, e, i) {
                return null == e
                  ? null
                  : t.getTestability(e) ??
                      (i
                        ? vi().isShadowRoot(e)
                          ? this.findTestabilityInTree(t, e.host, !0)
                          : this.findTestabilityInTree(t, e.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: jw, useClass: vp, deps: [G, yp, Lc] },
          { provide: vp, useClass: vp, deps: [G, yp, Lc] },
        ],
        Y0 = [
          { provide: Hh, useValue: "root" },
          {
            provide: vr,
            useFactory: function pV() {
              return new vr();
            },
            deps: [],
          },
          { provide: Jc, useClass: aV, multi: !0, deps: [ee, G, Nc] },
          { provide: Jc, useClass: dV, multi: !0, deps: [ee] },
          { provide: nu, useClass: nu, deps: [eu, ja, vs] },
          { provide: da, useExisting: nu },
          { provide: N0, useExisting: ja },
          { provide: ja, useClass: ja, deps: [ee] },
          { provide: eu, useClass: eu, deps: [Jc, G] },
          { provide: O0, useClass: JL, deps: [] },
          [],
        ];
      let K0 = (() => {
          class n {
            constructor(e) {}
            static withServerTransition(e) {
              return {
                ngModule: n,
                providers: [
                  { provide: vs, useValue: e.appId },
                  { provide: F0, useExisting: vs },
                  QL,
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(G0, 12));
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ providers: [...Y0, ...W0], imports: [yi, bN] })),
            n
          );
        })(),
        Z0 = (() => {
          class n {
            constructor(e) {
              this._doc = e;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(e) {
              this._doc.title = e || "";
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ee));
            }),
            (n.ɵprov = k({
              token: n,
              factory: function (e) {
                let i = null;
                return (
                  (i = e
                    ? new e()
                    : (function vV() {
                        return new Z0(b(ee));
                      })()),
                  i
                );
              },
              providedIn: "root",
            })),
            n
          );
        })();
      typeof window < "u" && window;
      class tD {}
      const Ki = "*";
      function Zi(n, t) {
        return { type: 7, name: n, definitions: t, options: {} };
      }
      function Qt(n, t = null) {
        return { type: 4, styles: t, timings: n };
      }
      function nD(n, t = null) {
        return { type: 3, steps: n, options: t };
      }
      function iD(n, t = null) {
        return { type: 2, steps: n, options: t };
      }
      function Ne(n) {
        return { type: 6, styles: n, offset: null };
      }
      function Xt(n, t, e) {
        return { type: 0, name: n, styles: t, options: e };
      }
      function Ut(n, t, e = null) {
        return { type: 1, expr: n, animation: t, options: e };
      }
      function Kp(n = null) {
        return { type: 9, options: n };
      }
      function Zp(n, t, e = null) {
        return { type: 11, selector: n, animation: t, options: e };
      }
      function rD(n) {
        Promise.resolve(null).then(n);
      }
      class Ha {
        constructor(t = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = t + e);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        onStart(t) {
          this._originalOnStartFns.push(t), this._onStartFns.push(t);
        }
        onDone(t) {
          this._originalOnDoneFns.push(t), this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          rD(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(t) {
          this._position = this.totalTime ? t * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class oD {
        constructor(t) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = t);
          let e = 0,
            i = 0,
            r = 0;
          const o = this.players.length;
          0 == o
            ? rD(() => this._onFinish())
            : this.players.forEach((s) => {
                s.onDone(() => {
                  ++e == o && this._onFinish();
                }),
                  s.onDestroy(() => {
                    ++i == o && this._onDestroy();
                  }),
                  s.onStart(() => {
                    ++r == o && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (s, a) => Math.max(s, a.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((t) => t.init());
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((t) => t()),
            (this._onStartFns = []));
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((t) => t.play());
        }
        pause() {
          this.players.forEach((t) => t.pause());
        }
        restart() {
          this.players.forEach((t) => t.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((t) => t.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((t) => t.destroy()),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((t) => t.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(t) {
          const e = t * this.totalTime;
          this.players.forEach((i) => {
            const r = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
            i.setPosition(r);
          });
        }
        getPosition() {
          const t = this.players.reduce(
            (e, i) => (null === e || i.totalTime > e.totalTime ? i : e),
            null
          );
          return null != t ? t.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((t) => {
            t.beforeDestroy && t.beforeDestroy();
          });
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      function sD(n) {
        return new S(3e3, !1);
      }
      function cB() {
        return typeof window < "u" && typeof window.document < "u";
      }
      function Xp() {
        return (
          typeof process < "u" &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function Er(n) {
        switch (n.length) {
          case 0:
            return new Ha();
          case 1:
            return n[0];
          default:
            return new oD(n);
        }
      }
      function aD(n, t, e, i, r = new Map(), o = new Map()) {
        const s = [],
          a = [];
        let l = -1,
          c = null;
        if (
          (i.forEach((u) => {
            const d = u.get("offset"),
              f = d == l,
              p = (f && c) || new Map();
            u.forEach((_, y) => {
              let w = y,
                D = _;
              if ("offset" !== y)
                switch (((w = t.normalizePropertyName(w, s)), D)) {
                  case "!":
                    D = r.get(y);
                    break;
                  case Ki:
                    D = o.get(y);
                    break;
                  default:
                    D = t.normalizeStyleValue(y, w, D, s);
                }
              p.set(w, D);
            }),
              f || a.push(p),
              (c = p),
              (l = d);
          }),
          s.length)
        )
          throw (function QV(n) {
            return new S(3502, !1);
          })();
        return a;
      }
      function Jp(n, t, e, i) {
        switch (t) {
          case "start":
            n.onStart(() => i(e && em(e, "start", n)));
            break;
          case "done":
            n.onDone(() => i(e && em(e, "done", n)));
            break;
          case "destroy":
            n.onDestroy(() => i(e && em(e, "destroy", n)));
        }
      }
      function em(n, t, e) {
        const o = tm(
            n.element,
            n.triggerName,
            n.fromState,
            n.toState,
            t || n.phaseName,
            e.totalTime ?? n.totalTime,
            !!e.disabled
          ),
          s = n._data;
        return null != s && (o._data = s), o;
      }
      function tm(n, t, e, i, r = "", o = 0, s) {
        return {
          element: n,
          triggerName: t,
          fromState: e,
          toState: i,
          phaseName: r,
          totalTime: o,
          disabled: !!s,
        };
      }
      function mn(n, t, e) {
        let i = n.get(t);
        return i || n.set(t, (i = e)), i;
      }
      function lD(n) {
        const t = n.indexOf(":");
        return [n.substring(1, t), n.slice(t + 1)];
      }
      let nm = (n, t) => !1,
        cD = (n, t, e) => [],
        uD = null;
      function im(n) {
        const t = n.parentNode || n.host;
        return t === uD ? null : t;
      }
      (Xp() || typeof Element < "u") &&
        (cB()
          ? ((uD = (() => document.documentElement)()),
            (nm = (n, t) => {
              for (; t; ) {
                if (t === n) return !0;
                t = im(t);
              }
              return !1;
            }))
          : (nm = (n, t) => n.contains(t)),
        (cD = (n, t, e) => {
          if (e) return Array.from(n.querySelectorAll(t));
          const i = n.querySelector(t);
          return i ? [i] : [];
        }));
      let oo = null,
        dD = !1;
      const hD = nm,
        fD = cD;
      let pD = (() => {
          class n {
            validateStyleProperty(e) {
              return (function dB(n) {
                oo ||
                  ((oo =
                    (function hB() {
                      return typeof document < "u" ? document.body : null;
                    })() || {}),
                  (dD = !!oo.style && "WebkitAppearance" in oo.style));
                let t = !0;
                return (
                  oo.style &&
                    !(function uB(n) {
                      return "ebkit" == n.substring(1, 6);
                    })(n) &&
                    ((t = n in oo.style),
                    !t &&
                      dD &&
                      (t =
                        "Webkit" + n.charAt(0).toUpperCase() + n.slice(1) in
                        oo.style)),
                  t
                );
              })(e);
            }
            matchesElement(e, i) {
              return !1;
            }
            containsElement(e, i) {
              return hD(e, i);
            }
            getParentElement(e) {
              return im(e);
            }
            query(e, i, r) {
              return fD(e, i, r);
            }
            computeStyle(e, i, r) {
              return r || "";
            }
            animate(e, i, r, o, s, a = [], l) {
              return new Ha(r, o);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        rm = (() => {
          class n {}
          return (n.NOOP = new pD()), n;
        })();
      const om = "ng-enter",
        iu = "ng-leave",
        ru = "ng-trigger",
        ou = ".ng-trigger",
        gD = "ng-animating",
        sm = ".ng-animating";
      function Sr(n) {
        if ("number" == typeof n) return n;
        const t = n.match(/^(-?[\.\d]+)(m?s)/);
        return !t || t.length < 2 ? 0 : am(parseFloat(t[1]), t[2]);
      }
      function am(n, t) {
        return "s" === t ? 1e3 * n : n;
      }
      function su(n, t, e) {
        return n.hasOwnProperty("duration")
          ? n
          : (function mB(n, t, e) {
              let r,
                o = 0,
                s = "";
              if ("string" == typeof n) {
                const a = n.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === a)
                  return t.push(sD()), { duration: 0, delay: 0, easing: "" };
                r = am(parseFloat(a[1]), a[2]);
                const l = a[3];
                null != l && (o = am(parseFloat(l), a[4]));
                const c = a[5];
                c && (s = c);
              } else r = n;
              if (!e) {
                let a = !1,
                  l = t.length;
                r < 0 &&
                  (t.push(
                    (function AV() {
                      return new S(3100, !1);
                    })()
                  ),
                  (a = !0)),
                  o < 0 &&
                    (t.push(
                      (function IV() {
                        return new S(3101, !1);
                      })()
                    ),
                    (a = !0)),
                  a && t.splice(l, 0, sD());
              }
              return { duration: r, delay: o, easing: s };
            })(n, t, e);
      }
      function Ua(n, t = {}) {
        return (
          Object.keys(n).forEach((e) => {
            t[e] = n[e];
          }),
          t
        );
      }
      function _D(n) {
        const t = new Map();
        return (
          Object.keys(n).forEach((e) => {
            t.set(e, n[e]);
          }),
          t
        );
      }
      function Tr(n, t = new Map(), e) {
        if (e) for (let [i, r] of e) t.set(i, r);
        for (let [i, r] of n) t.set(i, r);
        return t;
      }
      function yD(n, t, e) {
        return e ? t + ":" + e + ";" : "";
      }
      function bD(n) {
        let t = "";
        for (let e = 0; e < n.style.length; e++) {
          const i = n.style.item(e);
          t += yD(0, i, n.style.getPropertyValue(i));
        }
        for (const e in n.style)
          n.style.hasOwnProperty(e) &&
            !e.startsWith("_") &&
            (t += yD(0, yB(e), n.style[e]));
        n.setAttribute("style", t);
      }
      function bi(n, t, e) {
        n.style &&
          (t.forEach((i, r) => {
            const o = cm(r);
            e && !e.has(r) && e.set(r, n.style[o]), (n.style[o] = i);
          }),
          Xp() && bD(n));
      }
      function so(n, t) {
        n.style &&
          (t.forEach((e, i) => {
            const r = cm(i);
            n.style[r] = "";
          }),
          Xp() && bD(n));
      }
      function $a(n) {
        return Array.isArray(n) ? (1 == n.length ? n[0] : iD(n)) : n;
      }
      const lm = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function CD(n) {
        let t = [];
        if ("string" == typeof n) {
          let e;
          for (; (e = lm.exec(n)); ) t.push(e[1]);
          lm.lastIndex = 0;
        }
        return t;
      }
      function au(n, t, e) {
        const i = n.toString(),
          r = i.replace(lm, (o, s) => {
            let a = t[s];
            return (
              null == a &&
                (e.push(
                  (function RV(n) {
                    return new S(3003, !1);
                  })()
                ),
                (a = "")),
              a.toString()
            );
          });
        return r == i ? n : r;
      }
      function lu(n) {
        const t = [];
        let e = n.next();
        for (; !e.done; ) t.push(e.value), (e = n.next());
        return t;
      }
      const vB = /-+([a-z0-9])/g;
      function cm(n) {
        return n.replace(vB, (...t) => t[1].toUpperCase());
      }
      function yB(n) {
        return n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
      }
      function gn(n, t, e) {
        switch (t.type) {
          case 7:
            return n.visitTrigger(t, e);
          case 0:
            return n.visitState(t, e);
          case 1:
            return n.visitTransition(t, e);
          case 2:
            return n.visitSequence(t, e);
          case 3:
            return n.visitGroup(t, e);
          case 4:
            return n.visitAnimate(t, e);
          case 5:
            return n.visitKeyframes(t, e);
          case 6:
            return n.visitStyle(t, e);
          case 8:
            return n.visitReference(t, e);
          case 9:
            return n.visitAnimateChild(t, e);
          case 10:
            return n.visitAnimateRef(t, e);
          case 11:
            return n.visitQuery(t, e);
          case 12:
            return n.visitStagger(t, e);
          default:
            throw (function OV(n) {
              return new S(3004, !1);
            })();
        }
      }
      function wD(n, t) {
        return window.getComputedStyle(n)[t];
      }
      function EB(n, t) {
        const e = [];
        return (
          "string" == typeof n
            ? n.split(/\s*,\s*/).forEach((i) =>
                (function SB(n, t, e) {
                  if (":" == n[0]) {
                    const l = (function TB(n, t) {
                      switch (n) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, i) => parseFloat(i) > parseFloat(e);
                        case ":decrement":
                          return (e, i) => parseFloat(i) < parseFloat(e);
                        default:
                          return (
                            t.push(
                              (function WV(n) {
                                return new S(3016, !1);
                              })()
                            ),
                            "* => *"
                          );
                      }
                    })(n, e);
                    if ("function" == typeof l) return void t.push(l);
                    n = l;
                  }
                  const i = n.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      e.push(
                        (function GV(n) {
                          return new S(3015, !1);
                        })()
                      ),
                      t
                    );
                  const r = i[1],
                    o = i[2],
                    s = i[3];
                  t.push(DD(r, s));
                  "<" == o[0] && !("*" == r && "*" == s) && t.push(DD(s, r));
                })(i, e, t)
              )
            : e.push(n),
          e
        );
      }
      const hu = new Set(["true", "1"]),
        fu = new Set(["false", "0"]);
      function DD(n, t) {
        const e = hu.has(n) || fu.has(n),
          i = hu.has(t) || fu.has(t);
        return (r, o) => {
          let s = "*" == n || n == r,
            a = "*" == t || t == o;
          return (
            !s && e && "boolean" == typeof r && (s = r ? hu.has(n) : fu.has(n)),
            !a && i && "boolean" == typeof o && (a = o ? hu.has(t) : fu.has(t)),
            s && a
          );
        };
      }
      const xB = new RegExp("s*:selfs*,?", "g");
      function um(n, t, e, i) {
        return new AB(n).build(t, e, i);
      }
      class AB {
        constructor(t) {
          this._driver = t;
        }
        build(t, e, i) {
          const r = new RB(e);
          return this._resetContextStyleTimingState(r), gn(this, $a(t), r);
        }
        _resetContextStyleTimingState(t) {
          (t.currentQuerySelector = ""),
            (t.collectedStyles = new Map()),
            t.collectedStyles.set("", new Map()),
            (t.currentTime = 0);
        }
        visitTrigger(t, e) {
          let i = (e.queryCount = 0),
            r = (e.depCount = 0);
          const o = [],
            s = [];
          return (
            "@" == t.name.charAt(0) &&
              e.errors.push(
                (function PV() {
                  return new S(3006, !1);
                })()
              ),
            t.definitions.forEach((a) => {
              if ((this._resetContextStyleTimingState(e), 0 == a.type)) {
                const l = a,
                  c = l.name;
                c
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((u) => {
                    (l.name = u), o.push(this.visitState(l, e));
                  }),
                  (l.name = c);
              } else if (1 == a.type) {
                const l = this.visitTransition(a, e);
                (i += l.queryCount), (r += l.depCount), s.push(l);
              } else
                e.errors.push(
                  (function NV() {
                    return new S(3007, !1);
                  })()
                );
            }),
            {
              type: 7,
              name: t.name,
              states: o,
              transitions: s,
              queryCount: i,
              depCount: r,
              options: null,
            }
          );
        }
        visitState(t, e) {
          const i = this.visitStyle(t.styles, e),
            r = (t.options && t.options.params) || null;
          if (i.containsDynamicStyles) {
            const o = new Set(),
              s = r || {};
            i.styles.forEach((a) => {
              a instanceof Map &&
                a.forEach((l) => {
                  CD(l).forEach((c) => {
                    s.hasOwnProperty(c) || o.add(c);
                  });
                });
            }),
              o.size &&
                (lu(o.values()),
                e.errors.push(
                  (function LV(n, t) {
                    return new S(3008, !1);
                  })()
                ));
          }
          return {
            type: 0,
            name: t.name,
            style: i,
            options: r ? { params: r } : null,
          };
        }
        visitTransition(t, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const i = gn(this, $a(t.animation), e);
          return {
            type: 1,
            matchers: EB(t.expr, e.errors),
            animation: i,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: ao(t.options),
          };
        }
        visitSequence(t, e) {
          return {
            type: 2,
            steps: t.steps.map((i) => gn(this, i, e)),
            options: ao(t.options),
          };
        }
        visitGroup(t, e) {
          const i = e.currentTime;
          let r = 0;
          const o = t.steps.map((s) => {
            e.currentTime = i;
            const a = gn(this, s, e);
            return (r = Math.max(r, e.currentTime)), a;
          });
          return (
            (e.currentTime = r), { type: 3, steps: o, options: ao(t.options) }
          );
        }
        visitAnimate(t, e) {
          const i = (function FB(n, t) {
            if (n.hasOwnProperty("duration")) return n;
            if ("number" == typeof n) return dm(su(n, t).duration, 0, "");
            const e = n;
            if (
              e
                .split(/\s+/)
                .some((o) => "{" == o.charAt(0) && "{" == o.charAt(1))
            ) {
              const o = dm(0, 0, "");
              return (o.dynamic = !0), (o.strValue = e), o;
            }
            const r = su(e, t);
            return dm(r.duration, r.delay, r.easing);
          })(t.timings, e.errors);
          e.currentAnimateTimings = i;
          let r,
            o = t.styles ? t.styles : Ne({});
          if (5 == o.type) r = this.visitKeyframes(o, e);
          else {
            let s = t.styles,
              a = !1;
            if (!s) {
              a = !0;
              const c = {};
              i.easing && (c.easing = i.easing), (s = Ne(c));
            }
            e.currentTime += i.duration + i.delay;
            const l = this.visitStyle(s, e);
            (l.isEmptyStep = a), (r = l);
          }
          return (
            (e.currentAnimateTimings = null),
            { type: 4, timings: i, style: r, options: null }
          );
        }
        visitStyle(t, e) {
          const i = this._makeStyleAst(t, e);
          return this._validateStyleAst(i, e), i;
        }
        _makeStyleAst(t, e) {
          const i = [],
            r = Array.isArray(t.styles) ? t.styles : [t.styles];
          for (let a of r)
            "string" == typeof a
              ? a === Ki
                ? i.push(a)
                : e.errors.push(new S(3002, !1))
              : i.push(_D(a));
          let o = !1,
            s = null;
          return (
            i.forEach((a) => {
              if (
                a instanceof Map &&
                (a.has("easing") && ((s = a.get("easing")), a.delete("easing")),
                !o)
              )
                for (let l of a.values())
                  if (l.toString().indexOf("{{") >= 0) {
                    o = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: i,
              easing: s,
              offset: t.offset,
              containsDynamicStyles: o,
              options: null,
            }
          );
        }
        _validateStyleAst(t, e) {
          const i = e.currentAnimateTimings;
          let r = e.currentTime,
            o = e.currentTime;
          i && o > 0 && (o -= i.duration + i.delay),
            t.styles.forEach((s) => {
              "string" != typeof s &&
                s.forEach((a, l) => {
                  const c = e.collectedStyles.get(e.currentQuerySelector),
                    u = c.get(l);
                  let d = !0;
                  u &&
                    (o != r &&
                      o >= u.startTime &&
                      r <= u.endTime &&
                      (e.errors.push(
                        (function BV(n, t, e, i, r) {
                          return new S(3010, !1);
                        })()
                      ),
                      (d = !1)),
                    (o = u.startTime)),
                    d && c.set(l, { startTime: o, endTime: r }),
                    e.options &&
                      (function _B(n, t, e) {
                        const i = t.params || {},
                          r = CD(n);
                        r.length &&
                          r.forEach((o) => {
                            i.hasOwnProperty(o) ||
                              e.push(
                                (function kV(n) {
                                  return new S(3001, !1);
                                })()
                              );
                          });
                      })(a, e.options, e.errors);
                });
            });
        }
        visitKeyframes(t, e) {
          const i = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return (
              e.errors.push(
                (function jV() {
                  return new S(3011, !1);
                })()
              ),
              i
            );
          let o = 0;
          const s = [];
          let a = !1,
            l = !1,
            c = 0;
          const u = t.steps.map((D) => {
            const A = this._makeStyleAst(D, e);
            let E =
                null != A.offset
                  ? A.offset
                  : (function OB(n) {
                      if ("string" == typeof n) return null;
                      let t = null;
                      if (Array.isArray(n))
                        n.forEach((e) => {
                          if (e instanceof Map && e.has("offset")) {
                            const i = e;
                            (t = parseFloat(i.get("offset"))),
                              i.delete("offset");
                          }
                        });
                      else if (n instanceof Map && n.has("offset")) {
                        const e = n;
                        (t = parseFloat(e.get("offset"))), e.delete("offset");
                      }
                      return t;
                    })(A.styles),
              O = 0;
            return (
              null != E && (o++, (O = A.offset = E)),
              (l = l || O < 0 || O > 1),
              (a = a || O < c),
              (c = O),
              s.push(O),
              A
            );
          });
          l &&
            e.errors.push(
              (function HV() {
                return new S(3012, !1);
              })()
            ),
            a &&
              e.errors.push(
                (function UV() {
                  return new S(3200, !1);
                })()
              );
          const d = t.steps.length;
          let f = 0;
          o > 0 && o < d
            ? e.errors.push(
                (function $V() {
                  return new S(3202, !1);
                })()
              )
            : 0 == o && (f = 1 / (d - 1));
          const p = d - 1,
            _ = e.currentTime,
            y = e.currentAnimateTimings,
            w = y.duration;
          return (
            u.forEach((D, A) => {
              const E = f > 0 ? (A == p ? 1 : f * A) : s[A],
                O = E * w;
              (e.currentTime = _ + y.delay + O),
                (y.duration = O),
                this._validateStyleAst(D, e),
                (D.offset = E),
                i.styles.push(D);
            }),
            i
          );
        }
        visitReference(t, e) {
          return {
            type: 8,
            animation: gn(this, $a(t.animation), e),
            options: ao(t.options),
          };
        }
        visitAnimateChild(t, e) {
          return e.depCount++, { type: 9, options: ao(t.options) };
        }
        visitAnimateRef(t, e) {
          return {
            type: 10,
            animation: this.visitReference(t.animation, e),
            options: ao(t.options),
          };
        }
        visitQuery(t, e) {
          const i = e.currentQuerySelector,
            r = t.options || {};
          e.queryCount++, (e.currentQuery = t);
          const [o, s] = (function IB(n) {
            const t = !!n.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              t && (n = n.replace(xB, "")),
              (n = n
                .replace(/@\*/g, ou)
                .replace(/@\w+/g, (e) => ou + "-" + e.slice(1))
                .replace(/:animating/g, sm)),
              [n, t]
            );
          })(t.selector);
          (e.currentQuerySelector = i.length ? i + " " + o : o),
            mn(e.collectedStyles, e.currentQuerySelector, new Map());
          const a = gn(this, $a(t.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = i),
            {
              type: 11,
              selector: o,
              limit: r.limit || 0,
              optional: !!r.optional,
              includeSelf: s,
              animation: a,
              originalSelector: t.selector,
              options: ao(t.options),
            }
          );
        }
        visitStagger(t, e) {
          e.currentQuery ||
            e.errors.push(
              (function zV() {
                return new S(3013, !1);
              })()
            );
          const i =
            "full" === t.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : su(t.timings, e.errors, !0);
          return {
            type: 12,
            animation: gn(this, $a(t.animation), e),
            timings: i,
            options: null,
          };
        }
      }
      class RB {
        constructor(t) {
          (this.errors = t),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function ao(n) {
        return (
          n
            ? (n = Ua(n)).params &&
              (n.params = (function kB(n) {
                return n ? Ua(n) : null;
              })(n.params))
            : (n = {}),
          n
        );
      }
      function dm(n, t, e) {
        return { duration: n, delay: t, easing: e };
      }
      function hm(n, t, e, i, r, o, s = null, a = !1) {
        return {
          type: 1,
          element: n,
          keyframes: t,
          preStyleProps: e,
          postStyleProps: i,
          duration: r,
          delay: o,
          totalTime: r + o,
          easing: s,
          subTimeline: a,
        };
      }
      class pu {
        constructor() {
          this._map = new Map();
        }
        get(t) {
          return this._map.get(t) || [];
        }
        append(t, e) {
          let i = this._map.get(t);
          i || this._map.set(t, (i = [])), i.push(...e);
        }
        has(t) {
          return this._map.has(t);
        }
        clear() {
          this._map.clear();
        }
      }
      const LB = new RegExp(":enter", "g"),
        BB = new RegExp(":leave", "g");
      function fm(n, t, e, i, r, o = new Map(), s = new Map(), a, l, c = []) {
        return new jB().buildKeyframes(n, t, e, i, r, o, s, a, l, c);
      }
      class jB {
        buildKeyframes(t, e, i, r, o, s, a, l, c, u = []) {
          c = c || new pu();
          const d = new pm(t, e, c, r, o, u, []);
          d.options = l;
          const f = l.delay ? Sr(l.delay) : 0;
          d.currentTimeline.delayNextStep(f),
            d.currentTimeline.setStyles([s], null, d.errors, l),
            gn(this, i, d);
          const p = d.timelines.filter((_) => _.containsAnimation());
          if (p.length && a.size) {
            let _;
            for (let y = p.length - 1; y >= 0; y--) {
              const w = p[y];
              if (w.element === e) {
                _ = w;
                break;
              }
            }
            _ &&
              !_.allowOnlyTimelineStyles() &&
              _.setStyles([a], null, d.errors, l);
          }
          return p.length
            ? p.map((_) => _.buildKeyframes())
            : [hm(e, [], [], [], 0, f, "", !1)];
        }
        visitTrigger(t, e) {}
        visitState(t, e) {}
        visitTransition(t, e) {}
        visitAnimateChild(t, e) {
          const i = e.subInstructions.get(e.element);
          if (i) {
            const r = e.createSubContext(t.options),
              o = e.currentTimeline.currentTime,
              s = this._visitSubInstructions(i, r, r.options);
            o != s && e.transformIntoNewTimeline(s);
          }
          e.previousNode = t;
        }
        visitAnimateRef(t, e) {
          const i = e.createSubContext(t.options);
          i.transformIntoNewTimeline(),
            this.visitReference(t.animation, i),
            e.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (e.previousNode = t);
        }
        _visitSubInstructions(t, e, i) {
          let o = e.currentTimeline.currentTime;
          const s = null != i.duration ? Sr(i.duration) : null,
            a = null != i.delay ? Sr(i.delay) : null;
          return (
            0 !== s &&
              t.forEach((l) => {
                const c = e.appendInstructionToTimeline(l, s, a);
                o = Math.max(o, c.duration + c.delay);
              }),
            o
          );
        }
        visitReference(t, e) {
          e.updateOptions(t.options, !0),
            gn(this, t.animation, e),
            (e.previousNode = t);
        }
        visitSequence(t, e) {
          const i = e.subContextCount;
          let r = e;
          const o = t.options;
          if (
            o &&
            (o.params || o.delay) &&
            ((r = e.createSubContext(o)),
            r.transformIntoNewTimeline(),
            null != o.delay)
          ) {
            6 == r.previousNode.type &&
              (r.currentTimeline.snapshotCurrentStyles(),
              (r.previousNode = mu));
            const s = Sr(o.delay);
            r.delayNextStep(s);
          }
          t.steps.length &&
            (t.steps.forEach((s) => gn(this, s, r)),
            r.currentTimeline.applyStylesToKeyframe(),
            r.subContextCount > i && r.transformIntoNewTimeline()),
            (e.previousNode = t);
        }
        visitGroup(t, e) {
          const i = [];
          let r = e.currentTimeline.currentTime;
          const o = t.options && t.options.delay ? Sr(t.options.delay) : 0;
          t.steps.forEach((s) => {
            const a = e.createSubContext(t.options);
            o && a.delayNextStep(o),
              gn(this, s, a),
              (r = Math.max(r, a.currentTimeline.currentTime)),
              i.push(a.currentTimeline);
          }),
            i.forEach((s) => e.currentTimeline.mergeTimelineCollectedStyles(s)),
            e.transformIntoNewTimeline(r),
            (e.previousNode = t);
        }
        _visitTiming(t, e) {
          if (t.dynamic) {
            const i = t.strValue;
            return su(e.params ? au(i, e.params, e.errors) : i, e.errors);
          }
          return { duration: t.duration, delay: t.delay, easing: t.easing };
        }
        visitAnimate(t, e) {
          const i = (e.currentAnimateTimings = this._visitTiming(t.timings, e)),
            r = e.currentTimeline;
          i.delay && (e.incrementTime(i.delay), r.snapshotCurrentStyles());
          const o = t.style;
          5 == o.type
            ? this.visitKeyframes(o, e)
            : (e.incrementTime(i.duration),
              this.visitStyle(o, e),
              r.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = t);
        }
        visitStyle(t, e) {
          const i = e.currentTimeline,
            r = e.currentAnimateTimings;
          !r && i.hasCurrentStyleProperties() && i.forwardFrame();
          const o = (r && r.easing) || t.easing;
          t.isEmptyStep
            ? i.applyEmptyStep(o)
            : i.setStyles(t.styles, o, e.errors, e.options),
            (e.previousNode = t);
        }
        visitKeyframes(t, e) {
          const i = e.currentAnimateTimings,
            r = e.currentTimeline.duration,
            o = i.duration,
            a = e.createSubContext().currentTimeline;
          (a.easing = i.easing),
            t.styles.forEach((l) => {
              a.forwardTime((l.offset || 0) * o),
                a.setStyles(l.styles, l.easing, e.errors, e.options),
                a.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(a),
            e.transformIntoNewTimeline(r + o),
            (e.previousNode = t);
        }
        visitQuery(t, e) {
          const i = e.currentTimeline.currentTime,
            r = t.options || {},
            o = r.delay ? Sr(r.delay) : 0;
          o &&
            (6 === e.previousNode.type ||
              (0 == i && e.currentTimeline.hasCurrentStyleProperties())) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = mu));
          let s = i;
          const a = e.invokeQuery(
            t.selector,
            t.originalSelector,
            t.limit,
            t.includeSelf,
            !!r.optional,
            e.errors
          );
          e.currentQueryTotal = a.length;
          let l = null;
          a.forEach((c, u) => {
            e.currentQueryIndex = u;
            const d = e.createSubContext(t.options, c);
            o && d.delayNextStep(o),
              c === e.element && (l = d.currentTimeline),
              gn(this, t.animation, d),
              d.currentTimeline.applyStylesToKeyframe(),
              (s = Math.max(s, d.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(s),
            l &&
              (e.currentTimeline.mergeTimelineCollectedStyles(l),
              e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = t);
        }
        visitStagger(t, e) {
          const i = e.parentContext,
            r = e.currentTimeline,
            o = t.timings,
            s = Math.abs(o.duration),
            a = s * (e.currentQueryTotal - 1);
          let l = s * e.currentQueryIndex;
          switch (o.duration < 0 ? "reverse" : o.easing) {
            case "reverse":
              l = a - l;
              break;
            case "full":
              l = i.currentStaggerTime;
          }
          const u = e.currentTimeline;
          l && u.delayNextStep(l);
          const d = u.currentTime;
          gn(this, t.animation, e),
            (e.previousNode = t),
            (i.currentStaggerTime =
              r.currentTime - d + (r.startTime - i.currentTimeline.startTime));
        }
      }
      const mu = {};
      class pm {
        constructor(t, e, i, r, o, s, a, l) {
          (this._driver = t),
            (this.element = e),
            (this.subInstructions = i),
            (this._enterClassName = r),
            (this._leaveClassName = o),
            (this.errors = s),
            (this.timelines = a),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = mu),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = l || new gu(this._driver, e, 0)),
            a.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(t, e) {
          if (!t) return;
          const i = t;
          let r = this.options;
          null != i.duration && (r.duration = Sr(i.duration)),
            null != i.delay && (r.delay = Sr(i.delay));
          const o = i.params;
          if (o) {
            let s = r.params;
            s || (s = this.options.params = {}),
              Object.keys(o).forEach((a) => {
                (!e || !s.hasOwnProperty(a)) &&
                  (s[a] = au(o[a], s, this.errors));
              });
          }
        }
        _copyOptions() {
          const t = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const i = (t.params = {});
              Object.keys(e).forEach((r) => {
                i[r] = e[r];
              });
            }
          }
          return t;
        }
        createSubContext(t = null, e, i) {
          const r = e || this.element,
            o = new pm(
              this._driver,
              r,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(r, i || 0)
            );
          return (
            (o.previousNode = this.previousNode),
            (o.currentAnimateTimings = this.currentAnimateTimings),
            (o.options = this._copyOptions()),
            o.updateOptions(t),
            (o.currentQueryIndex = this.currentQueryIndex),
            (o.currentQueryTotal = this.currentQueryTotal),
            (o.parentContext = this),
            this.subContextCount++,
            o
          );
        }
        transformIntoNewTimeline(t) {
          return (
            (this.previousNode = mu),
            (this.currentTimeline = this.currentTimeline.fork(this.element, t)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(t, e, i) {
          const r = {
              duration: e ?? t.duration,
              delay: this.currentTimeline.currentTime + (i ?? 0) + t.delay,
              easing: "",
            },
            o = new HB(
              this._driver,
              t.element,
              t.keyframes,
              t.preStyleProps,
              t.postStyleProps,
              r,
              t.stretchStartingKeyframe
            );
          return this.timelines.push(o), r;
        }
        incrementTime(t) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + t);
        }
        delayNextStep(t) {
          t > 0 && this.currentTimeline.delayNextStep(t);
        }
        invokeQuery(t, e, i, r, o, s) {
          let a = [];
          if ((r && a.push(this.element), t.length > 0)) {
            t = (t = t.replace(LB, "." + this._enterClassName)).replace(
              BB,
              "." + this._leaveClassName
            );
            let c = this._driver.query(this.element, t, 1 != i);
            0 !== i &&
              (c = i < 0 ? c.slice(c.length + i, c.length) : c.slice(0, i)),
              a.push(...c);
          }
          return (
            !o &&
              0 == a.length &&
              s.push(
                (function qV(n) {
                  return new S(3014, !1);
                })()
              ),
            a
          );
        }
      }
      class gu {
        constructor(t, e, i, r) {
          (this._driver = t),
            (this.element = e),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = r),
            (this.duration = 0),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                e,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(t) {
          const e = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || e
            ? (this.forwardTime(this.currentTime + t),
              e && this.snapshotCurrentStyles())
            : (this.startTime += t);
        }
        fork(t, e) {
          return (
            this.applyStylesToKeyframe(),
            new gu(
              this._driver,
              t,
              e || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(t) {
          this.applyStylesToKeyframe(),
            (this.duration = t),
            this._loadKeyframe();
        }
        _updateStyle(t, e) {
          this._localTimelineStyles.set(t, e),
            this._globalTimelineStyles.set(t, e),
            this._styleSummary.set(t, { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(t) {
          t && this._previousKeyframe.set("easing", t);
          for (let [e, i] of this._globalTimelineStyles)
            this._backFill.set(e, i || Ki), this._currentKeyframe.set(e, Ki);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(t, e, i, r) {
          e && this._previousKeyframe.set("easing", e);
          const o = (r && r.params) || {},
            s = (function UB(n, t) {
              const e = new Map();
              let i;
              return (
                n.forEach((r) => {
                  if ("*" === r) {
                    i = i || t.keys();
                    for (let o of i) e.set(o, Ki);
                  } else Tr(r, e);
                }),
                e
              );
            })(t, this._globalTimelineStyles);
          for (let [a, l] of s) {
            const c = au(l, o, i);
            this._pendingStyles.set(a, c),
              this._localTimelineStyles.has(a) ||
                this._backFill.set(a, this._globalTimelineStyles.get(a) ?? Ki),
              this._updateStyle(a, c);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((t, e) => {
              this._currentKeyframe.set(e, t);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((t, e) => {
              this._currentKeyframe.has(e) || this._currentKeyframe.set(e, t);
            }));
        }
        snapshotCurrentStyles() {
          for (let [t, e] of this._localTimelineStyles)
            this._pendingStyles.set(t, e), this._updateStyle(t, e);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const t = [];
          for (let e in this._currentKeyframe) t.push(e);
          return t;
        }
        mergeTimelineCollectedStyles(t) {
          t._styleSummary.forEach((e, i) => {
            const r = this._styleSummary.get(i);
            (!r || e.time > r.time) && this._updateStyle(i, e.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const t = new Set(),
            e = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let r = [];
          this._keyframes.forEach((a, l) => {
            const c = Tr(a, new Map(), this._backFill);
            c.forEach((u, d) => {
              "!" === u ? t.add(d) : u === Ki && e.add(d);
            }),
              i || c.set("offset", l / this.duration),
              r.push(c);
          });
          const o = t.size ? lu(t.values()) : [],
            s = e.size ? lu(e.values()) : [];
          if (i) {
            const a = r[0],
              l = new Map(a);
            a.set("offset", 0), l.set("offset", 1), (r = [a, l]);
          }
          return hm(
            this.element,
            r,
            o,
            s,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class HB extends gu {
        constructor(t, e, i, r, o, s, a = !1) {
          super(t, e, s.delay),
            (this.keyframes = i),
            (this.preStyleProps = r),
            (this.postStyleProps = o),
            (this._stretchStartingKeyframe = a),
            (this.timings = {
              duration: s.duration,
              delay: s.delay,
              easing: s.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let t = this.keyframes,
            { delay: e, duration: i, easing: r } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const o = [],
              s = i + e,
              a = e / s,
              l = Tr(t[0]);
            l.set("offset", 0), o.push(l);
            const c = Tr(t[0]);
            c.set("offset", SD(a)), o.push(c);
            const u = t.length - 1;
            for (let d = 1; d <= u; d++) {
              let f = Tr(t[d]);
              const p = f.get("offset");
              f.set("offset", SD((e + p * i) / s)), o.push(f);
            }
            (i = s), (e = 0), (r = ""), (t = o);
          }
          return hm(
            this.element,
            t,
            this.preStyleProps,
            this.postStyleProps,
            i,
            e,
            r,
            !0
          );
        }
      }
      function SD(n, t = 3) {
        const e = Math.pow(10, t - 1);
        return Math.round(n * e) / e;
      }
      class mm {}
      const $B = new Set([
        "width",
        "height",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "left",
        "top",
        "bottom",
        "right",
        "fontSize",
        "outlineWidth",
        "outlineOffset",
        "paddingTop",
        "paddingLeft",
        "paddingBottom",
        "paddingRight",
        "marginTop",
        "marginLeft",
        "marginBottom",
        "marginRight",
        "borderRadius",
        "borderWidth",
        "borderTopWidth",
        "borderLeftWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "textIndent",
        "perspective",
      ]);
      class zB extends mm {
        normalizePropertyName(t, e) {
          return cm(t);
        }
        normalizeStyleValue(t, e, i, r) {
          let o = "";
          const s = i.toString().trim();
          if ($B.has(e) && 0 !== i && "0" !== i)
            if ("number" == typeof i) o = "px";
            else {
              const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              a &&
                0 == a[1].length &&
                r.push(
                  (function FV(n, t) {
                    return new S(3005, !1);
                  })()
                );
            }
          return s + o;
        }
      }
      function TD(n, t, e, i, r, o, s, a, l, c, u, d, f) {
        return {
          type: 0,
          element: n,
          triggerName: t,
          isRemovalTransition: r,
          fromState: e,
          fromStyles: o,
          toState: i,
          toStyles: s,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: u,
          totalTime: d,
          errors: f,
        };
      }
      const gm = {};
      class xD {
        constructor(t, e, i) {
          (this._triggerName = t), (this.ast = e), (this._stateStyles = i);
        }
        match(t, e, i, r) {
          return (function qB(n, t, e, i, r) {
            return n.some((o) => o(t, e, i, r));
          })(this.ast.matchers, t, e, i, r);
        }
        buildStyles(t, e, i) {
          let r = this._stateStyles.get("*");
          return (
            void 0 !== t && (r = this._stateStyles.get(t?.toString()) || r),
            r ? r.buildStyles(e, i) : new Map()
          );
        }
        build(t, e, i, r, o, s, a, l, c, u) {
          const d = [],
            f = (this.ast.options && this.ast.options.params) || gm,
            _ = this.buildStyles(i, (a && a.params) || gm, d),
            y = (l && l.params) || gm,
            w = this.buildStyles(r, y, d),
            D = new Set(),
            A = new Map(),
            E = new Map(),
            O = "void" === r,
            te = { params: GB(y, f), delay: this.ast.options?.delay },
            ve = u ? [] : fm(t, e, this.ast.animation, o, s, _, w, te, c, d);
          let Ye = 0;
          if (
            (ve.forEach((wn) => {
              Ye = Math.max(wn.duration + wn.delay, Ye);
            }),
            d.length)
          )
            return TD(e, this._triggerName, i, r, O, _, w, [], [], A, E, Ye, d);
          ve.forEach((wn) => {
            const Dn = wn.element,
              Bs = mn(A, Dn, new Set());
            wn.preStyleProps.forEach((ti) => Bs.add(ti));
            const ur = mn(E, Dn, new Set());
            wn.postStyleProps.forEach((ti) => ur.add(ti)),
              Dn !== e && D.add(Dn);
          });
          const Cn = lu(D.values());
          return TD(e, this._triggerName, i, r, O, _, w, ve, Cn, A, E, Ye);
        }
      }
      function GB(n, t) {
        const e = Ua(t);
        for (const i in n) n.hasOwnProperty(i) && null != n[i] && (e[i] = n[i]);
        return e;
      }
      class WB {
        constructor(t, e, i) {
          (this.styles = t), (this.defaultParams = e), (this.normalizer = i);
        }
        buildStyles(t, e) {
          const i = new Map(),
            r = Ua(this.defaultParams);
          return (
            Object.keys(t).forEach((o) => {
              const s = t[o];
              null !== s && (r[o] = s);
            }),
            this.styles.styles.forEach((o) => {
              "string" != typeof o &&
                o.forEach((s, a) => {
                  s && (s = au(s, r, e));
                  const l = this.normalizer.normalizePropertyName(a, e);
                  (s = this.normalizer.normalizeStyleValue(a, l, s, e)),
                    i.set(l, s);
                });
            }),
            i
          );
        }
      }
      class KB {
        constructor(t, e, i) {
          (this.name = t),
            (this.ast = e),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = new Map()),
            e.states.forEach((r) => {
              this.states.set(
                r.name,
                new WB(r.style, (r.options && r.options.params) || {}, i)
              );
            }),
            AD(this.states, "true", "1"),
            AD(this.states, "false", "0"),
            e.transitions.forEach((r) => {
              this.transitionFactories.push(new xD(t, r, this.states));
            }),
            (this.fallbackTransition = (function ZB(n, t, e) {
              return new xD(
                n,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(s, a) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                t
              );
            })(t, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(t, e, i, r) {
          return (
            this.transitionFactories.find((s) => s.match(t, e, i, r)) || null
          );
        }
        matchStyles(t, e, i) {
          return this.fallbackTransition.buildStyles(t, e, i);
        }
      }
      function AD(n, t, e) {
        n.has(t)
          ? n.has(e) || n.set(e, n.get(t))
          : n.has(e) && n.set(t, n.get(e));
      }
      const QB = new pu();
      class XB {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(t, e) {
          const i = [],
            o = um(this._driver, e, i, []);
          if (i.length)
            throw (function XV(n) {
              return new S(3503, !1);
            })();
          this._animations.set(t, o);
        }
        _buildPlayer(t, e, i) {
          const r = t.element,
            o = aD(0, this._normalizer, 0, t.keyframes, e, i);
          return this._driver.animate(
            r,
            o,
            t.duration,
            t.delay,
            t.easing,
            [],
            !0
          );
        }
        create(t, e, i = {}) {
          const r = [],
            o = this._animations.get(t);
          let s;
          const a = new Map();
          if (
            (o
              ? ((s = fm(
                  this._driver,
                  e,
                  o,
                  om,
                  iu,
                  new Map(),
                  new Map(),
                  i,
                  QB,
                  r
                )),
                s.forEach((u) => {
                  const d = mn(a, u.element, new Map());
                  u.postStyleProps.forEach((f) => d.set(f, null));
                }))
              : (r.push(
                  (function JV() {
                    return new S(3300, !1);
                  })()
                ),
                (s = [])),
            r.length)
          )
            throw (function eB(n) {
              return new S(3504, !1);
            })();
          a.forEach((u, d) => {
            u.forEach((f, p) => {
              u.set(p, this._driver.computeStyle(d, p, Ki));
            });
          });
          const c = Er(
            s.map((u) => {
              const d = a.get(u.element);
              return this._buildPlayer(u, new Map(), d);
            })
          );
          return (
            this._playersById.set(t, c),
            c.onDestroy(() => this.destroy(t)),
            this.players.push(c),
            c
          );
        }
        destroy(t) {
          const e = this._getPlayer(t);
          e.destroy(), this._playersById.delete(t);
          const i = this.players.indexOf(e);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(t) {
          const e = this._playersById.get(t);
          if (!e)
            throw (function tB(n) {
              return new S(3301, !1);
            })();
          return e;
        }
        listen(t, e, i, r) {
          const o = tm(e, "", "", "");
          return Jp(this._getPlayer(t), i, o, r), () => {};
        }
        command(t, e, i, r) {
          if ("register" == i) return void this.register(t, r[0]);
          if ("create" == i) return void this.create(t, e, r[0] || {});
          const o = this._getPlayer(t);
          switch (i) {
            case "play":
              o.play();
              break;
            case "pause":
              o.pause();
              break;
            case "reset":
              o.reset();
              break;
            case "restart":
              o.restart();
              break;
            case "finish":
              o.finish();
              break;
            case "init":
              o.init();
              break;
            case "setPosition":
              o.setPosition(parseFloat(r[0]));
              break;
            case "destroy":
              this.destroy(t);
          }
        }
      }
      const ID = "ng-animate-queued",
        _m = "ng-animate-disabled",
        r2 = [],
        kD = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        o2 = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        Rn = "__ng_removed";
      class vm {
        constructor(t, e = "") {
          this.namespaceId = e;
          const i = t && t.hasOwnProperty("value");
          if (
            ((this.value = (function c2(n) {
              return n ?? null;
            })(i ? t.value : t)),
            i)
          ) {
            const o = Ua(t);
            delete o.value, (this.options = o);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(t) {
          const e = t.params;
          if (e) {
            const i = this.options.params;
            Object.keys(e).forEach((r) => {
              null == i[r] && (i[r] = e[r]);
            });
          }
        }
      }
      const za = "void",
        ym = new vm(za);
      class s2 {
        constructor(t, e, i) {
          (this.id = t),
            (this.hostElement = e),
            (this._engine = i),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + t),
            On(e, this._hostClassName);
        }
        listen(t, e, i, r) {
          if (!this._triggers.has(e))
            throw (function nB(n, t) {
              return new S(3302, !1);
            })();
          if (null == i || 0 == i.length)
            throw (function iB(n) {
              return new S(3303, !1);
            })();
          if (
            !(function u2(n) {
              return "start" == n || "done" == n;
            })(i)
          )
            throw (function rB(n, t) {
              return new S(3400, !1);
            })();
          const o = mn(this._elementListeners, t, []),
            s = { name: e, phase: i, callback: r };
          o.push(s);
          const a = mn(this._engine.statesByElement, t, new Map());
          return (
            a.has(e) || (On(t, ru), On(t, ru + "-" + e), a.set(e, ym)),
            () => {
              this._engine.afterFlush(() => {
                const l = o.indexOf(s);
                l >= 0 && o.splice(l, 1), this._triggers.has(e) || a.delete(e);
              });
            }
          );
        }
        register(t, e) {
          return !this._triggers.has(t) && (this._triggers.set(t, e), !0);
        }
        _getTrigger(t) {
          const e = this._triggers.get(t);
          if (!e)
            throw (function oB(n) {
              return new S(3401, !1);
            })();
          return e;
        }
        trigger(t, e, i, r = !0) {
          const o = this._getTrigger(e),
            s = new bm(this.id, e, t);
          let a = this._engine.statesByElement.get(t);
          a ||
            (On(t, ru),
            On(t, ru + "-" + e),
            this._engine.statesByElement.set(t, (a = new Map())));
          let l = a.get(e);
          const c = new vm(i, this.id);
          if (
            (!(i && i.hasOwnProperty("value")) &&
              l &&
              c.absorbOptions(l.options),
            a.set(e, c),
            l || (l = ym),
            c.value !== za && l.value === c.value)
          ) {
            if (
              !(function f2(n, t) {
                const e = Object.keys(n),
                  i = Object.keys(t);
                if (e.length != i.length) return !1;
                for (let r = 0; r < e.length; r++) {
                  const o = e[r];
                  if (!t.hasOwnProperty(o) || n[o] !== t[o]) return !1;
                }
                return !0;
              })(l.params, c.params)
            ) {
              const y = [],
                w = o.matchStyles(l.value, l.params, y),
                D = o.matchStyles(c.value, c.params, y);
              y.length
                ? this._engine.reportError(y)
                : this._engine.afterFlush(() => {
                    so(t, w), bi(t, D);
                  });
            }
            return;
          }
          const f = mn(this._engine.playersByElement, t, []);
          f.forEach((y) => {
            y.namespaceId == this.id &&
              y.triggerName == e &&
              y.queued &&
              y.destroy();
          });
          let p = o.matchTransition(l.value, c.value, t, c.params),
            _ = !1;
          if (!p) {
            if (!r) return;
            (p = o.fallbackTransition), (_ = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: t,
              triggerName: e,
              transition: p,
              fromState: l,
              toState: c,
              player: s,
              isFallbackTransition: _,
            }),
            _ ||
              (On(t, ID),
              s.onStart(() => {
                bs(t, ID);
              })),
            s.onDone(() => {
              let y = this.players.indexOf(s);
              y >= 0 && this.players.splice(y, 1);
              const w = this._engine.playersByElement.get(t);
              if (w) {
                let D = w.indexOf(s);
                D >= 0 && w.splice(D, 1);
              }
            }),
            this.players.push(s),
            f.push(s),
            s
          );
        }
        deregister(t) {
          this._triggers.delete(t),
            this._engine.statesByElement.forEach((e) => e.delete(t)),
            this._elementListeners.forEach((e, i) => {
              this._elementListeners.set(
                i,
                e.filter((r) => r.name != t)
              );
            });
        }
        clearElementCache(t) {
          this._engine.statesByElement.delete(t),
            this._elementListeners.delete(t);
          const e = this._engine.playersByElement.get(t);
          e &&
            (e.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(t));
        }
        _signalRemovalForInnerTriggers(t, e) {
          const i = this._engine.driver.query(t, ou, !0);
          i.forEach((r) => {
            if (r[Rn]) return;
            const o = this._engine.fetchNamespacesByElement(r);
            o.size
              ? o.forEach((s) => s.triggerLeaveAnimation(r, e, !1, !0))
              : this.clearElementCache(r);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((r) => this.clearElementCache(r))
            );
        }
        triggerLeaveAnimation(t, e, i, r) {
          const o = this._engine.statesByElement.get(t),
            s = new Map();
          if (o) {
            const a = [];
            if (
              (o.forEach((l, c) => {
                if ((s.set(c, l.value), this._triggers.has(c))) {
                  const u = this.trigger(t, c, za, r);
                  u && a.push(u);
                }
              }),
              a.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, t, !0, e, s),
                i && Er(a).onDone(() => this._engine.processLeaveNode(t)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(t) {
          const e = this._elementListeners.get(t),
            i = this._engine.statesByElement.get(t);
          if (e && i) {
            const r = new Set();
            e.forEach((o) => {
              const s = o.name;
              if (r.has(s)) return;
              r.add(s);
              const l = this._triggers.get(s).fallbackTransition,
                c = i.get(s) || ym,
                u = new vm(za),
                d = new bm(this.id, s, t);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: t,
                  triggerName: s,
                  transition: l,
                  fromState: c,
                  toState: u,
                  player: d,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(t, e) {
          const i = this._engine;
          if (
            (t.childElementCount && this._signalRemovalForInnerTriggers(t, e),
            this.triggerLeaveAnimation(t, e, !0))
          )
            return;
          let r = !1;
          if (i.totalAnimations) {
            const o = i.players.length ? i.playersByQueriedElement.get(t) : [];
            if (o && o.length) r = !0;
            else {
              let s = t;
              for (; (s = s.parentNode); )
                if (i.statesByElement.get(s)) {
                  r = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(t), r))
            i.markElementAsRemoved(this.id, t, !1, e);
          else {
            const o = t[Rn];
            (!o || o === kD) &&
              (i.afterFlush(() => this.clearElementCache(t)),
              i.destroyInnerAnimations(t),
              i._onRemovalComplete(t, e));
          }
        }
        insertNode(t, e) {
          On(t, this._hostClassName);
        }
        drainQueuedTransitions(t) {
          const e = [];
          return (
            this._queue.forEach((i) => {
              const r = i.player;
              if (r.destroyed) return;
              const o = i.element,
                s = this._elementListeners.get(o);
              s &&
                s.forEach((a) => {
                  if (a.name == i.triggerName) {
                    const l = tm(
                      o,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (l._data = t), Jp(i.player, a.phase, l, a.callback);
                  }
                }),
                r.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      r.destroy();
                    })
                  : e.push(i);
            }),
            (this._queue = []),
            e.sort((i, r) => {
              const o = i.transition.ast.depCount,
                s = r.transition.ast.depCount;
              return 0 == o || 0 == s
                ? o - s
                : this._engine.driver.containsElement(i.element, r.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(t) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, t);
        }
        elementContainsData(t) {
          let e = !1;
          return (
            this._elementListeners.has(t) && (e = !0),
            (e = !!this._queue.find((i) => i.element === t) || e),
            e
          );
        }
      }
      class a2 {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this.driver = e),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (r, o) => {});
        }
        _onRemovalComplete(t, e) {
          this.onRemovalComplete(t, e);
        }
        get queuedPlayers() {
          const t = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((i) => {
                i.queued && t.push(i);
              });
            }),
            t
          );
        }
        createNamespace(t, e) {
          const i = new s2(t, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(i, e)
              : (this.newHostElements.set(e, i), this.collectEnterElement(e)),
            (this._namespaceLookup[t] = i)
          );
        }
        _balanceNamespaceList(t, e) {
          const i = this._namespaceList,
            r = this.namespacesByHostElement;
          if (i.length - 1 >= 0) {
            let s = !1,
              a = this.driver.getParentElement(e);
            for (; a; ) {
              const l = r.get(a);
              if (l) {
                const c = i.indexOf(l);
                i.splice(c + 1, 0, t), (s = !0);
                break;
              }
              a = this.driver.getParentElement(a);
            }
            s || i.unshift(t);
          } else i.push(t);
          return r.set(e, t), t;
        }
        register(t, e) {
          let i = this._namespaceLookup[t];
          return i || (i = this.createNamespace(t, e)), i;
        }
        registerTrigger(t, e, i) {
          let r = this._namespaceLookup[t];
          r && r.register(e, i) && this.totalAnimations++;
        }
        destroy(t, e) {
          if (!t) return;
          const i = this._fetchNamespace(t);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(i.hostElement),
              delete this._namespaceLookup[t];
            const r = this._namespaceList.indexOf(i);
            r >= 0 && this._namespaceList.splice(r, 1);
          }),
            this.afterFlushAnimationsDone(() => i.destroy(e));
        }
        _fetchNamespace(t) {
          return this._namespaceLookup[t];
        }
        fetchNamespacesByElement(t) {
          const e = new Set(),
            i = this.statesByElement.get(t);
          if (i)
            for (let r of i.values())
              if (r.namespaceId) {
                const o = this._fetchNamespace(r.namespaceId);
                o && e.add(o);
              }
          return e;
        }
        trigger(t, e, i, r) {
          if (_u(e)) {
            const o = this._fetchNamespace(t);
            if (o) return o.trigger(e, i, r), !0;
          }
          return !1;
        }
        insertNode(t, e, i, r) {
          if (!_u(e)) return;
          const o = e[Rn];
          if (o && o.setForRemoval) {
            (o.setForRemoval = !1), (o.setForMove = !0);
            const s = this.collectedLeaveElements.indexOf(e);
            s >= 0 && this.collectedLeaveElements.splice(s, 1);
          }
          if (t) {
            const s = this._fetchNamespace(t);
            s && s.insertNode(e, i);
          }
          r && this.collectEnterElement(e);
        }
        collectEnterElement(t) {
          this.collectedEnterElements.push(t);
        }
        markElementAsDisabled(t, e) {
          e
            ? this.disabledNodes.has(t) ||
              (this.disabledNodes.add(t), On(t, _m))
            : this.disabledNodes.has(t) &&
              (this.disabledNodes.delete(t), bs(t, _m));
        }
        removeNode(t, e, i, r) {
          if (_u(e)) {
            const o = t ? this._fetchNamespace(t) : null;
            if (
              (o ? o.removeNode(e, r) : this.markElementAsRemoved(t, e, !1, r),
              i)
            ) {
              const s = this.namespacesByHostElement.get(e);
              s && s.id !== t && s.removeNode(e, r);
            }
          } else this._onRemovalComplete(e, r);
        }
        markElementAsRemoved(t, e, i, r, o) {
          this.collectedLeaveElements.push(e),
            (e[Rn] = {
              namespaceId: t,
              setForRemoval: r,
              hasAnimation: i,
              removedBeforeQueried: !1,
              previousTriggersValues: o,
            });
        }
        listen(t, e, i, r, o) {
          return _u(e) ? this._fetchNamespace(t).listen(e, i, r, o) : () => {};
        }
        _buildInstruction(t, e, i, r, o) {
          return t.transition.build(
            this.driver,
            t.element,
            t.fromState.value,
            t.toState.value,
            i,
            r,
            t.fromState.options,
            t.toState.options,
            e,
            o
          );
        }
        destroyInnerAnimations(t) {
          let e = this.driver.query(t, ou, !0);
          e.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(t, sm, !0)),
              e.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(t) {
          const e = this.playersByElement.get(t);
          e &&
            e.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(t) {
          const e = this.playersByQueriedElement.get(t);
          e && e.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((t) => {
            if (this.players.length) return Er(this.players).onDone(() => t());
            t();
          });
        }
        processLeaveNode(t) {
          const e = t[Rn];
          if (e && e.setForRemoval) {
            if (((t[Rn] = kD), e.namespaceId)) {
              this.destroyInnerAnimations(t);
              const i = this._fetchNamespace(e.namespaceId);
              i && i.clearElementCache(t);
            }
            this._onRemovalComplete(t, e.setForRemoval);
          }
          t.classList?.contains(_m) && this.markElementAsDisabled(t, !1),
            this.driver.query(t, ".ng-animate-disabled", !0).forEach((i) => {
              this.markElementAsDisabled(i, !1);
            });
        }
        flush(t = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, r) =>
                this._balanceNamespaceList(i, r)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              On(this.collectedEnterElements[i], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              e = this._flushAnimations(i, t);
            } finally {
              for (let r = 0; r < i.length; r++) i[r]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? Er(e).onDone(() => {
                    i.forEach((r) => r());
                  })
                : i.forEach((r) => r());
          }
        }
        reportError(t) {
          throw (function sB(n) {
            return new S(3402, !1);
          })();
        }
        _flushAnimations(t, e) {
          const i = new pu(),
            r = [],
            o = new Map(),
            s = [],
            a = new Map(),
            l = new Map(),
            c = new Map(),
            u = new Set();
          this.disabledNodes.forEach((L) => {
            u.add(L);
            const U = this.driver.query(L, ".ng-animate-queued", !0);
            for (let Y = 0; Y < U.length; Y++) u.add(U[Y]);
          });
          const d = this.bodyNode,
            f = Array.from(this.statesByElement.keys()),
            p = FD(f, this.collectedEnterElements),
            _ = new Map();
          let y = 0;
          p.forEach((L, U) => {
            const Y = om + y++;
            _.set(U, Y), L.forEach((De) => On(De, Y));
          });
          const w = [],
            D = new Set(),
            A = new Set();
          for (let L = 0; L < this.collectedLeaveElements.length; L++) {
            const U = this.collectedLeaveElements[L],
              Y = U[Rn];
            Y &&
              Y.setForRemoval &&
              (w.push(U),
              D.add(U),
              Y.hasAnimation
                ? this.driver
                    .query(U, ".ng-star-inserted", !0)
                    .forEach((De) => D.add(De))
                : A.add(U));
          }
          const E = new Map(),
            O = FD(f, Array.from(D));
          O.forEach((L, U) => {
            const Y = iu + y++;
            E.set(U, Y), L.forEach((De) => On(De, Y));
          }),
            t.push(() => {
              p.forEach((L, U) => {
                const Y = _.get(U);
                L.forEach((De) => bs(De, Y));
              }),
                O.forEach((L, U) => {
                  const Y = E.get(U);
                  L.forEach((De) => bs(De, Y));
                }),
                w.forEach((L) => {
                  this.processLeaveNode(L);
                });
            });
          const te = [],
            ve = [];
          for (let L = this._namespaceList.length - 1; L >= 0; L--)
            this._namespaceList[L].drainQueuedTransitions(e).forEach((Y) => {
              const De = Y.player,
                Dt = Y.element;
              if ((te.push(De), this.collectedEnterElements.length)) {
                const Ft = Dt[Rn];
                if (Ft && Ft.setForMove) {
                  if (
                    Ft.previousTriggersValues &&
                    Ft.previousTriggersValues.has(Y.triggerName)
                  ) {
                    const So = Ft.previousTriggersValues.get(Y.triggerName),
                      Vn = this.statesByElement.get(Y.element);
                    if (Vn && Vn.has(Y.triggerName)) {
                      const Pd = Vn.get(Y.triggerName);
                      (Pd.value = So), Vn.set(Y.triggerName, Pd);
                    }
                  }
                  return void De.destroy();
                }
              }
              const Oi = !d || !this.driver.containsElement(d, Dt),
                Mn = E.get(Dt),
                Nr = _.get(Dt),
                Ke = this._buildInstruction(Y, i, Nr, Mn, Oi);
              if (Ke.errors && Ke.errors.length) return void ve.push(Ke);
              if (Oi)
                return (
                  De.onStart(() => so(Dt, Ke.fromStyles)),
                  De.onDestroy(() => bi(Dt, Ke.toStyles)),
                  void r.push(De)
                );
              if (Y.isFallbackTransition)
                return (
                  De.onStart(() => so(Dt, Ke.fromStyles)),
                  De.onDestroy(() => bi(Dt, Ke.toStyles)),
                  void r.push(De)
                );
              const cx = [];
              Ke.timelines.forEach((Ft) => {
                (Ft.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(Ft.element) || cx.push(Ft);
              }),
                (Ke.timelines = cx),
                i.append(Dt, Ke.timelines),
                s.push({ instruction: Ke, player: De, element: Dt }),
                Ke.queriedElements.forEach((Ft) => mn(a, Ft, []).push(De)),
                Ke.preStyleProps.forEach((Ft, So) => {
                  if (Ft.size) {
                    let Vn = l.get(So);
                    Vn || l.set(So, (Vn = new Set())),
                      Ft.forEach((Pd, t_) => Vn.add(t_));
                  }
                }),
                Ke.postStyleProps.forEach((Ft, So) => {
                  let Vn = c.get(So);
                  Vn || c.set(So, (Vn = new Set())),
                    Ft.forEach((Pd, t_) => Vn.add(t_));
                });
            });
          if (ve.length) {
            const L = [];
            ve.forEach((U) => {
              L.push(
                (function aB(n, t) {
                  return new S(3505, !1);
                })()
              );
            }),
              te.forEach((U) => U.destroy()),
              this.reportError(L);
          }
          const Ye = new Map(),
            Cn = new Map();
          s.forEach((L) => {
            const U = L.element;
            i.has(U) &&
              (Cn.set(U, U),
              this._beforeAnimationBuild(
                L.player.namespaceId,
                L.instruction,
                Ye
              ));
          }),
            r.forEach((L) => {
              const U = L.element;
              this._getPreviousPlayers(
                U,
                !1,
                L.namespaceId,
                L.triggerName,
                null
              ).forEach((De) => {
                mn(Ye, U, []).push(De), De.destroy();
              });
            });
          const wn = w.filter((L) => ND(L, l, c)),
            Dn = new Map();
          OD(Dn, this.driver, A, c, Ki).forEach((L) => {
            ND(L, l, c) && wn.push(L);
          });
          const ur = new Map();
          p.forEach((L, U) => {
            OD(ur, this.driver, new Set(L), l, "!");
          }),
            wn.forEach((L) => {
              const U = Dn.get(L),
                Y = ur.get(L);
              Dn.set(
                L,
                new Map([
                  ...Array.from(U?.entries() ?? []),
                  ...Array.from(Y?.entries() ?? []),
                ])
              );
            });
          const ti = [],
            js = [],
            Hs = {};
          s.forEach((L) => {
            const { element: U, player: Y, instruction: De } = L;
            if (i.has(U)) {
              if (u.has(U))
                return (
                  Y.onDestroy(() => bi(U, De.toStyles)),
                  (Y.disabled = !0),
                  Y.overrideTotalTime(De.totalTime),
                  void r.push(Y)
                );
              let Dt = Hs;
              if (Cn.size > 1) {
                let Mn = U;
                const Nr = [];
                for (; (Mn = Mn.parentNode); ) {
                  const Ke = Cn.get(Mn);
                  if (Ke) {
                    Dt = Ke;
                    break;
                  }
                  Nr.push(Mn);
                }
                Nr.forEach((Ke) => Cn.set(Ke, Dt));
              }
              const Oi = this._buildAnimation(Y.namespaceId, De, Ye, o, ur, Dn);
              if ((Y.setRealPlayer(Oi), Dt === Hs)) ti.push(Y);
              else {
                const Mn = this.playersByElement.get(Dt);
                Mn && Mn.length && (Y.parentPlayer = Er(Mn)), r.push(Y);
              }
            } else
              so(U, De.fromStyles),
                Y.onDestroy(() => bi(U, De.toStyles)),
                js.push(Y),
                u.has(U) && r.push(Y);
          }),
            js.forEach((L) => {
              const U = o.get(L.element);
              if (U && U.length) {
                const Y = Er(U);
                L.setRealPlayer(Y);
              }
            }),
            r.forEach((L) => {
              L.parentPlayer ? L.syncPlayerEvents(L.parentPlayer) : L.destroy();
            });
          for (let L = 0; L < w.length; L++) {
            const U = w[L],
              Y = U[Rn];
            if ((bs(U, iu), Y && Y.hasAnimation)) continue;
            let De = [];
            if (a.size) {
              let Oi = a.get(U);
              Oi && Oi.length && De.push(...Oi);
              let Mn = this.driver.query(U, sm, !0);
              for (let Nr = 0; Nr < Mn.length; Nr++) {
                let Ke = a.get(Mn[Nr]);
                Ke && Ke.length && De.push(...Ke);
              }
            }
            const Dt = De.filter((Oi) => !Oi.destroyed);
            Dt.length ? d2(this, U, Dt) : this.processLeaveNode(U);
          }
          return (
            (w.length = 0),
            ti.forEach((L) => {
              this.players.push(L),
                L.onDone(() => {
                  L.destroy();
                  const U = this.players.indexOf(L);
                  this.players.splice(U, 1);
                }),
                L.play();
            }),
            ti
          );
        }
        elementContainsData(t, e) {
          let i = !1;
          const r = e[Rn];
          return (
            r && r.setForRemoval && (i = !0),
            this.playersByElement.has(e) && (i = !0),
            this.playersByQueriedElement.has(e) && (i = !0),
            this.statesByElement.has(e) && (i = !0),
            this._fetchNamespace(t).elementContainsData(e) || i
          );
        }
        afterFlush(t) {
          this._flushFns.push(t);
        }
        afterFlushAnimationsDone(t) {
          this._whenQuietFns.push(t);
        }
        _getPreviousPlayers(t, e, i, r, o) {
          let s = [];
          if (e) {
            const a = this.playersByQueriedElement.get(t);
            a && (s = a);
          } else {
            const a = this.playersByElement.get(t);
            if (a) {
              const l = !o || o == za;
              a.forEach((c) => {
                c.queued || (!l && c.triggerName != r) || s.push(c);
              });
            }
          }
          return (
            (i || r) &&
              (s = s.filter(
                (a) => !((i && i != a.namespaceId) || (r && r != a.triggerName))
              )),
            s
          );
        }
        _beforeAnimationBuild(t, e, i) {
          const o = e.element,
            s = e.isRemovalTransition ? void 0 : t,
            a = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const l of e.timelines) {
            const c = l.element,
              u = c !== o,
              d = mn(i, c, []);
            this._getPreviousPlayers(c, u, s, a, e.toState).forEach((p) => {
              const _ = p.getRealPlayer();
              _.beforeDestroy && _.beforeDestroy(), p.destroy(), d.push(p);
            });
          }
          so(o, e.fromStyles);
        }
        _buildAnimation(t, e, i, r, o, s) {
          const a = e.triggerName,
            l = e.element,
            c = [],
            u = new Set(),
            d = new Set(),
            f = e.timelines.map((_) => {
              const y = _.element;
              u.add(y);
              const w = y[Rn];
              if (w && w.removedBeforeQueried)
                return new Ha(_.duration, _.delay);
              const D = y !== l,
                A = (function h2(n) {
                  const t = [];
                  return PD(n, t), t;
                })((i.get(y) || r2).map((Ye) => Ye.getRealPlayer())).filter(
                  (Ye) => !!Ye.element && Ye.element === y
                ),
                E = o.get(y),
                O = s.get(y),
                te = aD(0, this._normalizer, 0, _.keyframes, E, O),
                ve = this._buildPlayer(_, te, A);
              if ((_.subTimeline && r && d.add(y), D)) {
                const Ye = new bm(t, a, y);
                Ye.setRealPlayer(ve), c.push(Ye);
              }
              return ve;
            });
          c.forEach((_) => {
            mn(this.playersByQueriedElement, _.element, []).push(_),
              _.onDone(() =>
                (function l2(n, t, e) {
                  let i = n.get(t);
                  if (i) {
                    if (i.length) {
                      const r = i.indexOf(e);
                      i.splice(r, 1);
                    }
                    0 == i.length && n.delete(t);
                  }
                  return i;
                })(this.playersByQueriedElement, _.element, _)
              );
          }),
            u.forEach((_) => On(_, gD));
          const p = Er(f);
          return (
            p.onDestroy(() => {
              u.forEach((_) => bs(_, gD)), bi(l, e.toStyles);
            }),
            d.forEach((_) => {
              mn(r, _, []).push(p);
            }),
            p
          );
        }
        _buildPlayer(t, e, i) {
          return e.length > 0
            ? this.driver.animate(
                t.element,
                e,
                t.duration,
                t.delay,
                t.easing,
                i
              )
            : new Ha(t.duration, t.delay);
        }
      }
      class bm {
        constructor(t, e, i) {
          (this.namespaceId = t),
            (this.triggerName = e),
            (this.element = i),
            (this._player = new Ha()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(t) {
          this._containsRealPlayer ||
            ((this._player = t),
            this._queuedCallbacks.forEach((e, i) => {
              e.forEach((r) => Jp(t, i, void 0, r));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(t.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(t) {
          this.totalTime = t;
        }
        syncPlayerEvents(t) {
          const e = this._player;
          e.triggerCallback && t.onStart(() => e.triggerCallback("start")),
            t.onDone(() => this.finish()),
            t.onDestroy(() => this.destroy());
        }
        _queueEvent(t, e) {
          mn(this._queuedCallbacks, t, []).push(e);
        }
        onDone(t) {
          this.queued && this._queueEvent("done", t), this._player.onDone(t);
        }
        onStart(t) {
          this.queued && this._queueEvent("start", t), this._player.onStart(t);
        }
        onDestroy(t) {
          this.queued && this._queueEvent("destroy", t),
            this._player.onDestroy(t);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(t) {
          this.queued || this._player.setPosition(t);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(t) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(t);
        }
      }
      function _u(n) {
        return n && 1 === n.nodeType;
      }
      function RD(n, t) {
        const e = n.style.display;
        return (n.style.display = t ?? "none"), e;
      }
      function OD(n, t, e, i, r) {
        const o = [];
        e.forEach((l) => o.push(RD(l)));
        const s = [];
        i.forEach((l, c) => {
          const u = new Map();
          l.forEach((d) => {
            const f = t.computeStyle(c, d, r);
            u.set(d, f), (!f || 0 == f.length) && ((c[Rn] = o2), s.push(c));
          }),
            n.set(c, u);
        });
        let a = 0;
        return e.forEach((l) => RD(l, o[a++])), s;
      }
      function FD(n, t) {
        const e = new Map();
        if ((n.forEach((a) => e.set(a, [])), 0 == t.length)) return e;
        const r = new Set(t),
          o = new Map();
        function s(a) {
          if (!a) return 1;
          let l = o.get(a);
          if (l) return l;
          const c = a.parentNode;
          return (l = e.has(c) ? c : r.has(c) ? 1 : s(c)), o.set(a, l), l;
        }
        return (
          t.forEach((a) => {
            const l = s(a);
            1 !== l && e.get(l).push(a);
          }),
          e
        );
      }
      function On(n, t) {
        n.classList?.add(t);
      }
      function bs(n, t) {
        n.classList?.remove(t);
      }
      function d2(n, t, e) {
        Er(e).onDone(() => n.processLeaveNode(t));
      }
      function PD(n, t) {
        for (let e = 0; e < n.length; e++) {
          const i = n[e];
          i instanceof oD ? PD(i.players, t) : t.push(i);
        }
      }
      function ND(n, t, e) {
        const i = e.get(n);
        if (!i) return !1;
        let r = t.get(n);
        return r ? i.forEach((o) => r.add(o)) : t.set(n, i), e.delete(n), !0;
      }
      class vu {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (r, o) => {}),
            (this._transitionEngine = new a2(t, e, i)),
            (this._timelineEngine = new XB(t, e, i)),
            (this._transitionEngine.onRemovalComplete = (r, o) =>
              this.onRemovalComplete(r, o));
        }
        registerTrigger(t, e, i, r, o) {
          const s = t + "-" + r;
          let a = this._triggerCache[s];
          if (!a) {
            const l = [],
              u = um(this._driver, o, l, []);
            if (l.length)
              throw (function ZV(n, t) {
                return new S(3404, !1);
              })();
            (a = (function YB(n, t, e) {
              return new KB(n, t, e);
            })(r, u, this._normalizer)),
              (this._triggerCache[s] = a);
          }
          this._transitionEngine.registerTrigger(e, r, a);
        }
        register(t, e) {
          this._transitionEngine.register(t, e);
        }
        destroy(t, e) {
          this._transitionEngine.destroy(t, e);
        }
        onInsert(t, e, i, r) {
          this._transitionEngine.insertNode(t, e, i, r);
        }
        onRemove(t, e, i, r) {
          this._transitionEngine.removeNode(t, e, r || !1, i);
        }
        disableAnimations(t, e) {
          this._transitionEngine.markElementAsDisabled(t, e);
        }
        process(t, e, i, r) {
          if ("@" == i.charAt(0)) {
            const [o, s] = lD(i);
            this._timelineEngine.command(o, e, s, r);
          } else this._transitionEngine.trigger(t, e, i, r);
        }
        listen(t, e, i, r, o) {
          if ("@" == i.charAt(0)) {
            const [s, a] = lD(i);
            return this._timelineEngine.listen(s, e, a, o);
          }
          return this._transitionEngine.listen(t, e, i, r, o);
        }
        flush(t = -1) {
          this._transitionEngine.flush(t);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      let m2 = (() => {
        class n {
          constructor(e, i, r) {
            (this._element = e),
              (this._startStyles = i),
              (this._endStyles = r),
              (this._state = 0);
            let o = n.initialStylesByElement.get(e);
            o || n.initialStylesByElement.set(e, (o = new Map())),
              (this._initialStyles = o);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                bi(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (bi(this._element, this._initialStyles),
                this._endStyles &&
                  (bi(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (n.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (so(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (so(this._element, this._endStyles),
                  (this._endStyles = null)),
                bi(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (n.initialStylesByElement = new WeakMap()), n;
      })();
      function Cm(n) {
        let t = null;
        return (
          n.forEach((e, i) => {
            (function g2(n) {
              return "display" === n || "position" === n;
            })(i) && ((t = t || new Map()), t.set(i, e));
          }),
          t
        );
      }
      class LD {
        constructor(t, e, i, r) {
          (this.element = t),
            (this.keyframes = e),
            (this.options = i),
            (this._specialStyles = r),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const t = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            t,
            this.options
          )),
            (this._finalKeyframe = t.length ? t[t.length - 1] : new Map()),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(t) {
          const e = [];
          return (
            t.forEach((i) => {
              e.push(Object.fromEntries(i));
            }),
            e
          );
        }
        _triggerWebAnimation(t, e, i) {
          return t.animate(this._convertKeyframesToObject(e), i);
        }
        onStart(t) {
          this._originalOnStartFns.push(t), this._onStartFns.push(t);
        }
        onDone(t) {
          this._originalOnDoneFns.push(t), this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((t) => t()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        setPosition(t) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = t * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const t = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((i, r) => {
              "offset" !== r &&
                t.set(r, this._finished ? i : wD(this.element, r));
            }),
            (this.currentSnapshot = t);
        }
        triggerCallback(t) {
          const e = "start" === t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class _2 {
        validateStyleProperty(t) {
          return !0;
        }
        validateAnimatableStyleProperty(t) {
          return !0;
        }
        matchesElement(t, e) {
          return !1;
        }
        containsElement(t, e) {
          return hD(t, e);
        }
        getParentElement(t) {
          return im(t);
        }
        query(t, e, i) {
          return fD(t, e, i);
        }
        computeStyle(t, e, i) {
          return window.getComputedStyle(t)[e];
        }
        animate(t, e, i, r, o, s = []) {
          const l = {
            duration: i,
            delay: r,
            fill: 0 == r ? "both" : "forwards",
          };
          o && (l.easing = o);
          const c = new Map(),
            u = s.filter((p) => p instanceof LD);
          (function bB(n, t) {
            return 0 === n || 0 === t;
          })(i, r) &&
            u.forEach((p) => {
              p.currentSnapshot.forEach((_, y) => c.set(y, _));
            });
          let d = (function gB(n) {
            return n.length
              ? n[0] instanceof Map
                ? n
                : n.map((t) => _D(t))
              : [];
          })(e).map((p) => Tr(p));
          d = (function CB(n, t, e) {
            if (e.size && t.length) {
              let i = t[0],
                r = [];
              if (
                (e.forEach((o, s) => {
                  i.has(s) || r.push(s), i.set(s, o);
                }),
                r.length)
              )
                for (let o = 1; o < t.length; o++) {
                  let s = t[o];
                  r.forEach((a) => s.set(a, wD(n, a)));
                }
            }
            return t;
          })(t, d, c);
          const f = (function p2(n, t) {
            let e = null,
              i = null;
            return (
              Array.isArray(t) && t.length
                ? ((e = Cm(t[0])), t.length > 1 && (i = Cm(t[t.length - 1])))
                : t instanceof Map && (e = Cm(t)),
              e || i ? new m2(n, e, i) : null
            );
          })(t, d);
          return new LD(t, d, l, f);
        }
      }
      let v2 = (() => {
        class n extends tD {
          constructor(e, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(i.body, {
                id: "0",
                encapsulation: jn.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const r = Array.isArray(e) ? iD(e) : e;
            return (
              VD(this._renderer, null, i, "register", [r]),
              new y2(i, this._renderer)
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(da), b(ee));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class y2 extends class TV {} {
        constructor(t, e) {
          super(), (this._id = t), (this._renderer = e);
        }
        create(t, e) {
          return new b2(this._id, t, e || {}, this._renderer);
        }
      }
      class b2 {
        constructor(t, e, i, r) {
          (this.id = t),
            (this.element = e),
            (this._renderer = r),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", i);
        }
        _listen(t, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${t}`, e);
        }
        _command(t, ...e) {
          return VD(this._renderer, this.element, this.id, t, e);
        }
        onDone(t) {
          this._listen("done", t);
        }
        onStart(t) {
          this._listen("start", t);
        }
        onDestroy(t) {
          this._listen("destroy", t);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(t) {
          this._command("setPosition", t);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function VD(n, t, e, i, r) {
        return n.setProperty(t, `@@${e}:${i}`, r);
      }
      const BD = "@.disabled";
      let C2 = (() => {
        class n {
          constructor(e, i, r) {
            (this.delegate = e),
              (this.engine = i),
              (this._zone = r),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (i.onRemovalComplete = (o, s) => {
                const a = s?.parentNode(o);
                a && s.removeChild(a, o);
              });
          }
          createRenderer(e, i) {
            const o = this.delegate.createRenderer(e, i);
            if (!(e && i && i.data && i.data.animation)) {
              let u = this._rendererCache.get(o);
              return (
                u ||
                  ((u = new jD("", o, this.engine)),
                  this._rendererCache.set(o, u)),
                u
              );
            }
            const s = i.id,
              a = i.id + "-" + this._currentId;
            this._currentId++, this.engine.register(a, e);
            const l = (u) => {
              Array.isArray(u)
                ? u.forEach(l)
                : this.engine.registerTrigger(s, a, e, u.name, u);
            };
            return i.data.animation.forEach(l), new w2(this, a, o, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, i, r) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => i(r))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((o) => {
                        const [s, a] = o;
                        s(a);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, r]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(da), b(vu), b(G));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class jD {
        constructor(t, e, i) {
          (this.namespaceId = t),
            (this.delegate = e),
            (this.engine = i),
            (this.destroyNode = this.delegate.destroyNode
              ? (r) => e.destroyNode(r)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy();
        }
        createElement(t, e) {
          return this.delegate.createElement(t, e);
        }
        createComment(t) {
          return this.delegate.createComment(t);
        }
        createText(t) {
          return this.delegate.createText(t);
        }
        appendChild(t, e) {
          this.delegate.appendChild(t, e),
            this.engine.onInsert(this.namespaceId, e, t, !1);
        }
        insertBefore(t, e, i, r = !0) {
          this.delegate.insertBefore(t, e, i),
            this.engine.onInsert(this.namespaceId, e, t, r);
        }
        removeChild(t, e, i) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, i);
        }
        selectRootElement(t, e) {
          return this.delegate.selectRootElement(t, e);
        }
        parentNode(t) {
          return this.delegate.parentNode(t);
        }
        nextSibling(t) {
          return this.delegate.nextSibling(t);
        }
        setAttribute(t, e, i, r) {
          this.delegate.setAttribute(t, e, i, r);
        }
        removeAttribute(t, e, i) {
          this.delegate.removeAttribute(t, e, i);
        }
        addClass(t, e) {
          this.delegate.addClass(t, e);
        }
        removeClass(t, e) {
          this.delegate.removeClass(t, e);
        }
        setStyle(t, e, i, r) {
          this.delegate.setStyle(t, e, i, r);
        }
        removeStyle(t, e, i) {
          this.delegate.removeStyle(t, e, i);
        }
        setProperty(t, e, i) {
          "@" == e.charAt(0) && e == BD
            ? this.disableAnimations(t, !!i)
            : this.delegate.setProperty(t, e, i);
        }
        setValue(t, e) {
          this.delegate.setValue(t, e);
        }
        listen(t, e, i) {
          return this.delegate.listen(t, e, i);
        }
        disableAnimations(t, e) {
          this.engine.disableAnimations(t, e);
        }
      }
      class w2 extends jD {
        constructor(t, e, i, r) {
          super(e, i, r), (this.factory = t), (this.namespaceId = e);
        }
        setProperty(t, e, i) {
          "@" == e.charAt(0)
            ? "." == e.charAt(1) && e == BD
              ? this.disableAnimations(t, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, t, e.slice(1), i)
            : this.delegate.setProperty(t, e, i);
        }
        listen(t, e, i) {
          if ("@" == e.charAt(0)) {
            const r = (function D2(n) {
              switch (n) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return n;
              }
            })(t);
            let o = e.slice(1),
              s = "";
            return (
              "@" != o.charAt(0) &&
                ([o, s] = (function M2(n) {
                  const t = n.indexOf(".");
                  return [n.substring(0, t), n.slice(t + 1)];
                })(o)),
              this.engine.listen(this.namespaceId, r, o, s, (a) => {
                this.factory.scheduleListenerCallback(a._data || -1, i, a);
              })
            );
          }
          return this.delegate.listen(t, e, i);
        }
      }
      const HD = [
          { provide: tD, useClass: v2 },
          {
            provide: mm,
            useFactory: function S2() {
              return new zB();
            },
          },
          {
            provide: vu,
            useClass: (() => {
              class n extends vu {
                constructor(e, i, r, o) {
                  super(e.body, i, r);
                }
                ngOnDestroy() {
                  this.flush();
                }
              }
              return (
                (n.ɵfac = function (e) {
                  return new (e || n)(b(ee), b(rm), b(mm), b(ys));
                }),
                (n.ɵprov = k({ token: n, factory: n.ɵfac })),
                n
              );
            })(),
          },
          {
            provide: da,
            useFactory: function T2(n, t, e) {
              return new C2(n, t, e);
            },
            deps: [nu, vu, G],
          },
        ],
        wm = [
          { provide: rm, useFactory: () => new _2() },
          { provide: pn, useValue: "BrowserAnimations" },
          ...HD,
        ],
        UD = [
          { provide: rm, useClass: pD },
          { provide: pn, useValue: "NoopAnimations" },
          ...HD,
        ];
      let x2 = (() => {
        class n {
          static withConfig(e) {
            return { ngModule: n, providers: e.disableAnimations ? UD : wm };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = Q({ type: n })),
          (n.ɵinj = Z({ providers: wm, imports: [K0] })),
          n
        );
      })();
      const { isArray: A2 } = Array,
        { getPrototypeOf: I2, prototype: k2, keys: R2 } = Object;
      function $D(n) {
        if (1 === n.length) {
          const t = n[0];
          if (A2(t)) return { args: t, keys: null };
          if (
            (function O2(n) {
              return n && "object" == typeof n && I2(n) === k2;
            })(t)
          ) {
            const e = R2(t);
            return { args: e.map((i) => t[i]), keys: e };
          }
        }
        return { args: n, keys: null };
      }
      const { isArray: F2 } = Array;
      function Dm(n) {
        return q((t) =>
          (function P2(n, t) {
            return F2(t) ? n(...t) : n(t);
          })(n, t)
        );
      }
      function zD(n, t) {
        return n.reduce((e, i, r) => ((e[i] = t[r]), e), {});
      }
      let GD = (() => {
          class n {
            constructor(e, i) {
              (this._renderer = e),
                (this._elementRef = i),
                (this.onChange = (r) => {}),
                (this.onTouched = () => {});
            }
            setProperty(e, i) {
              this._renderer.setProperty(this._elementRef.nativeElement, e, i);
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            registerOnChange(e) {
              this.onChange = e;
            }
            setDisabledState(e) {
              this.setProperty("disabled", e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(ji), h(ie));
            }),
            (n.ɵdir = R({ type: n })),
            n
          );
        })(),
        lo = (() => {
          class n extends GD {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = je(n)))(i || n);
              };
            })()),
            (n.ɵdir = R({ type: n, features: [B] })),
            n
          );
        })();
      const Fn = new x("NgValueAccessor"),
        L2 = { provide: Fn, useExisting: Me(() => Pn), multi: !0 },
        B2 = new x("CompositionEventMode");
      let Pn = (() => {
        class n extends GD {
          constructor(e, i, r) {
            super(e, i),
              (this._compositionMode = r),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function V2() {
                  const n = vi() ? vi().getUserAgent() : "";
                  return /android (\d+)/.test(n.toLowerCase());
                })());
          }
          writeValue(e) {
            this.setProperty("value", e ?? "");
          }
          _handleInput(e) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(e);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(e) {
            (this._composing = !1), this._compositionMode && this.onChange(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(ji), h(ie), h(B2, 8));
          }),
          (n.ɵdir = R({
            type: n,
            selectors: [
              ["input", "formControlName", "", 3, "type", "checkbox"],
              ["textarea", "formControlName", ""],
              ["input", "formControl", "", 3, "type", "checkbox"],
              ["textarea", "formControl", ""],
              ["input", "ngModel", "", 3, "type", "checkbox"],
              ["textarea", "ngModel", ""],
              ["", "ngDefaultControl", ""],
            ],
            hostBindings: function (e, i) {
              1 & e &&
                I("input", function (o) {
                  return i._handleInput(o.target.value);
                })("blur", function () {
                  return i.onTouched();
                })("compositionstart", function () {
                  return i._compositionStart();
                })("compositionend", function (o) {
                  return i._compositionEnd(o.target.value);
                });
            },
            features: [ae([L2]), B],
          })),
          n
        );
      })();
      function xr(n) {
        return (
          null == n ||
          (("string" == typeof n || Array.isArray(n)) && 0 === n.length)
        );
      }
      function YD(n) {
        return null != n && "number" == typeof n.length;
      }
      const Ot = new x("NgValidators"),
        Ar = new x("NgAsyncValidators"),
        H2 =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class it {
        static min(t) {
          return (function KD(n) {
            return (t) => {
              if (xr(t.value) || xr(n)) return null;
              const e = parseFloat(t.value);
              return !isNaN(e) && e < n
                ? { min: { min: n, actual: t.value } }
                : null;
            };
          })(t);
        }
        static max(t) {
          return (function ZD(n) {
            return (t) => {
              if (xr(t.value) || xr(n)) return null;
              const e = parseFloat(t.value);
              return !isNaN(e) && e > n
                ? { max: { max: n, actual: t.value } }
                : null;
            };
          })(t);
        }
        static required(t) {
          return (function QD(n) {
            return xr(n.value) ? { required: !0 } : null;
          })(t);
        }
        static requiredTrue(t) {
          return (function XD(n) {
            return !0 === n.value ? null : { required: !0 };
          })(t);
        }
        static email(t) {
          return (function JD(n) {
            return xr(n.value) || H2.test(n.value) ? null : { email: !0 };
          })(t);
        }
        static minLength(t) {
          return (function eM(n) {
            return (t) =>
              xr(t.value) || !YD(t.value)
                ? null
                : t.value.length < n
                ? {
                    minlength: {
                      requiredLength: n,
                      actualLength: t.value.length,
                    },
                  }
                : null;
          })(t);
        }
        static maxLength(t) {
          return tM(t);
        }
        static pattern(t) {
          return (function nM(n) {
            if (!n) return bu;
            let t, e;
            return (
              "string" == typeof n
                ? ((e = ""),
                  "^" !== n.charAt(0) && (e += "^"),
                  (e += n),
                  "$" !== n.charAt(n.length - 1) && (e += "$"),
                  (t = new RegExp(e)))
                : ((e = n.toString()), (t = n)),
              (i) => {
                if (xr(i.value)) return null;
                const r = i.value;
                return t.test(r)
                  ? null
                  : { pattern: { requiredPattern: e, actualValue: r } };
              }
            );
          })(t);
        }
        static nullValidator(t) {
          return null;
        }
        static compose(t) {
          return lM(t);
        }
        static composeAsync(t) {
          return cM(t);
        }
      }
      function tM(n) {
        return (t) =>
          YD(t.value) && t.value.length > n
            ? { maxlength: { requiredLength: n, actualLength: t.value.length } }
            : null;
      }
      function bu(n) {
        return null;
      }
      function iM(n) {
        return null != n;
      }
      function rM(n) {
        return wa(n) ? rt(n) : n;
      }
      function oM(n) {
        let t = {};
        return (
          n.forEach((e) => {
            t = null != e ? { ...t, ...e } : t;
          }),
          0 === Object.keys(t).length ? null : t
        );
      }
      function sM(n, t) {
        return t.map((e) => e(n));
      }
      function aM(n) {
        return n.map((t) =>
          (function U2(n) {
            return !n.validate;
          })(t)
            ? t
            : (e) => t.validate(e)
        );
      }
      function lM(n) {
        if (!n) return null;
        const t = n.filter(iM);
        return 0 == t.length
          ? null
          : function (e) {
              return oM(sM(e, t));
            };
      }
      function Mm(n) {
        return null != n ? lM(aM(n)) : null;
      }
      function cM(n) {
        if (!n) return null;
        const t = n.filter(iM);
        return 0 == t.length
          ? null
          : function (e) {
              return (function qD(...n) {
                const t = D_(n),
                  { args: e, keys: i } = $D(n),
                  r = new Oe((o) => {
                    const { length: s } = e;
                    if (!s) return void o.complete();
                    const a = new Array(s);
                    let l = s,
                      c = s;
                    for (let u = 0; u < s; u++) {
                      let d = !1;
                      zt(e[u]).subscribe(
                        Ue(
                          o,
                          (f) => {
                            d || ((d = !0), c--), (a[u] = f);
                          },
                          () => l--,
                          void 0,
                          () => {
                            (!l || !d) &&
                              (c || o.next(i ? zD(i, a) : a), o.complete());
                          }
                        )
                      );
                    }
                  });
                return t ? r.pipe(Dm(t)) : r;
              })(sM(e, t).map(rM)).pipe(q(oM));
            };
      }
      function Em(n) {
        return null != n ? cM(aM(n)) : null;
      }
      function uM(n, t) {
        return null === n ? [t] : Array.isArray(n) ? [...n, t] : [n, t];
      }
      function dM(n) {
        return n._rawValidators;
      }
      function hM(n) {
        return n._rawAsyncValidators;
      }
      function Sm(n) {
        return n ? (Array.isArray(n) ? n : [n]) : [];
      }
      function Cu(n, t) {
        return Array.isArray(n) ? n.includes(t) : n === t;
      }
      function fM(n, t) {
        const e = Sm(t);
        return (
          Sm(n).forEach((r) => {
            Cu(e, r) || e.push(r);
          }),
          e
        );
      }
      function pM(n, t) {
        return Sm(t).filter((e) => !Cu(n, e));
      }
      class mM {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(t) {
          (this._rawValidators = t || []),
            (this._composedValidatorFn = Mm(this._rawValidators));
        }
        _setAsyncValidators(t) {
          (this._rawAsyncValidators = t || []),
            (this._composedAsyncValidatorFn = Em(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(t) {
          this._onDestroyCallbacks.push(t);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((t) => t()),
            (this._onDestroyCallbacks = []);
        }
        reset(t) {
          this.control && this.control.reset(t);
        }
        hasError(t, e) {
          return !!this.control && this.control.hasError(t, e);
        }
        getError(t, e) {
          return this.control ? this.control.getError(t, e) : null;
        }
      }
      class $t extends mM {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Ci extends mM {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class gM {
        constructor(t) {
          this._cd = t;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let wi = (() => {
          class n extends gM {
            constructor(e) {
              super(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(Ci, 2));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["", "formControlName", ""],
                ["", "ngModel", ""],
                ["", "formControl", ""],
              ],
              hostVars: 14,
              hostBindings: function (e, i) {
                2 & e &&
                  Pe("ng-untouched", i.isUntouched)("ng-touched", i.isTouched)(
                    "ng-pristine",
                    i.isPristine
                  )("ng-dirty", i.isDirty)("ng-valid", i.isValid)(
                    "ng-invalid",
                    i.isInvalid
                  )("ng-pending", i.isPending);
              },
              features: [B],
            })),
            n
          );
        })(),
        Di = (() => {
          class n extends gM {
            constructor(e) {
              super(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h($t, 10));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["", "formGroupName", ""],
                ["", "formArrayName", ""],
                ["", "ngModelGroup", ""],
                ["", "formGroup", ""],
                ["form", 3, "ngNoForm", ""],
                ["", "ngForm", ""],
              ],
              hostVars: 16,
              hostBindings: function (e, i) {
                2 & e &&
                  Pe("ng-untouched", i.isUntouched)("ng-touched", i.isTouched)(
                    "ng-pristine",
                    i.isPristine
                  )("ng-dirty", i.isDirty)("ng-valid", i.isValid)(
                    "ng-invalid",
                    i.isInvalid
                  )("ng-pending", i.isPending)("ng-submitted", i.isSubmitted);
              },
              features: [B],
            })),
            n
          );
        })();
      const qa = "VALID",
        Du = "INVALID",
        Cs = "PENDING",
        Ga = "DISABLED";
      function Im(n) {
        return (Mu(n) ? n.validators : n) || null;
      }
      function vM(n) {
        return Array.isArray(n) ? Mm(n) : n || null;
      }
      function km(n, t) {
        return (Mu(t) ? t.asyncValidators : n) || null;
      }
      function yM(n) {
        return Array.isArray(n) ? Em(n) : n || null;
      }
      function Mu(n) {
        return null != n && !Array.isArray(n) && "object" == typeof n;
      }
      function bM(n, t, e) {
        const i = n.controls;
        if (!(t ? Object.keys(i) : i).length) throw new S(1e3, "");
        if (!i[e]) throw new S(1001, "");
      }
      function CM(n, t, e) {
        n._forEachChild((i, r) => {
          if (void 0 === e[r]) throw new S(1002, "");
        });
      }
      class Eu {
        constructor(t, e) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            (this._rawValidators = t),
            (this._rawAsyncValidators = e),
            (this._composedValidatorFn = vM(this._rawValidators)),
            (this._composedAsyncValidatorFn = yM(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(t) {
          this._rawValidators = this._composedValidatorFn = t;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(t) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = t;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === qa;
        }
        get invalid() {
          return this.status === Du;
        }
        get pending() {
          return this.status == Cs;
        }
        get disabled() {
          return this.status === Ga;
        }
        get enabled() {
          return this.status !== Ga;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(t) {
          (this._rawValidators = t), (this._composedValidatorFn = vM(t));
        }
        setAsyncValidators(t) {
          (this._rawAsyncValidators = t),
            (this._composedAsyncValidatorFn = yM(t));
        }
        addValidators(t) {
          this.setValidators(fM(t, this._rawValidators));
        }
        addAsyncValidators(t) {
          this.setAsyncValidators(fM(t, this._rawAsyncValidators));
        }
        removeValidators(t) {
          this.setValidators(pM(t, this._rawValidators));
        }
        removeAsyncValidators(t) {
          this.setAsyncValidators(pM(t, this._rawAsyncValidators));
        }
        hasValidator(t) {
          return Cu(this._rawValidators, t);
        }
        hasAsyncValidator(t) {
          return Cu(this._rawAsyncValidators, t);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(t = {}) {
          (this.touched = !0),
            this._parent && !t.onlySelf && this._parent.markAsTouched(t);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((t) => t.markAllAsTouched());
        }
        markAsUntouched(t = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        markAsDirty(t = {}) {
          (this.pristine = !1),
            this._parent && !t.onlySelf && this._parent.markAsDirty(t);
        }
        markAsPristine(t = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        markAsPending(t = {}) {
          (this.status = Cs),
            !1 !== t.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !t.onlySelf && this._parent.markAsPending(t);
        }
        disable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = Ga),
            (this.errors = null),
            this._forEachChild((i) => {
              i.disable({ ...t, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...t, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!0));
        }
        enable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = qa),
            this._forEachChild((i) => {
              i.enable({ ...t, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            }),
            this._updateAncestors({ ...t, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!1));
        }
        _updateAncestors(t) {
          this._parent &&
            !t.onlySelf &&
            (this._parent.updateValueAndValidity(t),
            t.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(t) {
          this._parent = t;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(t = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === qa || this.status === Cs) &&
                this._runAsyncValidator(t.emitEvent)),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !t.onlySelf &&
              this._parent.updateValueAndValidity(t);
        }
        _updateTreeValidity(t = { emitEvent: !0 }) {
          this._forEachChild((e) => e._updateTreeValidity(t)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? Ga : qa;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(t) {
          if (this.asyncValidator) {
            (this.status = Cs), (this._hasOwnPendingAsyncValidator = !0);
            const e = rM(this.asyncValidator(this));
            this._asyncValidationSubscription = e.subscribe((i) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(i, { emitEvent: t });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(t, e = {}) {
          (this.errors = t), this._updateControlsErrors(!1 !== e.emitEvent);
        }
        get(t) {
          let e = t;
          return null == e ||
            (Array.isArray(e) || (e = e.split(".")), 0 === e.length)
            ? null
            : e.reduce((i, r) => i && i._find(r), this);
        }
        getError(t, e) {
          const i = e ? this.get(e) : this;
          return i && i.errors ? i.errors[t] : null;
        }
        hasError(t, e) {
          return !!this.getError(t, e);
        }
        get root() {
          let t = this;
          for (; t._parent; ) t = t._parent;
          return t;
        }
        _updateControlsErrors(t) {
          (this.status = this._calculateStatus()),
            t && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(t);
        }
        _initObservables() {
          (this.valueChanges = new se()), (this.statusChanges = new se());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? Ga
            : this.errors
            ? Du
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(Cs)
            ? Cs
            : this._anyControlsHaveStatus(Du)
            ? Du
            : qa;
        }
        _anyControlsHaveStatus(t) {
          return this._anyControls((e) => e.status === t);
        }
        _anyControlsDirty() {
          return this._anyControls((t) => t.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((t) => t.touched);
        }
        _updatePristine(t = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        _updateTouched(t = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        _registerOnCollectionChange(t) {
          this._onCollectionChange = t;
        }
        _setUpdateStrategy(t) {
          Mu(t) && null != t.updateOn && (this._updateOn = t.updateOn);
        }
        _parentMarkedDirty(t) {
          return (
            !t &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(t) {
          return null;
        }
      }
      class Su extends Eu {
        constructor(t, e, i) {
          super(Im(e), km(i, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(t, e) {
          return this.controls[t]
            ? this.controls[t]
            : ((this.controls[t] = e),
              e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange),
              e);
        }
        addControl(t, e, i = {}) {
          this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(t, e = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        setControl(t, e, i = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            e && this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        contains(t) {
          return this.controls.hasOwnProperty(t) && this.controls[t].enabled;
        }
        setValue(t, e = {}) {
          CM(this, 0, t),
            Object.keys(t).forEach((i) => {
              bM(this, !0, i),
                this.controls[i].setValue(t[i], {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (Object.keys(t).forEach((i) => {
              const r = this.controls[i];
              r && r.patchValue(t[i], { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = {}, e = {}) {
          this._forEachChild((i, r) => {
            i.reset(t[r], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (t, e, i) => ((t[i] = e.getRawValue()), t)
          );
        }
        _syncPendingControls() {
          let t = this._reduceChildren(
            !1,
            (e, i) => !!i._syncPendingControls() || e
          );
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _forEachChild(t) {
          Object.keys(this.controls).forEach((e) => {
            const i = this.controls[e];
            i && t(i, e);
          });
        }
        _setUpControls() {
          this._forEachChild((t) => {
            t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(t) {
          for (const [e, i] of Object.entries(this.controls))
            if (this.contains(e) && t(i)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (e, i, r) => ((i.enabled || this.disabled) && (e[r] = i.value), e)
          );
        }
        _reduceChildren(t, e) {
          let i = t;
          return (
            this._forEachChild((r, o) => {
              i = e(i, r, o);
            }),
            i
          );
        }
        _allControlsDisabled() {
          for (const t of Object.keys(this.controls))
            if (this.controls[t].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(t) {
          return this.controls.hasOwnProperty(t) ? this.controls[t] : null;
        }
      }
      function Wa(n, t) {
        Rm(n, t),
          t.valueAccessor.writeValue(n.value),
          n.disabled && t.valueAccessor.setDisabledState?.(!0),
          (function Q2(n, t) {
            t.valueAccessor.registerOnChange((e) => {
              (n._pendingValue = e),
                (n._pendingChange = !0),
                (n._pendingDirty = !0),
                "change" === n.updateOn && wM(n, t);
            });
          })(n, t),
          (function J2(n, t) {
            const e = (i, r) => {
              t.valueAccessor.writeValue(i), r && t.viewToModelUpdate(i);
            };
            n.registerOnChange(e),
              t._registerOnDestroy(() => {
                n._unregisterOnChange(e);
              });
          })(n, t),
          (function X2(n, t) {
            t.valueAccessor.registerOnTouched(() => {
              (n._pendingTouched = !0),
                "blur" === n.updateOn && n._pendingChange && wM(n, t),
                "submit" !== n.updateOn && n.markAsTouched();
            });
          })(n, t),
          (function Z2(n, t) {
            if (t.valueAccessor.setDisabledState) {
              const e = (i) => {
                t.valueAccessor.setDisabledState(i);
              };
              n.registerOnDisabledChange(e),
                t._registerOnDestroy(() => {
                  n._unregisterOnDisabledChange(e);
                });
            }
          })(n, t);
      }
      function xu(n, t, e = !0) {
        const i = () => {};
        t.valueAccessor &&
          (t.valueAccessor.registerOnChange(i),
          t.valueAccessor.registerOnTouched(i)),
          Iu(n, t),
          n &&
            (t._invokeOnDestroyCallbacks(),
            n._registerOnCollectionChange(() => {}));
      }
      function Au(n, t) {
        n.forEach((e) => {
          e.registerOnValidatorChange && e.registerOnValidatorChange(t);
        });
      }
      function Rm(n, t) {
        const e = dM(n);
        null !== t.validator
          ? n.setValidators(uM(e, t.validator))
          : "function" == typeof e && n.setValidators([e]);
        const i = hM(n);
        null !== t.asyncValidator
          ? n.setAsyncValidators(uM(i, t.asyncValidator))
          : "function" == typeof i && n.setAsyncValidators([i]);
        const r = () => n.updateValueAndValidity();
        Au(t._rawValidators, r), Au(t._rawAsyncValidators, r);
      }
      function Iu(n, t) {
        let e = !1;
        if (null !== n) {
          if (null !== t.validator) {
            const r = dM(n);
            if (Array.isArray(r) && r.length > 0) {
              const o = r.filter((s) => s !== t.validator);
              o.length !== r.length && ((e = !0), n.setValidators(o));
            }
          }
          if (null !== t.asyncValidator) {
            const r = hM(n);
            if (Array.isArray(r) && r.length > 0) {
              const o = r.filter((s) => s !== t.asyncValidator);
              o.length !== r.length && ((e = !0), n.setAsyncValidators(o));
            }
          }
        }
        const i = () => {};
        return Au(t._rawValidators, i), Au(t._rawAsyncValidators, i), e;
      }
      function wM(n, t) {
        n._pendingDirty && n.markAsDirty(),
          n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
          t.viewToModelUpdate(n._pendingValue),
          (n._pendingChange = !1);
      }
      function DM(n, t) {
        Rm(n, t);
      }
      function EM(n, t) {
        n._syncPendingControls(),
          t.forEach((e) => {
            const i = e.control;
            "submit" === i.updateOn &&
              i._pendingChange &&
              (e.viewToModelUpdate(i._pendingValue), (i._pendingChange = !1));
          });
      }
      const rj = { provide: $t, useExisting: Me(() => Ka) },
        Ya = (() => Promise.resolve(null))();
      let Ka = (() => {
        class n extends $t {
          constructor(e, i) {
            super(),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new se()),
              (this.form = new Su({}, Mm(e), Em(i)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(e) {
            Ya.then(() => {
              const i = this._findContainer(e.path);
              (e.control = i.registerControl(e.name, e.control)),
                Wa(e.control, e),
                e.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(e);
            });
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            Ya.then(() => {
              const i = this._findContainer(e.path);
              i && i.removeControl(e.name), this._directives.delete(e);
            });
          }
          addFormGroup(e) {
            Ya.then(() => {
              const i = this._findContainer(e.path),
                r = new Su({});
              DM(r, e),
                i.registerControl(e.name, r),
                r.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(e) {
            Ya.then(() => {
              const i = this._findContainer(e.path);
              i && i.removeControl(e.name);
            });
          }
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          updateModel(e, i) {
            Ya.then(() => {
              this.form.get(e.path).setValue(i);
            });
          }
          setValue(e) {
            this.control.setValue(e);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              EM(this.form, this._directives),
              this.ngSubmit.emit(e),
              !1
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e) {
            this.form.reset(e), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(e) {
            return e.pop(), e.length ? this.form.get(e) : this.form;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(Ot, 10), h(Ar, 10));
          }),
          (n.ɵdir = R({
            type: n,
            selectors: [
              ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
              ["ng-form"],
              ["", "ngForm", ""],
            ],
            hostBindings: function (e, i) {
              1 & e &&
                I("submit", function (o) {
                  return i.onSubmit(o);
                })("reset", function () {
                  return i.onReset();
                });
            },
            inputs: { options: ["ngFormOptions", "options"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [ae([rj]), B],
          })),
          n
        );
      })();
      function SM(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      function TM(n) {
        return (
          "object" == typeof n &&
          null !== n &&
          2 === Object.keys(n).length &&
          "value" in n &&
          "disabled" in n
        );
      }
      const Za = class extends Eu {
        constructor(t = null, e, i) {
          super(Im(e), km(i, e)),
            (this.defaultValue = null),
            (this._onChange = []),
            (this._pendingChange = !1),
            this._applyFormState(t),
            this._setUpdateStrategy(e),
            this._initObservables(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            }),
            Mu(e) &&
              (e.nonNullable || e.initialValueIsDefault) &&
              (this.defaultValue = TM(t) ? t.value : t);
        }
        setValue(t, e = {}) {
          (this.value = this._pendingValue = t),
            this._onChange.length &&
              !1 !== e.emitModelToViewChange &&
              this._onChange.forEach((i) =>
                i(this.value, !1 !== e.emitViewToModelChange)
              ),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          this.setValue(t, e);
        }
        reset(t = this.defaultValue, e = {}) {
          this._applyFormState(t),
            this.markAsPristine(e),
            this.markAsUntouched(e),
            this.setValue(this.value, e),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(t) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(t) {
          this._onChange.push(t);
        }
        _unregisterOnChange(t) {
          SM(this._onChange, t);
        }
        registerOnDisabledChange(t) {
          this._onDisabledChange.push(t);
        }
        _unregisterOnDisabledChange(t) {
          SM(this._onDisabledChange, t);
        }
        _forEachChild(t) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(t) {
          TM(t)
            ? ((this.value = this._pendingValue = t.value),
              t.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = t);
        }
      };
      let Mi = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""],
              ],
              hostAttrs: ["novalidate", ""],
            })),
            n
          );
        })(),
        OM = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({})),
            n
          );
        })();
      const Pm = new x("NgModelWithFormControlWarning"),
        fj = { provide: $t, useExisting: Me(() => Jt) };
      let Jt = (() => {
        class n extends $t {
          constructor(e, i) {
            super(),
              (this.validators = e),
              (this.asyncValidators = i),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new se()),
              this._setValidators(e),
              this._setAsyncValidators(i);
          }
          ngOnChanges(e) {
            this._checkFormPresent(),
              e.hasOwnProperty("form") &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (Iu(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(e) {
            const i = this.form.get(e.path);
            return (
              Wa(i, e),
              i.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(e),
              i
            );
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            xu(e.control || null, e, !1),
              (function ij(n, t) {
                const e = n.indexOf(t);
                e > -1 && n.splice(e, 1);
              })(this.directives, e);
          }
          addFormGroup(e) {
            this._setUpFormContainer(e);
          }
          removeFormGroup(e) {
            this._cleanUpFormContainer(e);
          }
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          addFormArray(e) {
            this._setUpFormContainer(e);
          }
          removeFormArray(e) {
            this._cleanUpFormContainer(e);
          }
          getFormArray(e) {
            return this.form.get(e.path);
          }
          updateModel(e, i) {
            this.form.get(e.path).setValue(i);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              EM(this.form, this.directives),
              this.ngSubmit.emit(e),
              !1
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e) {
            this.form.reset(e), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((e) => {
              const i = e.control,
                r = this.form.get(e.path);
              i !== r &&
                (xu(i || null, e),
                ((n) => n instanceof Za)(r) && (Wa(r, e), (e.control = r)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(e) {
            const i = this.form.get(e.path);
            DM(i, e), i.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(e) {
            if (this.form) {
              const i = this.form.get(e.path);
              i &&
                (function ej(n, t) {
                  return Iu(n, t);
                })(i, e) &&
                i.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            Rm(this.form, this), this._oldForm && Iu(this._oldForm, this);
          }
          _checkFormPresent() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(Ot, 10), h(Ar, 10));
          }),
          (n.ɵdir = R({
            type: n,
            selectors: [["", "formGroup", ""]],
            hostBindings: function (e, i) {
              1 & e &&
                I("submit", function (o) {
                  return i.onSubmit(o);
                })("reset", function () {
                  return i.onReset();
                });
            },
            inputs: { form: ["formGroup", "form"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [ae([fj]), B, Mt],
          })),
          n
        );
      })();
      const gj = { provide: Ci, useExisting: Me(() => Qn) };
      let Qn = (() => {
        class n extends Ci {
          constructor(e, i, r, o, s) {
            super(),
              (this._ngModelWarningConfig = s),
              (this._added = !1),
              (this.update = new se()),
              (this._ngModelWarningSent = !1),
              (this._parent = e),
              this._setValidators(i),
              this._setAsyncValidators(r),
              (this.valueAccessor = (function Fm(n, t) {
                if (!t) return null;
                let e, i, r;
                return (
                  Array.isArray(t),
                  t.forEach((o) => {
                    o.constructor === Pn
                      ? (e = o)
                      : (function nj(n) {
                          return Object.getPrototypeOf(n.constructor) === lo;
                        })(o)
                      ? (i = o)
                      : (r = o);
                  }),
                  r || i || e || null
                );
              })(0, o));
          }
          set isDisabled(e) {}
          ngOnChanges(e) {
            this._added || this._setUpControl(),
              (function Om(n, t) {
                if (!n.hasOwnProperty("model")) return !1;
                const e = n.model;
                return !!e.isFirstChange() || !Object.is(t, e.currentValue);
              })(e, this.viewModel) &&
                ((this.viewModel = this.model),
                this.formDirective.updateModel(this, this.model));
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          viewToModelUpdate(e) {
            (this.viewModel = e), this.update.emit(e);
          }
          get path() {
            return (function Tu(n, t) {
              return [...t.path, n];
            })(
              null == this.name ? this.name : this.name.toString(),
              this._parent
            );
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          _checkParentType() {}
          _setUpControl() {
            this._checkParentType(),
              (this.control = this.formDirective.addControl(this)),
              (this._added = !0);
          }
        }
        return (
          (n._ngModelWarningSentOnce = !1),
          (n.ɵfac = function (e) {
            return new (e || n)(
              h($t, 13),
              h(Ot, 10),
              h(Ar, 10),
              h(Fn, 10),
              h(Pm, 8)
            );
          }),
          (n.ɵdir = R({
            type: n,
            selectors: [["", "formControlName", ""]],
            inputs: {
              name: ["formControlName", "name"],
              isDisabled: ["disabled", "isDisabled"],
              model: ["ngModel", "model"],
            },
            outputs: { update: "ngModelChange" },
            features: [ae([gj]), B, Mt],
          })),
          n
        );
      })();
      let co = (() => {
        class n {
          constructor() {
            this._validator = bu;
          }
          ngOnChanges(e) {
            if (this.inputName in e) {
              const i = this.normalizeInput(e[this.inputName].currentValue);
              (this._enabled = this.enabled(i)),
                (this._validator = this._enabled
                  ? this.createValidator(i)
                  : bu),
                this._onChange && this._onChange();
            }
          }
          validate(e) {
            return this._validator(e);
          }
          registerOnValidatorChange(e) {
            this._onChange = e;
          }
          enabled(e) {
            return null != e;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = R({ type: n, features: [Mt] })),
          n
        );
      })();
      const Aj = { provide: Ot, useExisting: Me(() => Ir), multi: !0 };
      let Ir = (() => {
          class n extends co {
            constructor() {
              super(...arguments),
                (this.inputName = "maxlength"),
                (this.normalizeInput = (e) =>
                  (function jM(n) {
                    return "number" == typeof n ? n : parseInt(n, 10);
                  })(e)),
                (this.createValidator = (e) => tM(e));
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = je(n)))(i || n);
              };
            })()),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["", "maxlength", "", "formControlName", ""],
                ["", "maxlength", "", "formControl", ""],
                ["", "maxlength", "", "ngModel", ""],
              ],
              hostVars: 1,
              hostBindings: function (e, i) {
                2 & e && Ae("maxlength", i._enabled ? i.maxlength : null);
              },
              inputs: { maxlength: "maxlength" },
              features: [ae([Aj]), B],
            })),
            n
          );
        })(),
        YM = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [OM] })),
            n
          );
        })(),
        kj = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [YM] })),
            n
          );
        })(),
        KM = (() => {
          class n {
            static withConfig(e) {
              return {
                ngModule: n,
                providers: [
                  { provide: Pm, useValue: e.warnOnNgModelWithFormControl },
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [YM] })),
            n
          );
        })();
      class ZM extends Eu {
        constructor(t, e, i) {
          super(Im(e), km(i, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(t) {
          return this.controls[this._adjustIndex(t)];
        }
        push(t, e = {}) {
          this.controls.push(t),
            this._registerControl(t),
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        insert(t, e, i = {}) {
          this.controls.splice(t, 0, e),
            this._registerControl(e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent });
        }
        removeAt(t, e = {}) {
          let i = this._adjustIndex(t);
          i < 0 && (i = 0),
            this.controls[i] &&
              this.controls[i]._registerOnCollectionChange(() => {}),
            this.controls.splice(i, 1),
            this.updateValueAndValidity({ emitEvent: e.emitEvent });
        }
        setControl(t, e, i = {}) {
          let r = this._adjustIndex(t);
          r < 0 && (r = 0),
            this.controls[r] &&
              this.controls[r]._registerOnCollectionChange(() => {}),
            this.controls.splice(r, 1),
            e && (this.controls.splice(r, 0, e), this._registerControl(e)),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(t, e = {}) {
          CM(this, 0, t),
            t.forEach((i, r) => {
              bM(this, !1, r),
                this.at(r).setValue(i, {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (t.forEach((i, r) => {
              this.at(r) &&
                this.at(r).patchValue(i, {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = [], e = {}) {
          this._forEachChild((i, r) => {
            i.reset(t[r], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this.controls.map((t) => t.getRawValue());
        }
        clear(t = {}) {
          this.controls.length < 1 ||
            (this._forEachChild((e) => e._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: t.emitEvent }));
        }
        _adjustIndex(t) {
          return t < 0 ? t + this.length : t;
        }
        _syncPendingControls() {
          let t = this.controls.reduce(
            (e, i) => !!i._syncPendingControls() || e,
            !1
          );
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _forEachChild(t) {
          this.controls.forEach((e, i) => {
            t(e, i);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((t) => t.enabled || this.disabled)
            .map((t) => t.value);
        }
        _anyControls(t) {
          return this.controls.some((e) => e.enabled && t(e));
        }
        _setUpControls() {
          this._forEachChild((t) => this._registerControl(t));
        }
        _allControlsDisabled() {
          for (const t of this.controls) if (t.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(t) {
          t.setParent(this),
            t._registerOnCollectionChange(this._onCollectionChange);
        }
        _find(t) {
          return this.at(t) ?? null;
        }
      }
      function QM(n) {
        return (
          !!n &&
          (void 0 !== n.asyncValidators ||
            void 0 !== n.validators ||
            void 0 !== n.updateOn)
        );
      }
      let Qi = (() => {
        class n {
          constructor() {
            this.useNonNullable = !1;
          }
          get nonNullable() {
            const e = new n();
            return (e.useNonNullable = !0), e;
          }
          group(e, i = null) {
            const r = this._reduceControls(e);
            let o = {};
            return (
              QM(i)
                ? (o = i)
                : null !== i &&
                  ((o.validators = i.validator),
                  (o.asyncValidators = i.asyncValidator)),
              new Su(r, o)
            );
          }
          control(e, i, r) {
            let o = {};
            return this.useNonNullable
              ? (QM(i)
                  ? (o = i)
                  : ((o.validators = i), (o.asyncValidators = r)),
                new Za(e, { ...o, nonNullable: !0 }))
              : new Za(e, i, r);
          }
          array(e, i, r) {
            const o = e.map((s) => this._createControl(s));
            return new ZM(o, i, r);
          }
          _reduceControls(e) {
            const i = {};
            return (
              Object.keys(e).forEach((r) => {
                i[r] = this._createControl(e[r]);
              }),
              i
            );
          }
          _createControl(e) {
            return e instanceof Za || e instanceof Eu
              ? e
              : Array.isArray(e)
              ? this.control(
                  e[0],
                  e.length > 1 ? e[1] : null,
                  e.length > 2 ? e[2] : null
                )
              : this.control(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: KM })),
          n
        );
      })();
      function j(...n) {
        return rt(n, zs(n));
      }
      class _n extends V {
        constructor(t) {
          super(), (this._value = t);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(t) {
          const e = super._subscribe(t);
          return !e.closed && t.next(this._value), e;
        }
        getValue() {
          const { hasError: t, thrownError: e, _value: i } = this;
          if (t) throw e;
          return this._throwIfClosed(), i;
        }
        next(t) {
          super.next((this._value = t));
        }
      }
      function Hm(...n) {
        const t = zs(n),
          e = D_(n),
          { args: i, keys: r } = $D(n);
        if (0 === i.length) return rt([], t);
        const o = new Oe(
          (function Rj(n, t, e = dr) {
            return (i) => {
              XM(
                t,
                () => {
                  const { length: r } = n,
                    o = new Array(r);
                  let s = r,
                    a = r;
                  for (let l = 0; l < r; l++)
                    XM(
                      t,
                      () => {
                        const c = rt(n[l], t);
                        let u = !1;
                        c.subscribe(
                          Ue(
                            i,
                            (d) => {
                              (o[l] = d),
                                u || ((u = !0), a--),
                                a || i.next(e(o.slice()));
                            },
                            () => {
                              --s || i.complete();
                            }
                          )
                        );
                      },
                      i
                    );
                },
                i
              );
            };
          })(i, t, r ? (s) => zD(r, s) : dr)
        );
        return e ? o.pipe(Dm(e)) : o;
      }
      function XM(n, t, e) {
        n ? Fi(e, n, t) : t();
      }
      function ku(...n) {
        return (function Oj() {
          return xo(1);
        })()(rt(n, zs(n)));
      }
      function Qa(n) {
        return new Oe((t) => {
          zt(n()).subscribe(t);
        });
      }
      function uo(n, t) {
        const e = ye(n) ? n : () => n,
          i = (r) => r.error(e());
        return new Oe(t ? (r) => t.schedule(i, 0, r) : i);
      }
      const ws = Us(
        (n) =>
          function () {
            n(this),
              (this.name = "EmptyError"),
              (this.message = "no elements in sequence");
          }
      );
      function Um() {
        return Ze((n, t) => {
          let e = null;
          n._refCount++;
          const i = Ue(t, void 0, void 0, void 0, () => {
            if (!n || n._refCount <= 0 || 0 < --n._refCount)
              return void (e = null);
            const r = n._connection,
              o = e;
            (e = null),
              r && (!o || r === o) && r.unsubscribe(),
              t.unsubscribe();
          });
          n.subscribe(i), i.closed || (e = n.connect());
        });
      }
      class JM extends Oe {
        constructor(t, e) {
          super(),
            (this.source = t),
            (this.subjectFactory = e),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            c_(t) && (this.lift = t.lift);
        }
        _subscribe(t) {
          return this.getSubject().subscribe(t);
        }
        getSubject() {
          const t = this._subject;
          return (
            (!t || t.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: t } = this;
          (this._subject = this._connection = null), t?.unsubscribe();
        }
        connect() {
          let t = this._connection;
          if (!t) {
            t = this._connection = new tt();
            const e = this.getSubject();
            t.add(
              this.source.subscribe(
                Ue(
                  e,
                  void 0,
                  () => {
                    this._teardown(), e.complete();
                  },
                  (i) => {
                    this._teardown(), e.error(i);
                  },
                  () => this._teardown()
                )
              )
            ),
              t.closed && ((this._connection = null), (t = tt.EMPTY));
          }
          return t;
        }
        refCount() {
          return Um()(this);
        }
      }
      function Nn(n, t) {
        return Ze((e, i) => {
          let r = null,
            o = 0,
            s = !1;
          const a = () => s && !r && i.complete();
          e.subscribe(
            Ue(
              i,
              (l) => {
                r?.unsubscribe();
                let c = 0;
                const u = o++;
                zt(n(l, u)).subscribe(
                  (r = Ue(
                    i,
                    (d) => i.next(t ? t(l, d, u, c++) : d),
                    () => {
                      (r = null), a();
                    }
                  ))
                );
              },
              () => {
                (s = !0), a();
              }
            )
          );
        });
      }
      function vt(n) {
        return n <= 0
          ? () => ni
          : Ze((t, e) => {
              let i = 0;
              t.subscribe(
                Ue(e, (r) => {
                  ++i <= n && (e.next(r), n <= i && e.complete());
                })
              );
            });
      }
      function vn(...n) {
        const t = zs(n);
        return Ze((e, i) => {
          (t ? ku(n, e, t) : ku(n, e)).subscribe(i);
        });
      }
      function qe(n, t) {
        return Ze((e, i) => {
          let r = 0;
          e.subscribe(Ue(i, (o) => n.call(t, o, r++) && i.next(o)));
        });
      }
      function Ru(n) {
        return Ze((t, e) => {
          let i = !1;
          t.subscribe(
            Ue(
              e,
              (r) => {
                (i = !0), e.next(r);
              },
              () => {
                i || e.next(n), e.complete();
              }
            )
          );
        });
      }
      function eE(n = Fj) {
        return Ze((t, e) => {
          let i = !1;
          t.subscribe(
            Ue(
              e,
              (r) => {
                (i = !0), e.next(r);
              },
              () => (i ? e.complete() : e.error(n()))
            )
          );
        });
      }
      function Fj() {
        return new ws();
      }
      function kr(n, t) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            n ? qe((r, o) => n(r, o, i)) : dr,
            vt(1),
            e ? Ru(t) : eE(() => new ws())
          );
      }
      function Rr(n, t) {
        return ye(t) ? bt(n, t, 1) : bt(n, 1);
      }
      function ut(n, t, e) {
        const i = ye(n) || t || e ? { next: n, error: t, complete: e } : n;
        return i
          ? Ze((r, o) => {
              var s;
              null === (s = i.subscribe) || void 0 === s || s.call(i);
              let a = !0;
              r.subscribe(
                Ue(
                  o,
                  (l) => {
                    var c;
                    null === (c = i.next) || void 0 === c || c.call(i, l),
                      o.next(l);
                  },
                  () => {
                    var l;
                    (a = !1),
                      null === (l = i.complete) || void 0 === l || l.call(i),
                      o.complete();
                  },
                  (l) => {
                    var c;
                    (a = !1),
                      null === (c = i.error) || void 0 === c || c.call(i, l),
                      o.error(l);
                  },
                  () => {
                    var l, c;
                    a &&
                      (null === (l = i.unsubscribe) ||
                        void 0 === l ||
                        l.call(i)),
                      null === (c = i.finalize) || void 0 === c || c.call(i);
                  }
                )
              );
            })
          : dr;
      }
      function Ei(n) {
        return Ze((t, e) => {
          let o,
            i = null,
            r = !1;
          (i = t.subscribe(
            Ue(e, void 0, void 0, (s) => {
              (o = zt(n(s, Ei(n)(t)))),
                i ? (i.unsubscribe(), (i = null), o.subscribe(e)) : (r = !0);
            })
          )),
            r && (i.unsubscribe(), (i = null), o.subscribe(e));
        });
      }
      function Pj(n, t, e, i, r) {
        return (o, s) => {
          let a = e,
            l = t,
            c = 0;
          o.subscribe(
            Ue(
              s,
              (u) => {
                const d = c++;
                (l = a ? n(l, u, d) : ((a = !0), u)), i && s.next(l);
              },
              r &&
                (() => {
                  a && s.next(l), s.complete();
                })
            )
          );
        };
      }
      function tE(n, t) {
        return Ze(Pj(n, t, arguments.length >= 2, !0));
      }
      function $m(n) {
        return n <= 0
          ? () => ni
          : Ze((t, e) => {
              let i = [];
              t.subscribe(
                Ue(
                  e,
                  (r) => {
                    i.push(r), n < i.length && i.shift();
                  },
                  () => {
                    for (const r of i) e.next(r);
                    e.complete();
                  },
                  void 0,
                  () => {
                    i = null;
                  }
                )
              );
            });
      }
      function nE(n, t) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            n ? qe((r, o) => n(r, o, i)) : dr,
            $m(1),
            e ? Ru(t) : eE(() => new ws())
          );
      }
      function iE(n, t = !1) {
        return Ze((e, i) => {
          let r = 0;
          e.subscribe(
            Ue(i, (o) => {
              const s = n(o, r++);
              (s || t) && i.next(o), !s && i.complete();
            })
          );
        });
      }
      function zm(n) {
        return q(() => n);
      }
      function Ou(n) {
        return Ze((t, e) => {
          try {
            t.subscribe(e);
          } finally {
            e.add(n);
          }
        });
      }
      const he = "primary";
      class Nj {
        constructor(t) {
          this.params = t || {};
        }
        has(t) {
          return Object.prototype.hasOwnProperty.call(this.params, t);
        }
        get(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function Ds(n) {
        return new Nj(n);
      }
      function Lj(n, t, e) {
        const i = e.path.split("/");
        if (
          i.length > n.length ||
          ("full" === e.pathMatch && (t.hasChildren() || i.length < n.length))
        )
          return null;
        const r = {};
        for (let o = 0; o < i.length; o++) {
          const s = i[o],
            a = n[o];
          if (s.startsWith(":")) r[s.substring(1)] = a;
          else if (s !== a.path) return null;
        }
        return { consumed: n.slice(0, i.length), posParams: r };
      }
      function Si(n, t) {
        const e = n ? Object.keys(n) : void 0,
          i = t ? Object.keys(t) : void 0;
        if (!e || !i || e.length != i.length) return !1;
        let r;
        for (let o = 0; o < e.length; o++)
          if (((r = e[o]), !rE(n[r], t[r]))) return !1;
        return !0;
      }
      function rE(n, t) {
        if (Array.isArray(n) && Array.isArray(t)) {
          if (n.length !== t.length) return !1;
          const e = [...n].sort(),
            i = [...t].sort();
          return e.every((r, o) => i[o] === r);
        }
        return n === t;
      }
      function oE(n) {
        return Array.prototype.concat.apply([], n);
      }
      function sE(n) {
        return n.length > 0 ? n[n.length - 1] : null;
      }
      function St(n, t) {
        for (const e in n) n.hasOwnProperty(e) && t(n[e], e);
      }
      function Xi(n) {
        return Gf(n) ? n : wa(n) ? rt(Promise.resolve(n)) : j(n);
      }
      const jj = {
          exact: function cE(n, t, e) {
            if (
              !fo(n.segments, t.segments) ||
              !Fu(n.segments, t.segments, e) ||
              n.numberOfChildren !== t.numberOfChildren
            )
              return !1;
            for (const i in t.children)
              if (!n.children[i] || !cE(n.children[i], t.children[i], e))
                return !1;
            return !0;
          },
          subset: uE,
        },
        aE = {
          exact: function Hj(n, t) {
            return Si(n, t);
          },
          subset: function Uj(n, t) {
            return (
              Object.keys(t).length <= Object.keys(n).length &&
              Object.keys(t).every((e) => rE(n[e], t[e]))
            );
          },
          ignored: () => !0,
        };
      function lE(n, t, e) {
        return (
          jj[e.paths](n.root, t.root, e.matrixParams) &&
          aE[e.queryParams](n.queryParams, t.queryParams) &&
          !("exact" === e.fragment && n.fragment !== t.fragment)
        );
      }
      function uE(n, t, e) {
        return dE(n, t, t.segments, e);
      }
      function dE(n, t, e, i) {
        if (n.segments.length > e.length) {
          const r = n.segments.slice(0, e.length);
          return !(!fo(r, e) || t.hasChildren() || !Fu(r, e, i));
        }
        if (n.segments.length === e.length) {
          if (!fo(n.segments, e) || !Fu(n.segments, e, i)) return !1;
          for (const r in t.children)
            if (!n.children[r] || !uE(n.children[r], t.children[r], i))
              return !1;
          return !0;
        }
        {
          const r = e.slice(0, n.segments.length),
            o = e.slice(n.segments.length);
          return (
            !!(fo(n.segments, r) && Fu(n.segments, r, i) && n.children[he]) &&
            dE(n.children[he], t, o, i)
          );
        }
      }
      function Fu(n, t, e) {
        return t.every((i, r) => aE[e](n[r].parameters, i.parameters));
      }
      class ho {
        constructor(t, e, i) {
          (this.root = t), (this.queryParams = e), (this.fragment = i);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = Ds(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return qj.serialize(this);
        }
      }
      class me {
        constructor(t, e) {
          (this.segments = t),
            (this.children = e),
            (this.parent = null),
            St(e, (i, r) => (i.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Pu(this);
        }
      }
      class Xa {
        constructor(t, e) {
          (this.path = t), (this.parameters = e);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = Ds(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return gE(this);
        }
      }
      function fo(n, t) {
        return n.length === t.length && n.every((e, i) => e.path === t[i].path);
      }
      class hE {}
      class fE {
        parse(t) {
          const e = new eH(t);
          return new ho(
            e.parseRootSegment(),
            e.parseQueryParams(),
            e.parseFragment()
          );
        }
        serialize(t) {
          const e = `/${Ja(t.root, !0)}`,
            i = (function Yj(n) {
              const t = Object.keys(n)
                .map((e) => {
                  const i = n[e];
                  return Array.isArray(i)
                    ? i.map((r) => `${Nu(e)}=${Nu(r)}`).join("&")
                    : `${Nu(e)}=${Nu(i)}`;
                })
                .filter((e) => !!e);
              return t.length ? `?${t.join("&")}` : "";
            })(t.queryParams);
          return `${e}${i}${
            "string" == typeof t.fragment
              ? `#${(function Gj(n) {
                  return encodeURI(n);
                })(t.fragment)}`
              : ""
          }`;
        }
      }
      const qj = new fE();
      function Pu(n) {
        return n.segments.map((t) => gE(t)).join("/");
      }
      function Ja(n, t) {
        if (!n.hasChildren()) return Pu(n);
        if (t) {
          const e = n.children[he] ? Ja(n.children[he], !1) : "",
            i = [];
          return (
            St(n.children, (r, o) => {
              o !== he && i.push(`${o}:${Ja(r, !1)}`);
            }),
            i.length > 0 ? `${e}(${i.join("//")})` : e
          );
        }
        {
          const e = (function zj(n, t) {
            let e = [];
            return (
              St(n.children, (i, r) => {
                r === he && (e = e.concat(t(i, r)));
              }),
              St(n.children, (i, r) => {
                r !== he && (e = e.concat(t(i, r)));
              }),
              e
            );
          })(n, (i, r) =>
            r === he ? [Ja(n.children[he], !1)] : [`${r}:${Ja(i, !1)}`]
          );
          return 1 === Object.keys(n.children).length && null != n.children[he]
            ? `${Pu(n)}/${e[0]}`
            : `${Pu(n)}/(${e.join("//")})`;
        }
      }
      function pE(n) {
        return encodeURIComponent(n)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function Nu(n) {
        return pE(n).replace(/%3B/gi, ";");
      }
      function Gm(n) {
        return pE(n)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function Lu(n) {
        return decodeURIComponent(n);
      }
      function mE(n) {
        return Lu(n.replace(/\+/g, "%20"));
      }
      function gE(n) {
        return `${Gm(n.path)}${(function Wj(n) {
          return Object.keys(n)
            .map((t) => `;${Gm(t)}=${Gm(n[t])}`)
            .join("");
        })(n.parameters)}`;
      }
      const Kj = /^[^\/()?;=#]+/;
      function Vu(n) {
        const t = n.match(Kj);
        return t ? t[0] : "";
      }
      const Zj = /^[^=?&#]+/,
        Xj = /^[^&#]+/;
      class eH {
        constructor(t) {
          (this.url = t), (this.remaining = t);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new me([], {})
              : new me([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const t = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(t);
            } while (this.consumeOptional("&"));
          return t;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const t = [];
          for (
            this.peekStartsWith("(") || t.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), t.push(this.parseSegment());
          let e = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (e = this.parseParens(!0)));
          let i = {};
          return (
            this.peekStartsWith("(") && (i = this.parseParens(!1)),
            (t.length > 0 || Object.keys(e).length > 0) &&
              (i[he] = new me(t, e)),
            i
          );
        }
        parseSegment() {
          const t = Vu(this.remaining);
          if ("" === t && this.peekStartsWith(";")) throw new S(4009, !1);
          return this.capture(t), new Xa(Lu(t), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const t = {};
          for (; this.consumeOptional(";"); ) this.parseParam(t);
          return t;
        }
        parseParam(t) {
          const e = Vu(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const r = Vu(this.remaining);
            r && ((i = r), this.capture(i));
          }
          t[Lu(e)] = Lu(i);
        }
        parseQueryParam(t) {
          const e = (function Qj(n) {
            const t = n.match(Zj);
            return t ? t[0] : "";
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const s = (function Jj(n) {
              const t = n.match(Xj);
              return t ? t[0] : "";
            })(this.remaining);
            s && ((i = s), this.capture(i));
          }
          const r = mE(e),
            o = mE(i);
          if (t.hasOwnProperty(r)) {
            let s = t[r];
            Array.isArray(s) || ((s = [s]), (t[r] = s)), s.push(o);
          } else t[r] = o;
        }
        parseParens(t) {
          const e = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const i = Vu(this.remaining),
              r = this.remaining[i.length];
            if ("/" !== r && ")" !== r && ";" !== r) throw new S(4010, !1);
            let o;
            i.indexOf(":") > -1
              ? ((o = i.slice(0, i.indexOf(":"))),
                this.capture(o),
                this.capture(":"))
              : t && (o = he);
            const s = this.parseChildren();
            (e[o] = 1 === Object.keys(s).length ? s[he] : new me([], s)),
              this.consumeOptional("//");
          }
          return e;
        }
        peekStartsWith(t) {
          return this.remaining.startsWith(t);
        }
        consumeOptional(t) {
          return (
            !!this.peekStartsWith(t) &&
            ((this.remaining = this.remaining.substring(t.length)), !0)
          );
        }
        capture(t) {
          if (!this.consumeOptional(t)) throw new S(4011, !1);
        }
      }
      function Wm(n) {
        return n.segments.length > 0 ? new me([], { [he]: n }) : n;
      }
      function Bu(n) {
        const t = {};
        for (const i of Object.keys(n.children)) {
          const o = Bu(n.children[i]);
          (o.segments.length > 0 || o.hasChildren()) && (t[i] = o);
        }
        return (function tH(n) {
          if (1 === n.numberOfChildren && n.children[he]) {
            const t = n.children[he];
            return new me(n.segments.concat(t.segments), t.children);
          }
          return n;
        })(new me(n.segments, t));
      }
      function po(n) {
        return n instanceof ho;
      }
      function rH(n, t, e, i, r) {
        if (0 === e.length) return Ms(t.root, t.root, t.root, i, r);
        const o = (function yE(n) {
          if ("string" == typeof n[0] && 1 === n.length && "/" === n[0])
            return new vE(!0, 0, n);
          let t = 0,
            e = !1;
          const i = n.reduce((r, o, s) => {
            if ("object" == typeof o && null != o) {
              if (o.outlets) {
                const a = {};
                return (
                  St(o.outlets, (l, c) => {
                    a[c] = "string" == typeof l ? l.split("/") : l;
                  }),
                  [...r, { outlets: a }]
                );
              }
              if (o.segmentPath) return [...r, o.segmentPath];
            }
            return "string" != typeof o
              ? [...r, o]
              : 0 === s
              ? (o.split("/").forEach((a, l) => {
                  (0 == l && "." === a) ||
                    (0 == l && "" === a
                      ? (e = !0)
                      : ".." === a
                      ? t++
                      : "" != a && r.push(a));
                }),
                r)
              : [...r, o];
          }, []);
          return new vE(e, t, i);
        })(e);
        return o.toRoot()
          ? Ms(t.root, t.root, new me([], {}), i, r)
          : (function s(l) {
              const c = (function sH(n, t, e, i) {
                  if (n.isAbsolute) return new Es(t.root, !0, 0);
                  if (-1 === i) return new Es(e, e === t.root, 0);
                  return (function bE(n, t, e) {
                    let i = n,
                      r = t,
                      o = e;
                    for (; o > r; ) {
                      if (((o -= r), (i = i.parent), !i)) throw new S(4005, !1);
                      r = i.segments.length;
                    }
                    return new Es(i, !1, r - o);
                  })(e, i + (el(n.commands[0]) ? 0 : 1), n.numberOfDoubleDots);
                })(o, t, n.snapshot?._urlSegment, l),
                u = c.processChildren
                  ? nl(c.segmentGroup, c.index, o.commands)
                  : Km(c.segmentGroup, c.index, o.commands);
              return Ms(t.root, c.segmentGroup, u, i, r);
            })(n.snapshot?._lastPathIndex);
      }
      function el(n) {
        return (
          "object" == typeof n && null != n && !n.outlets && !n.segmentPath
        );
      }
      function tl(n) {
        return "object" == typeof n && null != n && n.outlets;
      }
      function Ms(n, t, e, i, r) {
        let s,
          o = {};
        i &&
          St(i, (l, c) => {
            o[c] = Array.isArray(l) ? l.map((u) => `${u}`) : `${l}`;
          }),
          (s = n === t ? e : _E(n, t, e));
        const a = Wm(Bu(s));
        return new ho(a, o, r);
      }
      function _E(n, t, e) {
        const i = {};
        return (
          St(n.children, (r, o) => {
            i[o] = r === t ? e : _E(r, t, e);
          }),
          new me(n.segments, i)
        );
      }
      class vE {
        constructor(t, e, i) {
          if (
            ((this.isAbsolute = t),
            (this.numberOfDoubleDots = e),
            (this.commands = i),
            t && i.length > 0 && el(i[0]))
          )
            throw new S(4003, !1);
          const r = i.find(tl);
          if (r && r !== sE(i)) throw new S(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class Es {
        constructor(t, e, i) {
          (this.segmentGroup = t), (this.processChildren = e), (this.index = i);
        }
      }
      function Km(n, t, e) {
        if (
          (n || (n = new me([], {})),
          0 === n.segments.length && n.hasChildren())
        )
          return nl(n, t, e);
        const i = (function lH(n, t, e) {
            let i = 0,
              r = t;
            const o = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; r < n.segments.length; ) {
              if (i >= e.length) return o;
              const s = n.segments[r],
                a = e[i];
              if (tl(a)) break;
              const l = `${a}`,
                c = i < e.length - 1 ? e[i + 1] : null;
              if (r > 0 && void 0 === l) break;
              if (l && c && "object" == typeof c && void 0 === c.outlets) {
                if (!wE(l, c, s)) return o;
                i += 2;
              } else {
                if (!wE(l, {}, s)) return o;
                i++;
              }
              r++;
            }
            return { match: !0, pathIndex: r, commandIndex: i };
          })(n, t, e),
          r = e.slice(i.commandIndex);
        if (i.match && i.pathIndex < n.segments.length) {
          const o = new me(n.segments.slice(0, i.pathIndex), {});
          return (
            (o.children[he] = new me(
              n.segments.slice(i.pathIndex),
              n.children
            )),
            nl(o, 0, r)
          );
        }
        return i.match && 0 === r.length
          ? new me(n.segments, {})
          : i.match && !n.hasChildren()
          ? Zm(n, t, e)
          : i.match
          ? nl(n, 0, r)
          : Zm(n, t, e);
      }
      function nl(n, t, e) {
        if (0 === e.length) return new me(n.segments, {});
        {
          const i = (function aH(n) {
              return tl(n[0]) ? n[0].outlets : { [he]: n };
            })(e),
            r = {};
          return (
            St(i, (o, s) => {
              "string" == typeof o && (o = [o]),
                null !== o && (r[s] = Km(n.children[s], t, o));
            }),
            St(n.children, (o, s) => {
              void 0 === i[s] && (r[s] = o);
            }),
            new me(n.segments, r)
          );
        }
      }
      function Zm(n, t, e) {
        const i = n.segments.slice(0, t);
        let r = 0;
        for (; r < e.length; ) {
          const o = e[r];
          if (tl(o)) {
            const l = cH(o.outlets);
            return new me(i, l);
          }
          if (0 === r && el(e[0])) {
            i.push(new Xa(n.segments[t].path, CE(e[0]))), r++;
            continue;
          }
          const s = tl(o) ? o.outlets[he] : `${o}`,
            a = r < e.length - 1 ? e[r + 1] : null;
          s && a && el(a)
            ? (i.push(new Xa(s, CE(a))), (r += 2))
            : (i.push(new Xa(s, {})), r++);
        }
        return new me(i, {});
      }
      function cH(n) {
        const t = {};
        return (
          St(n, (e, i) => {
            "string" == typeof e && (e = [e]),
              null !== e && (t[i] = Zm(new me([], {}), 0, e));
          }),
          t
        );
      }
      function CE(n) {
        const t = {};
        return St(n, (e, i) => (t[i] = `${e}`)), t;
      }
      function wE(n, t, e) {
        return n == e.path && Si(t, e.parameters);
      }
      class Ji {
        constructor(t, e) {
          (this.id = t), (this.url = e);
        }
      }
      class Qm extends Ji {
        constructor(t, e, i = "imperative", r = null) {
          super(t, e),
            (this.type = 0),
            (this.navigationTrigger = i),
            (this.restoredState = r);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class mo extends Ji {
        constructor(t, e, i) {
          super(t, e), (this.urlAfterRedirects = i), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class ju extends Ji {
        constructor(t, e, i, r) {
          super(t, e), (this.reason = i), (this.code = r), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class DE extends Ji {
        constructor(t, e, i, r) {
          super(t, e), (this.error = i), (this.target = r), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class uH extends Ji {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class dH extends Ji {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class hH extends Ji {
        constructor(t, e, i, r, o) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.shouldActivate = o),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class fH extends Ji {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class pH extends Ji {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class mH {
        constructor(t) {
          (this.route = t), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class gH {
        constructor(t) {
          (this.route = t), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class _H {
        constructor(t) {
          (this.snapshot = t), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class vH {
        constructor(t) {
          (this.snapshot = t), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class yH {
        constructor(t) {
          (this.snapshot = t), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class bH {
        constructor(t) {
          (this.snapshot = t), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class ME {
        constructor(t, e, i) {
          (this.routerEvent = t),
            (this.position = e),
            (this.anchor = i),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      class EE {
        constructor(t) {
          this._root = t;
        }
        get root() {
          return this._root.value;
        }
        parent(t) {
          const e = this.pathFromRoot(t);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(t) {
          const e = Xm(t, this._root);
          return e ? e.children.map((i) => i.value) : [];
        }
        firstChild(t) {
          const e = Xm(t, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(t) {
          const e = Jm(t, this._root);
          return e.length < 2
            ? []
            : e[e.length - 2].children
                .map((r) => r.value)
                .filter((r) => r !== t);
        }
        pathFromRoot(t) {
          return Jm(t, this._root).map((e) => e.value);
        }
      }
      function Xm(n, t) {
        if (n === t.value) return t;
        for (const e of t.children) {
          const i = Xm(n, e);
          if (i) return i;
        }
        return null;
      }
      function Jm(n, t) {
        if (n === t.value) return [t];
        for (const e of t.children) {
          const i = Jm(n, e);
          if (i.length) return i.unshift(t), i;
        }
        return [];
      }
      class er {
        constructor(t, e) {
          (this.value = t), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function Ss(n) {
        const t = {};
        return n && n.children.forEach((e) => (t[e.value.outlet] = e)), t;
      }
      class SE extends EE {
        constructor(t, e) {
          super(t), (this.snapshot = e), eg(this, t);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function TE(n, t) {
        const e = (function wH(n, t) {
            const s = new Hu([], {}, {}, "", {}, he, t, null, n.root, -1, {});
            return new AE("", new er(s, []));
          })(n, t),
          i = new _n([new Xa("", {})]),
          r = new _n({}),
          o = new _n({}),
          s = new _n({}),
          a = new _n(""),
          l = new yn(i, r, s, a, o, he, t, e.root);
        return (l.snapshot = e.root), new SE(new er(l, []), e);
      }
      class yn {
        constructor(t, e, i, r, o, s, a, l) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = o),
            (this.outlet = s),
            (this.component = a),
            (this._futureSnapshot = l);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(q((t) => Ds(t)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(q((t) => Ds(t)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function xE(n, t = "emptyOnly") {
        const e = n.pathFromRoot;
        let i = 0;
        if ("always" !== t)
          for (i = e.length - 1; i >= 1; ) {
            const r = e[i],
              o = e[i - 1];
            if (r.routeConfig && "" === r.routeConfig.path) i--;
            else {
              if (o.component) break;
              i--;
            }
          }
        return (function DH(n) {
          return n.reduce(
            (t, e) => ({
              params: { ...t.params, ...e.params },
              data: { ...t.data, ...e.data },
              resolve: {
                ...e.data,
                ...t.resolve,
                ...e.routeConfig?.data,
                ...e._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(e.slice(i));
      }
      class Hu {
        constructor(t, e, i, r, o, s, a, l, c, u, d, f) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = o),
            (this.outlet = s),
            (this.component = a),
            (this.routeConfig = l),
            (this._urlSegment = c),
            (this._lastPathIndex = u),
            (this._correctedLastPathIndex = f ?? u),
            (this._resolve = d);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = Ds(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = Ds(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((i) => i.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class AE extends EE {
        constructor(t, e) {
          super(e), (this.url = t), eg(this, e);
        }
        toString() {
          return IE(this._root);
        }
      }
      function eg(n, t) {
        (t.value._routerState = n), t.children.forEach((e) => eg(n, e));
      }
      function IE(n) {
        const t =
          n.children.length > 0 ? ` { ${n.children.map(IE).join(", ")} } ` : "";
        return `${n.value}${t}`;
      }
      function tg(n) {
        if (n.snapshot) {
          const t = n.snapshot,
            e = n._futureSnapshot;
          (n.snapshot = e),
            Si(t.queryParams, e.queryParams) ||
              n.queryParams.next(e.queryParams),
            t.fragment !== e.fragment && n.fragment.next(e.fragment),
            Si(t.params, e.params) || n.params.next(e.params),
            (function Vj(n, t) {
              if (n.length !== t.length) return !1;
              for (let e = 0; e < n.length; ++e) if (!Si(n[e], t[e])) return !1;
              return !0;
            })(t.url, e.url) || n.url.next(e.url),
            Si(t.data, e.data) || n.data.next(e.data);
        } else
          (n.snapshot = n._futureSnapshot), n.data.next(n._futureSnapshot.data);
      }
      function ng(n, t) {
        const e =
          Si(n.params, t.params) &&
          (function $j(n, t) {
            return (
              fo(n, t) && n.every((e, i) => Si(e.parameters, t[i].parameters))
            );
          })(n.url, t.url);
        return (
          e &&
          !(!n.parent != !t.parent) &&
          (!n.parent || ng(n.parent, t.parent))
        );
      }
      function il(n, t, e) {
        if (e && n.shouldReuseRoute(t.value, e.value.snapshot)) {
          const i = e.value;
          i._futureSnapshot = t.value;
          const r = (function EH(n, t, e) {
            return t.children.map((i) => {
              for (const r of e.children)
                if (n.shouldReuseRoute(i.value, r.value.snapshot))
                  return il(n, i, r);
              return il(n, i);
            });
          })(n, t, e);
          return new er(i, r);
        }
        {
          if (n.shouldAttach(t.value)) {
            const o = n.retrieve(t.value);
            if (null !== o) {
              const s = o.route;
              return (
                (s.value._futureSnapshot = t.value),
                (s.children = t.children.map((a) => il(n, a))),
                s
              );
            }
          }
          const i = (function SH(n) {
              return new yn(
                new _n(n.url),
                new _n(n.params),
                new _n(n.queryParams),
                new _n(n.fragment),
                new _n(n.data),
                n.outlet,
                n.component,
                n
              );
            })(t.value),
            r = t.children.map((o) => il(n, o));
          return new er(i, r);
        }
      }
      const ig = "ngNavigationCancelingError";
      function kE(n, t) {
        const { redirectTo: e, navigationBehaviorOptions: i } = po(t)
            ? { redirectTo: t, navigationBehaviorOptions: void 0 }
            : t,
          r = RE(!1, 0, t);
        return (r.url = e), (r.navigationBehaviorOptions = i), r;
      }
      function RE(n, t, e) {
        const i = new Error("NavigationCancelingError: " + (n || ""));
        return (i[ig] = !0), (i.cancellationCode = t), e && (i.url = e), i;
      }
      function OE(n) {
        return FE(n) && po(n.url);
      }
      function FE(n) {
        return n && n[ig];
      }
      class TH {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.injector = null),
            (this.children = new rl()),
            (this.attachRef = null);
        }
      }
      class rl {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(t, e) {
          const i = this.getOrCreateContext(t);
          (i.outlet = e), this.contexts.set(t, i);
        }
        onChildOutletDestroyed(t) {
          const e = this.getContext(t);
          e && ((e.outlet = null), (e.attachRef = null));
        }
        onOutletDeactivated() {
          const t = this.contexts;
          return (this.contexts = new Map()), t;
        }
        onOutletReAttached(t) {
          this.contexts = t;
        }
        getOrCreateContext(t) {
          let e = this.getContext(t);
          return e || ((e = new TH()), this.contexts.set(t, e)), e;
        }
        getContext(t) {
          return this.contexts.get(t) || null;
        }
      }
      const Uu = !1;
      let rg = (() => {
        class n {
          constructor(e, i, r, o, s) {
            (this.parentContexts = e),
              (this.location = i),
              (this.changeDetector = o),
              (this.environmentInjector = s),
              (this.activated = null),
              (this._activatedRoute = null),
              (this.activateEvents = new se()),
              (this.deactivateEvents = new se()),
              (this.attachEvents = new se()),
              (this.detachEvents = new se()),
              (this.name = r || he),
              e.onChildOutletCreated(this.name, this);
          }
          ngOnDestroy() {
            this.parentContexts.getContext(this.name)?.outlet === this &&
              this.parentContexts.onChildOutletDestroyed(this.name);
          }
          ngOnInit() {
            if (!this.activated) {
              const e = this.parentContexts.getContext(this.name);
              e &&
                e.route &&
                (e.attachRef
                  ? this.attach(e.attachRef, e.route)
                  : this.activateWith(e.route, e.injector));
            }
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new S(4012, Uu);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new S(4012, Uu);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new S(4012, Uu);
            this.location.detach();
            const e = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(e.instance),
              e
            );
          }
          attach(e, i) {
            (this.activated = e),
              (this._activatedRoute = i),
              this.location.insert(e.hostView),
              this.attachEvents.emit(e.instance);
          }
          deactivate() {
            if (this.activated) {
              const e = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(e);
            }
          }
          activateWith(e, i) {
            if (this.isActivated) throw new S(4013, Uu);
            this._activatedRoute = e;
            const r = this.location,
              s = e._futureSnapshot.component,
              a = this.parentContexts.getOrCreateContext(this.name).children,
              l = new xH(e, a, r.injector);
            if (
              i &&
              (function AH(n) {
                return !!n.resolveComponentFactory;
              })(i)
            ) {
              const c = i.resolveComponentFactory(s);
              this.activated = r.createComponent(c, r.length, l);
            } else
              this.activated = r.createComponent(s, {
                index: r.length,
                injector: l,
                environmentInjector: i ?? this.environmentInjector,
              });
            this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(rl), h(Rt), ai("name"), h(st), h(_r));
          }),
          (n.ɵdir = R({
            type: n,
            selectors: [["router-outlet"]],
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
          })),
          n
        );
      })();
      class xH {
        constructor(t, e, i) {
          (this.route = t), (this.childContexts = e), (this.parent = i);
        }
        get(t, e) {
          return t === yn
            ? this.route
            : t === rl
            ? this.childContexts
            : this.parent.get(t, e);
        }
      }
      let PE = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["ng-component"]],
            decls: 1,
            vars: 0,
            template: function (e, i) {
              1 & e && ge(0, "router-outlet");
            },
            dependencies: [rg],
            encapsulation: 2,
          })),
          n
        );
      })();
      function NE(n, t) {
        return (
          n.providers &&
            !n._injector &&
            (n._injector = Ic(n.providers, t, `Route: ${n.path}`)),
          n._injector ?? t
        );
      }
      function sg(n) {
        const t = n.children && n.children.map(sg),
          e = t ? { ...n, children: t } : { ...n };
        return (
          !e.component &&
            !e.loadComponent &&
            (t || e.loadChildren) &&
            e.outlet &&
            e.outlet !== he &&
            (e.component = PE),
          e
        );
      }
      function Ln(n) {
        return n.outlet || he;
      }
      function LE(n, t) {
        const e = n.filter((i) => Ln(i) === t);
        return e.push(...n.filter((i) => Ln(i) !== t)), e;
      }
      function VE(n) {
        if (!n) return null;
        if (n.routeConfig?._injector) return n.routeConfig._injector;
        for (let t = n.parent; t; t = t.parent) {
          const e = t.routeConfig;
          if (e?._loadedInjector) return e._loadedInjector;
          if (e?._injector) return e._injector;
        }
        return null;
      }
      class FH {
        constructor(t, e, i, r) {
          (this.routeReuseStrategy = t),
            (this.futureState = e),
            (this.currState = i),
            (this.forwardEvent = r);
        }
        activate(t) {
          const e = this.futureState._root,
            i = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, i, t),
            tg(this.futureState.root),
            this.activateChildRoutes(e, i, t);
        }
        deactivateChildRoutes(t, e, i) {
          const r = Ss(e);
          t.children.forEach((o) => {
            const s = o.value.outlet;
            this.deactivateRoutes(o, r[s], i), delete r[s];
          }),
            St(r, (o, s) => {
              this.deactivateRouteAndItsChildren(o, i);
            });
        }
        deactivateRoutes(t, e, i) {
          const r = t.value,
            o = e ? e.value : null;
          if (r === o)
            if (r.component) {
              const s = i.getContext(r.outlet);
              s && this.deactivateChildRoutes(t, e, s.children);
            } else this.deactivateChildRoutes(t, e, i);
          else o && this.deactivateRouteAndItsChildren(e, i);
        }
        deactivateRouteAndItsChildren(t, e) {
          t.value.component &&
          this.routeReuseStrategy.shouldDetach(t.value.snapshot)
            ? this.detachAndStoreRouteSubtree(t, e)
            : this.deactivateRouteAndOutlet(t, e);
        }
        detachAndStoreRouteSubtree(t, e) {
          const i = e.getContext(t.value.outlet),
            r = i && t.value.component ? i.children : e,
            o = Ss(t);
          for (const s of Object.keys(o))
            this.deactivateRouteAndItsChildren(o[s], r);
          if (i && i.outlet) {
            const s = i.outlet.detach(),
              a = i.children.onOutletDeactivated();
            this.routeReuseStrategy.store(t.value.snapshot, {
              componentRef: s,
              route: t,
              contexts: a,
            });
          }
        }
        deactivateRouteAndOutlet(t, e) {
          const i = e.getContext(t.value.outlet),
            r = i && t.value.component ? i.children : e,
            o = Ss(t);
          for (const s of Object.keys(o))
            this.deactivateRouteAndItsChildren(o[s], r);
          i &&
            i.outlet &&
            (i.outlet.deactivate(),
            i.children.onOutletDeactivated(),
            (i.attachRef = null),
            (i.resolver = null),
            (i.route = null));
        }
        activateChildRoutes(t, e, i) {
          const r = Ss(e);
          t.children.forEach((o) => {
            this.activateRoutes(o, r[o.value.outlet], i),
              this.forwardEvent(new bH(o.value.snapshot));
          }),
            t.children.length && this.forwardEvent(new vH(t.value.snapshot));
        }
        activateRoutes(t, e, i) {
          const r = t.value,
            o = e ? e.value : null;
          if ((tg(r), r === o))
            if (r.component) {
              const s = i.getOrCreateContext(r.outlet);
              this.activateChildRoutes(t, e, s.children);
            } else this.activateChildRoutes(t, e, i);
          else if (r.component) {
            const s = i.getOrCreateContext(r.outlet);
            if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
              const a = this.routeReuseStrategy.retrieve(r.snapshot);
              this.routeReuseStrategy.store(r.snapshot, null),
                s.children.onOutletReAttached(a.contexts),
                (s.attachRef = a.componentRef),
                (s.route = a.route.value),
                s.outlet && s.outlet.attach(a.componentRef, a.route.value),
                tg(a.route.value),
                this.activateChildRoutes(t, null, s.children);
            } else {
              const a = VE(r.snapshot),
                l = a?.get(Wr) ?? null;
              (s.attachRef = null),
                (s.route = r),
                (s.resolver = l),
                (s.injector = a),
                s.outlet && s.outlet.activateWith(r, s.injector),
                this.activateChildRoutes(t, null, s.children);
            }
          } else this.activateChildRoutes(t, null, i);
        }
      }
      class BE {
        constructor(t) {
          (this.path = t), (this.route = this.path[this.path.length - 1]);
        }
      }
      class $u {
        constructor(t, e) {
          (this.component = t), (this.route = e);
        }
      }
      function PH(n, t, e) {
        const i = n._root;
        return ol(i, t ? t._root : null, e, [i.value]);
      }
      function zu(n, t, e) {
        return (VE(t) ?? e).get(n);
      }
      function ol(
        n,
        t,
        e,
        i,
        r = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const o = Ss(t);
        return (
          n.children.forEach((s) => {
            (function LH(
              n,
              t,
              e,
              i,
              r = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const o = n.value,
                s = t ? t.value : null,
                a = e ? e.getContext(n.value.outlet) : null;
              if (s && o.routeConfig === s.routeConfig) {
                const l = (function VH(n, t, e) {
                  if ("function" == typeof e) return e(n, t);
                  switch (e) {
                    case "pathParamsChange":
                      return !fo(n.url, t.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !fo(n.url, t.url) || !Si(n.queryParams, t.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !ng(n, t) || !Si(n.queryParams, t.queryParams);
                    default:
                      return !ng(n, t);
                  }
                })(s, o, o.routeConfig.runGuardsAndResolvers);
                l
                  ? r.canActivateChecks.push(new BE(i))
                  : ((o.data = s.data), (o._resolvedData = s._resolvedData)),
                  ol(n, t, o.component ? (a ? a.children : null) : e, i, r),
                  l &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    r.canDeactivateChecks.push(new $u(a.outlet.component, s));
              } else
                s && sl(t, a, r),
                  r.canActivateChecks.push(new BE(i)),
                  ol(n, null, o.component ? (a ? a.children : null) : e, i, r);
            })(s, o[s.value.outlet], e, i.concat([s.value]), r),
              delete o[s.value.outlet];
          }),
          St(o, (s, a) => sl(s, e.getContext(a), r)),
          r
        );
      }
      function sl(n, t, e) {
        const i = Ss(n),
          r = n.value;
        St(i, (o, s) => {
          sl(o, r.component ? (t ? t.children.getContext(s) : null) : t, e);
        }),
          e.canDeactivateChecks.push(
            new $u(
              r.component && t && t.outlet && t.outlet.isActivated
                ? t.outlet.component
                : null,
              r
            )
          );
      }
      function al(n) {
        return "function" == typeof n;
      }
      const qu = Symbol("INITIAL_VALUE");
      function Ts() {
        return Nn((n) =>
          Hm(n.map((t) => t.pipe(vt(1), vn(qu)))).pipe(
            q((t) => {
              for (const e of t)
                if (!0 !== e) {
                  if (e === qu) return qu;
                  if (!1 === e || e instanceof ho) return e;
                }
              return !0;
            }),
            qe((t) => t !== qu),
            vt(1)
          )
        );
      }
      function jE(n) {
        return (function vx(...n) {
          return s_(n);
        })(
          ut((t) => {
            if (po(t)) throw kE(0, t);
          }),
          q((t) => !0 === t)
        );
      }
      const ag = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function HE(n, t, e, i, r) {
        const o = lg(n, t, e);
        return o.matched
          ? (function t3(n, t, e, i) {
              const r = t.canMatch;
              return r && 0 !== r.length
                ? j(
                    r.map((s) => {
                      const a = n.get(s),
                        l = (function zH(n) {
                          return n && al(n.canMatch);
                        })(a)
                          ? a.canMatch(t, e)
                          : a(t, e);
                      return Xi(l);
                    })
                  ).pipe(Ts(), jE())
                : j(!0);
            })((i = NE(t, i)), t, e).pipe(q((s) => (!0 === s ? o : { ...ag })))
          : j(o);
      }
      function lg(n, t, e) {
        if ("" === t.path)
          return "full" === t.pathMatch && (n.hasChildren() || e.length > 0)
            ? { ...ag }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: e,
                parameters: {},
                positionalParamSegments: {},
              };
        const r = (t.matcher || Lj)(e, n, t);
        if (!r) return { ...ag };
        const o = {};
        St(r.posParams, (a, l) => {
          o[l] = a.path;
        });
        const s =
          r.consumed.length > 0
            ? { ...o, ...r.consumed[r.consumed.length - 1].parameters }
            : o;
        return {
          matched: !0,
          consumedSegments: r.consumed,
          remainingSegments: e.slice(r.consumed.length),
          parameters: s,
          positionalParamSegments: r.posParams ?? {},
        };
      }
      function Gu(n, t, e, i, r = "corrected") {
        if (
          e.length > 0 &&
          (function o3(n, t, e) {
            return e.some((i) => Wu(n, t, i) && Ln(i) !== he);
          })(n, e, i)
        ) {
          const s = new me(
            t,
            (function r3(n, t, e, i) {
              const r = {};
              (r[he] = i),
                (i._sourceSegment = n),
                (i._segmentIndexShift = t.length);
              for (const o of e)
                if ("" === o.path && Ln(o) !== he) {
                  const s = new me([], {});
                  (s._sourceSegment = n),
                    (s._segmentIndexShift = t.length),
                    (r[Ln(o)] = s);
                }
              return r;
            })(n, t, i, new me(e, n.children))
          );
          return (
            (s._sourceSegment = n),
            (s._segmentIndexShift = t.length),
            { segmentGroup: s, slicedSegments: [] }
          );
        }
        if (
          0 === e.length &&
          (function s3(n, t, e) {
            return e.some((i) => Wu(n, t, i));
          })(n, e, i)
        ) {
          const s = new me(
            n.segments,
            (function n3(n, t, e, i, r, o) {
              const s = {};
              for (const a of i)
                if (Wu(n, e, a) && !r[Ln(a)]) {
                  const l = new me([], {});
                  (l._sourceSegment = n),
                    (l._segmentIndexShift =
                      "legacy" === o ? n.segments.length : t.length),
                    (s[Ln(a)] = l);
                }
              return { ...r, ...s };
            })(n, t, e, i, n.children, r)
          );
          return (
            (s._sourceSegment = n),
            (s._segmentIndexShift = t.length),
            { segmentGroup: s, slicedSegments: e }
          );
        }
        const o = new me(n.segments, n.children);
        return (
          (o._sourceSegment = n),
          (o._segmentIndexShift = t.length),
          { segmentGroup: o, slicedSegments: e }
        );
      }
      function Wu(n, t, e) {
        return (
          (!(n.hasChildren() || t.length > 0) || "full" !== e.pathMatch) &&
          "" === e.path
        );
      }
      function UE(n, t, e, i) {
        return (
          !!(Ln(n) === i || (i !== he && Wu(t, e, n))) &&
          ("**" === n.path || lg(t, n, e).matched)
        );
      }
      function $E(n, t, e) {
        return 0 === t.length && !n.children[e];
      }
      const Yu = !1;
      class Ku {
        constructor(t) {
          this.segmentGroup = t || null;
        }
      }
      class zE {
        constructor(t) {
          this.urlTree = t;
        }
      }
      function ll(n) {
        return uo(new Ku(n));
      }
      function qE(n) {
        return uo(new zE(n));
      }
      class u3 {
        constructor(t, e, i, r, o) {
          (this.injector = t),
            (this.configLoader = e),
            (this.urlSerializer = i),
            (this.urlTree = r),
            (this.config = o),
            (this.allowRedirects = !0);
        }
        apply() {
          const t = Gu(this.urlTree.root, [], [], this.config).segmentGroup,
            e = new me(t.segments, t.children);
          return this.expandSegmentGroup(this.injector, this.config, e, he)
            .pipe(
              q((o) =>
                this.createUrlTree(
                  Bu(o),
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              Ei((o) => {
                if (o instanceof zE)
                  return (this.allowRedirects = !1), this.match(o.urlTree);
                throw o instanceof Ku ? this.noMatchError(o) : o;
              })
            );
        }
        match(t) {
          return this.expandSegmentGroup(this.injector, this.config, t.root, he)
            .pipe(
              q((r) => this.createUrlTree(Bu(r), t.queryParams, t.fragment))
            )
            .pipe(
              Ei((r) => {
                throw r instanceof Ku ? this.noMatchError(r) : r;
              })
            );
        }
        noMatchError(t) {
          return new S(4002, Yu);
        }
        createUrlTree(t, e, i) {
          const r = Wm(t);
          return new ho(r, e, i);
        }
        expandSegmentGroup(t, e, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.expandChildren(t, e, i).pipe(q((o) => new me([], o)))
            : this.expandSegment(t, i, e, i.segments, r, !0);
        }
        expandChildren(t, e, i) {
          const r = [];
          for (const o of Object.keys(i.children))
            "primary" === o ? r.unshift(o) : r.push(o);
          return rt(r).pipe(
            Rr((o) => {
              const s = i.children[o],
                a = LE(e, o);
              return this.expandSegmentGroup(t, a, s, o).pipe(
                q((l) => ({ segment: l, outlet: o }))
              );
            }),
            tE((o, s) => ((o[s.outlet] = s.segment), o), {}),
            nE()
          );
        }
        expandSegment(t, e, i, r, o, s) {
          return rt(i).pipe(
            Rr((a) =>
              this.expandSegmentAgainstRoute(t, e, i, a, r, o, s).pipe(
                Ei((c) => {
                  if (c instanceof Ku) return j(null);
                  throw c;
                })
              )
            ),
            kr((a) => !!a),
            Ei((a, l) => {
              if (a instanceof ws || "EmptyError" === a.name)
                return $E(e, r, o) ? j(new me([], {})) : ll(e);
              throw a;
            })
          );
        }
        expandSegmentAgainstRoute(t, e, i, r, o, s, a) {
          return UE(r, e, o, s)
            ? void 0 === r.redirectTo
              ? this.matchSegmentAgainstRoute(t, e, r, o, s)
              : a && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(t, e, i, r, o, s)
              : ll(e)
            : ll(e);
        }
        expandSegmentAgainstRouteUsingRedirect(t, e, i, r, o, s) {
          return "**" === r.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, i, r, s)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                t,
                e,
                i,
                r,
                o,
                s
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(t, e, i, r) {
          const o = this.applyRedirectCommands([], i.redirectTo, {});
          return i.redirectTo.startsWith("/")
            ? qE(o)
            : this.lineralizeSegments(i, o).pipe(
                bt((s) => {
                  const a = new me(s, {});
                  return this.expandSegment(t, a, e, s, r, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(t, e, i, r, o, s) {
          const {
            matched: a,
            consumedSegments: l,
            remainingSegments: c,
            positionalParamSegments: u,
          } = lg(e, r, o);
          if (!a) return ll(e);
          const d = this.applyRedirectCommands(l, r.redirectTo, u);
          return r.redirectTo.startsWith("/")
            ? qE(d)
            : this.lineralizeSegments(r, d).pipe(
                bt((f) => this.expandSegment(t, e, i, f.concat(c), s, !1))
              );
        }
        matchSegmentAgainstRoute(t, e, i, r, o) {
          return "**" === i.path
            ? ((t = NE(i, t)),
              i.loadChildren
                ? (i._loadedRoutes
                    ? j({
                        routes: i._loadedRoutes,
                        injector: i._loadedInjector,
                      })
                    : this.configLoader.loadChildren(t, i)
                  ).pipe(
                    q(
                      (a) => (
                        (i._loadedRoutes = a.routes),
                        (i._loadedInjector = a.injector),
                        new me(r, {})
                      )
                    )
                  )
                : j(new me(r, {})))
            : HE(e, i, r, t).pipe(
                Nn(
                  ({ matched: s, consumedSegments: a, remainingSegments: l }) =>
                    s
                      ? this.getChildConfig((t = i._injector ?? t), i, r).pipe(
                          bt((u) => {
                            const d = u.injector ?? t,
                              f = u.routes,
                              { segmentGroup: p, slicedSegments: _ } = Gu(
                                e,
                                a,
                                l,
                                f
                              ),
                              y = new me(p.segments, p.children);
                            if (0 === _.length && y.hasChildren())
                              return this.expandChildren(d, f, y).pipe(
                                q((E) => new me(a, E))
                              );
                            if (0 === f.length && 0 === _.length)
                              return j(new me(a, {}));
                            const w = Ln(i) === o;
                            return this.expandSegment(
                              d,
                              y,
                              f,
                              _,
                              w ? he : o,
                              !0
                            ).pipe(
                              q((A) => new me(a.concat(A.segments), A.children))
                            );
                          })
                        )
                      : ll(e)
                )
              );
        }
        getChildConfig(t, e, i) {
          return e.children
            ? j({ routes: e.children, injector: t })
            : e.loadChildren
            ? void 0 !== e._loadedRoutes
              ? j({ routes: e._loadedRoutes, injector: e._loadedInjector })
              : (function e3(n, t, e, i) {
                  const r = t.canLoad;
                  return void 0 === r || 0 === r.length
                    ? j(!0)
                    : j(
                        r.map((s) => {
                          const a = n.get(s),
                            l = (function jH(n) {
                              return n && al(n.canLoad);
                            })(a)
                              ? a.canLoad(t, e)
                              : a(t, e);
                          return Xi(l);
                        })
                      ).pipe(Ts(), jE());
                })(t, e, i).pipe(
                  bt((r) =>
                    r
                      ? this.configLoader.loadChildren(t, e).pipe(
                          ut((o) => {
                            (e._loadedRoutes = o.routes),
                              (e._loadedInjector = o.injector);
                          })
                        )
                      : (function l3(n) {
                          return uo(RE(Yu, 3));
                        })()
                  )
                )
            : j({ routes: [], injector: t });
        }
        lineralizeSegments(t, e) {
          let i = [],
            r = e.root;
          for (;;) {
            if (((i = i.concat(r.segments)), 0 === r.numberOfChildren))
              return j(i);
            if (r.numberOfChildren > 1 || !r.children[he])
              return uo(new S(4e3, Yu));
            r = r.children[he];
          }
        }
        applyRedirectCommands(t, e, i) {
          return this.applyRedirectCreateUrlTree(
            e,
            this.urlSerializer.parse(e),
            t,
            i
          );
        }
        applyRedirectCreateUrlTree(t, e, i, r) {
          const o = this.createSegmentGroup(t, e.root, i, r);
          return new ho(
            o,
            this.createQueryParams(e.queryParams, this.urlTree.queryParams),
            e.fragment
          );
        }
        createQueryParams(t, e) {
          const i = {};
          return (
            St(t, (r, o) => {
              if ("string" == typeof r && r.startsWith(":")) {
                const a = r.substring(1);
                i[o] = e[a];
              } else i[o] = r;
            }),
            i
          );
        }
        createSegmentGroup(t, e, i, r) {
          const o = this.createSegments(t, e.segments, i, r);
          let s = {};
          return (
            St(e.children, (a, l) => {
              s[l] = this.createSegmentGroup(t, a, i, r);
            }),
            new me(o, s)
          );
        }
        createSegments(t, e, i, r) {
          return e.map((o) =>
            o.path.startsWith(":")
              ? this.findPosParam(t, o, r)
              : this.findOrReturn(o, i)
          );
        }
        findPosParam(t, e, i) {
          const r = i[e.path.substring(1)];
          if (!r) throw new S(4001, Yu);
          return r;
        }
        findOrReturn(t, e) {
          let i = 0;
          for (const r of e) {
            if (r.path === t.path) return e.splice(i), r;
            i++;
          }
          return t;
        }
      }
      class h3 {}
      class m3 {
        constructor(t, e, i, r, o, s, a, l) {
          (this.injector = t),
            (this.rootComponentType = e),
            (this.config = i),
            (this.urlTree = r),
            (this.url = o),
            (this.paramsInheritanceStrategy = s),
            (this.relativeLinkResolution = a),
            (this.urlSerializer = l);
        }
        recognize() {
          const t = Gu(
            this.urlTree.root,
            [],
            [],
            this.config.filter((e) => void 0 === e.redirectTo),
            this.relativeLinkResolution
          ).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            t,
            he
          ).pipe(
            q((e) => {
              if (null === e) return null;
              const i = new Hu(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  he,
                  this.rootComponentType,
                  null,
                  this.urlTree.root,
                  -1,
                  {}
                ),
                r = new er(i, e),
                o = new AE(this.url, r);
              return this.inheritParamsAndData(o._root), o;
            })
          );
        }
        inheritParamsAndData(t) {
          const e = t.value,
            i = xE(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(i.params)),
            (e.data = Object.freeze(i.data)),
            t.children.forEach((r) => this.inheritParamsAndData(r));
        }
        processSegmentGroup(t, e, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.processChildren(t, e, i)
            : this.processSegment(t, e, i, i.segments, r);
        }
        processChildren(t, e, i) {
          return rt(Object.keys(i.children)).pipe(
            Rr((r) => {
              const o = i.children[r],
                s = LE(e, r);
              return this.processSegmentGroup(t, s, o, r);
            }),
            tE((r, o) => (r && o ? (r.push(...o), r) : null)),
            iE((r) => null !== r),
            Ru(null),
            nE(),
            q((r) => {
              if (null === r) return null;
              const o = GE(r);
              return (
                (function g3(n) {
                  n.sort((t, e) =>
                    t.value.outlet === he
                      ? -1
                      : e.value.outlet === he
                      ? 1
                      : t.value.outlet.localeCompare(e.value.outlet)
                  );
                })(o),
                o
              );
            })
          );
        }
        processSegment(t, e, i, r, o) {
          return rt(e).pipe(
            Rr((s) =>
              this.processSegmentAgainstRoute(s._injector ?? t, s, i, r, o)
            ),
            kr((s) => !!s),
            Ei((s) => {
              if (s instanceof ws) return $E(i, r, o) ? j([]) : j(null);
              throw s;
            })
          );
        }
        processSegmentAgainstRoute(t, e, i, r, o) {
          if (e.redirectTo || !UE(e, i, r, o)) return j(null);
          let s;
          if ("**" === e.path) {
            const a = r.length > 0 ? sE(r).parameters : {},
              l = YE(i) + r.length;
            s = j({
              snapshot: new Hu(
                r,
                a,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                ZE(e),
                Ln(e),
                e.component ?? e._loadedComponent ?? null,
                e,
                WE(i),
                l,
                QE(e),
                l
              ),
              consumedSegments: [],
              remainingSegments: [],
            });
          } else
            s = HE(i, e, r, t).pipe(
              q(
                ({
                  matched: a,
                  consumedSegments: l,
                  remainingSegments: c,
                  parameters: u,
                }) => {
                  if (!a) return null;
                  const d = YE(i) + l.length;
                  return {
                    snapshot: new Hu(
                      l,
                      u,
                      Object.freeze({ ...this.urlTree.queryParams }),
                      this.urlTree.fragment,
                      ZE(e),
                      Ln(e),
                      e.component ?? e._loadedComponent ?? null,
                      e,
                      WE(i),
                      d,
                      QE(e),
                      d
                    ),
                    consumedSegments: l,
                    remainingSegments: c,
                  };
                }
              )
            );
          return s.pipe(
            Nn((a) => {
              if (null === a) return j(null);
              const {
                snapshot: l,
                consumedSegments: c,
                remainingSegments: u,
              } = a;
              t = e._injector ?? t;
              const d = e._loadedInjector ?? t,
                f = (function _3(n) {
                  return n.children
                    ? n.children
                    : n.loadChildren
                    ? n._loadedRoutes
                    : [];
                })(e),
                { segmentGroup: p, slicedSegments: _ } = Gu(
                  i,
                  c,
                  u,
                  f.filter((w) => void 0 === w.redirectTo),
                  this.relativeLinkResolution
                );
              if (0 === _.length && p.hasChildren())
                return this.processChildren(d, f, p).pipe(
                  q((w) => (null === w ? null : [new er(l, w)]))
                );
              if (0 === f.length && 0 === _.length) return j([new er(l, [])]);
              const y = Ln(e) === o;
              return this.processSegment(d, f, p, _, y ? he : o).pipe(
                q((w) => (null === w ? null : [new er(l, w)]))
              );
            })
          );
        }
      }
      function v3(n) {
        const t = n.value.routeConfig;
        return t && "" === t.path && void 0 === t.redirectTo;
      }
      function GE(n) {
        const t = [],
          e = new Set();
        for (const i of n) {
          if (!v3(i)) {
            t.push(i);
            continue;
          }
          const r = t.find((o) => i.value.routeConfig === o.value.routeConfig);
          void 0 !== r ? (r.children.push(...i.children), e.add(r)) : t.push(i);
        }
        for (const i of e) {
          const r = GE(i.children);
          t.push(new er(i.value, r));
        }
        return t.filter((i) => !e.has(i));
      }
      function WE(n) {
        let t = n;
        for (; t._sourceSegment; ) t = t._sourceSegment;
        return t;
      }
      function YE(n) {
        let t = n,
          e = t._segmentIndexShift ?? 0;
        for (; t._sourceSegment; )
          (t = t._sourceSegment), (e += t._segmentIndexShift ?? 0);
        return e - 1;
      }
      function ZE(n) {
        return n.data || {};
      }
      function QE(n) {
        return n.resolve || {};
      }
      const cg = Symbol("RouteTitle");
      function XE(n) {
        return "string" == typeof n.title || null === n.title;
      }
      function ug(n) {
        return Nn((t) => {
          const e = n(t);
          return e ? rt(e).pipe(q(() => t)) : j(t);
        });
      }
      class x3 extends class T3 {
        shouldDetach(t) {
          return !1;
        }
        store(t, e) {}
        shouldAttach(t) {
          return !1;
        }
        retrieve(t) {
          return null;
        }
        shouldReuseRoute(t, e) {
          return t.routeConfig === e.routeConfig;
        }
      } {}
      const dg = new x("ROUTES");
      let hg = (() => {
        class n {
          constructor(e, i) {
            (this.injector = e),
              (this.compiler = i),
              (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap());
          }
          loadComponent(e) {
            if (this.componentLoaders.get(e))
              return this.componentLoaders.get(e);
            if (e._loadedComponent) return j(e._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(e);
            const i = Xi(e.loadComponent()).pipe(
                ut((o) => {
                  this.onLoadEndListener && this.onLoadEndListener(e),
                    (e._loadedComponent = o);
                }),
                Ou(() => {
                  this.componentLoaders.delete(e);
                })
              ),
              r = new JM(i, () => new V()).pipe(Um());
            return this.componentLoaders.set(e, r), r;
          }
          loadChildren(e, i) {
            if (this.childrenLoaders.get(i)) return this.childrenLoaders.get(i);
            if (i._loadedRoutes)
              return j({
                routes: i._loadedRoutes,
                injector: i._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(i);
            const o = this.loadModuleFactoryOrRoutes(i.loadChildren).pipe(
                q((a) => {
                  this.onLoadEndListener && this.onLoadEndListener(i);
                  let l,
                    c,
                    u = !1;
                  Array.isArray(a)
                    ? (c = a)
                    : ((l = a.create(e).injector),
                      (c = oE(l.get(dg, [], $.Self | $.Optional))));
                  return { routes: c.map(sg), injector: l };
                }),
                Ou(() => {
                  this.childrenLoaders.delete(i);
                })
              ),
              s = new JM(o, () => new V()).pipe(Um());
            return this.childrenLoaders.set(i, s), s;
          }
          loadModuleFactoryOrRoutes(e) {
            return Xi(e()).pipe(
              bt((i) =>
                i instanceof WC || Array.isArray(i)
                  ? j(i)
                  : rt(this.compiler.compileModuleAsync(i))
              )
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(ze), b(pp));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class I3 {
        shouldProcessUrl(t) {
          return !0;
        }
        extract(t) {
          return t;
        }
        merge(t, e) {
          return t;
        }
      }
      function k3(n) {
        throw n;
      }
      function R3(n, t, e) {
        return t.parse("/");
      }
      const O3 = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        F3 = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let we = (() => {
        class n {
          constructor(e, i, r, o, s, a, l) {
            (this.rootComponentType = e),
              (this.urlSerializer = i),
              (this.rootContexts = r),
              (this.location = o),
              (this.config = l),
              (this.lastSuccessfulNavigation = null),
              (this.currentNavigation = null),
              (this.disposed = !1),
              (this.navigationId = 0),
              (this.currentPageId = 0),
              (this.isNgZoneEnabled = !1),
              (this.events = new V()),
              (this.errorHandler = k3),
              (this.malformedUriErrorHandler = R3),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.afterPreactivation = () => j(void 0)),
              (this.urlHandlingStrategy = new I3()),
              (this.routeReuseStrategy = new x3()),
              (this.onSameUrlNavigation = "ignore"),
              (this.paramsInheritanceStrategy = "emptyOnly"),
              (this.urlUpdateStrategy = "deferred"),
              (this.relativeLinkResolution = "corrected"),
              (this.canceledNavigationResolution = "replace"),
              (this.configLoader = s.get(hg)),
              (this.configLoader.onLoadEndListener = (f) =>
                this.triggerEvent(new gH(f))),
              (this.configLoader.onLoadStartListener = (f) =>
                this.triggerEvent(new mH(f))),
              (this.ngModule = s.get(to)),
              (this.console = s.get(VP));
            const d = s.get(G);
            (this.isNgZoneEnabled = d instanceof G && G.isInAngularZone()),
              this.resetConfig(l),
              (this.currentUrlTree = (function Bj() {
                return new ho(new me([], {}), {}, null);
              })()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.routerState = TE(
                this.currentUrlTree,
                this.rootComponentType
              )),
              (this.transitions = new _n({
                id: 0,
                targetPageId: 0,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                extractedUrl: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                urlAfterRedirects: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                rawUrl: this.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: "imperative",
                restoredState: null,
                currentSnapshot: this.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: this.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              (this.navigations = this.setupNavigations(this.transitions)),
              this.processNavigations();
          }
          get browserPageId() {
            return this.location.getState()?.ɵrouterPageId;
          }
          setupNavigations(e) {
            const i = this.events;
            return e.pipe(
              qe((r) => 0 !== r.id),
              q((r) => ({
                ...r,
                extractedUrl: this.urlHandlingStrategy.extract(r.rawUrl),
              })),
              Nn((r) => {
                let o = !1,
                  s = !1;
                return j(r).pipe(
                  ut((a) => {
                    this.currentNavigation = {
                      id: a.id,
                      initialUrl: a.rawUrl,
                      extractedUrl: a.extractedUrl,
                      trigger: a.source,
                      extras: a.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? {
                            ...this.lastSuccessfulNavigation,
                            previousNavigation: null,
                          }
                        : null,
                    };
                  }),
                  Nn((a) => {
                    const l = this.browserUrlTree.toString(),
                      c =
                        !this.navigated ||
                        a.extractedUrl.toString() !== l ||
                        l !== this.currentUrlTree.toString();
                    if (
                      ("reload" === this.onSameUrlNavigation || c) &&
                      this.urlHandlingStrategy.shouldProcessUrl(a.rawUrl)
                    )
                      return (
                        eS(a.source) && (this.browserUrlTree = a.extractedUrl),
                        j(a).pipe(
                          Nn((d) => {
                            const f = this.transitions.getValue();
                            return (
                              i.next(
                                new Qm(
                                  d.id,
                                  this.serializeUrl(d.extractedUrl),
                                  d.source,
                                  d.restoredState
                                )
                              ),
                              f !== this.transitions.getValue()
                                ? ni
                                : Promise.resolve(d)
                            );
                          }),
                          (function d3(n, t, e, i) {
                            return Nn((r) =>
                              (function c3(n, t, e, i, r) {
                                return new u3(n, t, e, i, r).apply();
                              })(n, t, e, r.extractedUrl, i).pipe(
                                q((o) => ({ ...r, urlAfterRedirects: o }))
                              )
                            );
                          })(
                            this.ngModule.injector,
                            this.configLoader,
                            this.urlSerializer,
                            this.config
                          ),
                          ut((d) => {
                            (this.currentNavigation = {
                              ...this.currentNavigation,
                              finalUrl: d.urlAfterRedirects,
                            }),
                              (r.urlAfterRedirects = d.urlAfterRedirects);
                          }),
                          (function b3(n, t, e, i, r, o) {
                            return bt((s) =>
                              (function p3(
                                n,
                                t,
                                e,
                                i,
                                r,
                                o,
                                s = "emptyOnly",
                                a = "legacy"
                              ) {
                                return new m3(n, t, e, i, r, s, a, o)
                                  .recognize()
                                  .pipe(
                                    Nn((l) =>
                                      null === l
                                        ? (function f3(n) {
                                            return new Oe((t) => t.error(n));
                                          })(new h3())
                                        : j(l)
                                    )
                                  );
                              })(
                                n,
                                t,
                                e,
                                s.urlAfterRedirects,
                                i.serialize(s.urlAfterRedirects),
                                i,
                                r,
                                o
                              ).pipe(q((a) => ({ ...s, targetSnapshot: a })))
                            );
                          })(
                            this.ngModule.injector,
                            this.rootComponentType,
                            this.config,
                            this.urlSerializer,
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          ut((d) => {
                            if (
                              ((r.targetSnapshot = d.targetSnapshot),
                              "eager" === this.urlUpdateStrategy)
                            ) {
                              if (!d.extras.skipLocationChange) {
                                const p = this.urlHandlingStrategy.merge(
                                  d.urlAfterRedirects,
                                  d.rawUrl
                                );
                                this.setBrowserUrl(p, d);
                              }
                              this.browserUrlTree = d.urlAfterRedirects;
                            }
                            const f = new uH(
                              d.id,
                              this.serializeUrl(d.extractedUrl),
                              this.serializeUrl(d.urlAfterRedirects),
                              d.targetSnapshot
                            );
                            i.next(f);
                          })
                        )
                      );
                    if (
                      c &&
                      this.rawUrlTree &&
                      this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)
                    ) {
                      const {
                          id: f,
                          extractedUrl: p,
                          source: _,
                          restoredState: y,
                          extras: w,
                        } = a,
                        D = new Qm(f, this.serializeUrl(p), _, y);
                      i.next(D);
                      const A = TE(p, this.rootComponentType).snapshot;
                      return j(
                        (r = {
                          ...a,
                          targetSnapshot: A,
                          urlAfterRedirects: p,
                          extras: {
                            ...w,
                            skipLocationChange: !1,
                            replaceUrl: !1,
                          },
                        })
                      );
                    }
                    return (this.rawUrlTree = a.rawUrl), a.resolve(null), ni;
                  }),
                  ut((a) => {
                    const l = new dH(
                      a.id,
                      this.serializeUrl(a.extractedUrl),
                      this.serializeUrl(a.urlAfterRedirects),
                      a.targetSnapshot
                    );
                    this.triggerEvent(l);
                  }),
                  q(
                    (a) =>
                      (r = {
                        ...a,
                        guards: PH(
                          a.targetSnapshot,
                          a.currentSnapshot,
                          this.rootContexts
                        ),
                      })
                  ),
                  (function GH(n, t) {
                    return bt((e) => {
                      const {
                        targetSnapshot: i,
                        currentSnapshot: r,
                        guards: {
                          canActivateChecks: o,
                          canDeactivateChecks: s,
                        },
                      } = e;
                      return 0 === s.length && 0 === o.length
                        ? j({ ...e, guardsResult: !0 })
                        : (function WH(n, t, e, i) {
                            return rt(n).pipe(
                              bt((r) =>
                                (function JH(n, t, e, i, r) {
                                  const o =
                                    t && t.routeConfig
                                      ? t.routeConfig.canDeactivate
                                      : null;
                                  return o && 0 !== o.length
                                    ? j(
                                        o.map((a) => {
                                          const l = zu(a, t, r);
                                          return Xi(
                                            (function $H(n) {
                                              return n && al(n.canDeactivate);
                                            })(l)
                                              ? l.canDeactivate(n, t, e, i)
                                              : l(n, t, e, i)
                                          ).pipe(kr());
                                        })
                                      ).pipe(Ts())
                                    : j(!0);
                                })(r.component, r.route, e, t, i)
                              ),
                              kr((r) => !0 !== r, !0)
                            );
                          })(s, i, r, n).pipe(
                            bt((a) =>
                              a &&
                              (function BH(n) {
                                return "boolean" == typeof n;
                              })(a)
                                ? (function YH(n, t, e, i) {
                                    return rt(t).pipe(
                                      Rr((r) =>
                                        ku(
                                          (function ZH(n, t) {
                                            return (
                                              null !== n && t && t(new _H(n)),
                                              j(!0)
                                            );
                                          })(r.route.parent, i),
                                          (function KH(n, t) {
                                            return (
                                              null !== n && t && t(new yH(n)),
                                              j(!0)
                                            );
                                          })(r.route, i),
                                          (function XH(n, t, e) {
                                            const i = t[t.length - 1],
                                              o = t
                                                .slice(0, t.length - 1)
                                                .reverse()
                                                .map((s) =>
                                                  (function NH(n) {
                                                    const t = n.routeConfig
                                                      ? n.routeConfig
                                                          .canActivateChild
                                                      : null;
                                                    return t && 0 !== t.length
                                                      ? { node: n, guards: t }
                                                      : null;
                                                  })(s)
                                                )
                                                .filter((s) => null !== s)
                                                .map((s) =>
                                                  Qa(() =>
                                                    j(
                                                      s.guards.map((l) => {
                                                        const c = zu(
                                                          l,
                                                          s.node,
                                                          e
                                                        );
                                                        return Xi(
                                                          (function UH(n) {
                                                            return (
                                                              n &&
                                                              al(
                                                                n.canActivateChild
                                                              )
                                                            );
                                                          })(c)
                                                            ? c.canActivateChild(
                                                                i,
                                                                n
                                                              )
                                                            : c(i, n)
                                                        ).pipe(kr());
                                                      })
                                                    ).pipe(Ts())
                                                  )
                                                );
                                            return j(o).pipe(Ts());
                                          })(n, r.path, e),
                                          (function QH(n, t, e) {
                                            const i = t.routeConfig
                                              ? t.routeConfig.canActivate
                                              : null;
                                            if (!i || 0 === i.length)
                                              return j(!0);
                                            const r = i.map((o) =>
                                              Qa(() => {
                                                const s = zu(o, t, e);
                                                return Xi(
                                                  (function HH(n) {
                                                    return (
                                                      n && al(n.canActivate)
                                                    );
                                                  })(s)
                                                    ? s.canActivate(t, n)
                                                    : s(t, n)
                                                ).pipe(kr());
                                              })
                                            );
                                            return j(r).pipe(Ts());
                                          })(n, r.route, e)
                                        )
                                      ),
                                      kr((r) => !0 !== r, !0)
                                    );
                                  })(i, o, n, t)
                                : j(a)
                            ),
                            q((a) => ({ ...e, guardsResult: a }))
                          );
                    });
                  })(this.ngModule.injector, (a) => this.triggerEvent(a)),
                  ut((a) => {
                    if (((r.guardsResult = a.guardsResult), po(a.guardsResult)))
                      throw kE(0, a.guardsResult);
                    const l = new hH(
                      a.id,
                      this.serializeUrl(a.extractedUrl),
                      this.serializeUrl(a.urlAfterRedirects),
                      a.targetSnapshot,
                      !!a.guardsResult
                    );
                    this.triggerEvent(l);
                  }),
                  qe(
                    (a) =>
                      !!a.guardsResult ||
                      (this.restoreHistory(a),
                      this.cancelNavigationTransition(a, "", 3),
                      !1)
                  ),
                  ug((a) => {
                    if (a.guards.canActivateChecks.length)
                      return j(a).pipe(
                        ut((l) => {
                          const c = new fH(
                            l.id,
                            this.serializeUrl(l.extractedUrl),
                            this.serializeUrl(l.urlAfterRedirects),
                            l.targetSnapshot
                          );
                          this.triggerEvent(c);
                        }),
                        Nn((l) => {
                          let c = !1;
                          return j(l).pipe(
                            (function C3(n, t) {
                              return bt((e) => {
                                const {
                                  targetSnapshot: i,
                                  guards: { canActivateChecks: r },
                                } = e;
                                if (!r.length) return j(e);
                                let o = 0;
                                return rt(r).pipe(
                                  Rr((s) =>
                                    (function w3(n, t, e, i) {
                                      const r = n.routeConfig,
                                        o = n._resolve;
                                      return (
                                        void 0 !== r?.title &&
                                          !XE(r) &&
                                          (o[cg] = r.title),
                                        (function D3(n, t, e, i) {
                                          const r = (function M3(n) {
                                            return [
                                              ...Object.keys(n),
                                              ...Object.getOwnPropertySymbols(
                                                n
                                              ),
                                            ];
                                          })(n);
                                          if (0 === r.length) return j({});
                                          const o = {};
                                          return rt(r).pipe(
                                            bt((s) =>
                                              (function E3(n, t, e, i) {
                                                const r = zu(n, t, i);
                                                return Xi(
                                                  r.resolve
                                                    ? r.resolve(t, e)
                                                    : r(t, e)
                                                );
                                              })(n[s], t, e, i).pipe(
                                                kr(),
                                                ut((a) => {
                                                  o[s] = a;
                                                })
                                              )
                                            ),
                                            $m(1),
                                            zm(o),
                                            Ei((s) =>
                                              s instanceof ws ? ni : uo(s)
                                            )
                                          );
                                        })(o, n, t, i).pipe(
                                          q(
                                            (s) => (
                                              (n._resolvedData = s),
                                              (n.data = xE(n, e).resolve),
                                              r &&
                                                XE(r) &&
                                                (n.data[cg] = r.title),
                                              null
                                            )
                                          )
                                        )
                                      );
                                    })(s.route, i, n, t)
                                  ),
                                  ut(() => o++),
                                  $m(1),
                                  bt((s) => (o === r.length ? j(e) : ni))
                                );
                              });
                            })(
                              this.paramsInheritanceStrategy,
                              this.ngModule.injector
                            ),
                            ut({
                              next: () => (c = !0),
                              complete: () => {
                                c ||
                                  (this.restoreHistory(l),
                                  this.cancelNavigationTransition(l, "", 2));
                              },
                            })
                          );
                        }),
                        ut((l) => {
                          const c = new pH(
                            l.id,
                            this.serializeUrl(l.extractedUrl),
                            this.serializeUrl(l.urlAfterRedirects),
                            l.targetSnapshot
                          );
                          this.triggerEvent(c);
                        })
                      );
                  }),
                  ug((a) => {
                    const l = (c) => {
                      const u = [];
                      c.routeConfig?.loadComponent &&
                        !c.routeConfig._loadedComponent &&
                        u.push(
                          this.configLoader.loadComponent(c.routeConfig).pipe(
                            ut((d) => {
                              c.component = d;
                            }),
                            q(() => {})
                          )
                        );
                      for (const d of c.children) u.push(...l(d));
                      return u;
                    };
                    return Hm(l(a.targetSnapshot.root)).pipe(Ru(), vt(1));
                  }),
                  ug(() => this.afterPreactivation()),
                  q((a) => {
                    const l = (function MH(n, t, e) {
                      const i = il(n, t._root, e ? e._root : void 0);
                      return new SE(i, t);
                    })(
                      this.routeReuseStrategy,
                      a.targetSnapshot,
                      a.currentRouterState
                    );
                    return (r = { ...a, targetRouterState: l });
                  }),
                  ut((a) => {
                    (this.currentUrlTree = a.urlAfterRedirects),
                      (this.rawUrlTree = this.urlHandlingStrategy.merge(
                        a.urlAfterRedirects,
                        a.rawUrl
                      )),
                      (this.routerState = a.targetRouterState),
                      "deferred" === this.urlUpdateStrategy &&
                        (a.extras.skipLocationChange ||
                          this.setBrowserUrl(this.rawUrlTree, a),
                        (this.browserUrlTree = a.urlAfterRedirects));
                  }),
                  ((n, t, e) =>
                    q(
                      (i) => (
                        new FH(
                          t,
                          i.targetRouterState,
                          i.currentRouterState,
                          e
                        ).activate(n),
                        i
                      )
                    ))(this.rootContexts, this.routeReuseStrategy, (a) =>
                    this.triggerEvent(a)
                  ),
                  ut({
                    next() {
                      o = !0;
                    },
                    complete() {
                      o = !0;
                    },
                  }),
                  Ou(() => {
                    o || s || this.cancelNavigationTransition(r, "", 1),
                      this.currentNavigation?.id === r.id &&
                        (this.currentNavigation = null);
                  }),
                  Ei((a) => {
                    if (((s = !0), FE(a))) {
                      OE(a) ||
                        ((this.navigated = !0), this.restoreHistory(r, !0));
                      const l = new ju(
                        r.id,
                        this.serializeUrl(r.extractedUrl),
                        a.message,
                        a.cancellationCode
                      );
                      if ((i.next(l), OE(a))) {
                        const c = this.urlHandlingStrategy.merge(
                            a.url,
                            this.rawUrlTree
                          ),
                          u = {
                            skipLocationChange: r.extras.skipLocationChange,
                            replaceUrl:
                              "eager" === this.urlUpdateStrategy ||
                              eS(r.source),
                          };
                        this.scheduleNavigation(c, "imperative", null, u, {
                          resolve: r.resolve,
                          reject: r.reject,
                          promise: r.promise,
                        });
                      } else r.resolve(!1);
                    } else {
                      this.restoreHistory(r, !0);
                      const l = new DE(
                        r.id,
                        this.serializeUrl(r.extractedUrl),
                        a,
                        r.targetSnapshot ?? void 0
                      );
                      i.next(l);
                      try {
                        r.resolve(this.errorHandler(a));
                      } catch (c) {
                        r.reject(c);
                      }
                    }
                    return ni;
                  })
                );
              })
            );
          }
          resetRootComponentType(e) {
            (this.rootComponentType = e),
              (this.routerState.root.component = this.rootComponentType);
          }
          setTransition(e) {
            this.transitions.next({ ...this.transitions.value, ...e });
          }
          initialNavigation() {
            this.setUpLocationChangeListener(),
              0 === this.navigationId &&
                this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((e) => {
                const i = "popstate" === e.type ? "popstate" : "hashchange";
                "popstate" === i &&
                  setTimeout(() => {
                    const r = { replaceUrl: !0 },
                      o = e.state?.navigationId ? e.state : null;
                    if (o) {
                      const a = { ...o };
                      delete a.navigationId,
                        delete a.ɵrouterPageId,
                        0 !== Object.keys(a).length && (r.state = a);
                    }
                    const s = this.parseUrl(e.url);
                    this.scheduleNavigation(s, i, o, r);
                  }, 0);
              }));
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.currentNavigation;
          }
          triggerEvent(e) {
            this.events.next(e);
          }
          resetConfig(e) {
            (this.config = e.map(sg)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.transitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0);
          }
          createUrlTree(e, i = {}) {
            const {
                relativeTo: r,
                queryParams: o,
                fragment: s,
                queryParamsHandling: a,
                preserveFragment: l,
              } = i,
              c = r || this.routerState.root,
              u = l ? this.currentUrlTree.fragment : s;
            let d = null;
            switch (a) {
              case "merge":
                d = { ...this.currentUrlTree.queryParams, ...o };
                break;
              case "preserve":
                d = this.currentUrlTree.queryParams;
                break;
              default:
                d = o || null;
            }
            return (
              null !== d && (d = this.removeEmptyProps(d)),
              rH(c, this.currentUrlTree, e, d, u ?? null)
            );
          }
          navigateByUrl(e, i = { skipLocationChange: !1 }) {
            const r = po(e) ? e : this.parseUrl(e),
              o = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
            return this.scheduleNavigation(o, "imperative", null, i);
          }
          navigate(e, i = { skipLocationChange: !1 }) {
            return (
              (function P3(n) {
                for (let t = 0; t < n.length; t++) {
                  if (null == n[t]) throw new S(4008, false);
                }
              })(e),
              this.navigateByUrl(this.createUrlTree(e, i), i)
            );
          }
          serializeUrl(e) {
            return this.urlSerializer.serialize(e);
          }
          parseUrl(e) {
            let i;
            try {
              i = this.urlSerializer.parse(e);
            } catch (r) {
              i = this.malformedUriErrorHandler(r, this.urlSerializer, e);
            }
            return i;
          }
          isActive(e, i) {
            let r;
            if (((r = !0 === i ? { ...O3 } : !1 === i ? { ...F3 } : i), po(e)))
              return lE(this.currentUrlTree, e, r);
            const o = this.parseUrl(e);
            return lE(this.currentUrlTree, o, r);
          }
          removeEmptyProps(e) {
            return Object.keys(e).reduce((i, r) => {
              const o = e[r];
              return null != o && (i[r] = o), i;
            }, {});
          }
          processNavigations() {
            this.navigations.subscribe(
              (e) => {
                (this.navigated = !0),
                  (this.lastSuccessfulId = e.id),
                  (this.currentPageId = e.targetPageId),
                  this.events.next(
                    new mo(
                      e.id,
                      this.serializeUrl(e.extractedUrl),
                      this.serializeUrl(this.currentUrlTree)
                    )
                  ),
                  (this.lastSuccessfulNavigation = this.currentNavigation),
                  this.titleStrategy?.updateTitle(this.routerState.snapshot),
                  e.resolve(!0);
              },
              (e) => {
                this.console.warn(`Unhandled Navigation Error: ${e}`);
              }
            );
          }
          scheduleNavigation(e, i, r, o, s) {
            if (this.disposed) return Promise.resolve(!1);
            let a, l, c;
            s
              ? ((a = s.resolve), (l = s.reject), (c = s.promise))
              : (c = new Promise((f, p) => {
                  (a = f), (l = p);
                }));
            const u = ++this.navigationId;
            let d;
            return (
              "computed" === this.canceledNavigationResolution
                ? (0 === this.currentPageId && (r = this.location.getState()),
                  (d =
                    r && r.ɵrouterPageId
                      ? r.ɵrouterPageId
                      : o.replaceUrl || o.skipLocationChange
                      ? this.browserPageId ?? 0
                      : (this.browserPageId ?? 0) + 1))
                : (d = 0),
              this.setTransition({
                id: u,
                targetPageId: d,
                source: i,
                restoredState: r,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.rawUrlTree,
                rawUrl: e,
                extras: o,
                resolve: a,
                reject: l,
                promise: c,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              c.catch((f) => Promise.reject(f))
            );
          }
          setBrowserUrl(e, i) {
            const r = this.urlSerializer.serialize(e),
              o = {
                ...i.extras.state,
                ...this.generateNgRouterState(i.id, i.targetPageId),
              };
            this.location.isCurrentPathEqualTo(r) || i.extras.replaceUrl
              ? this.location.replaceState(r, "", o)
              : this.location.go(r, "", o);
          }
          restoreHistory(e, i = !1) {
            if ("computed" === this.canceledNavigationResolution) {
              const r = this.currentPageId - e.targetPageId;
              ("popstate" !== e.source &&
                "eager" !== this.urlUpdateStrategy &&
                this.currentUrlTree !== this.currentNavigation?.finalUrl) ||
              0 === r
                ? this.currentUrlTree === this.currentNavigation?.finalUrl &&
                  0 === r &&
                  (this.resetState(e),
                  (this.browserUrlTree = e.currentUrlTree),
                  this.resetUrlToCurrentUrlTree())
                : this.location.historyGo(r);
            } else
              "replace" === this.canceledNavigationResolution &&
                (i && this.resetState(e), this.resetUrlToCurrentUrlTree());
          }
          resetState(e) {
            (this.routerState = e.currentRouterState),
              (this.currentUrlTree = e.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                e.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          cancelNavigationTransition(e, i, r) {
            const o = new ju(e.id, this.serializeUrl(e.extractedUrl), i, r);
            this.triggerEvent(o), e.resolve(!1);
          }
          generateNgRouterState(e, i) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: e, ɵrouterPageId: i }
              : { navigationId: e };
          }
        }
        return (
          (n.ɵfac = function (e) {
            Zr();
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function eS(n) {
        return "imperative" !== n;
      }
      let Ti = (() => {
          class n {
            constructor(e, i, r, o, s) {
              (this.router = e),
                (this.route = i),
                (this.tabIndexAttribute = r),
                (this.renderer = o),
                (this.el = s),
                (this.commands = null),
                (this.onChanges = new V()),
                this.setTabIndexIfNotOnNativeEl("0");
            }
            setTabIndexIfNotOnNativeEl(e) {
              if (null != this.tabIndexAttribute) return;
              const i = this.renderer,
                r = this.el.nativeElement;
              null !== e
                ? i.setAttribute(r, "tabindex", e)
                : i.removeAttribute(r, "tabindex");
            }
            ngOnChanges(e) {
              this.onChanges.next(this);
            }
            set routerLink(e) {
              null != e
                ? ((this.commands = Array.isArray(e) ? e : [e]),
                  this.setTabIndexIfNotOnNativeEl("0"))
                : ((this.commands = null),
                  this.setTabIndexIfNotOnNativeEl(null));
            }
            onClick() {
              if (null === this.urlTree) return !0;
              const e = {
                skipLocationChange: Gi(this.skipLocationChange),
                replaceUrl: Gi(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, e), !0;
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: Gi(this.preserveFragment),
                  });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(we), h(yn), ai("tabindex"), h(ji), h(ie));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [["", "routerLink", "", 5, "a", 5, "area"]],
              hostBindings: function (e, i) {
                1 & e &&
                  I("click", function () {
                    return i.onClick();
                  });
              },
              inputs: {
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
                routerLink: "routerLink",
              },
              features: [Mt],
            })),
            n
          );
        })(),
        Xu = (() => {
          class n {
            constructor(e, i, r) {
              (this.router = e),
                (this.route = i),
                (this.locationStrategy = r),
                (this.commands = null),
                (this.href = null),
                (this.onChanges = new V()),
                (this.subscription = e.events.subscribe((o) => {
                  o instanceof mo && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(e) {
              this.commands = null != e ? (Array.isArray(e) ? e : [e]) : null;
            }
            ngOnChanges(e) {
              this.updateTargetUrlAndHref(), this.onChanges.next(this);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(e, i, r, o, s) {
              if (
                0 !== e ||
                i ||
                r ||
                o ||
                s ||
                ("string" == typeof this.target && "_self" != this.target) ||
                null === this.urlTree
              )
                return !0;
              const a = {
                skipLocationChange: Gi(this.skipLocationChange),
                replaceUrl: Gi(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, a), !1;
            }
            updateTargetUrlAndHref() {
              this.href =
                null !== this.urlTree
                  ? this.locationStrategy.prepareExternalUrl(
                      this.router.serializeUrl(this.urlTree)
                    )
                  : null;
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: Gi(this.preserveFragment),
                  });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(we), h(yn), h(ro));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["a", "routerLink", ""],
                ["area", "routerLink", ""],
              ],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  I("click", function (o) {
                    return i.onClick(
                      o.button,
                      o.ctrlKey,
                      o.shiftKey,
                      o.altKey,
                      o.metaKey
                    );
                  }),
                  2 & e && Ae("target", i.target)("href", i.href, Lh);
              },
              inputs: {
                target: "target",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
                routerLink: "routerLink",
              },
              features: [Mt],
            })),
            n
          );
        })(),
        tS = (() => {
          class n {
            buildTitle(e) {
              let i,
                r = e.root;
              for (; void 0 !== r; )
                (i = this.getResolvedTitleForRoute(r) ?? i),
                  (r = r.children.find((o) => o.outlet === he));
              return i;
            }
            getResolvedTitleForRoute(e) {
              return e.data[cg];
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = k({
              token: n,
              factory: function () {
                return un(V3);
              },
              providedIn: "root",
            })),
            n
          );
        })(),
        V3 = (() => {
          class n extends tS {
            constructor(e) {
              super(), (this.title = e);
            }
            updateTitle(e) {
              const i = this.buildTitle(e);
              void 0 !== i && this.title.setTitle(i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(Z0));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      class nS {}
      let iS = (() => {
        class n {
          constructor(e, i, r, o, s) {
            (this.router = e),
              (this.injector = r),
              (this.preloadingStrategy = o),
              (this.loader = s);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                qe((e) => e instanceof mo),
                Rr(() => this.preload())
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(e, i) {
            const r = [];
            for (const o of i) {
              o.providers &&
                !o._injector &&
                (o._injector = Ic(o.providers, e, `Route: ${o.path}`));
              const s = o._injector ?? e,
                a = o._loadedInjector ?? s;
              (o.loadChildren && !o._loadedRoutes) ||
              (o.loadComponent && !o._loadedComponent)
                ? r.push(this.preloadConfig(s, o))
                : (o.children || o._loadedRoutes) &&
                  r.push(this.processRoutes(a, o.children ?? o._loadedRoutes));
            }
            return rt(r).pipe(xo());
          }
          preloadConfig(e, i) {
            return this.preloadingStrategy.preload(i, () => {
              let r;
              r =
                i.loadChildren && void 0 === i.canLoad
                  ? this.loader.loadChildren(e, i)
                  : j(null);
              const o = r.pipe(
                bt((s) =>
                  null === s
                    ? j(void 0)
                    : ((i._loadedRoutes = s.routes),
                      (i._loadedInjector = s.injector),
                      this.processRoutes(s.injector ?? e, s.routes))
                )
              );
              return i.loadComponent && !i._loadedComponent
                ? rt([o, this.loader.loadComponent(i)]).pipe(xo())
                : o;
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(we), b(pp), b(_r), b(nS), b(hg));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const rS = new x("");
      let B3 = (() => {
        class n {
          constructor(e, i, r = {}) {
            (this.router = e),
              (this.viewportScroller = i),
              (this.options = r),
              (this.lastId = 0),
              (this.lastSource = "imperative"),
              (this.restoredId = 0),
              (this.store = {}),
              (r.scrollPositionRestoration =
                r.scrollPositionRestoration || "disabled"),
              (r.anchorScrolling = r.anchorScrolling || "disabled");
          }
          init() {
            "disabled" !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration("manual"),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.router.events.subscribe((e) => {
              e instanceof Qm
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = e.navigationTrigger),
                  (this.restoredId = e.restoredState
                    ? e.restoredState.navigationId
                    : 0))
                : e instanceof mo &&
                  ((this.lastId = e.id),
                  this.scheduleScrollEvent(
                    e,
                    this.router.parseUrl(e.urlAfterRedirects).fragment
                  ));
            });
          }
          consumeScrollEvents() {
            return this.router.events.subscribe((e) => {
              e instanceof ME &&
                (e.position
                  ? "top" === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : "enabled" === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(e.position)
                  : e.anchor && "enabled" === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(e.anchor)
                  : "disabled" !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(e, i) {
            this.router.triggerEvent(
              new ME(
                e,
                "popstate" === this.lastSource
                  ? this.store[this.restoredId]
                  : null,
                i
              )
            );
          }
          ngOnDestroy() {
            this.routerEventsSubscription &&
              this.routerEventsSubscription.unsubscribe(),
              this.scrollEventsSubscription &&
                this.scrollEventsSubscription.unsubscribe();
          }
        }
        return (
          (n.ɵfac = function (e) {
            Zr();
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const fg = new x("ROUTER_CONFIGURATION", {
          providedIn: "root",
          factory: () => ({}),
        }),
        oS = new x("ROUTER_FORROOT_GUARD"),
        sS = new x(""),
        j3 = [
          Pa,
          { provide: hE, useClass: fE },
          {
            provide: we,
            useFactory: function G3(n, t, e, i, r, o, s, a = {}, l, c) {
              const u = new we(null, n, t, e, i, r, oE(o));
              return (
                l && (u.urlHandlingStrategy = l),
                c && (u.routeReuseStrategy = c),
                (u.titleStrategy = s),
                (function W3(n, t) {
                  n.errorHandler && (t.errorHandler = n.errorHandler),
                    n.malformedUriErrorHandler &&
                      (t.malformedUriErrorHandler = n.malformedUriErrorHandler),
                    n.onSameUrlNavigation &&
                      (t.onSameUrlNavigation = n.onSameUrlNavigation),
                    n.paramsInheritanceStrategy &&
                      (t.paramsInheritanceStrategy =
                        n.paramsInheritanceStrategy),
                    n.relativeLinkResolution &&
                      (t.relativeLinkResolution = n.relativeLinkResolution),
                    n.urlUpdateStrategy &&
                      (t.urlUpdateStrategy = n.urlUpdateStrategy),
                    n.canceledNavigationResolution &&
                      (t.canceledNavigationResolution =
                        n.canceledNavigationResolution);
                })(a, u),
                u
              );
            },
            deps: [
              hE,
              rl,
              Pa,
              ze,
              pp,
              dg,
              tS,
              fg,
              [class A3 {}, new li()],
              [class S3 {}, new li()],
            ],
          },
          rl,
          {
            provide: yn,
            useFactory: function Y3(n) {
              return n.routerState.root;
            },
            deps: [we],
          },
          hg,
        ];
      function H3() {
        return new Uw("Router", we);
      }
      let aS = (() => {
        class n {
          constructor(e, i) {}
          static forRoot(e, i) {
            return {
              ngModule: n,
              providers: [
                j3,
                [],
                lS(e),
                {
                  provide: oS,
                  useFactory: q3,
                  deps: [[we, new li(), new qo()]],
                },
                { provide: fg, useValue: i || {} },
                i?.useHash
                  ? { provide: ro, useClass: xN }
                  : { provide: ro, useClass: f0 },
                {
                  provide: rS,
                  useFactory: () => {
                    const n = un(we),
                      t = un(zL),
                      e = un(fg);
                    return (
                      e.scrollOffset && t.setOffset(e.scrollOffset),
                      new B3(n, t, e)
                    );
                  },
                },
                i?.preloadingStrategy ? tU(i.preloadingStrategy) : [],
                { provide: Uw, multi: !0, useFactory: H3 },
                i?.initialNavigation ? Z3(i) : [],
                [
                  { provide: cS, useFactory: K3 },
                  { provide: Pw, multi: !0, useExisting: cS },
                ],
              ],
            };
          }
          static forChild(e) {
            return { ngModule: n, providers: [lS(e)] };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(oS, 8), b(we, 8));
          }),
          (n.ɵmod = Q({ type: n })),
          (n.ɵinj = Z({})),
          n
        );
      })();
      function q3(n) {
        return "guarded";
      }
      function lS(n) {
        return [
          { provide: XA, multi: !0, useValue: n },
          { provide: dg, multi: !0, useValue: n },
        ];
      }
      function K3() {
        const n = un(ze);
        return (t) => {
          const e = n.get(ys);
          if (t !== e.components[0]) return;
          const i = n.get(we),
            r = n.get(uS);
          null === n.get(pg, null, $.Optional) && i.initialNavigation(),
            n.get(sS, null, $.Optional)?.setUpPreloading(),
            n.get(rS, null, $.Optional)?.init(),
            i.resetRootComponentType(e.componentTypes[0]),
            r.next(),
            r.complete();
        };
      }
      const cS = new x("");
      function Z3(n) {
        return [
          "disabled" === n.initialNavigation
            ? [
                {
                  provide: Fc,
                  multi: !0,
                  useFactory: () => {
                    const n = un(we);
                    return () => {
                      n.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: pg, useValue: "disabled" },
              ]
            : [],
          "enabledBlocking" === n.initialNavigation
            ? [
                { provide: pg, useValue: "enabledBlocking" },
                {
                  provide: Fc,
                  multi: !0,
                  deps: [ze],
                  useFactory: (n) => {
                    const t = n.get(EN, Promise.resolve(null));
                    let e = !1;
                    return () =>
                      t.then(
                        () =>
                          new Promise((r) => {
                            const o = n.get(we),
                              s = n.get(uS);
                            (function i(r) {
                              n.get(we)
                                .events.pipe(
                                  qe(
                                    (s) =>
                                      s instanceof mo ||
                                      s instanceof ju ||
                                      s instanceof DE
                                  ),
                                  q(
                                    (s) =>
                                      s instanceof mo ||
                                      (s instanceof ju &&
                                        (0 === s.code || 1 === s.code) &&
                                        null)
                                  ),
                                  qe((s) => null !== s),
                                  vt(1)
                                )
                                .subscribe(() => {
                                  r();
                                });
                            })(() => {
                              r(!0), (e = !0);
                            }),
                              (o.afterPreactivation = () => (
                                r(!0), e || s.closed ? j(void 0) : s
                              )),
                              o.initialNavigation();
                          })
                      );
                  },
                },
              ]
            : [],
        ];
      }
      const uS = new x("", { factory: () => new V() }),
        pg = new x("");
      function tU(n) {
        return [
          iS,
          { provide: sS, useExisting: iS },
          { provide: nS, useExisting: n },
        ];
      }
      const nr_apiUrl = "https://api-go-projects.herokuapp.com/";
      class dS {}
      class hS {}
      class ir {
        constructor(t) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            t
              ? (this.lazyInit =
                  "string" == typeof t
                    ? () => {
                        (this.headers = new Map()),
                          t.split("\n").forEach((e) => {
                            const i = e.indexOf(":");
                            if (i > 0) {
                              const r = e.slice(0, i),
                                o = r.toLowerCase(),
                                s = e.slice(i + 1).trim();
                              this.maybeSetNormalizedName(r, o),
                                this.headers.has(o)
                                  ? this.headers.get(o).push(s)
                                  : this.headers.set(o, [s]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(t).forEach((e) => {
                            let i = t[e];
                            const r = e.toLowerCase();
                            "string" == typeof i && (i = [i]),
                              i.length > 0 &&
                                (this.headers.set(r, i),
                                this.maybeSetNormalizedName(e, r));
                          });
                      })
              : (this.headers = new Map());
        }
        has(t) {
          return this.init(), this.headers.has(t.toLowerCase());
        }
        get(t) {
          this.init();
          const e = this.headers.get(t.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(t) {
          return this.init(), this.headers.get(t.toLowerCase()) || null;
        }
        append(t, e) {
          return this.clone({ name: t, value: e, op: "a" });
        }
        set(t, e) {
          return this.clone({ name: t, value: e, op: "s" });
        }
        delete(t, e) {
          return this.clone({ name: t, value: e, op: "d" });
        }
        maybeSetNormalizedName(t, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, t);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof ir
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((t) => this.applyUpdate(t)),
              (this.lazyUpdate = null)));
        }
        copyFrom(t) {
          t.init(),
            Array.from(t.headers.keys()).forEach((e) => {
              this.headers.set(e, t.headers.get(e)),
                this.normalizedNames.set(e, t.normalizedNames.get(e));
            });
        }
        clone(t) {
          const e = new ir();
          return (
            (e.lazyInit =
              this.lazyInit && this.lazyInit instanceof ir
                ? this.lazyInit
                : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([t])),
            e
          );
        }
        applyUpdate(t) {
          const e = t.name.toLowerCase();
          switch (t.op) {
            case "a":
            case "s":
              let i = t.value;
              if (("string" == typeof i && (i = [i]), 0 === i.length)) return;
              this.maybeSetNormalizedName(t.name, e);
              const r = ("a" === t.op ? this.headers.get(e) : void 0) || [];
              r.push(...i), this.headers.set(e, r);
              break;
            case "d":
              const o = t.value;
              if (o) {
                let s = this.headers.get(e);
                if (!s) return;
                (s = s.filter((a) => -1 === o.indexOf(a))),
                  0 === s.length
                    ? (this.headers.delete(e), this.normalizedNames.delete(e))
                    : this.headers.set(e, s);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        forEach(t) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) =>
              t(this.normalizedNames.get(e), this.headers.get(e))
            );
        }
      }
      class nU {
        encodeKey(t) {
          return fS(t);
        }
        encodeValue(t) {
          return fS(t);
        }
        decodeKey(t) {
          return decodeURIComponent(t);
        }
        decodeValue(t) {
          return decodeURIComponent(t);
        }
      }
      const rU = /%(\d[a-f0-9])/gi,
        oU = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function fS(n) {
        return encodeURIComponent(n).replace(rU, (t, e) => oU[e] ?? t);
      }
      function Ju(n) {
        return `${n}`;
      }
      class Or {
        constructor(t = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = t.encoder || new nU()),
            t.fromString)
          ) {
            if (t.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function iU(n, t) {
              const e = new Map();
              return (
                n.length > 0 &&
                  n
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((r) => {
                      const o = r.indexOf("="),
                        [s, a] =
                          -1 == o
                            ? [t.decodeKey(r), ""]
                            : [
                                t.decodeKey(r.slice(0, o)),
                                t.decodeValue(r.slice(o + 1)),
                              ],
                        l = e.get(s) || [];
                      l.push(a), e.set(s, l);
                    }),
                e
              );
            })(t.fromString, this.encoder);
          } else
            t.fromObject
              ? ((this.map = new Map()),
                Object.keys(t.fromObject).forEach((e) => {
                  const i = t.fromObject[e],
                    r = Array.isArray(i) ? i.map(Ju) : [Ju(i)];
                  this.map.set(e, r);
                }))
              : (this.map = null);
        }
        has(t) {
          return this.init(), this.map.has(t);
        }
        get(t) {
          this.init();
          const e = this.map.get(t);
          return e ? e[0] : null;
        }
        getAll(t) {
          return this.init(), this.map.get(t) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(t, e) {
          return this.clone({ param: t, value: e, op: "a" });
        }
        appendAll(t) {
          const e = [];
          return (
            Object.keys(t).forEach((i) => {
              const r = t[i];
              Array.isArray(r)
                ? r.forEach((o) => {
                    e.push({ param: i, value: o, op: "a" });
                  })
                : e.push({ param: i, value: r, op: "a" });
            }),
            this.clone(e)
          );
        }
        set(t, e) {
          return this.clone({ param: t, value: e, op: "s" });
        }
        delete(t, e) {
          return this.clone({ param: t, value: e, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((t) => {
                const e = this.encoder.encodeKey(t);
                return this.map
                  .get(t)
                  .map((i) => e + "=" + this.encoder.encodeValue(i))
                  .join("&");
              })
              .filter((t) => "" !== t)
              .join("&")
          );
        }
        clone(t) {
          const e = new Or({ encoder: this.encoder });
          return (
            (e.cloneFrom = this.cloneFrom || this),
            (e.updates = (this.updates || []).concat(t)),
            e
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((t) => this.map.set(t, this.cloneFrom.map.get(t))),
              this.updates.forEach((t) => {
                switch (t.op) {
                  case "a":
                  case "s":
                    const e =
                      ("a" === t.op ? this.map.get(t.param) : void 0) || [];
                    e.push(Ju(t.value)), this.map.set(t.param, e);
                    break;
                  case "d":
                    if (void 0 === t.value) {
                      this.map.delete(t.param);
                      break;
                    }
                    {
                      let i = this.map.get(t.param) || [];
                      const r = i.indexOf(Ju(t.value));
                      -1 !== r && i.splice(r, 1),
                        i.length > 0
                          ? this.map.set(t.param, i)
                          : this.map.delete(t.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class sU {
        constructor() {
          this.map = new Map();
        }
        set(t, e) {
          return this.map.set(t, e), this;
        }
        get(t) {
          return (
            this.map.has(t) || this.map.set(t, t.defaultValue()),
            this.map.get(t)
          );
        }
        delete(t) {
          return this.map.delete(t), this;
        }
        has(t) {
          return this.map.has(t);
        }
        keys() {
          return this.map.keys();
        }
      }
      function pS(n) {
        return typeof ArrayBuffer < "u" && n instanceof ArrayBuffer;
      }
      function mS(n) {
        return typeof Blob < "u" && n instanceof Blob;
      }
      function gS(n) {
        return typeof FormData < "u" && n instanceof FormData;
      }
      class cl {
        constructor(t, e, i, r) {
          let o;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = t.toUpperCase()),
            (function aU(n) {
              switch (n) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || r
              ? ((this.body = void 0 !== i ? i : null), (o = r))
              : (o = i),
            o &&
              ((this.reportProgress = !!o.reportProgress),
              (this.withCredentials = !!o.withCredentials),
              o.responseType && (this.responseType = o.responseType),
              o.headers && (this.headers = o.headers),
              o.context && (this.context = o.context),
              o.params && (this.params = o.params)),
            this.headers || (this.headers = new ir()),
            this.context || (this.context = new sU()),
            this.params)
          ) {
            const s = this.params.toString();
            if (0 === s.length) this.urlWithParams = e;
            else {
              const a = e.indexOf("?");
              this.urlWithParams =
                e + (-1 === a ? "?" : a < e.length - 1 ? "&" : "") + s;
            }
          } else (this.params = new Or()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : pS(this.body) ||
              mS(this.body) ||
              gS(this.body) ||
              (function lU(n) {
                return (
                  typeof URLSearchParams < "u" && n instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof Or
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || gS(this.body)
            ? null
            : mS(this.body)
            ? this.body.type || null
            : pS(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof Or
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(t = {}) {
          const e = t.method || this.method,
            i = t.url || this.url,
            r = t.responseType || this.responseType,
            o = void 0 !== t.body ? t.body : this.body,
            s =
              void 0 !== t.withCredentials
                ? t.withCredentials
                : this.withCredentials,
            a =
              void 0 !== t.reportProgress
                ? t.reportProgress
                : this.reportProgress;
          let l = t.headers || this.headers,
            c = t.params || this.params;
          const u = t.context ?? this.context;
          return (
            void 0 !== t.setHeaders &&
              (l = Object.keys(t.setHeaders).reduce(
                (d, f) => d.set(f, t.setHeaders[f]),
                l
              )),
            t.setParams &&
              (c = Object.keys(t.setParams).reduce(
                (d, f) => d.set(f, t.setParams[f]),
                c
              )),
            new cl(e, i, o, {
              params: c,
              headers: l,
              context: u,
              reportProgress: a,
              responseType: r,
              withCredentials: s,
            })
          );
        }
      }
      var dt = (() => (
        ((dt = dt || {})[(dt.Sent = 0)] = "Sent"),
        (dt[(dt.UploadProgress = 1)] = "UploadProgress"),
        (dt[(dt.ResponseHeader = 2)] = "ResponseHeader"),
        (dt[(dt.DownloadProgress = 3)] = "DownloadProgress"),
        (dt[(dt.Response = 4)] = "Response"),
        (dt[(dt.User = 5)] = "User"),
        dt
      ))();
      class mg {
        constructor(t, e = 200, i = "OK") {
          (this.headers = t.headers || new ir()),
            (this.status = void 0 !== t.status ? t.status : e),
            (this.statusText = t.statusText || i),
            (this.url = t.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class gg extends mg {
        constructor(t = {}) {
          super(t), (this.type = dt.ResponseHeader);
        }
        clone(t = {}) {
          return new gg({
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class ed extends mg {
        constructor(t = {}) {
          super(t),
            (this.type = dt.Response),
            (this.body = void 0 !== t.body ? t.body : null);
        }
        clone(t = {}) {
          return new ed({
            body: void 0 !== t.body ? t.body : this.body,
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class _S extends mg {
        constructor(t) {
          super(t, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${t.url || "(unknown url)"}`
                : `Http failure response for ${t.url || "(unknown url)"}: ${
                    t.status
                  } ${t.statusText}`),
            (this.error = t.error || null);
        }
      }
      function _g(n, t) {
        return {
          body: t,
          headers: n.headers,
          context: n.context,
          observe: n.observe,
          params: n.params,
          reportProgress: n.reportProgress,
          responseType: n.responseType,
          withCredentials: n.withCredentials,
        };
      }
      let en = (() => {
        class n {
          constructor(e) {
            this.handler = e;
          }
          request(e, i, r = {}) {
            let o;
            if (e instanceof cl) o = e;
            else {
              let l, c;
              (l = r.headers instanceof ir ? r.headers : new ir(r.headers)),
                r.params &&
                  (c =
                    r.params instanceof Or
                      ? r.params
                      : new Or({ fromObject: r.params })),
                (o = new cl(e, i, void 0 !== r.body ? r.body : null, {
                  headers: l,
                  context: r.context,
                  params: c,
                  reportProgress: r.reportProgress,
                  responseType: r.responseType || "json",
                  withCredentials: r.withCredentials,
                }));
            }
            const s = j(o).pipe(Rr((l) => this.handler.handle(l)));
            if (e instanceof cl || "events" === r.observe) return s;
            const a = s.pipe(qe((l) => l instanceof ed));
            switch (r.observe || "body") {
              case "body":
                switch (o.responseType) {
                  case "arraybuffer":
                    return a.pipe(
                      q((l) => {
                        if (null !== l.body && !(l.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return l.body;
                      })
                    );
                  case "blob":
                    return a.pipe(
                      q((l) => {
                        if (null !== l.body && !(l.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return l.body;
                      })
                    );
                  case "text":
                    return a.pipe(
                      q((l) => {
                        if (null !== l.body && "string" != typeof l.body)
                          throw new Error("Response is not a string.");
                        return l.body;
                      })
                    );
                  default:
                    return a.pipe(q((l) => l.body));
                }
              case "response":
                return a;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${r.observe}}`
                );
            }
          }
          delete(e, i = {}) {
            return this.request("DELETE", e, i);
          }
          get(e, i = {}) {
            return this.request("GET", e, i);
          }
          head(e, i = {}) {
            return this.request("HEAD", e, i);
          }
          jsonp(e, i) {
            return this.request("JSONP", e, {
              params: new Or().append(i, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(e, i = {}) {
            return this.request("OPTIONS", e, i);
          }
          patch(e, i, r = {}) {
            return this.request("PATCH", e, _g(r, i));
          }
          post(e, i, r = {}) {
            return this.request("POST", e, _g(r, i));
          }
          put(e, i, r = {}) {
            return this.request("PUT", e, _g(r, i));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(dS));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class vS {
        constructor(t, e) {
          (this.next = t), (this.interceptor = e);
        }
        handle(t) {
          return this.interceptor.intercept(t, this.next);
        }
      }
      const vg = new x("HTTP_INTERCEPTORS");
      let cU = (() => {
        class n {
          intercept(e, i) {
            return i.handle(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const uU = /^\)\]\}',?\n/;
      let yS = (() => {
        class n {
          constructor(e) {
            this.xhrFactory = e;
          }
          handle(e) {
            if ("JSONP" === e.method)
              throw new Error(
                "Attempted to construct Jsonp request without HttpClientJsonpModule installed."
              );
            return new Oe((i) => {
              const r = this.xhrFactory.build();
              if (
                (r.open(e.method, e.urlWithParams),
                e.withCredentials && (r.withCredentials = !0),
                e.headers.forEach((p, _) => r.setRequestHeader(p, _.join(","))),
                e.headers.has("Accept") ||
                  r.setRequestHeader(
                    "Accept",
                    "application/json, text/plain, */*"
                  ),
                !e.headers.has("Content-Type"))
              ) {
                const p = e.detectContentTypeHeader();
                null !== p && r.setRequestHeader("Content-Type", p);
              }
              if (e.responseType) {
                const p = e.responseType.toLowerCase();
                r.responseType = "json" !== p ? p : "text";
              }
              const o = e.serializeBody();
              let s = null;
              const a = () => {
                  if (null !== s) return s;
                  const p = r.statusText || "OK",
                    _ = new ir(r.getAllResponseHeaders()),
                    y =
                      (function dU(n) {
                        return "responseURL" in n && n.responseURL
                          ? n.responseURL
                          : /^X-Request-URL:/m.test(n.getAllResponseHeaders())
                          ? n.getResponseHeader("X-Request-URL")
                          : null;
                      })(r) || e.url;
                  return (
                    (s = new gg({
                      headers: _,
                      status: r.status,
                      statusText: p,
                      url: y,
                    })),
                    s
                  );
                },
                l = () => {
                  let { headers: p, status: _, statusText: y, url: w } = a(),
                    D = null;
                  204 !== _ &&
                    (D = typeof r.response > "u" ? r.responseText : r.response),
                    0 === _ && (_ = D ? 200 : 0);
                  let A = _ >= 200 && _ < 300;
                  if ("json" === e.responseType && "string" == typeof D) {
                    const E = D;
                    D = D.replace(uU, "");
                    try {
                      D = "" !== D ? JSON.parse(D) : null;
                    } catch (O) {
                      (D = E), A && ((A = !1), (D = { error: O, text: D }));
                    }
                  }
                  A
                    ? (i.next(
                        new ed({
                          body: D,
                          headers: p,
                          status: _,
                          statusText: y,
                          url: w || void 0,
                        })
                      ),
                      i.complete())
                    : i.error(
                        new _S({
                          error: D,
                          headers: p,
                          status: _,
                          statusText: y,
                          url: w || void 0,
                        })
                      );
                },
                c = (p) => {
                  const { url: _ } = a(),
                    y = new _S({
                      error: p,
                      status: r.status || 0,
                      statusText: r.statusText || "Unknown Error",
                      url: _ || void 0,
                    });
                  i.error(y);
                };
              let u = !1;
              const d = (p) => {
                  u || (i.next(a()), (u = !0));
                  let _ = { type: dt.DownloadProgress, loaded: p.loaded };
                  p.lengthComputable && (_.total = p.total),
                    "text" === e.responseType &&
                      !!r.responseText &&
                      (_.partialText = r.responseText),
                    i.next(_);
                },
                f = (p) => {
                  let _ = { type: dt.UploadProgress, loaded: p.loaded };
                  p.lengthComputable && (_.total = p.total), i.next(_);
                };
              return (
                r.addEventListener("load", l),
                r.addEventListener("error", c),
                r.addEventListener("timeout", c),
                r.addEventListener("abort", c),
                e.reportProgress &&
                  (r.addEventListener("progress", d),
                  null !== o &&
                    r.upload &&
                    r.upload.addEventListener("progress", f)),
                r.send(o),
                i.next({ type: dt.Sent }),
                () => {
                  r.removeEventListener("error", c),
                    r.removeEventListener("abort", c),
                    r.removeEventListener("load", l),
                    r.removeEventListener("timeout", c),
                    e.reportProgress &&
                      (r.removeEventListener("progress", d),
                      null !== o &&
                        r.upload &&
                        r.upload.removeEventListener("progress", f)),
                    r.readyState !== r.DONE && r.abort();
                }
              );
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(O0));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const yg = new x("XSRF_COOKIE_NAME"),
        bg = new x("XSRF_HEADER_NAME");
      class bS {}
      let wg,
        hU = (() => {
          class n {
            constructor(e, i, r) {
              (this.doc = e),
                (this.platform = i),
                (this.cookieName = r),
                (this.lastCookieString = ""),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ("server" === this.platform) return null;
              const e = this.doc.cookie || "";
              return (
                e !== this.lastCookieString &&
                  (this.parseCount++,
                  (this.lastToken = D0(e, this.cookieName)),
                  (this.lastCookieString = e)),
                this.lastToken
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ee), b(Nc), b(yg));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Cg = (() => {
          class n {
            constructor(e, i) {
              (this.tokenService = e), (this.headerName = i);
            }
            intercept(e, i) {
              const r = e.url.toLowerCase();
              if (
                "GET" === e.method ||
                "HEAD" === e.method ||
                r.startsWith("http://") ||
                r.startsWith("https://")
              )
                return i.handle(e);
              const o = this.tokenService.getToken();
              return (
                null !== o &&
                  !e.headers.has(this.headerName) &&
                  (e = e.clone({ headers: e.headers.set(this.headerName, o) })),
                i.handle(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(bS), b(bg));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        fU = (() => {
          class n {
            constructor(e, i) {
              (this.backend = e), (this.injector = i), (this.chain = null);
            }
            handle(e) {
              if (null === this.chain) {
                const i = this.injector.get(vg, []);
                this.chain = i.reduceRight(
                  (r, o) => new vS(r, o),
                  this.backend
                );
              }
              return this.chain.handle(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(hS), b(ze));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        pU = (() => {
          class n {
            static disable() {
              return {
                ngModule: n,
                providers: [{ provide: Cg, useClass: cU }],
              };
            }
            static withOptions(e = {}) {
              return {
                ngModule: n,
                providers: [
                  e.cookieName ? { provide: yg, useValue: e.cookieName } : [],
                  e.headerName ? { provide: bg, useValue: e.headerName } : [],
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({
              providers: [
                Cg,
                { provide: vg, useExisting: Cg, multi: !0 },
                { provide: bS, useClass: hU },
                { provide: yg, useValue: "XSRF-TOKEN" },
                { provide: bg, useValue: "X-XSRF-TOKEN" },
              ],
            })),
            n
          );
        })(),
        mU = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({
              providers: [
                en,
                { provide: dS, useClass: fU },
                yS,
                { provide: hS, useExisting: yS },
              ],
              imports: [
                pU.withOptions({
                  cookieName: "XSRF-TOKEN",
                  headerName: "X-XSRF-TOKEN",
                }),
              ],
            })),
            n
          );
        })(),
        ul = (() => {
          class n {
            constructor(e, i) {
              (this.router = e),
                (this.http = i),
                (this.usuarioAutenticado = !1),
                (this.tokenSerie = ""),
                (this.loginUrl = `${nr_apiUrl}login`);
            }
            fazerLogin({ usuario: e }) {
              this.http.post(this.loginUrl, e).subscribe(
                (i) => {
                  (this.usuarioAutenticado = !0),
                    this.router.navigate(["dashboard"]),
                    window.localStorage.setItem("token", i.token),
                    (this.tokenSerie = i.token);
                },
                (i) => {
                  console.log("Error: " + i.message);
                }
              );
            }
            usuarioEstaAutenticado() {
              return this.usuarioAutenticado;
            }
            serieToken() {
              return this.tokenSerie;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(we), b(en));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        wt = (() => {
          class n {
            constructor(e, i) {
              (this.authService = e),
                (this.router = i),
                (this.mostrarMenuEmmiter = new se());
            }
            canActivate() {
              return "" != window.localStorage.getItem("token")
                ? (this.mostrarMenuEmmiter.emit(!0), !0)
                : (this.router.navigate(["/login"]), !1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ul), b(we));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      try {
        wg = typeof Intl < "u" && Intl.v8BreakIterator;
      } catch {
        wg = !1;
      }
      let xs,
        yt = (() => {
          class n {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? (function $L(n) {
                      return n === k0;
                    })(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !wg) &&
                  typeof CSS < "u" &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(Nc));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      const CS = [
        "color",
        "button",
        "checkbox",
        "date",
        "datetime-local",
        "email",
        "file",
        "hidden",
        "image",
        "month",
        "number",
        "password",
        "radio",
        "range",
        "reset",
        "search",
        "submit",
        "tel",
        "text",
        "time",
        "url",
        "week",
      ];
      function wS() {
        if (xs) return xs;
        if ("object" != typeof document || !document)
          return (xs = new Set(CS)), xs;
        let n = document.createElement("input");
        return (
          (xs = new Set(
            CS.filter((t) => (n.setAttribute("type", t), n.type === t))
          )),
          xs
        );
      }
      let dl, td, go, Dg;
      function As(n) {
        return (function gU() {
          if (null == dl && typeof window < "u")
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (dl = !0) })
              );
            } finally {
              dl = dl || !1;
            }
          return dl;
        })()
          ? n
          : !!n.capture;
      }
      function DS() {
        if (null == go) {
          if (
            "object" != typeof document ||
            !document ||
            "function" != typeof Element ||
            !Element
          )
            return (go = !1), go;
          if ("scrollBehavior" in document.documentElement.style) go = !0;
          else {
            const n = Element.prototype.scrollTo;
            go = !!n && !/\{\s*\[native code\]\s*\}/.test(n.toString());
          }
        }
        return go;
      }
      function hl() {
        if ("object" != typeof document || !document) return 0;
        if (null == td) {
          const n = document.createElement("div"),
            t = n.style;
          (n.dir = "rtl"),
            (t.width = "1px"),
            (t.overflow = "auto"),
            (t.visibility = "hidden"),
            (t.pointerEvents = "none"),
            (t.position = "absolute");
          const e = document.createElement("div"),
            i = e.style;
          (i.width = "2px"),
            (i.height = "1px"),
            n.appendChild(e),
            document.body.appendChild(n),
            (td = 0),
            0 === n.scrollLeft &&
              ((n.scrollLeft = 1), (td = 0 === n.scrollLeft ? 1 : 2)),
            n.remove();
        }
        return td;
      }
      function Mg() {
        let n =
          typeof document < "u" && document ? document.activeElement : null;
        for (; n && n.shadowRoot; ) {
          const t = n.shadowRoot.activeElement;
          if (t === n) break;
          n = t;
        }
        return n;
      }
      function _o(n) {
        return n.composedPath ? n.composedPath()[0] : n.target;
      }
      function Eg() {
        return (
          (typeof __karma__ < "u" && !!__karma__) ||
          (typeof jasmine < "u" && !!jasmine) ||
          (typeof jest < "u" && !!jest) ||
          (typeof Mocha < "u" && !!Mocha)
        );
      }
      function Xn(n, ...t) {
        return t.length
          ? t.some((e) => n[e])
          : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
      }
      class IU extends tt {
        constructor(t, e) {
          super();
        }
        schedule(t, e = 0) {
          return this;
        }
      }
      const sd = {
        setInterval(n, t, ...e) {
          const { delegate: i } = sd;
          return i?.setInterval
            ? i.setInterval(n, t, ...e)
            : setInterval(n, t, ...e);
        },
        clearInterval(n) {
          const { delegate: t } = sd;
          return (t?.clearInterval || clearInterval)(n);
        },
        delegate: void 0,
      };
      class Tg extends IU {
        constructor(t, e) {
          super(t, e),
            (this.scheduler = t),
            (this.work = e),
            (this.pending = !1);
        }
        schedule(t, e = 0) {
          if (this.closed) return this;
          this.state = t;
          const i = this.id,
            r = this.scheduler;
          return (
            null != i && (this.id = this.recycleAsyncId(r, i, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id = this.id || this.requestAsyncId(r, this.id, e)),
            this
          );
        }
        requestAsyncId(t, e, i = 0) {
          return sd.setInterval(t.flush.bind(t, this), i);
        }
        recycleAsyncId(t, e, i = 0) {
          if (null != i && this.delay === i && !1 === this.pending) return e;
          sd.clearInterval(e);
        }
        execute(t, e) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const i = this._execute(t, e);
          if (i) return i;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(t, e) {
          let r,
            i = !1;
          try {
            this.work(t);
          } catch (o) {
            (i = !0),
              (r = o || new Error("Scheduled action threw falsy error"));
          }
          if (i) return this.unsubscribe(), r;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: t, scheduler: e } = this,
              { actions: i } = e;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              To(i, this),
              null != t && (this.id = this.recycleAsyncId(e, t, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
      const SS = { now: () => (SS.delegate || Date).now(), delegate: void 0 };
      class pl {
        constructor(t, e = pl.now) {
          (this.schedulerActionCtor = t), (this.now = e);
        }
        schedule(t, e = 0, i) {
          return new this.schedulerActionCtor(this, t).schedule(i, e);
        }
      }
      pl.now = SS.now;
      class xg extends pl {
        constructor(t, e = pl.now) {
          super(t, e),
            (this.actions = []),
            (this._active = !1),
            (this._scheduled = void 0);
        }
        flush(t) {
          const { actions: e } = this;
          if (this._active) return void e.push(t);
          let i;
          this._active = !0;
          do {
            if ((i = t.execute(t.state, t.delay))) break;
          } while ((t = e.shift()));
          if (((this._active = !1), i)) {
            for (; (t = e.shift()); ) t.unsubscribe();
            throw i;
          }
        }
      }
      const Ag = new xg(Tg),
        kU = Ag;
      function ad(n, t = Ag) {
        return Ze((e, i) => {
          let r = null,
            o = null,
            s = null;
          const a = () => {
            if (r) {
              r.unsubscribe(), (r = null);
              const c = o;
              (o = null), i.next(c);
            }
          };
          function l() {
            const c = s + n,
              u = t.now();
            if (u < c) return (r = this.schedule(void 0, c - u)), void i.add(r);
            a();
          }
          e.subscribe(
            Ue(
              i,
              (c) => {
                (o = c), (s = t.now()), r || ((r = t.schedule(l, n)), i.add(r));
              },
              () => {
                a(), i.complete();
              },
              void 0,
              () => {
                o = r = null;
              }
            )
          );
        });
      }
      function TS(n) {
        return qe((t, e) => n <= e);
      }
      function Ig(n, t = dr) {
        return (
          (n = n ?? RU),
          Ze((e, i) => {
            let r,
              o = !0;
            e.subscribe(
              Ue(i, (s) => {
                const a = t(s);
                (o || !n(r, a)) && ((o = !1), (r = a), i.next(s));
              })
            );
          })
        );
      }
      function RU(n, t) {
        return n === t;
      }
      function ce(n) {
        return Ze((t, e) => {
          zt(n).subscribe(Ue(e, () => e.complete(), Nd)),
            !e.closed && t.subscribe(e);
        });
      }
      function be(n) {
        return null != n && "false" != `${n}`;
      }
      function Jn(n, t = 0) {
        return (function OU(n) {
          return !isNaN(parseFloat(n)) && !isNaN(Number(n));
        })(n)
          ? Number(n)
          : t;
      }
      function ld(n) {
        return Array.isArray(n) ? n : [n];
      }
      function ht(n) {
        return null == n ? "" : "string" == typeof n ? n : `${n}px`;
      }
      function rr(n) {
        return n instanceof ie ? n.nativeElement : n;
      }
      let xS = (() => {
          class n {
            create(e) {
              return typeof MutationObserver > "u"
                ? null
                : new MutationObserver(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        FU = (() => {
          class n {
            constructor(e) {
              (this._mutationObserverFactory = e),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((e, i) =>
                this._cleanupObserver(i)
              );
            }
            observe(e) {
              const i = rr(e);
              return new Oe((r) => {
                const s = this._observeElement(i).subscribe(r);
                return () => {
                  s.unsubscribe(), this._unobserveElement(i);
                };
              });
            }
            _observeElement(e) {
              if (this._observedElements.has(e))
                this._observedElements.get(e).count++;
              else {
                const i = new V(),
                  r = this._mutationObserverFactory.create((o) => i.next(o));
                r &&
                  r.observe(e, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(e, {
                    observer: r,
                    stream: i,
                    count: 1,
                  });
              }
              return this._observedElements.get(e).stream;
            }
            _unobserveElement(e) {
              this._observedElements.has(e) &&
                (this._observedElements.get(e).count--,
                this._observedElements.get(e).count ||
                  this._cleanupObserver(e));
            }
            _cleanupObserver(e) {
              if (this._observedElements.has(e)) {
                const { observer: i, stream: r } =
                  this._observedElements.get(e);
                i && i.disconnect(),
                  r.complete(),
                  this._observedElements.delete(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(xS));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        PU = (() => {
          class n {
            constructor(e, i, r) {
              (this._contentObserver = e),
                (this._elementRef = i),
                (this._ngZone = r),
                (this.event = new se()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = be(e)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(e) {
              (this._debounce = Jn(e)), this._subscribe();
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const e = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? e.pipe(ad(this.debounce)) : e
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              this._currentSubscription?.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(FU), h(ie), h(G));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [["", "cdkObserveContent", ""]],
              inputs: {
                disabled: ["cdkObserveContentDisabled", "disabled"],
                debounce: "debounce",
              },
              outputs: { event: "cdkObserveContent" },
              exportAs: ["cdkObserveContent"],
            })),
            n
          );
        })(),
        AS = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ providers: [xS] })),
            n
          );
        })(),
        NU = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({})),
            n
          );
        })();
      const IS = new Set();
      let Is,
        LU = (() => {
          class n {
            constructor(e) {
              (this._platform = e),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : BU);
            }
            matchMedia(e) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function VU(n) {
                    if (!IS.has(n))
                      try {
                        Is ||
                          ((Is = document.createElement("style")),
                          Is.setAttribute("type", "text/css"),
                          document.head.appendChild(Is)),
                          Is.sheet &&
                            (Is.sheet.insertRule(`@media ${n} {body{ }}`, 0),
                            IS.add(n));
                      } catch (t) {
                        console.error(t);
                      }
                  })(e),
                this._matchMedia(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(yt));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      function BU(n) {
        return {
          matches: "all" === n || "" === n,
          media: n,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let cd = (() => {
        class n {
          constructor(e, i) {
            (this._mediaMatcher = e),
              (this._zone = i),
              (this._queries = new Map()),
              (this._destroySubject = new V());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(e) {
            return kS(ld(e)).some((r) => this._registerQuery(r).mql.matches);
          }
          observe(e) {
            let o = Hm(kS(ld(e)).map((s) => this._registerQuery(s).observable));
            return (
              (o = ku(o.pipe(vt(1)), o.pipe(TS(1), ad(0)))),
              o.pipe(
                q((s) => {
                  const a = { matches: !1, breakpoints: {} };
                  return (
                    s.forEach(({ matches: l, query: c }) => {
                      (a.matches = a.matches || l), (a.breakpoints[c] = l);
                    }),
                    a
                  );
                })
              )
            );
          }
          _registerQuery(e) {
            if (this._queries.has(e)) return this._queries.get(e);
            const i = this._mediaMatcher.matchMedia(e),
              o = {
                observable: new Oe((s) => {
                  const a = (l) => this._zone.run(() => s.next(l));
                  return (
                    i.addListener(a),
                    () => {
                      i.removeListener(a);
                    }
                  );
                }).pipe(
                  vn(i),
                  q(({ matches: s }) => ({ query: e, matches: s })),
                  ce(this._destroySubject)
                ),
                mql: i,
              };
            return this._queries.set(e, o), o;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(LU), b(G));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function kS(n) {
        return n
          .map((t) => t.split(","))
          .reduce((t, e) => t.concat(e))
          .map((t) => t.trim());
      }
      function ud(n, t) {
        return (n.getAttribute(t) || "").match(/\S+/g) || [];
      }
      const FS = "cdk-describedby-message",
        dd = "cdk-describedby-host";
      let kg = 0,
        UU = (() => {
          class n {
            constructor(e, i) {
              (this._platform = i),
                (this._messageRegistry = new Map()),
                (this._messagesContainer = null),
                (this._id = "" + kg++),
                (this._document = e),
                (this._id = un(vs) + "-" + kg++);
            }
            describe(e, i, r) {
              if (!this._canBeDescribed(e, i)) return;
              const o = Rg(i, r);
              "string" != typeof i
                ? (PS(i, this._id),
                  this._messageRegistry.set(o, {
                    messageElement: i,
                    referenceCount: 0,
                  }))
                : this._messageRegistry.has(o) ||
                  this._createMessageElement(i, r),
                this._isElementDescribedByMessage(e, o) ||
                  this._addMessageReference(e, o);
            }
            removeDescription(e, i, r) {
              if (!i || !this._isElementNode(e)) return;
              const o = Rg(i, r);
              if (
                (this._isElementDescribedByMessage(e, o) &&
                  this._removeMessageReference(e, o),
                "string" == typeof i)
              ) {
                const s = this._messageRegistry.get(o);
                s && 0 === s.referenceCount && this._deleteMessageElement(o);
              }
              0 === this._messagesContainer?.childNodes.length &&
                (this._messagesContainer.remove(),
                (this._messagesContainer = null));
            }
            ngOnDestroy() {
              const e = this._document.querySelectorAll(
                `[${dd}="${this._id}"]`
              );
              for (let i = 0; i < e.length; i++)
                this._removeCdkDescribedByReferenceIds(e[i]),
                  e[i].removeAttribute(dd);
              this._messagesContainer?.remove(),
                (this._messagesContainer = null),
                this._messageRegistry.clear();
            }
            _createMessageElement(e, i) {
              const r = this._document.createElement("div");
              PS(r, this._id),
                (r.textContent = e),
                i && r.setAttribute("role", i),
                this._createMessagesContainer(),
                this._messagesContainer.appendChild(r),
                this._messageRegistry.set(Rg(e, i), {
                  messageElement: r,
                  referenceCount: 0,
                });
            }
            _deleteMessageElement(e) {
              this._messageRegistry.get(e)?.messageElement?.remove(),
                this._messageRegistry.delete(e);
            }
            _createMessagesContainer() {
              if (this._messagesContainer) return;
              const e = "cdk-describedby-message-container",
                i = this._document.querySelectorAll(`.${e}[platform="server"]`);
              for (let o = 0; o < i.length; o++) i[o].remove();
              const r = this._document.createElement("div");
              (r.style.visibility = "hidden"),
                r.classList.add(e),
                r.classList.add("cdk-visually-hidden"),
                this._platform &&
                  !this._platform.isBrowser &&
                  r.setAttribute("platform", "server"),
                this._document.body.appendChild(r),
                (this._messagesContainer = r);
            }
            _removeCdkDescribedByReferenceIds(e) {
              const i = ud(e, "aria-describedby").filter(
                (r) => 0 != r.indexOf(FS)
              );
              e.setAttribute("aria-describedby", i.join(" "));
            }
            _addMessageReference(e, i) {
              const r = this._messageRegistry.get(i);
              (function jU(n, t, e) {
                const i = ud(n, t);
                i.some((r) => r.trim() == e.trim()) ||
                  (i.push(e.trim()), n.setAttribute(t, i.join(" ")));
              })(e, "aria-describedby", r.messageElement.id),
                e.setAttribute(dd, this._id),
                r.referenceCount++;
            }
            _removeMessageReference(e, i) {
              const r = this._messageRegistry.get(i);
              r.referenceCount--,
                (function HU(n, t, e) {
                  const r = ud(n, t).filter((o) => o != e.trim());
                  r.length
                    ? n.setAttribute(t, r.join(" "))
                    : n.removeAttribute(t);
                })(e, "aria-describedby", r.messageElement.id),
                e.removeAttribute(dd);
            }
            _isElementDescribedByMessage(e, i) {
              const r = ud(e, "aria-describedby"),
                o = this._messageRegistry.get(i),
                s = o && o.messageElement.id;
              return !!s && -1 != r.indexOf(s);
            }
            _canBeDescribed(e, i) {
              if (!this._isElementNode(e)) return !1;
              if (i && "object" == typeof i) return !0;
              const r = null == i ? "" : `${i}`.trim(),
                o = e.getAttribute("aria-label");
              return !(!r || (o && o.trim() === r));
            }
            _isElementNode(e) {
              return e.nodeType === this._document.ELEMENT_NODE;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ee), b(yt));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      function Rg(n, t) {
        return "string" == typeof n ? `${t || ""}/${n}` : n;
      }
      function PS(n, t) {
        n.id || (n.id = `${FS}-${t}-${kg++}`);
      }
      class $U extends class NS {
        constructor(t) {
          (this._items = t),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new V()),
            (this._typeaheadSubscription = tt.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._skipPredicateFn = (e) => e.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new V()),
            (this.change = new V()),
            t instanceof ps &&
              t.changes.subscribe((e) => {
                if (this._activeItem) {
                  const r = e.toArray().indexOf(this._activeItem);
                  r > -1 &&
                    r !== this._activeItemIndex &&
                    (this._activeItemIndex = r);
                }
              });
        }
        skipPredicate(t) {
          return (this._skipPredicateFn = t), this;
        }
        withWrap(t = !0) {
          return (this._wrap = t), this;
        }
        withVerticalOrientation(t = !0) {
          return (this._vertical = t), this;
        }
        withHorizontalOrientation(t) {
          return (this._horizontal = t), this;
        }
        withAllowedModifierKeys(t) {
          return (this._allowedModifierKeys = t), this;
        }
        withTypeAhead(t = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                ut((e) => this._pressedLetters.push(e)),
                ad(t),
                qe(() => this._pressedLetters.length > 0),
                q(() => this._pressedLetters.join(""))
              )
              .subscribe((e) => {
                const i = this._getItemsArray();
                for (let r = 1; r < i.length + 1; r++) {
                  const o = (this._activeItemIndex + r) % i.length,
                    s = i[o];
                  if (
                    !this._skipPredicateFn(s) &&
                    0 === s.getLabel().toUpperCase().trim().indexOf(e)
                  ) {
                    this.setActiveItem(o);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        withHomeAndEnd(t = !0) {
          return (this._homeAndEnd = t), this;
        }
        setActiveItem(t) {
          const e = this._activeItem;
          this.updateActiveItem(t),
            this._activeItem !== e && this.change.next(this._activeItemIndex);
        }
        onKeydown(t) {
          const e = t.keyCode,
            r = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(
              (o) => !t[o] || this._allowedModifierKeys.indexOf(o) > -1
            );
          switch (e) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && r) {
                this.setNextItemActive();
                break;
              }
              return;
            case 38:
              if (this._vertical && r) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case 36:
              if (this._homeAndEnd && r) {
                this.setFirstItemActive();
                break;
              }
              return;
            case 35:
              if (this._homeAndEnd && r) {
                this.setLastItemActive();
                break;
              }
              return;
            default:
              return void (
                (r || Xn(t, "shiftKey")) &&
                (t.key && 1 === t.key.length
                  ? this._letterKeyStream.next(t.key.toLocaleUpperCase())
                  : ((e >= 65 && e <= 90) || (e >= 48 && e <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(e)))
              );
          }
          (this._pressedLetters = []), t.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(t) {
          const e = this._getItemsArray(),
            i = "number" == typeof t ? t : e.indexOf(t);
          (this._activeItem = e[i] ?? null), (this._activeItemIndex = i);
        }
        _setActiveItemByDelta(t) {
          this._wrap
            ? this._setActiveInWrapMode(t)
            : this._setActiveInDefaultMode(t);
        }
        _setActiveInWrapMode(t) {
          const e = this._getItemsArray();
          for (let i = 1; i <= e.length; i++) {
            const r = (this._activeItemIndex + t * i + e.length) % e.length;
            if (!this._skipPredicateFn(e[r])) return void this.setActiveItem(r);
          }
        }
        _setActiveInDefaultMode(t) {
          this._setActiveItemByIndex(this._activeItemIndex + t, t);
        }
        _setActiveItemByIndex(t, e) {
          const i = this._getItemsArray();
          if (i[t]) {
            for (; this._skipPredicateFn(i[t]); ) if (!i[(t += e)]) return;
            this.setActiveItem(t);
          }
        }
        _getItemsArray() {
          return this._items instanceof ps
            ? this._items.toArray()
            : this._items;
        }
      } {
        setActiveItem(t) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(t),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      let ml = (() => {
        class n {
          constructor(e) {
            this._platform = e;
          }
          isDisabled(e) {
            return e.hasAttribute("disabled");
          }
          isVisible(e) {
            return (
              (function GU(n) {
                return !!(
                  n.offsetWidth ||
                  n.offsetHeight ||
                  ("function" == typeof n.getClientRects &&
                    n.getClientRects().length)
                );
              })(e) && "visible" === getComputedStyle(e).visibility
            );
          }
          isTabbable(e) {
            if (!this._platform.isBrowser) return !1;
            const i = (function qU(n) {
              try {
                return n.frameElement;
              } catch {
                return null;
              }
            })(
              (function e$(n) {
                return (
                  (n.ownerDocument && n.ownerDocument.defaultView) || window
                );
              })(e)
            );
            if (i && (-1 === VS(i) || !this.isVisible(i))) return !1;
            let r = e.nodeName.toLowerCase(),
              o = VS(e);
            return e.hasAttribute("contenteditable")
              ? -1 !== o
              : !(
                  "iframe" === r ||
                  "object" === r ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function XU(n) {
                      let t = n.nodeName.toLowerCase(),
                        e = "input" === t && n.type;
                      return (
                        "text" === e ||
                        "password" === e ||
                        "select" === t ||
                        "textarea" === t
                      );
                    })(e))
                ) &&
                  ("audio" === r
                    ? !!e.hasAttribute("controls") && -1 !== o
                    : "video" === r
                    ? -1 !== o &&
                      (null !== o ||
                        this._platform.FIREFOX ||
                        e.hasAttribute("controls"))
                    : e.tabIndex >= 0);
          }
          isFocusable(e, i) {
            return (
              (function JU(n) {
                return (
                  !(function YU(n) {
                    return (
                      (function ZU(n) {
                        return "input" == n.nodeName.toLowerCase();
                      })(n) && "hidden" == n.type
                    );
                  })(n) &&
                  ((function WU(n) {
                    let t = n.nodeName.toLowerCase();
                    return (
                      "input" === t ||
                      "select" === t ||
                      "button" === t ||
                      "textarea" === t
                    );
                  })(n) ||
                    (function KU(n) {
                      return (
                        (function QU(n) {
                          return "a" == n.nodeName.toLowerCase();
                        })(n) && n.hasAttribute("href")
                      );
                    })(n) ||
                    n.hasAttribute("contenteditable") ||
                    LS(n))
                );
              })(e) &&
              !this.isDisabled(e) &&
              (i?.ignoreVisibility || this.isVisible(e))
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(yt));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function LS(n) {
        if (!n.hasAttribute("tabindex") || void 0 === n.tabIndex) return !1;
        let t = n.getAttribute("tabindex");
        return !(!t || isNaN(parseInt(t, 10)));
      }
      function VS(n) {
        if (!LS(n)) return null;
        const t = parseInt(n.getAttribute("tabindex") || "", 10);
        return isNaN(t) ? -1 : t;
      }
      class t$ {
        constructor(t, e, i, r, o = !1) {
          (this._element = t),
            (this._checker = e),
            (this._ngZone = i),
            (this._document = r),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            o || this.attachAnchors();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(t) {
          (this._enabled = t),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(t, this._startAnchor),
              this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        destroy() {
          const t = this._startAnchor,
            e = this._endAnchor;
          t &&
            (t.removeEventListener("focus", this.startAnchorListener),
            t.remove()),
            e &&
              (e.removeEventListener("focus", this.endAnchorListener),
              e.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  "focus",
                  this.startAnchorListener
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    "focus",
                    this.endAnchorListener
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusInitialElement(t)));
          });
        }
        focusFirstTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusFirstTabbableElement(t)));
          });
        }
        focusLastTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusLastTabbableElement(t)));
          });
        }
        _getRegionBoundary(t) {
          const e = this._element.querySelectorAll(
            `[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`
          );
          return "start" == t
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(t) {
          const e = this._element.querySelector(
            "[cdk-focus-initial], [cdkFocusInitial]"
          );
          if (e) {
            if (!this._checker.isFocusable(e)) {
              const i = this._getFirstTabbableElement(e);
              return i?.focus(t), !!i;
            }
            return e.focus(t), !0;
          }
          return this.focusFirstTabbableElement(t);
        }
        focusFirstTabbableElement(t) {
          const e = this._getRegionBoundary("start");
          return e && e.focus(t), !!e;
        }
        focusLastTabbableElement(t) {
          const e = this._getRegionBoundary("end");
          return e && e.focus(t), !!e;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          const e = t.children;
          for (let i = 0; i < e.length; i++) {
            const r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _getLastTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          const e = t.children;
          for (let i = e.length - 1; i >= 0; i--) {
            const r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _createAnchor() {
          const t = this._document.createElement("div");
          return (
            this._toggleAnchorTabIndex(this._enabled, t),
            t.classList.add("cdk-visually-hidden"),
            t.classList.add("cdk-focus-trap-anchor"),
            t.setAttribute("aria-hidden", "true"),
            t
          );
        }
        _toggleAnchorTabIndex(t, e) {
          t ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
        }
        toggleAnchors(t) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(t, this._startAnchor),
            this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        _executeOnStable(t) {
          this._ngZone.isStable
            ? t()
            : this._ngZone.onStable.pipe(vt(1)).subscribe(t);
        }
      }
      let hd = (() => {
        class n {
          constructor(e, i, r) {
            (this._checker = e), (this._ngZone = i), (this._document = r);
          }
          create(e, i = !1) {
            return new t$(e, this._checker, this._ngZone, this._document, i);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(ml), b(G), b(ee));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function BS(n) {
        return 0 === n.buttons || (0 === n.offsetX && 0 === n.offsetY);
      }
      function jS(n) {
        const t =
          (n.touches && n.touches[0]) ||
          (n.changedTouches && n.changedTouches[0]);
        return !(
          !t ||
          -1 !== t.identifier ||
          (null != t.radiusX && 1 !== t.radiusX) ||
          (null != t.radiusY && 1 !== t.radiusY)
        );
      }
      const n$ = new x("cdk-input-modality-detector-options"),
        i$ = { ignoreKeys: [18, 17, 224, 91, 16] },
        ks = As({ passive: !0, capture: !0 });
      let r$ = (() => {
        class n {
          constructor(e, i, r, o) {
            (this._platform = e),
              (this._mostRecentTarget = null),
              (this._modality = new _n(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (s) => {
                this._options?.ignoreKeys?.some((a) => a === s.keyCode) ||
                  (this._modality.next("keyboard"),
                  (this._mostRecentTarget = _o(s)));
              }),
              (this._onMousedown = (s) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(BS(s) ? "keyboard" : "mouse"),
                  (this._mostRecentTarget = _o(s)));
              }),
              (this._onTouchstart = (s) => {
                jS(s)
                  ? this._modality.next("keyboard")
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next("touch"),
                    (this._mostRecentTarget = _o(s)));
              }),
              (this._options = { ...i$, ...o }),
              (this.modalityDetected = this._modality.pipe(TS(1))),
              (this.modalityChanged = this.modalityDetected.pipe(Ig())),
              e.isBrowser &&
                i.runOutsideAngular(() => {
                  r.addEventListener("keydown", this._onKeydown, ks),
                    r.addEventListener("mousedown", this._onMousedown, ks),
                    r.addEventListener("touchstart", this._onTouchstart, ks);
                });
          }
          get mostRecentModality() {
            return this._modality.value;
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener("keydown", this._onKeydown, ks),
                document.removeEventListener(
                  "mousedown",
                  this._onMousedown,
                  ks
                ),
                document.removeEventListener(
                  "touchstart",
                  this._onTouchstart,
                  ks
                ));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(yt), b(G), b(ee), b(n$, 8));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const o$ = new x("liveAnnouncerElement", {
          providedIn: "root",
          factory: function s$() {
            return null;
          },
        }),
        a$ = new x("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
      let Og = (() => {
        class n {
          constructor(e, i, r, o) {
            (this._ngZone = i),
              (this._defaultOptions = o),
              (this._document = r),
              (this._liveElement = e || this._createLiveElement());
          }
          announce(e, ...i) {
            const r = this._defaultOptions;
            let o, s;
            return (
              1 === i.length && "number" == typeof i[0]
                ? (s = i[0])
                : ([o, s] = i),
              this.clear(),
              clearTimeout(this._previousTimeout),
              o || (o = r && r.politeness ? r.politeness : "polite"),
              null == s && r && (s = r.duration),
              this._liveElement.setAttribute("aria-live", o),
              this._ngZone.runOutsideAngular(
                () => (
                  this._currentPromise ||
                    (this._currentPromise = new Promise(
                      (a) => (this._currentResolve = a)
                    )),
                  clearTimeout(this._previousTimeout),
                  (this._previousTimeout = setTimeout(() => {
                    (this._liveElement.textContent = e),
                      "number" == typeof s &&
                        (this._previousTimeout = setTimeout(
                          () => this.clear(),
                          s
                        )),
                      this._currentResolve(),
                      (this._currentPromise = this._currentResolve = void 0);
                  }, 100)),
                  this._currentPromise
                )
              )
            );
          }
          clear() {
            this._liveElement && (this._liveElement.textContent = "");
          }
          ngOnDestroy() {
            clearTimeout(this._previousTimeout),
              this._liveElement?.remove(),
              (this._liveElement = null),
              this._currentResolve?.(),
              (this._currentPromise = this._currentResolve = void 0);
          }
          _createLiveElement() {
            const e = "cdk-live-announcer-element",
              i = this._document.getElementsByClassName(e),
              r = this._document.createElement("div");
            for (let o = 0; o < i.length; o++) i[o].remove();
            return (
              r.classList.add(e),
              r.classList.add("cdk-visually-hidden"),
              r.setAttribute("aria-atomic", "true"),
              r.setAttribute("aria-live", "polite"),
              this._document.body.appendChild(r),
              r
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(o$, 8), b(G), b(ee), b(a$, 8));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const l$ = new x("cdk-focus-monitor-default-options"),
        fd = As({ passive: !0, capture: !0 });
      let Fr = (() => {
        class n {
          constructor(e, i, r, o, s) {
            (this._ngZone = e),
              (this._platform = i),
              (this._inputModalityDetector = r),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = window.setTimeout(
                    () => (this._windowFocused = !1)
                  ));
              }),
              (this._stopInputModalityDetector = new V()),
              (this._rootNodeFocusAndBlurListener = (a) => {
                for (let c = _o(a); c; c = c.parentElement)
                  "focus" === a.type ? this._onFocus(a, c) : this._onBlur(a, c);
              }),
              (this._document = o),
              (this._detectionMode = s?.detectionMode || 0);
          }
          monitor(e, i = !1) {
            const r = rr(e);
            if (!this._platform.isBrowser || 1 !== r.nodeType) return j(null);
            const o =
                (function vU(n) {
                  if (
                    (function _U() {
                      if (null == Dg) {
                        const n = typeof document < "u" ? document.head : null;
                        Dg = !(!n || (!n.createShadowRoot && !n.attachShadow));
                      }
                      return Dg;
                    })()
                  ) {
                    const t = n.getRootNode ? n.getRootNode() : null;
                    if (
                      typeof ShadowRoot < "u" &&
                      ShadowRoot &&
                      t instanceof ShadowRoot
                    )
                      return t;
                  }
                  return null;
                })(r) || this._getDocument(),
              s = this._elementInfo.get(r);
            if (s) return i && (s.checkChildren = !0), s.subject;
            const a = { checkChildren: i, subject: new V(), rootNode: o };
            return (
              this._elementInfo.set(r, a),
              this._registerGlobalListeners(a),
              a.subject
            );
          }
          stopMonitoring(e) {
            const i = rr(e),
              r = this._elementInfo.get(i);
            r &&
              (r.subject.complete(),
              this._setClasses(i),
              this._elementInfo.delete(i),
              this._removeGlobalListeners(r));
          }
          focusVia(e, i, r) {
            const o = rr(e);
            o === this._getDocument().activeElement
              ? this._getClosestElementsInfo(o).forEach(([a, l]) =>
                  this._originChanged(a, i, l)
                )
              : (this._setOrigin(i),
                "function" == typeof o.focus && o.focus(r));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((e, i) => this.stopMonitoring(i));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _getFocusOrigin(e) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(e)
                  ? "touch"
                  : "program"
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : e && this._isLastInteractionFromInputLabel(e)
              ? "mouse"
              : "program";
          }
          _shouldBeAttributedToTouch(e) {
            return (
              1 === this._detectionMode ||
              !!e?.contains(this._inputModalityDetector._mostRecentTarget)
            );
          }
          _setClasses(e, i) {
            e.classList.toggle("cdk-focused", !!i),
              e.classList.toggle("cdk-touch-focused", "touch" === i),
              e.classList.toggle("cdk-keyboard-focused", "keyboard" === i),
              e.classList.toggle("cdk-mouse-focused", "mouse" === i),
              e.classList.toggle("cdk-program-focused", "program" === i);
          }
          _setOrigin(e, i = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = e),
                (this._originFromTouchInteraction = "touch" === e && i),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1
                  )));
            });
          }
          _onFocus(e, i) {
            const r = this._elementInfo.get(i),
              o = _o(e);
            !r ||
              (!r.checkChildren && i !== o) ||
              this._originChanged(i, this._getFocusOrigin(o), r);
          }
          _onBlur(e, i) {
            const r = this._elementInfo.get(i);
            !r ||
              (r.checkChildren &&
                e.relatedTarget instanceof Node &&
                i.contains(e.relatedTarget)) ||
              (this._setClasses(i), this._emitOrigin(r, null));
          }
          _emitOrigin(e, i) {
            e.subject.observers.length &&
              this._ngZone.run(() => e.subject.next(i));
          }
          _registerGlobalListeners(e) {
            if (!this._platform.isBrowser) return;
            const i = e.rootNode,
              r = this._rootNodeFocusListenerCount.get(i) || 0;
            r ||
              this._ngZone.runOutsideAngular(() => {
                i.addEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  fd
                ),
                  i.addEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    fd
                  );
              }),
              this._rootNodeFocusListenerCount.set(i, r + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener(
                    "focus",
                    this._windowFocusListener
                  );
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe(ce(this._stopInputModalityDetector))
                  .subscribe((o) => {
                    this._setOrigin(o, !0);
                  }));
          }
          _removeGlobalListeners(e) {
            const i = e.rootNode;
            if (this._rootNodeFocusListenerCount.has(i)) {
              const r = this._rootNodeFocusListenerCount.get(i);
              r > 1
                ? this._rootNodeFocusListenerCount.set(i, r - 1)
                : (i.removeEventListener(
                    "focus",
                    this._rootNodeFocusAndBlurListener,
                    fd
                  ),
                  i.removeEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    fd
                  ),
                  this._rootNodeFocusListenerCount.delete(i));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener(
                "focus",
                this._windowFocusListener
              ),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(e, i, r) {
            this._setClasses(e, i),
              this._emitOrigin(r, i),
              (this._lastFocusOrigin = i);
          }
          _getClosestElementsInfo(e) {
            const i = [];
            return (
              this._elementInfo.forEach((r, o) => {
                (o === e || (r.checkChildren && o.contains(e))) &&
                  i.push([o, r]);
              }),
              i
            );
          }
          _isLastInteractionFromInputLabel(e) {
            const { _mostRecentTarget: i, mostRecentModality: r } =
              this._inputModalityDetector;
            if (
              "mouse" !== r ||
              !i ||
              i === e ||
              ("INPUT" !== e.nodeName && "TEXTAREA" !== e.nodeName) ||
              e.disabled
            )
              return !1;
            const o = e.labels;
            if (o)
              for (let s = 0; s < o.length; s++)
                if (o[s].contains(i)) return !0;
            return !1;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(G), b(yt), b(r$), b(ee, 8), b(l$, 8));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const US = "cdk-high-contrast-black-on-white",
        $S = "cdk-high-contrast-white-on-black",
        Fg = "cdk-high-contrast-active";
      let zS = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e),
                (this._document = i),
                (this._breakpointSubscription = un(cd)
                  .observe("(forced-colors: active)")
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const e = this._document.createElement("div");
              (e.style.backgroundColor = "rgb(1,2,3)"),
                (e.style.position = "absolute"),
                this._document.body.appendChild(e);
              const i = this._document.defaultView || window,
                r = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
                o = ((r && r.backgroundColor) || "").replace(/ /g, "");
              switch ((e.remove(), o)) {
                case "rgb(0,0,0)":
                  return 2;
                case "rgb(255,255,255)":
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const e = this._document.body.classList;
                e.remove(Fg, US, $S), (this._hasCheckedHighContrastMode = !0);
                const i = this.getHighContrastMode();
                1 === i ? e.add(Fg, US) : 2 === i && e.add(Fg, $S);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(yt), b(ee));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        qS = (() => {
          class n {
            constructor(e) {
              e._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(zS));
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [AS] })),
            n
          );
        })();
      const c$ = new x("cdk-dir-doc", {
          providedIn: "root",
          factory: function u$() {
            return un(ee);
          },
        }),
        d$ =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let xi = (() => {
          class n {
            constructor(e) {
              if (((this.value = "ltr"), (this.change = new se()), e)) {
                const r = e.documentElement ? e.documentElement.dir : null;
                this.value = (function h$(n) {
                  const t = n?.toLowerCase() || "";
                  return "auto" === t &&
                    typeof navigator < "u" &&
                    navigator?.language
                    ? d$.test(navigator.language)
                      ? "rtl"
                      : "ltr"
                    : "rtl" === t
                    ? "rtl"
                    : "ltr";
                })((e.body ? e.body.dir : null) || r || "ltr");
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(c$, 8));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        gl = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({})),
            n
          );
        })();
      function f$(n, t) {
        if ((1 & n && ge(0, "mat-pseudo-checkbox", 4), 2 & n)) {
          const e = Ie();
          M("state", e.selected ? "checked" : "unchecked")(
            "disabled",
            e.disabled
          );
        }
      }
      function p$(n, t) {
        if ((1 & n && (g(0, "span", 5), v(1), m()), 2 & n)) {
          const e = Ie();
          C(1), Ge("(", e.group.label, ")");
        }
      }
      const m$ = ["*"],
        _$ = new x("mat-sanity-checks", {
          providedIn: "root",
          factory: function g$() {
            return !0;
          },
        });
      let fe = (() => {
        class n {
          constructor(e, i, r) {
            (this._sanityChecks = i),
              (this._document = r),
              (this._hasDoneGlobalChecks = !1),
              e._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(e) {
            return (
              !Eg() &&
              ("boolean" == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[e])
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(zS), b(_$, 8), b(ee));
          }),
          (n.ɵmod = Q({ type: n })),
          (n.ɵinj = Z({ imports: [gl, gl] })),
          n
        );
      })();
      function pd(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            this._disabled = be(t);
          }
        };
      }
      function Pg(n, t) {
        return class extends n {
          constructor(...e) {
            super(...e), (this.defaultColor = t), (this.color = t);
          }
          get color() {
            return this._color;
          }
          set color(e) {
            const i = e || this.defaultColor;
            i !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`
                ),
              i && this._elementRef.nativeElement.classList.add(`mat-${i}`),
              (this._color = i));
          }
        };
      }
      function vo(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(t) {
            this._disableRipple = be(t);
          }
        };
      }
      function Ng(n, t = 0) {
        return class extends n {
          constructor(...e) {
            super(...e), (this._tabIndex = t), (this.defaultTabIndex = t);
          }
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(e) {
            this._tabIndex = null != e ? Jn(e) : this.defaultTabIndex;
          }
        };
      }
      function YS(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this.errorState = !1);
          }
          updateErrorState() {
            const t = this.errorState,
              o = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            o !== t && ((this.errorState = o), this.stateChanges.next());
          }
        };
      }
      let Lg = (() => {
          class n {
            isErrorState(e, i) {
              return !!(e && e.invalid && (e.touched || (i && i.submitted)));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        KS = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["", "mat-line", ""],
                ["", "matLine", ""],
              ],
              hostAttrs: [1, "mat-line"],
            })),
            n
          );
        })();
      function _l(n, t, e) {
        n.nativeElement.classList.toggle(t, e);
      }
      let md = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = Q({ type: n })),
          (n.ɵinj = Z({ imports: [fe, fe] })),
          n
        );
      })();
      class y$ {
        constructor(t, e, i, r = !1) {
          (this._renderer = t),
            (this.element = e),
            (this.config = i),
            (this._animationForciblyDisabledThroughCss = r),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const QS = { enterDuration: 225, exitDuration: 150 },
        Vg = As({ passive: !0 }),
        XS = ["mousedown", "touchstart"],
        JS = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class C$ {
        constructor(t, e, i, r) {
          (this._target = t),
            (this._ngZone = e),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            r.isBrowser && (this._containerElement = rr(i));
        }
        fadeInRipple(t, e, i = {}) {
          const r = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            o = { ...QS, ...i.animation };
          i.centered &&
            ((t = r.left + r.width / 2), (e = r.top + r.height / 2));
          const s =
              i.radius ||
              (function w$(n, t, e) {
                const i = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
                  r = Math.max(Math.abs(t - e.top), Math.abs(t - e.bottom));
                return Math.sqrt(i * i + r * r);
              })(t, e, r),
            a = t - r.left,
            l = e - r.top,
            c = o.enterDuration,
            u = document.createElement("div");
          u.classList.add("mat-ripple-element"),
            (u.style.left = a - s + "px"),
            (u.style.top = l - s + "px"),
            (u.style.height = 2 * s + "px"),
            (u.style.width = 2 * s + "px"),
            null != i.color && (u.style.backgroundColor = i.color),
            (u.style.transitionDuration = `${c}ms`),
            this._containerElement.appendChild(u);
          const d = window.getComputedStyle(u),
            p = d.transitionDuration,
            _ = "none" === d.transitionProperty || "0s" === p || "0s, 0s" === p,
            y = new y$(this, u, i, _);
          (u.style.transform = "scale3d(1, 1, 1)"),
            (y.state = 0),
            i.persistent || (this._mostRecentTransientRipple = y);
          let w = null;
          return (
            !_ &&
              (c || o.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const D = () => this._finishRippleTransition(y),
                  A = () => this._destroyRipple(y);
                u.addEventListener("transitionend", D),
                  u.addEventListener("transitioncancel", A),
                  (w = { onTransitionEnd: D, onTransitionCancel: A });
              }),
            this._activeRipples.set(y, w),
            (_ || !c) && this._finishRippleTransition(y),
            y
          );
        }
        fadeOutRipple(t) {
          if (2 === t.state || 3 === t.state) return;
          const e = t.element,
            i = { ...QS, ...t.config.animation };
          (e.style.transitionDuration = `${i.exitDuration}ms`),
            (e.style.opacity = "0"),
            (t.state = 2),
            (t._animationForciblyDisabledThroughCss || !i.exitDuration) &&
              this._finishRippleTransition(t);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach((t) => t.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach((t) => {
            t.config.persistent || t.fadeOut();
          });
        }
        setupTriggerEvents(t) {
          const e = rr(t);
          !e ||
            e === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = e),
            this._registerEvents(XS));
        }
        handleEvent(t) {
          "mousedown" === t.type
            ? this._onMousedown(t)
            : "touchstart" === t.type
            ? this._onTouchStart(t)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._registerEvents(JS),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(t) {
          0 === t.state
            ? this._startFadeOutTransition(t)
            : 2 === t.state && this._destroyRipple(t);
        }
        _startFadeOutTransition(t) {
          const e = t === this._mostRecentTransientRipple,
            { persistent: i } = t.config;
          (t.state = 1), !i && (!e || !this._isPointerDown) && t.fadeOut();
        }
        _destroyRipple(t) {
          const e = this._activeRipples.get(t) ?? null;
          this._activeRipples.delete(t),
            this._activeRipples.size || (this._containerRect = null),
            t === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (t.state = 3),
            null !== e &&
              (t.element.removeEventListener(
                "transitionend",
                e.onTransitionEnd
              ),
              t.element.removeEventListener(
                "transitioncancel",
                e.onTransitionCancel
              )),
            t.element.remove();
        }
        _onMousedown(t) {
          const e = BS(t),
            i =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !e &&
            !i &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
        }
        _onTouchStart(t) {
          if (!this._target.rippleDisabled && !jS(t)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const e = t.changedTouches;
            for (let i = 0; i < e.length; i++)
              this.fadeInRipple(
                e[i].clientX,
                e[i].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          !this._isPointerDown ||
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach((t) => {
              !t.config.persistent &&
                (1 === t.state ||
                  (t.config.terminateOnPointerUp && 0 === t.state)) &&
                t.fadeOut();
            }));
        }
        _registerEvents(t) {
          this._ngZone.runOutsideAngular(() => {
            t.forEach((e) => {
              this._triggerElement.addEventListener(e, this, Vg);
            });
          });
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            (XS.forEach((t) => {
              this._triggerElement.removeEventListener(t, this, Vg);
            }),
            this._pointerUpEventsRegistered &&
              JS.forEach((t) => {
                this._triggerElement.removeEventListener(t, this, Vg);
              }));
        }
      }
      const D$ = new x("mat-ripple-global-options");
      let Rs = (() => {
          class n {
            constructor(e, i, r, o, s) {
              (this._elementRef = e),
                (this._animationMode = s),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = o || {}),
                (this._rippleRenderer = new C$(this, i, e, r));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && this.fadeOutAllNonPersistent(),
                (this._disabled = e),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(e) {
              (this._trigger = e), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...("NoopAnimations" === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(e, i = 0, r) {
              return "number" == typeof e
                ? this._rippleRenderer.fadeInRipple(e, i, {
                    ...this.rippleConfig,
                    ...r,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...e,
                  });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(ie), h(G), h(yt), h(D$, 8), h(pn, 8));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["", "mat-ripple", ""],
                ["", "matRipple", ""],
              ],
              hostAttrs: [1, "mat-ripple"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && Pe("mat-ripple-unbounded", i.unbounded);
              },
              inputs: {
                color: ["matRippleColor", "color"],
                unbounded: ["matRippleUnbounded", "unbounded"],
                centered: ["matRippleCentered", "centered"],
                radius: ["matRippleRadius", "radius"],
                animation: ["matRippleAnimation", "animation"],
                disabled: ["matRippleDisabled", "disabled"],
                trigger: ["matRippleTrigger", "trigger"],
              },
              exportAs: ["matRipple"],
            })),
            n
          );
        })(),
        vl = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [fe, fe] })),
            n
          );
        })(),
        eT = (() => {
          class n {
            constructor(e) {
              (this._animationMode = e),
                (this.state = "unchecked"),
                (this.disabled = !1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(pn, 8));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-pseudo-checkbox"]],
              hostAttrs: [1, "mat-pseudo-checkbox"],
              hostVars: 8,
              hostBindings: function (e, i) {
                2 & e &&
                  Pe(
                    "mat-pseudo-checkbox-indeterminate",
                    "indeterminate" === i.state
                  )("mat-pseudo-checkbox-checked", "checked" === i.state)(
                    "mat-pseudo-checkbox-disabled",
                    i.disabled
                  )(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  );
              },
              inputs: { state: "state", disabled: "disabled" },
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              styles: [
                '.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Bg = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [fe] })),
            n
          );
        })();
      const tT = new x("MAT_OPTION_PARENT_COMPONENT"),
        nT = new x("MatOptgroup");
      let M$ = 0;
      class E$ {
        constructor(t, e = !1) {
          (this.source = t), (this.isUserInput = e);
        }
      }
      let S$ = (() => {
          class n {
            constructor(e, i, r, o) {
              (this._element = e),
                (this._changeDetectorRef = i),
                (this._parent = r),
                (this.group = o),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ""),
                (this.id = "mat-option-" + M$++),
                (this.onSelectionChange = new se()),
                (this._stateChanges = new V());
            }
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(e) {
              this._disabled = be(e);
            }
            get disableRipple() {
              return !(!this._parent || !this._parent.disableRipple);
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._getHostElement().textContent || "").trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(e, i) {
              const r = this._getHostElement();
              "function" == typeof r.focus && r.focus(i);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(e) {
              (13 === e.keyCode || 32 === e.keyCode) &&
                !Xn(e) &&
                (this._selectViaInteraction(), e.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getAriaSelected() {
              return this.selected || (!this.multiple && null);
            }
            _getTabIndex() {
              return this.disabled ? "-1" : "0";
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const e = this.viewValue;
                e !== this._mostRecentViewValue &&
                  ((this._mostRecentViewValue = e), this._stateChanges.next());
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(e = !1) {
              this.onSelectionChange.emit(new E$(this, e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              Zr();
            }),
            (n.ɵdir = R({
              type: n,
              inputs: { value: "value", id: "id", disabled: "disabled" },
              outputs: { onSelectionChange: "onSelectionChange" },
            })),
            n
          );
        })(),
        yo = (() => {
          class n extends S$ {
            constructor(e, i, r, o) {
              super(e, i, r, o);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(ie), h(st), h(tT, 8), h(nT, 8));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-option"]],
              hostAttrs: [
                "role",
                "option",
                1,
                "mat-option",
                "mat-focus-indicator",
              ],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  I("click", function () {
                    return i._selectViaInteraction();
                  })("keydown", function (o) {
                    return i._handleKeydown(o);
                  }),
                  2 & e &&
                    (Ea("id", i.id),
                    Ae("tabindex", i._getTabIndex())(
                      "aria-selected",
                      i._getAriaSelected()
                    )("aria-disabled", i.disabled.toString()),
                    Pe("mat-selected", i.selected)(
                      "mat-option-multiple",
                      i.multiple
                    )("mat-active", i.active)(
                      "mat-option-disabled",
                      i.disabled
                    ));
              },
              exportAs: ["matOption"],
              features: [B],
              ngContentSelectors: m$,
              decls: 5,
              vars: 4,
              consts: [
                [
                  "class",
                  "mat-option-pseudo-checkbox",
                  3,
                  "state",
                  "disabled",
                  4,
                  "ngIf",
                ],
                [1, "mat-option-text"],
                ["class", "cdk-visually-hidden", 4, "ngIf"],
                [
                  "mat-ripple",
                  "",
                  1,
                  "mat-option-ripple",
                  3,
                  "matRippleTrigger",
                  "matRippleDisabled",
                ],
                [1, "mat-option-pseudo-checkbox", 3, "state", "disabled"],
                [1, "cdk-visually-hidden"],
              ],
              template: function (e, i) {
                1 & e &&
                  (mt(),
                  N(0, f$, 1, 2, "mat-pseudo-checkbox", 0),
                  g(1, "span", 1),
                  pe(2),
                  m(),
                  N(3, p$, 2, 1, "span", 2),
                  ge(4, "div", 3)),
                  2 & e &&
                    (M("ngIf", i.multiple),
                    C(3),
                    M("ngIf", i.group && i.group._inert),
                    C(1),
                    M("matRippleTrigger", i._getHostElement())(
                      "matRippleDisabled",
                      i.disabled || i.disableRipple
                    ));
              },
              dependencies: [Rs, ct, eT],
              styles: [
                '.mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:""}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })();
      function iT(n, t, e) {
        if (e.length) {
          let i = t.toArray(),
            r = e.toArray(),
            o = 0;
          for (let s = 0; s < n + 1; s++)
            i[s].group && i[s].group === r[o] && o++;
          return o;
        }
        return 0;
      }
      let rT = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = Q({ type: n })),
          (n.ɵinj = Z({ imports: [vl, yi, fe, Bg] })),
          n
        );
      })();
      const x$ = ["mat-button", ""],
        A$ = ["*"],
        k$ = [
          "mat-button",
          "mat-flat-button",
          "mat-icon-button",
          "mat-raised-button",
          "mat-stroked-button",
          "mat-mini-fab",
          "mat-fab",
        ],
        R$ = Pg(
          pd(
            vo(
              class {
                constructor(n) {
                  this._elementRef = n;
                }
              }
            )
          )
        );
      let Tt = (() => {
          class n extends R$ {
            constructor(e, i, r) {
              super(e),
                (this._focusMonitor = i),
                (this._animationMode = r),
                (this.isRoundButton = this._hasHostAttributes(
                  "mat-fab",
                  "mat-mini-fab"
                )),
                (this.isIconButton =
                  this._hasHostAttributes("mat-icon-button"));
              for (const o of k$)
                this._hasHostAttributes(o) &&
                  this._getHostElement().classList.add(o);
              e.nativeElement.classList.add("mat-button-base"),
                this.isRoundButton && (this.color = "accent");
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(e, i) {
              e
                ? this._focusMonitor.focusVia(this._getHostElement(), e, i)
                : this._getHostElement().focus(i);
            }
            _getHostElement() {
              return this._elementRef.nativeElement;
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _hasHostAttributes(...e) {
              return e.some((i) => this._getHostElement().hasAttribute(i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(ie), h(Fr), h(pn, 8));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [
                ["button", "mat-button", ""],
                ["button", "mat-raised-button", ""],
                ["button", "mat-icon-button", ""],
                ["button", "mat-fab", ""],
                ["button", "mat-mini-fab", ""],
                ["button", "mat-stroked-button", ""],
                ["button", "mat-flat-button", ""],
              ],
              viewQuery: function (e, i) {
                if ((1 & e && Et(Rs, 5), 2 & e)) {
                  let r;
                  X((r = J())) && (i.ripple = r.first);
                }
              },
              hostAttrs: [1, "mat-focus-indicator"],
              hostVars: 5,
              hostBindings: function (e, i) {
                2 & e &&
                  (Ae("disabled", i.disabled || null),
                  Pe(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  )("mat-button-disabled", i.disabled));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
              },
              exportAs: ["matButton"],
              features: [B],
              attrs: x$,
              ngContentSelectors: A$,
              decls: 4,
              vars: 5,
              consts: [
                [1, "mat-button-wrapper"],
                [
                  "matRipple",
                  "",
                  1,
                  "mat-button-ripple",
                  3,
                  "matRippleDisabled",
                  "matRippleCentered",
                  "matRippleTrigger",
                ],
                [1, "mat-button-focus-overlay"],
              ],
              template: function (e, i) {
                1 & e &&
                  (mt(),
                  g(0, "span", 0),
                  pe(1),
                  m(),
                  ge(2, "span", 1)(3, "span", 2)),
                  2 & e &&
                    (C(2),
                    Pe(
                      "mat-button-ripple-round",
                      i.isRoundButton || i.isIconButton
                    ),
                    M("matRippleDisabled", i._isRippleDisabled())(
                      "matRippleCentered",
                      i.isIconButton
                    )("matRippleTrigger", i._getHostElement()));
              },
              dependencies: [Rs],
              styles: [
                ".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}.mat-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.mat-flat-button::before,.mat-raised-button::before,.mat-fab::before,.mat-mini-fab::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-stroked-button::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        oT = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [vl, fe, fe] })),
            n
          );
        })();
      const O$ = ["addListener", "removeListener"],
        F$ = ["addEventListener", "removeEventListener"],
        P$ = ["on", "off"];
      function Os(n, t, e, i) {
        if ((ye(e) && ((i = e), (e = void 0)), i))
          return Os(n, t, e).pipe(Dm(i));
        const [r, o] = (function V$(n) {
          return ye(n.addEventListener) && ye(n.removeEventListener);
        })(n)
          ? F$.map((s) => (a) => n[s](t, a, e))
          : (function N$(n) {
              return ye(n.addListener) && ye(n.removeListener);
            })(n)
          ? O$.map(sT(n, t))
          : (function L$(n) {
              return ye(n.on) && ye(n.off);
            })(n)
          ? P$.map(sT(n, t))
          : [];
        if (!r && $d(n)) return bt((s) => Os(s, t, e))(zt(n));
        if (!r) throw new TypeError("Invalid event target");
        return new Oe((s) => {
          const a = (...l) => s.next(1 < l.length ? l : l[0]);
          return r(a), () => o(a);
        });
      }
      function sT(n, t) {
        return (e) => (i) => n[e](t, i);
      }
      const B$ = ["connectionContainer"],
        j$ = ["inputContainer"],
        H$ = ["label"];
      function U$(n, t) {
        1 & n &&
          (ba(0),
          g(1, "div", 14),
          ge(2, "div", 15)(3, "div", 16)(4, "div", 17),
          m(),
          g(5, "div", 18),
          ge(6, "div", 15)(7, "div", 16)(8, "div", 17),
          m(),
          Ca());
      }
      function $$(n, t) {
        if (1 & n) {
          const e = zi();
          g(0, "div", 19),
            I("cdkObserveContent", function () {
              return ii(e), ri(Ie().updateOutlineGap());
            }),
            pe(1, 1),
            m();
        }
        2 & n && M("cdkObserveContentDisabled", "outline" != Ie().appearance);
      }
      function z$(n, t) {
        if (
          (1 & n && (ba(0), pe(1, 2), g(2, "span"), v(3), m(), Ca()), 2 & n)
        ) {
          const e = Ie(2);
          C(3), Je(e._control.placeholder);
        }
      }
      function q$(n, t) {
        1 & n && pe(0, 3, ["*ngSwitchCase", "true"]);
      }
      function G$(n, t) {
        1 & n && (g(0, "span", 23), v(1, " *"), m());
      }
      function W$(n, t) {
        if (1 & n) {
          const e = zi();
          g(0, "label", 20, 21),
            I("cdkObserveContent", function () {
              return ii(e), ri(Ie().updateOutlineGap());
            }),
            N(2, z$, 4, 1, "ng-container", 12),
            N(3, q$, 1, 0, "ng-content", 12),
            N(4, G$, 2, 0, "span", 22),
            m();
        }
        if (2 & n) {
          const e = Ie();
          Pe("mat-empty", e._control.empty && !e._shouldAlwaysFloat())(
            "mat-form-field-empty",
            e._control.empty && !e._shouldAlwaysFloat()
          )("mat-accent", "accent" == e.color)("mat-warn", "warn" == e.color),
            M("cdkObserveContentDisabled", "outline" != e.appearance)(
              "id",
              e._labelId
            )("ngSwitch", e._hasLabel()),
            Ae("for", e._control.id)("aria-owns", e._control.id),
            C(2),
            M("ngSwitchCase", !1),
            C(1),
            M("ngSwitchCase", !0),
            C(1),
            M(
              "ngIf",
              !e.hideRequiredMarker &&
                e._control.required &&
                !e._control.disabled
            );
        }
      }
      function Y$(n, t) {
        1 & n && (g(0, "div", 24), pe(1, 4), m());
      }
      function K$(n, t) {
        if ((1 & n && (g(0, "div", 25), ge(1, "span", 26), m()), 2 & n)) {
          const e = Ie();
          C(1),
            Pe("mat-accent", "accent" == e.color)(
              "mat-warn",
              "warn" == e.color
            );
        }
      }
      function Z$(n, t) {
        1 & n && (g(0, "div"), pe(1, 5), m()),
          2 & n && M("@transitionMessages", Ie()._subscriptAnimationState);
      }
      function Q$(n, t) {
        if ((1 & n && (g(0, "div", 30), v(1), m()), 2 & n)) {
          const e = Ie(2);
          M("id", e._hintLabelId), C(1), Je(e.hintLabel);
        }
      }
      function X$(n, t) {
        if (
          (1 & n &&
            (g(0, "div", 27),
            N(1, Q$, 2, 2, "div", 28),
            pe(2, 6),
            ge(3, "div", 29),
            pe(4, 7),
            m()),
          2 & n)
        ) {
          const e = Ie();
          M("@transitionMessages", e._subscriptAnimationState),
            C(1),
            M("ngIf", e.hintLabel);
        }
      }
      const J$ = [
          "*",
          [["", "matPrefix", ""]],
          [["mat-placeholder"]],
          [["mat-label"]],
          [["", "matSuffix", ""]],
          [["mat-error"]],
          [["mat-hint", 3, "align", "end"]],
          [["mat-hint", "align", "end"]],
        ],
        ez = [
          "*",
          "[matPrefix]",
          "mat-placeholder",
          "mat-label",
          "[matSuffix]",
          "mat-error",
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let tz = 0;
      const aT = new x("MatError");
      let or = (() => {
        class n {
          constructor(e, i) {
            (this.id = "mat-error-" + tz++),
              e || i.nativeElement.setAttribute("aria-live", "polite");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(ai("aria-live"), h(ie));
          }),
          (n.ɵdir = R({
            type: n,
            selectors: [["mat-error"]],
            hostAttrs: ["aria-atomic", "true", 1, "mat-error"],
            hostVars: 1,
            hostBindings: function (e, i) {
              2 & e && Ae("id", i.id);
            },
            inputs: { id: "id" },
            features: [ae([{ provide: aT, useExisting: n }])],
          })),
          n
        );
      })();
      const nz = {
        transitionMessages: Zi("transitionMessages", [
          Xt("enter", Ne({ opacity: 1, transform: "translateY(0%)" })),
          Ut("void => enter", [
            Ne({ opacity: 0, transform: "translateY(-5px)" }),
            Qt("300ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
          ]),
        ]),
      };
      let gd = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = R({ type: n })),
          n
        );
      })();
      const iz = new x("MatHint");
      let ei = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({ type: n, selectors: [["mat-label"]] })),
            n
          );
        })(),
        rz = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({ type: n, selectors: [["mat-placeholder"]] })),
            n
          );
        })();
      const oz = new x("MatPrefix"),
        sz = new x("MatSuffix");
      let lT = 0;
      const lz = Pg(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          },
          "primary"
        ),
        cz = new x("MAT_FORM_FIELD_DEFAULT_OPTIONS"),
        jg = new x("MatFormField");
      let sr = (() => {
          class n extends lz {
            constructor(e, i, r, o, s, a, l) {
              super(e),
                (this._changeDetectorRef = i),
                (this._dir = r),
                (this._defaults = o),
                (this._platform = s),
                (this._ngZone = a),
                (this._outlineGapCalculationNeededImmediately = !1),
                (this._outlineGapCalculationNeededOnStable = !1),
                (this._destroyed = new V()),
                (this._hideRequiredMarker = !1),
                (this._showAlwaysAnimate = !1),
                (this._subscriptAnimationState = ""),
                (this._hintLabel = ""),
                (this._hintLabelId = "mat-hint-" + lT++),
                (this._labelId = "mat-form-field-label-" + lT++),
                (this.floatLabel = this._getDefaultFloatLabelState()),
                (this._animationsEnabled = "NoopAnimations" !== l),
                (this.appearance = o?.appearance || "legacy"),
                o &&
                  ((this._hideRequiredMarker = Boolean(o.hideRequiredMarker)),
                  o.color && (this.color = this.defaultColor = o.color));
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(e) {
              const i = this._appearance;
              (this._appearance = e || this._defaults?.appearance || "legacy"),
                "outline" === this._appearance &&
                  i !== e &&
                  (this._outlineGapCalculationNeededOnStable = !0);
            }
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(e) {
              this._hideRequiredMarker = be(e);
            }
            _shouldAlwaysFloat() {
              return "always" === this.floatLabel && !this._showAlwaysAnimate;
            }
            _canLabelFloat() {
              return "never" !== this.floatLabel;
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(e) {
              (this._hintLabel = e), this._processHints();
            }
            get floatLabel() {
              return "legacy" !== this.appearance &&
                "never" === this._floatLabel
                ? "auto"
                : this._floatLabel;
            }
            set floatLabel(e) {
              e !== this._floatLabel &&
                ((this._floatLabel = e || this._getDefaultFloatLabelState()),
                this._changeDetectorRef.markForCheck());
            }
            get _control() {
              return (
                this._explicitFormFieldControl ||
                this._controlNonStatic ||
                this._controlStatic
              );
            }
            set _control(e) {
              this._explicitFormFieldControl = e;
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._connectionContainerRef || this._elementRef;
            }
            ngAfterContentInit() {
              this._validateControlChild();
              const e = this._control;
              e.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-form-field-type-${e.controlType}`
                ),
                e.stateChanges.pipe(vn(null)).subscribe(() => {
                  this._validatePlaceholders(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                e.ngControl &&
                  e.ngControl.valueChanges &&
                  e.ngControl.valueChanges
                    .pipe(ce(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck()),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe(ce(this._destroyed))
                    .subscribe(() => {
                      this._outlineGapCalculationNeededOnStable &&
                        this.updateOutlineGap();
                    });
                }),
                hr(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes
                ).subscribe(() => {
                  (this._outlineGapCalculationNeededOnStable = !0),
                    this._changeDetectorRef.markForCheck();
                }),
                this._hintChildren.changes.pipe(vn(null)).subscribe(() => {
                  this._processHints(), this._changeDetectorRef.markForCheck();
                }),
                this._errorChildren.changes.pipe(vn(null)).subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._dir &&
                  this._dir.change.pipe(ce(this._destroyed)).subscribe(() => {
                    "function" == typeof requestAnimationFrame
                      ? this._ngZone.runOutsideAngular(() => {
                          requestAnimationFrame(() => this.updateOutlineGap());
                        })
                      : this.updateOutlineGap();
                  });
            }
            ngAfterContentChecked() {
              this._validateControlChild(),
                this._outlineGapCalculationNeededImmediately &&
                  this.updateOutlineGap();
            }
            ngAfterViewInit() {
              (this._subscriptAnimationState = "enter"),
                this._changeDetectorRef.detectChanges();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _shouldForward(e) {
              const i = this._control ? this._control.ngControl : null;
              return i && i[e];
            }
            _hasPlaceholder() {
              return !!(
                (this._control && this._control.placeholder) ||
                this._placeholderChild
              );
            }
            _hasLabel() {
              return !(!this._labelChildNonStatic && !this._labelChildStatic);
            }
            _shouldLabelFloat() {
              return (
                this._canLabelFloat() &&
                ((this._control && this._control.shouldLabelFloat) ||
                  this._shouldAlwaysFloat())
              );
            }
            _hideControlPlaceholder() {
              return (
                ("legacy" === this.appearance && !this._hasLabel()) ||
                (this._hasLabel() && !this._shouldLabelFloat())
              );
            }
            _hasFloatingLabel() {
              return (
                this._hasLabel() ||
                ("legacy" === this.appearance && this._hasPlaceholder())
              );
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? "error"
                : "hint";
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() &&
                this._canLabelFloat() &&
                (this._animationsEnabled &&
                  this._label &&
                  ((this._showAlwaysAnimate = !0),
                  Os(this._label.nativeElement, "transitionend")
                    .pipe(vt(1))
                    .subscribe(() => {
                      this._showAlwaysAnimate = !1;
                    })),
                (this.floatLabel = "always"),
                this._changeDetectorRef.markForCheck());
            }
            _validatePlaceholders() {}
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _getDefaultFloatLabelState() {
              return (this._defaults && this._defaults.floatLabel) || "auto";
            }
            _syncDescribedByIds() {
              if (this._control) {
                let e = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    "string" == typeof this._control.userAriaDescribedBy &&
                    e.push(...this._control.userAriaDescribedBy.split(" ")),
                  "hint" === this._getDisplayedMessages())
                ) {
                  const i = this._hintChildren
                      ? this._hintChildren.find((o) => "start" === o.align)
                      : null,
                    r = this._hintChildren
                      ? this._hintChildren.find((o) => "end" === o.align)
                      : null;
                  i
                    ? e.push(i.id)
                    : this._hintLabel && e.push(this._hintLabelId),
                    r && e.push(r.id);
                } else
                  this._errorChildren &&
                    e.push(...this._errorChildren.map((i) => i.id));
                this._control.setDescribedByIds(e);
              }
            }
            _validateControlChild() {}
            updateOutlineGap() {
              const e = this._label ? this._label.nativeElement : null,
                i = this._connectionContainerRef.nativeElement,
                r = ".mat-form-field-outline-start",
                o = ".mat-form-field-outline-gap";
              if ("outline" !== this.appearance || !this._platform.isBrowser)
                return;
              if (!e || !e.children.length || !e.textContent.trim()) {
                const u = i.querySelectorAll(`${r}, ${o}`);
                for (let d = 0; d < u.length; d++) u[d].style.width = "0";
                return;
              }
              if (!this._isAttachedToDOM())
                return void (this._outlineGapCalculationNeededImmediately = !0);
              let s = 0,
                a = 0;
              const l = i.querySelectorAll(r),
                c = i.querySelectorAll(o);
              if (this._label && this._label.nativeElement.children.length) {
                const u = i.getBoundingClientRect();
                if (0 === u.width && 0 === u.height)
                  return (
                    (this._outlineGapCalculationNeededOnStable = !0),
                    void (this._outlineGapCalculationNeededImmediately = !1)
                  );
                const d = this._getStartEnd(u),
                  f = e.children,
                  p = this._getStartEnd(f[0].getBoundingClientRect());
                let _ = 0;
                for (let y = 0; y < f.length; y++) _ += f[y].offsetWidth;
                (s = Math.abs(p - d) - 5), (a = _ > 0 ? 0.75 * _ + 10 : 0);
              }
              for (let u = 0; u < l.length; u++) l[u].style.width = `${s}px`;
              for (let u = 0; u < c.length; u++) c[u].style.width = `${a}px`;
              this._outlineGapCalculationNeededOnStable =
                this._outlineGapCalculationNeededImmediately = !1;
            }
            _getStartEnd(e) {
              return this._dir && "rtl" === this._dir.value ? e.right : e.left;
            }
            _isAttachedToDOM() {
              const e = this._elementRef.nativeElement;
              if (e.getRootNode) {
                const i = e.getRootNode();
                return i && i !== e;
              }
              return document.documentElement.contains(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                h(ie),
                h(st),
                h(xi, 8),
                h(cz, 8),
                h(yt),
                h(G),
                h(pn, 8)
              );
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-form-field"]],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e &&
                    (ke(r, gd, 5),
                    ke(r, gd, 7),
                    ke(r, ei, 5),
                    ke(r, ei, 7),
                    ke(r, rz, 5),
                    ke(r, aT, 5),
                    ke(r, iz, 5),
                    ke(r, oz, 5),
                    ke(r, sz, 5)),
                  2 & e)
                ) {
                  let o;
                  X((o = J())) && (i._controlNonStatic = o.first),
                    X((o = J())) && (i._controlStatic = o.first),
                    X((o = J())) && (i._labelChildNonStatic = o.first),
                    X((o = J())) && (i._labelChildStatic = o.first),
                    X((o = J())) && (i._placeholderChild = o.first),
                    X((o = J())) && (i._errorChildren = o),
                    X((o = J())) && (i._hintChildren = o),
                    X((o = J())) && (i._prefixChildren = o),
                    X((o = J())) && (i._suffixChildren = o);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && (Et(B$, 7), Et(j$, 5), Et(H$, 5)), 2 & e)) {
                  let r;
                  X((r = J())) && (i._connectionContainerRef = r.first),
                    X((r = J())) && (i._inputContainerRef = r.first),
                    X((r = J())) && (i._label = r.first);
                }
              },
              hostAttrs: [1, "mat-form-field"],
              hostVars: 40,
              hostBindings: function (e, i) {
                2 & e &&
                  Pe(
                    "mat-form-field-appearance-standard",
                    "standard" == i.appearance
                  )("mat-form-field-appearance-fill", "fill" == i.appearance)(
                    "mat-form-field-appearance-outline",
                    "outline" == i.appearance
                  )(
                    "mat-form-field-appearance-legacy",
                    "legacy" == i.appearance
                  )("mat-form-field-invalid", i._control.errorState)(
                    "mat-form-field-can-float",
                    i._canLabelFloat()
                  )("mat-form-field-should-float", i._shouldLabelFloat())(
                    "mat-form-field-has-label",
                    i._hasFloatingLabel()
                  )(
                    "mat-form-field-hide-placeholder",
                    i._hideControlPlaceholder()
                  )("mat-form-field-disabled", i._control.disabled)(
                    "mat-form-field-autofilled",
                    i._control.autofilled
                  )("mat-focused", i._control.focused)(
                    "ng-untouched",
                    i._shouldForward("untouched")
                  )("ng-touched", i._shouldForward("touched"))(
                    "ng-pristine",
                    i._shouldForward("pristine")
                  )("ng-dirty", i._shouldForward("dirty"))(
                    "ng-valid",
                    i._shouldForward("valid")
                  )("ng-invalid", i._shouldForward("invalid"))(
                    "ng-pending",
                    i._shouldForward("pending")
                  )("_mat-animation-noopable", !i._animationsEnabled);
              },
              inputs: {
                color: "color",
                appearance: "appearance",
                hideRequiredMarker: "hideRequiredMarker",
                hintLabel: "hintLabel",
                floatLabel: "floatLabel",
              },
              exportAs: ["matFormField"],
              features: [ae([{ provide: jg, useExisting: n }]), B],
              ngContentSelectors: ez,
              decls: 15,
              vars: 8,
              consts: [
                [1, "mat-form-field-wrapper"],
                [1, "mat-form-field-flex", 3, "click"],
                ["connectionContainer", ""],
                [4, "ngIf"],
                [
                  "class",
                  "mat-form-field-prefix",
                  3,
                  "cdkObserveContentDisabled",
                  "cdkObserveContent",
                  4,
                  "ngIf",
                ],
                [1, "mat-form-field-infix"],
                ["inputContainer", ""],
                [1, "mat-form-field-label-wrapper"],
                [
                  "class",
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "mat-empty",
                  "mat-form-field-empty",
                  "mat-accent",
                  "mat-warn",
                  "ngSwitch",
                  "cdkObserveContent",
                  4,
                  "ngIf",
                ],
                ["class", "mat-form-field-suffix", 4, "ngIf"],
                ["class", "mat-form-field-underline", 4, "ngIf"],
                [1, "mat-form-field-subscript-wrapper", 3, "ngSwitch"],
                [4, "ngSwitchCase"],
                ["class", "mat-form-field-hint-wrapper", 4, "ngSwitchCase"],
                [1, "mat-form-field-outline"],
                [1, "mat-form-field-outline-start"],
                [1, "mat-form-field-outline-gap"],
                [1, "mat-form-field-outline-end"],
                [1, "mat-form-field-outline", "mat-form-field-outline-thick"],
                [
                  1,
                  "mat-form-field-prefix",
                  3,
                  "cdkObserveContentDisabled",
                  "cdkObserveContent",
                ],
                [
                  1,
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "ngSwitch",
                  "cdkObserveContent",
                ],
                ["label", ""],
                [
                  "class",
                  "mat-placeholder-required mat-form-field-required-marker",
                  "aria-hidden",
                  "true",
                  4,
                  "ngIf",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "mat-placeholder-required",
                  "mat-form-field-required-marker",
                ],
                [1, "mat-form-field-suffix"],
                [1, "mat-form-field-underline"],
                [1, "mat-form-field-ripple"],
                [1, "mat-form-field-hint-wrapper"],
                ["class", "mat-hint", 3, "id", 4, "ngIf"],
                [1, "mat-form-field-hint-spacer"],
                [1, "mat-hint", 3, "id"],
              ],
              template: function (e, i) {
                1 & e &&
                  (mt(J$),
                  g(0, "div", 0)(1, "div", 1, 2),
                  I("click", function (o) {
                    return (
                      i._control.onContainerClick &&
                      i._control.onContainerClick(o)
                    );
                  }),
                  N(3, U$, 9, 0, "ng-container", 3),
                  N(4, $$, 2, 1, "div", 4),
                  g(5, "div", 5, 6),
                  pe(7),
                  g(8, "span", 7),
                  N(9, W$, 5, 16, "label", 8),
                  m()(),
                  N(10, Y$, 2, 0, "div", 9),
                  m(),
                  N(11, K$, 2, 4, "div", 10),
                  g(12, "div", 11),
                  N(13, Z$, 2, 1, "div", 12),
                  N(14, X$, 5, 2, "div", 13),
                  m()()),
                  2 & e &&
                    (C(3),
                    M("ngIf", "outline" == i.appearance),
                    C(1),
                    M("ngIf", i._prefixChildren.length),
                    C(5),
                    M("ngIf", i._hasFloatingLabel()),
                    C(1),
                    M("ngIf", i._suffixChildren.length),
                    C(1),
                    M("ngIf", "outline" != i.appearance),
                    C(1),
                    M("ngSwitch", i._getDisplayedMessages()),
                    C(1),
                    M("ngSwitchCase", "error"),
                    C(1),
                    M("ngSwitchCase", "hint"));
              },
              dependencies: [ct, Va, Bp, PU],
              styles: [
                ".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}",
                '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}',
                '.mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}',
                ".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}",
                ".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}",
                ".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}",
              ],
              encapsulation: 2,
              data: { animation: [nz.transitionMessages] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        Hg = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [yi, fe, AS, fe] })),
            n
          );
        })();
      const uT = As({ passive: !0 });
      let uz = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e),
                (this._ngZone = i),
                (this._monitoredElements = new Map());
            }
            monitor(e) {
              if (!this._platform.isBrowser) return ni;
              const i = rr(e),
                r = this._monitoredElements.get(i);
              if (r) return r.subject;
              const o = new V(),
                s = "cdk-text-field-autofilled",
                a = (l) => {
                  "cdk-text-field-autofill-start" !== l.animationName ||
                  i.classList.contains(s)
                    ? "cdk-text-field-autofill-end" === l.animationName &&
                      i.classList.contains(s) &&
                      (i.classList.remove(s),
                      this._ngZone.run(() =>
                        o.next({ target: l.target, isAutofilled: !1 })
                      ))
                    : (i.classList.add(s),
                      this._ngZone.run(() =>
                        o.next({ target: l.target, isAutofilled: !0 })
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  i.addEventListener("animationstart", a, uT),
                    i.classList.add("cdk-text-field-autofill-monitored");
                }),
                this._monitoredElements.set(i, {
                  subject: o,
                  unlisten: () => {
                    i.removeEventListener("animationstart", a, uT);
                  },
                }),
                o
              );
            }
            stopMonitoring(e) {
              const i = rr(e),
                r = this._monitoredElements.get(i);
              r &&
                (r.unlisten(),
                r.subject.complete(),
                i.classList.remove("cdk-text-field-autofill-monitored"),
                i.classList.remove("cdk-text-field-autofilled"),
                this._monitoredElements.delete(i));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((e, i) => this.stopMonitoring(i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(yt), b(G));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        dT = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({})),
            n
          );
        })();
      const dz = new x("MAT_INPUT_VALUE_ACCESSOR"),
        hz = [
          "button",
          "checkbox",
          "file",
          "hidden",
          "image",
          "radio",
          "range",
          "reset",
          "submit",
        ];
      let fz = 0;
      const pz = YS(
        class {
          constructor(n, t, e, i) {
            (this._defaultErrorStateMatcher = n),
              (this._parentForm = t),
              (this._parentFormGroup = e),
              (this.ngControl = i),
              (this.stateChanges = new V());
          }
        }
      );
      let ar = (() => {
          class n extends pz {
            constructor(e, i, r, o, s, a, l, c, u, d) {
              super(a, o, s, r),
                (this._elementRef = e),
                (this._platform = i),
                (this._autofillMonitor = c),
                (this._formField = d),
                (this._uid = "mat-input-" + fz++),
                (this.focused = !1),
                (this.stateChanges = new V()),
                (this.controlType = "mat-input"),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._type = "text"),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  "date",
                  "datetime",
                  "datetime-local",
                  "month",
                  "time",
                  "week",
                ].filter((_) => wS().has(_))),
                (this._iOSKeyupListener = (_) => {
                  const y = _.target;
                  !y.value &&
                    0 === y.selectionStart &&
                    0 === y.selectionEnd &&
                    (y.setSelectionRange(1, 1), y.setSelectionRange(0, 0));
                });
              const f = this._elementRef.nativeElement,
                p = f.nodeName.toLowerCase();
              (this._inputValueAccessor = l || f),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                i.IOS &&
                  u.runOutsideAngular(() => {
                    e.nativeElement.addEventListener(
                      "keyup",
                      this._iOSKeyupListener
                    );
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = "select" === p),
                (this._isTextarea = "textarea" === p),
                (this._isInFormField = !!d),
                this._isNativeSelect &&
                  (this.controlType = f.multiple
                    ? "mat-native-select-multiple"
                    : "mat-native-select");
            }
            get disabled() {
              return this.ngControl && null !== this.ngControl.disabled
                ? this.ngControl.disabled
                : this._disabled;
            }
            set disabled(e) {
              (this._disabled = be(e)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(e) {
              this._id = e || this._uid;
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(it.required) ??
                !1
              );
            }
            set required(e) {
              this._required = be(e);
            }
            get type() {
              return this._type;
            }
            set type(e) {
              (this._type = e || "text"),
                this._validateType(),
                !this._isTextarea &&
                  wS().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(e) {
              e !== this.value &&
                ((this._inputValueAccessor.value = e),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(e) {
              this._readonly = be(e);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe((e) => {
                    (this.autofilled = e.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement
                  ),
                this._platform.IOS &&
                  this._elementRef.nativeElement.removeEventListener(
                    "keyup",
                    this._iOSKeyupListener
                  );
            }
            ngDoCheck() {
              this.ngControl && this.updateErrorState(),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _focusChanged(e) {
              e !== this.focused &&
                ((this.focused = e), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckPlaceholder() {
              const e = this._formField,
                i =
                  e && "legacy" === e.appearance && !e._hasLabel?.()
                    ? null
                    : this.placeholder;
              if (i !== this._previousPlaceholder) {
                const r = this._elementRef.nativeElement;
                (this._previousPlaceholder = i),
                  i
                    ? r.setAttribute("placeholder", i)
                    : r.removeAttribute("placeholder");
              }
            }
            _dirtyCheckNativeValue() {
              const e = this._elementRef.nativeElement.value;
              this._previousNativeValue !== e &&
                ((this._previousNativeValue = e), this.stateChanges.next());
            }
            _validateType() {
              hz.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let e = this._elementRef.nativeElement.validity;
              return e && e.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const e = this._elementRef.nativeElement,
                  i = e.options[0];
                return (
                  this.focused ||
                  e.multiple ||
                  !this.empty ||
                  !!(e.selectedIndex > -1 && i && i.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(e) {
              e.length
                ? this._elementRef.nativeElement.setAttribute(
                    "aria-describedby",
                    e.join(" ")
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    "aria-describedby"
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
            _isInlineSelect() {
              const e = this._elementRef.nativeElement;
              return this._isNativeSelect && (e.multiple || e.size > 1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                h(ie),
                h(yt),
                h(Ci, 10),
                h(Ka, 8),
                h(Jt, 8),
                h(Lg),
                h(dz, 10),
                h(uz),
                h(G),
                h(jg, 8)
              );
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["input", "matInput", ""],
                ["textarea", "matInput", ""],
                ["select", "matNativeControl", ""],
                ["input", "matNativeControl", ""],
                ["textarea", "matNativeControl", ""],
              ],
              hostAttrs: [
                1,
                "mat-input-element",
                "mat-form-field-autofill-control",
              ],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  I("focus", function () {
                    return i._focusChanged(!0);
                  })("blur", function () {
                    return i._focusChanged(!1);
                  })("input", function () {
                    return i._onInput();
                  }),
                  2 & e &&
                    (Ea("disabled", i.disabled)("required", i.required),
                    Ae("id", i.id)("data-placeholder", i.placeholder)(
                      "name",
                      i.name || null
                    )("readonly", (i.readonly && !i._isNativeSelect) || null)(
                      "aria-invalid",
                      i.empty && i.required ? null : i.errorState
                    )("aria-required", i.required),
                    Pe("mat-input-server", i._isServer)(
                      "mat-native-select-inline",
                      i._isInlineSelect()
                    ));
              },
              inputs: {
                disabled: "disabled",
                id: "id",
                placeholder: "placeholder",
                name: "name",
                required: "required",
                type: "type",
                errorStateMatcher: "errorStateMatcher",
                userAriaDescribedBy: [
                  "aria-describedby",
                  "userAriaDescribedBy",
                ],
                value: "value",
                readonly: "readonly",
              },
              exportAs: ["matInput"],
              features: [ae([{ provide: gd, useExisting: n }]), B, Mt],
            })),
            n
          );
        })(),
        mz = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ providers: [Lg], imports: [dT, Hg, fe, dT, Hg] })),
            n
          );
        })();
      function gz(n, t) {
        1 & n && (g(0, "mat-error"), v(1, " Email \xe9 requerido "), m());
      }
      function _z(n, t) {
        1 & n &&
          (g(0, "mat-error"), v(1, " Favor digitar um email valido "), m());
      }
      function vz(n, t) {
        1 & n && (g(0, "mat-error"), v(1, " Senha \xe9 requerida "), m());
      }
      let yz = (() => {
          class n {
            constructor(e, i) {
              (this.formBuilder = e),
                (this.authService = i),
                (this.user = { email: "", password: "" }),
                (this.formLogin = this.formBuilder.group({
                  email: ["", [it.required, it.email]],
                  senha: ["", [it.required]],
                }));
            }
            ngOnInit() {}
            onSubmit() {
              this.authService.fazerLogin({ usuario: this.user }),
                this.formLogin.reset();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(Qi), h(ul));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-login"]],
              decls: 16,
              vars: 7,
              consts: [
                [1, "title-view"],
                [1, "form", 3, "formGroup", "ngSubmit"],
                ["appearance", "fill", 1, "email"],
                [
                  "matInput",
                  "",
                  "placeholder",
                  "Ex. nome@dominio.com",
                  "name",
                  "email",
                  "formControlName",
                  "email",
                  1,
                  "inputEmail",
                  3,
                  "ngModel",
                  "ngModelChange",
                ],
                [4, "ngIf"],
                ["appearance", "fill", 1, "senha"],
                [
                  "matInput",
                  "",
                  "type",
                  "password",
                  "name",
                  "senha",
                  "formControlName",
                  "senha",
                  1,
                  "inputSenha",
                  3,
                  "ngModel",
                  "ngModelChange",
                ],
                ["mat-raised-button", "", 1, "login", 3, "disabled"],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "span", 0),
                  v(1, " Login "),
                  m(),
                  g(2, "form", 1),
                  I("ngSubmit", function () {
                    return i.onSubmit();
                  }),
                  g(3, "mat-form-field", 2)(4, "mat-label"),
                  v(5, "Email"),
                  m(),
                  g(6, "input", 3),
                  I("ngModelChange", function (o) {
                    return (i.user.email = o);
                  }),
                  m(),
                  N(7, gz, 2, 0, "mat-error", 4),
                  N(8, _z, 2, 0, "mat-error", 4),
                  m(),
                  g(9, "mat-form-field", 5)(10, "mat-label"),
                  v(11, "Senha"),
                  m(),
                  g(12, "input", 6),
                  I("ngModelChange", function (o) {
                    return (i.user.password = o);
                  }),
                  m(),
                  N(13, vz, 2, 0, "mat-error", 4),
                  m(),
                  g(14, "button", 7),
                  v(15, " Login "),
                  m()()),
                  2 & e &&
                    (C(2),
                    M("formGroup", i.formLogin),
                    C(4),
                    M("ngModel", i.user.email),
                    C(1),
                    M("ngIf", i.formLogin.controls.email.hasError("required")),
                    C(1),
                    M("ngIf", i.formLogin.controls.email.hasError("email")),
                    C(4),
                    M("ngModel", i.user.password),
                    C(1),
                    M("ngIf", i.formLogin.controls.senha.hasError("required")),
                    C(1),
                    M("disabled", !i.formLogin.valid));
              },
              dependencies: [ct, Mi, Pn, wi, Di, Tt, or, sr, ei, ar, Jt, Qn],
              styles: [
                "form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px 40px}.email[_ngcontent-%COMP%], .senha[_ngcontent-%COMP%]{width:40%;min-width:35rem}.login[_ngcontent-%COMP%]{width:20%;max-width:10rem;margin-top:10px}.login[_ngcontent-%COMP%]:hover{background-color:#60e160}",
              ],
            })),
            n
          );
        })(),
        lr = (() => {
          class n {
            constructor(e) {
              (this.http = e), (this.equipeUrl = `${nr_apiUrl}equipes/`);
            }
            create({ equipe: e }) {
              return this.http.post(this.equipeUrl, e);
            }
            read() {
              return this.http.get(this.equipeUrl);
            }
            getById({ id: e }) {
              return this.http.get(`${this.equipeUrl}${e}`);
            }
            update({ equipe: e }) {
              return this.http.put(`${this.equipeUrl}${e.id_equipe}`, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(en));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        bo = (() => {
          class n {
            constructor(e) {
              (this.http = e), (this.membroUrl = `${nr_apiUrl}membros/`);
            }
            create({ membro: e }) {
              return this.http.post(this.membroUrl, e);
            }
            read() {
              return this.http.get(this.membroUrl);
            }
            getById({ id: e }) {
              return this.http.get(`${this.membroUrl}${e}`);
            }
            update({ membro: e }) {
              return this.http.put(`${this.membroUrl}${e.id_membro}`, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(en));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Co = (() => {
          class n {
            constructor(e) {
              (this.http = e), (this.projetoUrl = `${nr_apiUrl}projetos/`);
            }
            create(e) {
              return this.http.post(this.projetoUrl, e);
            }
            read() {
              return this.http.get(this.projetoUrl);
            }
            getById(e) {
              return this.http.get(`${this.projetoUrl}${e}`);
            }
            update(e) {
              return this.http.put(`${this.projetoUrl}${e.id_projeto}`, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(en));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        _d = (() => {
          class n {
            constructor(e) {
              (this.http = e), (this.tarefaUrl = `${nr_apiUrl}tarefas/`);
            }
            create(e) {
              return this.http.post(this.tarefaUrl, e);
            }
            read() {
              return this.http.get(this.tarefaUrl);
            }
            getById(e) {
              return this.http.get(`${this.tarefaUrl}${e}`);
            }
            update(e) {
              return this.http.put(`${this.tarefaUrl}${e.id_tarefa}`, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(en));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      const bz = ["*", [["mat-card-footer"]]],
        Cz = ["*", "mat-card-footer"],
        wz = [
          [
            ["", "mat-card-avatar", ""],
            ["", "matCardAvatar", ""],
          ],
          [
            ["mat-card-title"],
            ["mat-card-subtitle"],
            ["", "mat-card-title", ""],
            ["", "mat-card-subtitle", ""],
            ["", "matCardTitle", ""],
            ["", "matCardSubtitle", ""],
          ],
          "*",
        ],
        Dz = [
          "[mat-card-avatar], [matCardAvatar]",
          "mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]",
          "*",
        ];
      let hT = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["mat-card-content"],
                ["", "mat-card-content", ""],
                ["", "matCardContent", ""],
              ],
              hostAttrs: [1, "mat-card-content"],
            })),
            n
          );
        })(),
        Ai = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["mat-card-title"],
                ["", "mat-card-title", ""],
                ["", "matCardTitle", ""],
              ],
              hostAttrs: [1, "mat-card-title"],
            })),
            n
          );
        })(),
        Ii = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["mat-card-subtitle"],
                ["", "mat-card-subtitle", ""],
                ["", "matCardSubtitle", ""],
              ],
              hostAttrs: [1, "mat-card-subtitle"],
            })),
            n
          );
        })(),
        ki = (() => {
          class n {
            constructor(e) {
              this._animationMode = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(pn, 8));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-card"]],
              hostAttrs: [1, "mat-card", "mat-focus-indicator"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  Pe(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  );
              },
              exportAs: ["matCard"],
              ngContentSelectors: Cz,
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && (mt(bz), pe(0), pe(1, 1));
              },
              styles: [
                ".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card._mat-animation-noopable{transition:none !important;animation:none !important}.mat-card>.mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card>.mat-divider-horizontal{left:auto;right:0}.mat-card>.mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card>.mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px;display:block;overflow:hidden}.mat-card-image img{width:100%}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Mz = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-card-header"]],
              hostAttrs: [1, "mat-card-header"],
              ngContentSelectors: Dz,
              decls: 4,
              vars: 0,
              consts: [[1, "mat-card-header-text"]],
              template: function (e, i) {
                1 & e &&
                  (mt(wz), pe(0), g(1, "div", 0), pe(2, 1), m(), pe(3, 2));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Ez = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [fe, fe] })),
            n
          );
        })(),
        Sz = (() => {
          class n {
            constructor(e, i, r, o, s, a) {
              (this.equipeService = e),
                (this.membroService = i),
                (this.projetoService = r),
                (this.tarefaService = o),
                (this.http = s),
                (this.router = a),
                (this.equipes = []),
                (this.membros = []),
                (this.projetos = []),
                (this.tarefas = []);
            }
            ngOnInit() {
              this.equipeService.read().subscribe((e) => {
                this.equipes = e;
              }),
                this.membroService.read().subscribe((e) => {
                  this.membros = e;
                }),
                this.projetoService.read().subscribe((e) => {
                  this.projetos = e;
                }),
                this.tarefaService.read().subscribe((e) => {
                  this.tarefas = e;
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(lr), h(bo), h(Co), h(_d), h(en), h(we));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-dashboard"]],
              decls: 77,
              vars: 4,
              consts: [
                [1, "cards"],
                [1, "card"],
                [1, "title-view"],
                [
                  "target",
                  "_blank",
                  "href",
                  "https://www.github.com/TheSamuelVitor",
                ],
                ["target", "_blank", "href", "https://www.angular.io"],
                ["target", "_blank", "href", "https://www.postgresql.org/"],
                ["target", "_blank", "href", "https://go.dev/"],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "div", 0)(1, "mat-card", 1)(2, "mat-card-title"),
                  v(3),
                  m(),
                  g(4, "mat-card-subtitle"),
                  v(5, " Membro(s)"),
                  ge(6, "br"),
                  v(7, "Cadastrado(s) "),
                  m()(),
                  g(8, "mat-card", 1)(9, "mat-card-title"),
                  v(10),
                  m(),
                  g(11, "mat-card-subtitle"),
                  v(12, " Equipe(s)"),
                  ge(13, "br"),
                  v(14, "Cadastrada(s) "),
                  m()(),
                  g(15, "mat-card", 1)(16, "mat-card-title"),
                  v(17),
                  m(),
                  g(18, "mat-card-subtitle"),
                  v(19, " Projeto(s)"),
                  ge(20, "br"),
                  v(21, "Cadastrado(s) "),
                  m()(),
                  g(22, "mat-card", 1)(23, "mat-card-title"),
                  v(24),
                  m(),
                  g(25, "mat-card-subtitle"),
                  v(26, " Tarefa(s)"),
                  ge(27, "br"),
                  v(28, "Cadastrada(s) "),
                  m()()(),
                  g(29, "mat-card")(30, "h1", 2),
                  v(31, "Sobre o Projeto"),
                  m(),
                  g(32, "mat-card-content")(33, "ul")(34, "li")(35, "p"),
                  v(36, " Desenvolvido por "),
                  g(37, "a", 3),
                  v(38, " Samuel Vitor "),
                  m()()(),
                  g(39, "li")(40, "p"),
                  v(
                    41,
                    "Desafio proposto pela Brisanet para os jovens aprendizes"
                  ),
                  m()(),
                  g(42, "li")(43, "p"),
                  v(
                    44,
                    "Software de gerenciamente de projetos onde \xe9 poss\xedvel conectar:"
                  ),
                  m(),
                  g(45, "ul")(46, "li"),
                  v(47, "Membros a uma equipe"),
                  m(),
                  g(48, "li"),
                  v(49, "Projeto a uma equipe"),
                  m(),
                  g(50, "li"),
                  v(51, "Tarefas a um membro e a um projeto"),
                  m()()(),
                  g(52, "li")(53, "p"),
                  v(54, " Desenvolvido com "),
                  g(55, "a", 4),
                  v(56, "Angular"),
                  m(),
                  v(57, ", "),
                  g(58, "a", 5),
                  v(59, "Postgres"),
                  m(),
                  v(60, " e "),
                  g(61, "a", 6),
                  v(62, "Go"),
                  m(),
                  v(63, ". "),
                  m()()()(),
                  g(64, "mat-card-header")(65, "mat-card-title"),
                  v(66, "Informa\xe7\xf5es Importantes"),
                  m(),
                  g(67, "mat-card-subtitle"),
                  v(68, "Importante ler antes de usar este software"),
                  m()(),
                  g(69, "mat-card-content")(70, "ul")(71, "li")(72, "p"),
                  v(
                    73,
                    " \xc9 necess\xe1rio ter uma equipe para que sejam criados membros e projetos; "
                  ),
                  m()(),
                  g(74, "li")(75, "p"),
                  v(
                    76,
                    " Para criar uma Tarefa deve existir tanto o projeto da tarefa, quanto o membro que realizar\xe1 a tarefa. "
                  ),
                  m()()()()()),
                  2 & e &&
                    (C(3),
                    Ge(" ", i.membros.length, " "),
                    C(7),
                    Ge(" ", i.equipes.length, " "),
                    C(7),
                    Ge(" ", i.projetos.length, " "),
                    C(7),
                    Ge(" ", i.tarefas.length, " "));
              },
              dependencies: [ki, Mz, hT, Ai, Ii],
              styles: [
                "h1[_ngcontent-%COMP%]{margin-left:-0px}span.subtitle[_ngcontent-%COMP%]{font-size:1.5rem}a[_ngcontent-%COMP%]{color:#000;text-decoration:none}.cards[_ngcontent-%COMP%]{display:flex;justify-content:space-between;flex-wrap:wrap;margin:20px}.card[_ngcontent-%COMP%]{margin:10px;text-align:center;width:20rem}",
              ],
            })),
            n
          );
        })();
      const yl = {
        schedule(n) {
          let t = requestAnimationFrame,
            e = cancelAnimationFrame;
          const { delegate: i } = yl;
          i && ((t = i.requestAnimationFrame), (e = i.cancelAnimationFrame));
          const r = t((o) => {
            (e = void 0), n(o);
          });
          return new tt(() => e?.(r));
        },
        requestAnimationFrame(...n) {
          const { delegate: t } = yl;
          return (t?.requestAnimationFrame || requestAnimationFrame)(...n);
        },
        cancelAnimationFrame(...n) {
          const { delegate: t } = yl;
          return (t?.cancelAnimationFrame || cancelAnimationFrame)(...n);
        },
        delegate: void 0,
      };
      new (class xz extends xg {
        flush(t) {
          this._active = !0;
          const e = this._scheduled;
          this._scheduled = void 0;
          const { actions: i } = this;
          let r;
          t = t || i.shift();
          do {
            if ((r = t.execute(t.state, t.delay))) break;
          } while ((t = i[0]) && t.id === e && i.shift());
          if (((this._active = !1), r)) {
            for (; (t = i[0]) && t.id === e && i.shift(); ) t.unsubscribe();
            throw r;
          }
        }
      })(
        class Tz extends Tg {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          requestAsyncId(t, e, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(t, e, i)
              : (t.actions.push(this),
                t._scheduled ||
                  (t._scheduled = yl.requestAnimationFrame(() =>
                    t.flush(void 0)
                  )));
          }
          recycleAsyncId(t, e, i = 0) {
            if ((null != i && i > 0) || (null == i && this.delay > 0))
              return super.recycleAsyncId(t, e, i);
            t.actions.some((r) => r.id === e) ||
              (yl.cancelAnimationFrame(e), (t._scheduled = void 0));
          }
        }
      );
      let Ug,
        Iz = 1;
      const vd = {};
      function fT(n) {
        return n in vd && (delete vd[n], !0);
      }
      const kz = {
          setImmediate(n) {
            const t = Iz++;
            return (
              (vd[t] = !0),
              Ug || (Ug = Promise.resolve()),
              Ug.then(() => fT(t) && n()),
              t
            );
          },
          clearImmediate(n) {
            fT(n);
          },
        },
        { setImmediate: Rz, clearImmediate: Oz } = kz,
        yd = {
          setImmediate(...n) {
            const { delegate: t } = yd;
            return (t?.setImmediate || Rz)(...n);
          },
          clearImmediate(n) {
            const { delegate: t } = yd;
            return (t?.clearImmediate || Oz)(n);
          },
          delegate: void 0,
        };
      new (class Pz extends xg {
        flush(t) {
          this._active = !0;
          const e = this._scheduled;
          this._scheduled = void 0;
          const { actions: i } = this;
          let r;
          t = t || i.shift();
          do {
            if ((r = t.execute(t.state, t.delay))) break;
          } while ((t = i[0]) && t.id === e && i.shift());
          if (((this._active = !1), r)) {
            for (; (t = i[0]) && t.id === e && i.shift(); ) t.unsubscribe();
            throw r;
          }
        }
      })(
        class Fz extends Tg {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          requestAsyncId(t, e, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(t, e, i)
              : (t.actions.push(this),
                t._scheduled ||
                  (t._scheduled = yd.setImmediate(t.flush.bind(t, void 0))));
          }
          recycleAsyncId(t, e, i = 0) {
            if ((null != i && i > 0) || (null == i && this.delay > 0))
              return super.recycleAsyncId(t, e, i);
            t.actions.some((r) => r.id === e) ||
              (yd.clearImmediate(e), (t._scheduled = void 0));
          }
        }
      );
      function pT(n, t = Ag) {
        return (function Lz(n) {
          return Ze((t, e) => {
            let i = !1,
              r = null,
              o = null,
              s = !1;
            const a = () => {
                if ((o?.unsubscribe(), (o = null), i)) {
                  i = !1;
                  const c = r;
                  (r = null), e.next(c);
                }
                s && e.complete();
              },
              l = () => {
                (o = null), s && e.complete();
              };
            t.subscribe(
              Ue(
                e,
                (c) => {
                  (i = !0), (r = c), o || zt(n(c)).subscribe((o = Ue(e, a, l)));
                },
                () => {
                  (s = !0), (!i || !o || o.closed) && e.complete();
                }
              )
            );
          });
        })(() =>
          (function Bz(n = 0, t, e = kU) {
            let i = -1;
            return (
              null != t && (w_(t) ? (e = t) : (i = t)),
              new Oe((r) => {
                let o = (function Vz(n) {
                  return n instanceof Date && !isNaN(n);
                })(n)
                  ? +n - e.now()
                  : n;
                o < 0 && (o = 0);
                let s = 0;
                return e.schedule(function () {
                  r.closed ||
                    (r.next(s++),
                    0 <= i ? this.schedule(void 0, i) : r.complete());
                }, o);
              })
            );
          })(n, t)
        );
      }
      let bl = (() => {
          class n {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this._platform = i),
                (this._scrolled = new V()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = r);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const i = this.scrollContainers.get(e);
              i && (i.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new Oe((i) => {
                    this._globalSubscription || this._addGlobalListener();
                    const r =
                      e > 0
                        ? this._scrolled.pipe(pT(e)).subscribe(i)
                        : this._scrolled.subscribe(i);
                    return (
                      this._scrolledCount++,
                      () => {
                        r.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : j();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, i) => this.deregister(i)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, i) {
              const r = this.getAncestorScrollContainers(e);
              return this.scrolled(i).pipe(qe((o) => !o || r.indexOf(o) > -1));
            }
            getAncestorScrollContainers(e) {
              const i = [];
              return (
                this.scrollContainers.forEach((r, o) => {
                  this._scrollableContainsElement(o, e) && i.push(o);
                }),
                i
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(e, i) {
              let r = rr(i),
                o = e.getElementRef().nativeElement;
              do {
                if (r == o) return !0;
              } while ((r = r.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                Os(this._getWindow().document, "scroll").subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(G), b(yt), b(ee, 8));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Cl = (() => {
          class n {
            constructor(e, i, r, o) {
              (this.elementRef = e),
                (this.scrollDispatcher = i),
                (this.ngZone = r),
                (this.dir = o),
                (this._destroyed = new V()),
                (this._elementScrolled = new Oe((s) =>
                  this.ngZone.runOutsideAngular(() =>
                    Os(this.elementRef.nativeElement, "scroll")
                      .pipe(ce(this._destroyed))
                      .subscribe(s)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(e) {
              const i = this.elementRef.nativeElement,
                r = this.dir && "rtl" == this.dir.value;
              null == e.left && (e.left = r ? e.end : e.start),
                null == e.right && (e.right = r ? e.start : e.end),
                null != e.bottom &&
                  (e.top = i.scrollHeight - i.clientHeight - e.bottom),
                r && 0 != hl()
                  ? (null != e.left &&
                      (e.right = i.scrollWidth - i.clientWidth - e.left),
                    2 == hl()
                      ? (e.left = e.right)
                      : 1 == hl() && (e.left = e.right ? -e.right : e.right))
                  : null != e.right &&
                    (e.left = i.scrollWidth - i.clientWidth - e.right),
                this._applyScrollToOptions(e);
            }
            _applyScrollToOptions(e) {
              const i = this.elementRef.nativeElement;
              DS()
                ? i.scrollTo(e)
                : (null != e.top && (i.scrollTop = e.top),
                  null != e.left && (i.scrollLeft = e.left));
            }
            measureScrollOffset(e) {
              const i = "left",
                r = "right",
                o = this.elementRef.nativeElement;
              if ("top" == e) return o.scrollTop;
              if ("bottom" == e)
                return o.scrollHeight - o.clientHeight - o.scrollTop;
              const s = this.dir && "rtl" == this.dir.value;
              return (
                "start" == e ? (e = s ? r : i) : "end" == e && (e = s ? i : r),
                s && 2 == hl()
                  ? e == i
                    ? o.scrollWidth - o.clientWidth - o.scrollLeft
                    : o.scrollLeft
                  : s && 1 == hl()
                  ? e == i
                    ? o.scrollLeft + o.scrollWidth - o.clientWidth
                    : -o.scrollLeft
                  : e == i
                  ? o.scrollLeft
                  : o.scrollWidth - o.clientWidth - o.scrollLeft
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(ie), h(bl), h(G), h(xi, 8));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["", "cdk-scrollable", ""],
                ["", "cdkScrollable", ""],
              ],
            })),
            n
          );
        })(),
        bd = (() => {
          class n {
            constructor(e, i, r) {
              (this._platform = e),
                (this._change = new V()),
                (this._changeListener = (o) => {
                  this._change.next(o);
                }),
                (this._document = r),
                i.runOutsideAngular(() => {
                  if (e.isBrowser) {
                    const o = this._getWindow();
                    o.addEventListener("resize", this._changeListener),
                      o.addEventListener(
                        "orientationchange",
                        this._changeListener
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const e = this._getWindow();
                e.removeEventListener("resize", this._changeListener),
                  e.removeEventListener(
                    "orientationchange",
                    this._changeListener
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: i, height: r } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + r,
                right: e.left + i,
                height: r,
                width: i,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._document,
                i = this._getWindow(),
                r = e.documentElement,
                o = r.getBoundingClientRect();
              return {
                top:
                  -o.top || e.body.scrollTop || i.scrollY || r.scrollTop || 0,
                left:
                  -o.left ||
                  e.body.scrollLeft ||
                  i.scrollX ||
                  r.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(pT(e)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(yt), b(G), b(ee, 8));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        wo = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({})),
            n
          );
        })(),
        mT = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [gl, wo, gl, wo] })),
            n
          );
        })();
      class $g {
        attach(t) {
          return (this._attachedHost = t), t.attach(this);
        }
        detach() {
          let t = this._attachedHost;
          null != t && ((this._attachedHost = null), t.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class Fs extends $g {
        constructor(t, e, i, r) {
          super(),
            (this.component = t),
            (this.viewContainerRef = e),
            (this.injector = i),
            (this.componentFactoryResolver = r);
        }
      }
      class Cd extends $g {
        constructor(t, e, i, r) {
          super(),
            (this.templateRef = t),
            (this.viewContainerRef = e),
            (this.context = i),
            (this.injector = r);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(t, e = this.context) {
          return (this.context = e), super.attach(t);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class Uz extends $g {
        constructor(t) {
          super(), (this.element = t instanceof ie ? t.nativeElement : t);
        }
      }
      class wd {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(t) {
          return t instanceof Fs
            ? ((this._attachedPortal = t), this.attachComponentPortal(t))
            : t instanceof Cd
            ? ((this._attachedPortal = t), this.attachTemplatePortal(t))
            : this.attachDomPortal && t instanceof Uz
            ? ((this._attachedPortal = t), this.attachDomPortal(t))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class $z extends wd {
        constructor(t, e, i, r, o) {
          super(),
            (this.outletElement = t),
            (this._componentFactoryResolver = e),
            (this._appRef = i),
            (this._defaultInjector = r),
            (this.attachDomPortal = (s) => {
              const a = s.element,
                l = this._document.createComment("dom-portal");
              a.parentNode.insertBefore(l, a),
                this.outletElement.appendChild(a),
                (this._attachedPortal = s),
                super.setDisposeFn(() => {
                  l.parentNode && l.parentNode.replaceChild(a, l);
                });
            }),
            (this._document = o);
        }
        attachComponentPortal(t) {
          const i = (
            t.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(t.component);
          let r;
          return (
            t.viewContainerRef
              ? ((r = t.viewContainerRef.createComponent(
                  i,
                  t.viewContainerRef.length,
                  t.injector || t.viewContainerRef.injector
                )),
                this.setDisposeFn(() => r.destroy()))
              : ((r = i.create(t.injector || this._defaultInjector || ze.NULL)),
                this._appRef.attachView(r.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(r.hostView),
                    r.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(r)),
            (this._attachedPortal = t),
            r
          );
        }
        attachTemplatePortal(t) {
          let e = t.viewContainerRef,
            i = e.createEmbeddedView(t.templateRef, t.context, {
              injector: t.injector,
            });
          return (
            i.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
            i.detectChanges(),
            this.setDisposeFn(() => {
              let r = e.indexOf(i);
              -1 !== r && e.remove(r);
            }),
            (this._attachedPortal = t),
            i
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let wl = (() => {
          class n extends wd {
            constructor(e, i, r) {
              super(),
                (this._componentFactoryResolver = e),
                (this._viewContainerRef = i),
                (this._isInitialized = !1),
                (this.attached = new se()),
                (this.attachDomPortal = (o) => {
                  const s = o.element,
                    a = this._document.createComment("dom-portal");
                  o.setAttachedHost(this),
                    s.parentNode.insertBefore(a, s),
                    this._getRootNode().appendChild(s),
                    (this._attachedPortal = o),
                    super.setDisposeFn(() => {
                      a.parentNode && a.parentNode.replaceChild(s, a);
                    });
                }),
                (this._document = r);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(e) {
              (this.hasAttached() && !e && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                e && super.attach(e),
                (this._attachedPortal = e || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedPortal = null),
                (this._attachedRef = null);
            }
            attachComponentPortal(e) {
              e.setAttachedHost(this);
              const i =
                  null != e.viewContainerRef
                    ? e.viewContainerRef
                    : this._viewContainerRef,
                o = (
                  e.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(e.component),
                s = i.createComponent(o, i.length, e.injector || i.injector);
              return (
                i !== this._viewContainerRef &&
                  this._getRootNode().appendChild(s.hostView.rootNodes[0]),
                super.setDisposeFn(() => s.destroy()),
                (this._attachedPortal = e),
                (this._attachedRef = s),
                this.attached.emit(s),
                s
              );
            }
            attachTemplatePortal(e) {
              e.setAttachedHost(this);
              const i = this._viewContainerRef.createEmbeddedView(
                e.templateRef,
                e.context,
                { injector: e.injector }
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = e),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            _getRootNode() {
              const e = this._viewContainerRef.element.nativeElement;
              return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(Wr), h(Rt), h(ee));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [["", "cdkPortalOutlet", ""]],
              inputs: { portal: ["cdkPortalOutlet", "portal"] },
              outputs: { attached: "attached" },
              exportAs: ["cdkPortalOutlet"],
              features: [B],
            })),
            n
          );
        })(),
        Dl = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({})),
            n
          );
        })();
      const gT = DS();
      class zz {
        constructor(t, e) {
          (this._viewportRuler = t),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const t = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = t.style.left || ""),
              (this._previousHTMLStyles.top = t.style.top || ""),
              (t.style.left = ht(-this._previousScrollPosition.left)),
              (t.style.top = ht(-this._previousScrollPosition.top)),
              t.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const t = this._document.documentElement,
              i = t.style,
              r = this._document.body.style,
              o = i.scrollBehavior || "",
              s = r.scrollBehavior || "";
            (this._isEnabled = !1),
              (i.left = this._previousHTMLStyles.left),
              (i.top = this._previousHTMLStyles.top),
              t.classList.remove("cdk-global-scrollblock"),
              gT && (i.scrollBehavior = r.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              gT && ((i.scrollBehavior = o), (r.scrollBehavior = s));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            i = this._viewportRuler.getViewportSize();
          return e.scrollHeight > i.height || e.scrollWidth > i.width;
        }
      }
      class qz {
        constructor(t, e, i, r) {
          (this._scrollDispatcher = t),
            (this._ngZone = e),
            (this._viewportRuler = i),
            (this._config = r),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          if (this._scrollSubscription) return;
          const t = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = t.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = t.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class _T {
        enable() {}
        disable() {}
        attach() {}
      }
      function zg(n, t) {
        return t.some(
          (e) =>
            n.bottom < e.top ||
            n.top > e.bottom ||
            n.right < e.left ||
            n.left > e.right
        );
      }
      function vT(n, t) {
        return t.some(
          (e) =>
            n.top < e.top ||
            n.bottom > e.bottom ||
            n.left < e.left ||
            n.right > e.right
        );
      }
      class Gz {
        constructor(t, e, i, r) {
          (this._scrollDispatcher = t),
            (this._viewportRuler = e),
            (this._ngZone = i),
            (this._config = r),
            (this._scrollSubscription = null);
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: i, height: r } =
                      this._viewportRuler.getViewportSize();
                  zg(e, [
                    {
                      width: i,
                      height: r,
                      bottom: r,
                      right: i,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let Wz = (() => {
        class n {
          constructor(e, i, r, o) {
            (this._scrollDispatcher = e),
              (this._viewportRuler = i),
              (this._ngZone = r),
              (this.noop = () => new _T()),
              (this.close = (s) =>
                new qz(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  s
                )),
              (this.block = () => new zz(this._viewportRuler, this._document)),
              (this.reposition = (s) =>
                new Gz(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  s
                )),
              (this._document = o);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(bl), b(bd), b(G), b(ee));
          }),
          (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      class Dd {
        constructor(t) {
          if (
            ((this.scrollStrategy = new _T()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            t)
          ) {
            const e = Object.keys(t);
            for (const i of e) void 0 !== t[i] && (this[i] = t[i]);
          }
        }
      }
      class Yz {
        constructor(t, e) {
          (this.connectionPair = t), (this.scrollableViewProperties = e);
        }
      }
      let yT = (() => {
          class n {
            constructor(e) {
              (this._attachedOverlays = []), (this._document = e);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(e) {
              this.remove(e), this._attachedOverlays.push(e);
            }
            remove(e) {
              const i = this._attachedOverlays.indexOf(e);
              i > -1 && this._attachedOverlays.splice(i, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ee));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Kz = (() => {
          class n extends yT {
            constructor(e, i) {
              super(e),
                (this._ngZone = i),
                (this._keydownListener = (r) => {
                  const o = this._attachedOverlays;
                  for (let s = o.length - 1; s > -1; s--)
                    if (o[s]._keydownEvents.observers.length > 0) {
                      const a = o[s]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => a.next(r))
                        : a.next(r);
                      break;
                    }
                });
            }
            add(e) {
              super.add(e),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          "keydown",
                          this._keydownListener
                        )
                      )
                    : this._document.body.addEventListener(
                        "keydown",
                        this._keydownListener
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  "keydown",
                  this._keydownListener
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ee), b(G, 8));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Zz = (() => {
          class n extends yT {
            constructor(e, i, r) {
              super(e),
                (this._platform = i),
                (this._ngZone = r),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = (o) => {
                  this._pointerDownEventTarget = _o(o);
                }),
                (this._clickListener = (o) => {
                  const s = _o(o),
                    a =
                      "click" === o.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : s;
                  this._pointerDownEventTarget = null;
                  const l = this._attachedOverlays.slice();
                  for (let c = l.length - 1; c > -1; c--) {
                    const u = l[c];
                    if (
                      u._outsidePointerEvents.observers.length < 1 ||
                      !u.hasAttached()
                    )
                      continue;
                    if (
                      u.overlayElement.contains(s) ||
                      u.overlayElement.contains(a)
                    )
                      break;
                    const d = u._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => d.next(o))
                      : d.next(o);
                  }
                });
            }
            add(e) {
              if ((super.add(e), !this._isAttached)) {
                const i = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(i)
                    )
                  : this._addEventListeners(i),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = i.style.cursor),
                    (i.style.cursor = "pointer"),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const e = this._document.body;
                e.removeEventListener(
                  "pointerdown",
                  this._pointerDownListener,
                  !0
                ),
                  e.removeEventListener("click", this._clickListener, !0),
                  e.removeEventListener("auxclick", this._clickListener, !0),
                  e.removeEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((e.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(e) {
              e.addEventListener("pointerdown", this._pointerDownListener, !0),
                e.addEventListener("click", this._clickListener, !0),
                e.addEventListener("auxclick", this._clickListener, !0),
                e.addEventListener("contextmenu", this._clickListener, !0);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ee), b(yt), b(G, 8));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Md = (() => {
          class n {
            constructor(e, i) {
              (this._platform = i), (this._document = e);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const e = "cdk-overlay-container";
              if (this._platform.isBrowser || Eg()) {
                const r = this._document.querySelectorAll(
                  `.${e}[platform="server"], .${e}[platform="test"]`
                );
                for (let o = 0; o < r.length; o++) r[o].remove();
              }
              const i = this._document.createElement("div");
              i.classList.add(e),
                Eg()
                  ? i.setAttribute("platform", "test")
                  : this._platform.isBrowser ||
                    i.setAttribute("platform", "server"),
                this._document.body.appendChild(i),
                (this._containerElement = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ee), b(yt));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      class Ml {
        constructor(t, e, i, r, o, s, a, l, c, u = !1) {
          (this._portalOutlet = t),
            (this._host = e),
            (this._pane = i),
            (this._config = r),
            (this._ngZone = o),
            (this._keyboardDispatcher = s),
            (this._document = a),
            (this._location = l),
            (this._outsideClickDispatcher = c),
            (this._animationsDisabled = u),
            (this._backdropElement = null),
            (this._backdropClick = new V()),
            (this._attachments = new V()),
            (this._detachments = new V()),
            (this._locationChanges = tt.EMPTY),
            (this._backdropClickHandler = (d) => this._backdropClick.next(d)),
            (this._backdropTransitionendHandler = (d) => {
              this._disposeBackdrop(d.target);
            }),
            (this._keydownEvents = new V()),
            (this._outsidePointerEvents = new V()),
            r.scrollStrategy &&
              ((this._scrollStrategy = r.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = r.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(t) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const e = this._portalOutlet.attach(t);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(vt(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const t = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            t
          );
        }
        dispose() {
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(t) {
          t !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = t),
            this.hasAttached() && (t.attach(this), this.updatePosition()));
        }
        updateSize(t) {
          (this._config = { ...this._config, ...t }), this._updateElementSize();
        }
        setDirection(t) {
          (this._config = { ...this._config, direction: t }),
            this._updateElementDirection();
        }
        addPanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !0);
        }
        removePanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !1);
        }
        getDirection() {
          const t = this._config.direction;
          return t ? ("string" == typeof t ? t : t.value) : "ltr";
        }
        updateScrollStrategy(t) {
          t !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = t),
            this.hasAttached() && (t.attach(this), t.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const t = this._pane.style;
          (t.width = ht(this._config.width)),
            (t.height = ht(this._config.height)),
            (t.minWidth = ht(this._config.minWidth)),
            (t.minHeight = ht(this._config.minHeight)),
            (t.maxWidth = ht(this._config.maxWidth)),
            (t.maxHeight = ht(this._config.maxHeight));
        }
        _togglePointerEvents(t) {
          this._pane.style.pointerEvents = t ? "" : "none";
        }
        _attachBackdrop() {
          const t = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                "cdk-overlay-backdrop-noop-animation"
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < "u"
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(t);
                  });
                })
              : this._backdropElement.classList.add(t);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const t = this._backdropElement;
          if (t) {
            if (this._animationsDisabled) return void this._disposeBackdrop(t);
            t.classList.remove("cdk-overlay-backdrop-showing"),
              this._ngZone.runOutsideAngular(() => {
                t.addEventListener(
                  "transitionend",
                  this._backdropTransitionendHandler
                );
              }),
              (t.style.pointerEvents = "none"),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(t);
                }, 500)
              ));
          }
        }
        _toggleClasses(t, e, i) {
          const r = ld(e || []).filter((o) => !!o);
          r.length && (i ? t.classList.add(...r) : t.classList.remove(...r));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const t = this._ngZone.onStable
              .pipe(ce(hr(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  t.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const t = this._scrollStrategy;
          t && (t.disable(), t.detach && t.detach());
        }
        _disposeBackdrop(t) {
          t &&
            (t.removeEventListener("click", this._backdropClickHandler),
            t.removeEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            ),
            t.remove(),
            this._backdropElement === t && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const bT = "cdk-overlay-connected-position-bounding-box",
        Qz = /([A-Za-z%]+)$/;
      class Xz {
        constructor(t, e, i, r, o) {
          (this._viewportRuler = e),
            (this._document = i),
            (this._platform = r),
            (this._overlayContainer = o),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new V()),
            (this._resizeSubscription = tt.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(t);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          this._validatePositions(),
            t.hostElement.classList.add(bT),
            (this._overlayRef = t),
            (this._boundingBox = t.hostElement),
            (this._pane = t.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const t = this._originRect,
            e = this._overlayRect,
            i = this._viewportRect,
            r = this._containerRect,
            o = [];
          let s;
          for (let a of this._preferredPositions) {
            let l = this._getOriginPoint(t, r, a),
              c = this._getOverlayPoint(l, e, a),
              u = this._getOverlayFit(c, e, i, a);
            if (u.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(a, l);
            this._canFitWithFlexibleDimensions(u, c, i)
              ? o.push({
                  position: a,
                  origin: l,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(l, a),
                })
              : (!s || s.overlayFit.visibleArea < u.visibleArea) &&
                (s = {
                  overlayFit: u,
                  overlayPoint: c,
                  originPoint: l,
                  position: a,
                  overlayRect: e,
                });
          }
          if (o.length) {
            let a = null,
              l = -1;
            for (const c of o) {
              const u =
                c.boundingBoxRect.width *
                c.boundingBoxRect.height *
                (c.position.weight || 1);
              u > l && ((l = u), (a = c));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(a.position, a.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(s.position, s.originPoint)
            );
          this._applyPosition(s.position, s.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              Do(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(bT),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const t = this._lastPosition;
          if (t) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const e = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              t
            );
            this._applyPosition(t, e);
          } else this.apply();
        }
        withScrollableContainers(t) {
          return (this._scrollables = t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t),
            -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(t) {
          return (this._viewportMargin = t), this;
        }
        withFlexibleDimensions(t = !0) {
          return (this._hasFlexibleDimensions = t), this;
        }
        withGrowAfterOpen(t = !0) {
          return (this._growAfterOpen = t), this;
        }
        withPush(t = !0) {
          return (this._canPush = t), this;
        }
        withLockedPosition(t = !0) {
          return (this._positionLocked = t), this;
        }
        setOrigin(t) {
          return (this._origin = t), this;
        }
        withDefaultOffsetX(t) {
          return (this._offsetX = t), this;
        }
        withDefaultOffsetY(t) {
          return (this._offsetY = t), this;
        }
        withTransformOriginOn(t) {
          return (this._transformOriginSelector = t), this;
        }
        _getOriginPoint(t, e, i) {
          let r, o;
          if ("center" == i.originX) r = t.left + t.width / 2;
          else {
            const s = this._isRtl() ? t.right : t.left,
              a = this._isRtl() ? t.left : t.right;
            r = "start" == i.originX ? s : a;
          }
          return (
            e.left < 0 && (r -= e.left),
            (o =
              "center" == i.originY
                ? t.top + t.height / 2
                : "top" == i.originY
                ? t.top
                : t.bottom),
            e.top < 0 && (o -= e.top),
            { x: r, y: o }
          );
        }
        _getOverlayPoint(t, e, i) {
          let r, o;
          return (
            (r =
              "center" == i.overlayX
                ? -e.width / 2
                : "start" === i.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (o =
              "center" == i.overlayY
                ? -e.height / 2
                : "top" == i.overlayY
                ? 0
                : -e.height),
            { x: t.x + r, y: t.y + o }
          );
        }
        _getOverlayFit(t, e, i, r) {
          const o = wT(e);
          let { x: s, y: a } = t,
            l = this._getOffset(r, "x"),
            c = this._getOffset(r, "y");
          l && (s += l), c && (a += c);
          let f = 0 - a,
            p = a + o.height - i.height,
            _ = this._subtractOverflows(o.width, 0 - s, s + o.width - i.width),
            y = this._subtractOverflows(o.height, f, p),
            w = _ * y;
          return {
            visibleArea: w,
            isCompletelyWithinViewport: o.width * o.height === w,
            fitsInViewportVertically: y === o.height,
            fitsInViewportHorizontally: _ == o.width,
          };
        }
        _canFitWithFlexibleDimensions(t, e, i) {
          if (this._hasFlexibleDimensions) {
            const r = i.bottom - e.y,
              o = i.right - e.x,
              s = CT(this._overlayRef.getConfig().minHeight),
              a = CT(this._overlayRef.getConfig().minWidth),
              c = t.fitsInViewportHorizontally || (null != a && a <= o);
            return (t.fitsInViewportVertically || (null != s && s <= r)) && c;
          }
          return !1;
        }
        _pushOverlayOnScreen(t, e, i) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: t.x + this._previousPushAmount.x,
              y: t.y + this._previousPushAmount.y,
            };
          const r = wT(e),
            o = this._viewportRect,
            s = Math.max(t.x + r.width - o.width, 0),
            a = Math.max(t.y + r.height - o.height, 0),
            l = Math.max(o.top - i.top - t.y, 0),
            c = Math.max(o.left - i.left - t.x, 0);
          let u = 0,
            d = 0;
          return (
            (u =
              r.width <= o.width
                ? c || -s
                : t.x < this._viewportMargin
                ? o.left - i.left - t.x
                : 0),
            (d =
              r.height <= o.height
                ? l || -a
                : t.y < this._viewportMargin
                ? o.top - i.top - t.y
                : 0),
            (this._previousPushAmount = { x: u, y: d }),
            { x: t.x + u, y: t.y + d }
          );
        }
        _applyPosition(t, e) {
          if (
            (this._setTransformOrigin(t),
            this._setOverlayElementStyles(e, t),
            this._setBoundingBoxStyles(e, t),
            t.panelClass && this._addPanelClasses(t.panelClass),
            (this._lastPosition = t),
            this._positionChanges.observers.length)
          ) {
            const i = this._getScrollVisibility(),
              r = new Yz(t, i);
            this._positionChanges.next(r);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(t) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let i,
            r = t.overlayY;
          i =
            "center" === t.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === t.overlayX
                ? "right"
                : "left"
              : "start" === t.overlayX
              ? "left"
              : "right";
          for (let o = 0; o < e.length; o++)
            e[o].style.transformOrigin = `${i} ${r}`;
        }
        _calculateBoundingBoxRect(t, e) {
          const i = this._viewportRect,
            r = this._isRtl();
          let o, s, a, u, d, f;
          if ("top" === e.overlayY)
            (s = t.y), (o = i.height - s + this._viewportMargin);
          else if ("bottom" === e.overlayY)
            (a = i.height - t.y + 2 * this._viewportMargin),
              (o = i.height - a + this._viewportMargin);
          else {
            const p = Math.min(i.bottom - t.y + i.top, t.y),
              _ = this._lastBoundingBoxSize.height;
            (o = 2 * p),
              (s = t.y - p),
              o > _ &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (s = t.y - _ / 2);
          }
          if (("end" === e.overlayX && !r) || ("start" === e.overlayX && r))
            (f = i.width - t.x + this._viewportMargin),
              (u = t.x - this._viewportMargin);
          else if (
            ("start" === e.overlayX && !r) ||
            ("end" === e.overlayX && r)
          )
            (d = t.x), (u = i.right - t.x);
          else {
            const p = Math.min(i.right - t.x + i.left, t.x),
              _ = this._lastBoundingBoxSize.width;
            (u = 2 * p),
              (d = t.x - p),
              u > _ &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (d = t.x - _ / 2);
          }
          return { top: s, left: d, bottom: a, right: f, width: u, height: o };
        }
        _setBoundingBoxStyles(t, e) {
          const i = this._calculateBoundingBoxRect(t, e);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
            (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
          const r = {};
          if (this._hasExactPosition())
            (r.top = r.left = "0"),
              (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
              (r.width = r.height = "100%");
          else {
            const o = this._overlayRef.getConfig().maxHeight,
              s = this._overlayRef.getConfig().maxWidth;
            (r.height = ht(i.height)),
              (r.top = ht(i.top)),
              (r.bottom = ht(i.bottom)),
              (r.width = ht(i.width)),
              (r.left = ht(i.left)),
              (r.right = ht(i.right)),
              (r.alignItems =
                "center" === e.overlayX
                  ? "center"
                  : "end" === e.overlayX
                  ? "flex-end"
                  : "flex-start"),
              (r.justifyContent =
                "center" === e.overlayY
                  ? "center"
                  : "bottom" === e.overlayY
                  ? "flex-end"
                  : "flex-start"),
              o && (r.maxHeight = ht(o)),
              s && (r.maxWidth = ht(s));
          }
          (this._lastBoundingBoxSize = i), Do(this._boundingBox.style, r);
        }
        _resetBoundingBoxStyles() {
          Do(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          Do(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(t, e) {
          const i = {},
            r = this._hasExactPosition(),
            o = this._hasFlexibleDimensions,
            s = this._overlayRef.getConfig();
          if (r) {
            const u = this._viewportRuler.getViewportScrollPosition();
            Do(i, this._getExactOverlayY(e, t, u)),
              Do(i, this._getExactOverlayX(e, t, u));
          } else i.position = "static";
          let a = "",
            l = this._getOffset(e, "x"),
            c = this._getOffset(e, "y");
          l && (a += `translateX(${l}px) `),
            c && (a += `translateY(${c}px)`),
            (i.transform = a.trim()),
            s.maxHeight &&
              (r ? (i.maxHeight = ht(s.maxHeight)) : o && (i.maxHeight = "")),
            s.maxWidth &&
              (r ? (i.maxWidth = ht(s.maxWidth)) : o && (i.maxWidth = "")),
            Do(this._pane.style, i);
        }
        _getExactOverlayY(t, e, i) {
          let r = { top: "", bottom: "" },
            o = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (o = this._pushOverlayOnScreen(o, this._overlayRect, i)),
            "bottom" === t.overlayY
              ? (r.bottom =
                  this._document.documentElement.clientHeight -
                  (o.y + this._overlayRect.height) +
                  "px")
              : (r.top = ht(o.y)),
            r
          );
        }
        _getExactOverlayX(t, e, i) {
          let s,
            r = { left: "", right: "" },
            o = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (o = this._pushOverlayOnScreen(o, this._overlayRect, i)),
            (s = this._isRtl()
              ? "end" === t.overlayX
                ? "left"
                : "right"
              : "end" === t.overlayX
              ? "right"
              : "left"),
            "right" === s
              ? (r.right =
                  this._document.documentElement.clientWidth -
                  (o.x + this._overlayRect.width) +
                  "px")
              : (r.left = ht(o.x)),
            r
          );
        }
        _getScrollVisibility() {
          const t = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            i = this._scrollables.map((r) =>
              r.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: vT(t, i),
            isOriginOutsideView: zg(t, i),
            isOverlayClipped: vT(e, i),
            isOverlayOutsideView: zg(e, i),
          };
        }
        _subtractOverflows(t, ...e) {
          return e.reduce((i, r) => i - Math.max(r, 0), t);
        }
        _getNarrowedViewportRect() {
          const t = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            i = this._viewportRuler.getViewportScrollPosition();
          return {
            top: i.top + this._viewportMargin,
            left: i.left + this._viewportMargin,
            right: i.left + t - this._viewportMargin,
            bottom: i.top + e - this._viewportMargin,
            width: t - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(t, e) {
          return "x" === e
            ? t.offsetX ?? this._offsetX
            : t.offsetY ?? this._offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(t) {
          this._pane &&
            ld(t).forEach((e) => {
              "" !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((t) => {
              this._pane.classList.remove(t);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const t = this._origin;
          if (t instanceof ie) return t.nativeElement.getBoundingClientRect();
          if (t instanceof Element) return t.getBoundingClientRect();
          const e = t.width || 0,
            i = t.height || 0;
          return {
            top: t.y,
            bottom: t.y + i,
            left: t.x,
            right: t.x + e,
            height: i,
            width: e,
          };
        }
      }
      function Do(n, t) {
        for (let e in t) t.hasOwnProperty(e) && (n[e] = t[e]);
        return n;
      }
      function CT(n) {
        if ("number" != typeof n && null != n) {
          const [t, e] = n.split(Qz);
          return e && "px" !== e ? null : parseFloat(t);
        }
        return n || null;
      }
      function wT(n) {
        return {
          top: Math.floor(n.top),
          right: Math.floor(n.right),
          bottom: Math.floor(n.bottom),
          left: Math.floor(n.left),
          width: Math.floor(n.width),
          height: Math.floor(n.height),
        };
      }
      const DT = "cdk-global-overlay-wrapper";
      class Jz {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._alignItems = ""),
            (this._xPosition = ""),
            (this._xOffset = ""),
            (this._width = ""),
            (this._height = ""),
            (this._isDisposed = !1);
        }
        attach(t) {
          const e = t.getConfig();
          (this._overlayRef = t),
            this._width && !e.width && t.updateSize({ width: this._width }),
            this._height && !e.height && t.updateSize({ height: this._height }),
            t.hostElement.classList.add(DT),
            (this._isDisposed = !1);
        }
        top(t = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = t),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(t = "") {
          return (this._xOffset = t), (this._xPosition = "left"), this;
        }
        bottom(t = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = t),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(t = "") {
          return (this._xOffset = t), (this._xPosition = "right"), this;
        }
        start(t = "") {
          return (this._xOffset = t), (this._xPosition = "start"), this;
        }
        end(t = "") {
          return (this._xOffset = t), (this._xPosition = "end"), this;
        }
        width(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: t })
              : (this._width = t),
            this
          );
        }
        height(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: t })
              : (this._height = t),
            this
          );
        }
        centerHorizontally(t = "") {
          return this.left(t), (this._xPosition = "center"), this;
        }
        centerVertically(t = "") {
          return this.top(t), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            i = this._overlayRef.getConfig(),
            { width: r, height: o, maxWidth: s, maxHeight: a } = i,
            l = !(
              ("100%" !== r && "100vw" !== r) ||
              (s && "100%" !== s && "100vw" !== s)
            ),
            c = !(
              ("100%" !== o && "100vh" !== o) ||
              (a && "100%" !== a && "100vh" !== a)
            ),
            u = this._xPosition,
            d = this._xOffset,
            f = "rtl" === this._overlayRef.getConfig().direction;
          let p = "",
            _ = "",
            y = "";
          l
            ? (y = "flex-start")
            : "center" === u
            ? ((y = "center"), f ? (_ = d) : (p = d))
            : f
            ? "left" === u || "end" === u
              ? ((y = "flex-end"), (p = d))
              : ("right" === u || "start" === u) &&
                ((y = "flex-start"), (_ = d))
            : "left" === u || "start" === u
            ? ((y = "flex-start"), (p = d))
            : ("right" === u || "end" === u) && ((y = "flex-end"), (_ = d)),
            (t.position = this._cssPosition),
            (t.marginLeft = l ? "0" : p),
            (t.marginTop = c ? "0" : this._topOffset),
            (t.marginBottom = this._bottomOffset),
            (t.marginRight = l ? "0" : _),
            (e.justifyContent = y),
            (e.alignItems = c ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            i = e.style;
          e.classList.remove(DT),
            (i.justifyContent =
              i.alignItems =
              t.marginTop =
              t.marginBottom =
              t.marginLeft =
              t.marginRight =
              t.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let e4 = (() => {
          class n {
            constructor(e, i, r, o) {
              (this._viewportRuler = e),
                (this._document = i),
                (this._platform = r),
                (this._overlayContainer = o);
            }
            global() {
              return new Jz();
            }
            flexibleConnectedTo(e) {
              return new Xz(
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(bd), b(ee), b(yt), b(Md));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        t4 = 0,
        bn = (() => {
          class n {
            constructor(e, i, r, o, s, a, l, c, u, d, f, p) {
              (this.scrollStrategies = e),
                (this._overlayContainer = i),
                (this._componentFactoryResolver = r),
                (this._positionBuilder = o),
                (this._keyboardDispatcher = s),
                (this._injector = a),
                (this._ngZone = l),
                (this._document = c),
                (this._directionality = u),
                (this._location = d),
                (this._outsideClickDispatcher = f),
                (this._animationsModuleType = p);
            }
            create(e) {
              const i = this._createHostElement(),
                r = this._createPaneElement(i),
                o = this._createPortalOutlet(r),
                s = new Dd(e);
              return (
                (s.direction = s.direction || this._directionality.value),
                new Ml(
                  o,
                  i,
                  r,
                  s,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  "NoopAnimations" === this._animationsModuleType
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(e) {
              const i = this._document.createElement("div");
              return (
                (i.id = "cdk-overlay-" + t4++),
                i.classList.add("cdk-overlay-pane"),
                e.appendChild(i),
                i
              );
            }
            _createHostElement() {
              const e = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(e), e
              );
            }
            _createPortalOutlet(e) {
              return (
                this._appRef || (this._appRef = this._injector.get(ys)),
                new $z(
                  e,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                b(Wz),
                b(Md),
                b(Wr),
                b(e4),
                b(Kz),
                b(ze),
                b(G),
                b(ee),
                b(xi),
                b(Pa),
                b(Zz),
                b(pn, 8)
              );
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      const n4 = [
          {
            originX: "start",
            originY: "bottom",
            overlayX: "start",
            overlayY: "top",
          },
          {
            originX: "start",
            originY: "top",
            overlayX: "start",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "top",
            overlayX: "end",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "bottom",
            overlayX: "end",
            overlayY: "top",
          },
        ],
        MT = new x("cdk-connected-overlay-scroll-strategy");
      let ET = (() => {
          class n {
            constructor(e) {
              this.elementRef = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(ie));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["", "cdk-overlay-origin", ""],
                ["", "overlay-origin", ""],
                ["", "cdkOverlayOrigin", ""],
              ],
              exportAs: ["cdkOverlayOrigin"],
            })),
            n
          );
        })(),
        ST = (() => {
          class n {
            constructor(e, i, r, o, s) {
              (this._overlay = e),
                (this._dir = s),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = tt.EMPTY),
                (this._attachSubscription = tt.EMPTY),
                (this._detachSubscription = tt.EMPTY),
                (this._positionSubscription = tt.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new se()),
                (this.positionChange = new se()),
                (this.attach = new se()),
                (this.detach = new se()),
                (this.overlayKeydown = new se()),
                (this.overlayOutsideClick = new se()),
                (this._templatePortal = new Cd(i, r)),
                (this._scrollStrategyFactory = o),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(e) {
              (this._offsetX = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(e) {
              (this._offsetY = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(e) {
              this._hasBackdrop = be(e);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(e) {
              this._lockPosition = be(e);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(e) {
              this._flexibleDimensions = be(e);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(e) {
              this._growAfterOpen = be(e);
            }
            get push() {
              return this._push;
            }
            set push(e) {
              this._push = be(e);
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : "ltr";
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(e) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                e.origin && this.open && this._position.apply()),
                e.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = n4);
              const e = (this._overlayRef = this._overlay.create(
                this._buildConfig()
              ));
              (this._attachSubscription = e
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = e
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                e.keydownEvents().subscribe((i) => {
                  this.overlayKeydown.next(i),
                    27 === i.keyCode &&
                      !this.disableClose &&
                      !Xn(i) &&
                      (i.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe((i) => {
                  this.overlayOutsideClick.next(i);
                });
            }
            _buildConfig() {
              const e = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                i = new Dd({
                  direction: this._dir,
                  positionStrategy: e,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (i.width = this.width),
                (this.height || 0 === this.height) && (i.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (i.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (i.minHeight = this.minHeight),
                this.backdropClass && (i.backdropClass = this.backdropClass),
                this.panelClass && (i.panelClass = this.panelClass),
                i
              );
            }
            _updatePositionStrategy(e) {
              const i = this.positions.map((r) => ({
                originX: r.originX,
                originY: r.originY,
                overlayX: r.overlayX,
                overlayY: r.overlayY,
                offsetX: r.offsetX || this.offsetX,
                offsetY: r.offsetY || this.offsetY,
                panelClass: r.panelClass || void 0,
              }));
              return e
                .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())
                .withPositions(i)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const e = this._overlay
                .position()
                .flexibleConnectedTo(
                  this._getFlexibleConnectedPositionStrategyOrigin()
                );
              return this._updatePositionStrategy(e), e;
            }
            _getFlexibleConnectedPositionStrategyOrigin() {
              return this.origin instanceof ET
                ? this.origin.elementRef
                : this.origin;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe((e) => {
                        this.backdropClick.emit(e);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(iE(() => this.positionChange.observers.length > 0))
                    .subscribe((e) => {
                      this.positionChange.emit(e),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(bn), h(fn), h(Rt), h(MT), h(xi, 8));
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["", "cdk-connected-overlay", ""],
                ["", "connected-overlay", ""],
                ["", "cdkConnectedOverlay", ""],
              ],
              inputs: {
                origin: ["cdkConnectedOverlayOrigin", "origin"],
                positions: ["cdkConnectedOverlayPositions", "positions"],
                positionStrategy: [
                  "cdkConnectedOverlayPositionStrategy",
                  "positionStrategy",
                ],
                offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
                offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
                width: ["cdkConnectedOverlayWidth", "width"],
                height: ["cdkConnectedOverlayHeight", "height"],
                minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
                minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
                backdropClass: [
                  "cdkConnectedOverlayBackdropClass",
                  "backdropClass",
                ],
                panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
                viewportMargin: [
                  "cdkConnectedOverlayViewportMargin",
                  "viewportMargin",
                ],
                scrollStrategy: [
                  "cdkConnectedOverlayScrollStrategy",
                  "scrollStrategy",
                ],
                open: ["cdkConnectedOverlayOpen", "open"],
                disableClose: [
                  "cdkConnectedOverlayDisableClose",
                  "disableClose",
                ],
                transformOriginSelector: [
                  "cdkConnectedOverlayTransformOriginOn",
                  "transformOriginSelector",
                ],
                hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
                lockPosition: [
                  "cdkConnectedOverlayLockPosition",
                  "lockPosition",
                ],
                flexibleDimensions: [
                  "cdkConnectedOverlayFlexibleDimensions",
                  "flexibleDimensions",
                ],
                growAfterOpen: [
                  "cdkConnectedOverlayGrowAfterOpen",
                  "growAfterOpen",
                ],
                push: ["cdkConnectedOverlayPush", "push"],
              },
              outputs: {
                backdropClick: "backdropClick",
                positionChange: "positionChange",
                attach: "attach",
                detach: "detach",
                overlayKeydown: "overlayKeydown",
                overlayOutsideClick: "overlayOutsideClick",
              },
              exportAs: ["cdkConnectedOverlay"],
              features: [Mt],
            })),
            n
          );
        })();
      const r4 = {
        provide: MT,
        deps: [bn],
        useFactory: function i4(n) {
          return () => n.scrollStrategies.reposition();
        },
      };
      let Ps = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = Q({ type: n })),
          (n.ɵinj = Z({ providers: [bn, r4], imports: [gl, Dl, mT, mT] })),
          n
        );
      })();
      function o4(n, t) {}
      class Ed {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0),
            (this.closeOnDestroy = !0);
        }
      }
      let TT = (() => {
        class n extends wd {
          constructor(e, i, r, o, s, a, l, c) {
            super(),
              (this._elementRef = e),
              (this._focusTrapFactory = i),
              (this._config = o),
              (this._interactivityChecker = s),
              (this._ngZone = a),
              (this._overlayRef = l),
              (this._focusMonitor = c),
              (this._elementFocusedBeforeDialogWasOpened = null),
              (this._closeInteractionType = null),
              (this.attachDomPortal = (u) => {
                this._portalOutlet.hasAttached();
                const d = this._portalOutlet.attachDomPortal(u);
                return this._contentAttached(), d;
              }),
              (this._ariaLabelledBy = this._config.ariaLabelledBy || null),
              (this._document = r);
          }
          _contentAttached() {
            this._initializeFocusTrap(),
              this._handleBackdropClicks(),
              this._captureInitialFocus();
          }
          _captureInitialFocus() {
            this._trapFocus();
          }
          ngOnDestroy() {
            this._restoreFocus();
          }
          attachComponentPortal(e) {
            this._portalOutlet.hasAttached();
            const i = this._portalOutlet.attachComponentPortal(e);
            return this._contentAttached(), i;
          }
          attachTemplatePortal(e) {
            this._portalOutlet.hasAttached();
            const i = this._portalOutlet.attachTemplatePortal(e);
            return this._contentAttached(), i;
          }
          _recaptureFocus() {
            this._containsFocus() || this._trapFocus();
          }
          _forceFocus(e, i) {
            this._interactivityChecker.isFocusable(e) ||
              ((e.tabIndex = -1),
              this._ngZone.runOutsideAngular(() => {
                const r = () => {
                  e.removeEventListener("blur", r),
                    e.removeEventListener("mousedown", r),
                    e.removeAttribute("tabindex");
                };
                e.addEventListener("blur", r),
                  e.addEventListener("mousedown", r);
              })),
              e.focus(i);
          }
          _focusByCssSelector(e, i) {
            let r = this._elementRef.nativeElement.querySelector(e);
            r && this._forceFocus(r, i);
          }
          _trapFocus() {
            const e = this._elementRef.nativeElement;
            switch (this._config.autoFocus) {
              case !1:
              case "dialog":
                this._containsFocus() || e.focus();
                break;
              case !0:
              case "first-tabbable":
                this._focusTrap.focusInitialElementWhenReady().then((i) => {
                  i || this._focusDialogContainer();
                });
                break;
              case "first-heading":
                this._focusByCssSelector(
                  'h1, h2, h3, h4, h5, h6, [role="heading"]'
                );
                break;
              default:
                this._focusByCssSelector(this._config.autoFocus);
            }
          }
          _restoreFocus() {
            const e = this._config.restoreFocus;
            let i = null;
            if (
              ("string" == typeof e
                ? (i = this._document.querySelector(e))
                : "boolean" == typeof e
                ? (i = e ? this._elementFocusedBeforeDialogWasOpened : null)
                : e && (i = e),
              this._config.restoreFocus && i && "function" == typeof i.focus)
            ) {
              const r = Mg(),
                o = this._elementRef.nativeElement;
              (!r || r === this._document.body || r === o || o.contains(r)) &&
                (this._focusMonitor
                  ? (this._focusMonitor.focusVia(i, this._closeInteractionType),
                    (this._closeInteractionType = null))
                  : i.focus());
            }
            this._focusTrap && this._focusTrap.destroy();
          }
          _focusDialogContainer() {
            this._elementRef.nativeElement.focus &&
              this._elementRef.nativeElement.focus();
          }
          _containsFocus() {
            const e = this._elementRef.nativeElement,
              i = Mg();
            return e === i || e.contains(i);
          }
          _initializeFocusTrap() {
            (this._focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement
            )),
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = Mg());
          }
          _handleBackdropClicks() {
            this._overlayRef.backdropClick().subscribe(() => {
              this._config.disableClose && this._recaptureFocus();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              h(ie),
              h(hd),
              h(ee, 8),
              h(Ed),
              h(ml),
              h(G),
              h(Ml),
              h(Fr)
            );
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["cdk-dialog-container"]],
            viewQuery: function (e, i) {
              if ((1 & e && Et(wl, 7), 2 & e)) {
                let r;
                X((r = J())) && (i._portalOutlet = r.first);
              }
            },
            hostAttrs: ["tabindex", "-1", 1, "cdk-dialog-container"],
            hostVars: 6,
            hostBindings: function (e, i) {
              2 & e &&
                Ae("id", i._config.id || null)("role", i._config.role)(
                  "aria-modal",
                  i._config.ariaModal
                )(
                  "aria-labelledby",
                  i._config.ariaLabel ? null : i._ariaLabelledBy
                )("aria-label", i._config.ariaLabel)(
                  "aria-describedby",
                  i._config.ariaDescribedBy || null
                );
            },
            features: [B],
            decls: 1,
            vars: 0,
            consts: [["cdkPortalOutlet", ""]],
            template: function (e, i) {
              1 & e && N(0, o4, 0, 0, "ng-template", 0);
            },
            dependencies: [wl],
            styles: [
              ".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}",
            ],
            encapsulation: 2,
          })),
          n
        );
      })();
      class El {
        constructor(t, e) {
          (this.overlayRef = t),
            (this.config = e),
            (this.closed = new V()),
            (this.disableClose = e.disableClose),
            (this.backdropClick = t.backdropClick()),
            (this.keydownEvents = t.keydownEvents()),
            (this.outsidePointerEvents = t.outsidePointerEvents()),
            (this.id = e.id),
            this.keydownEvents.subscribe((i) => {
              27 === i.keyCode &&
                !this.disableClose &&
                !Xn(i) &&
                (i.preventDefault(),
                this.close(void 0, { focusOrigin: "keyboard" }));
            }),
            this.backdropClick.subscribe(() => {
              this.disableClose || this.close(void 0, { focusOrigin: "mouse" });
            });
        }
        close(t, e) {
          if (this.containerInstance) {
            const i = this.closed;
            (this.containerInstance._closeInteractionType =
              e?.focusOrigin || "program"),
              this.overlayRef.dispose(),
              i.next(t),
              i.complete(),
              (this.componentInstance = this.containerInstance = null);
          }
        }
        updatePosition() {
          return this.overlayRef.updatePosition(), this;
        }
        updateSize(t = "", e = "") {
          return this.overlayRef.updateSize({ width: t, height: e }), this;
        }
        addPanelClass(t) {
          return this.overlayRef.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this.overlayRef.removePanelClass(t), this;
        }
      }
      const xT = new x("DialogScrollStrategy"),
        s4 = new x("DialogData"),
        a4 = new x("DefaultDialogConfig"),
        c4 = {
          provide: xT,
          deps: [bn],
          useFactory: function l4(n) {
            return () => n.scrollStrategies.block();
          },
        };
      let u4 = 0,
        AT = (() => {
          class n {
            constructor(e, i, r, o, s, a) {
              (this._overlay = e),
                (this._injector = i),
                (this._defaultOptions = r),
                (this._parentDialog = o),
                (this._overlayContainer = s),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new V()),
                (this._afterOpenedAtThisLevel = new V()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = Qa(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(vn(void 0))
                )),
                (this._scrollStrategy = a);
            }
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            open(e, i) {
              ((i = { ...(this._defaultOptions || new Ed()), ...i }).id =
                i.id || "cdk-dialog-" + u4++),
                i.id && this.getDialogById(i.id);
              const o = this._getOverlayConfig(i),
                s = this._overlay.create(o),
                a = new El(s, i),
                l = this._attachContainer(s, a, i);
              return (
                (a.containerInstance = l),
                this._attachDialogContent(e, a, l, i),
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(a),
                a.closed.subscribe(() => this._removeOpenDialog(a, !0)),
                this.afterOpened.next(a),
                a
              );
            }
            closeAll() {
              qg(this.openDialogs, (e) => e.close());
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              qg(this._openDialogsAtThisLevel, (e) => {
                !1 === e.config.closeOnDestroy && this._removeOpenDialog(e, !1);
              }),
                qg(this._openDialogsAtThisLevel, (e) => e.close()),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                (this._openDialogsAtThisLevel = []);
            }
            _getOverlayConfig(e) {
              const i = new Dd({
                positionStrategy:
                  e.positionStrategy ||
                  this._overlay
                    .position()
                    .global()
                    .centerHorizontally()
                    .centerVertically(),
                scrollStrategy: e.scrollStrategy || this._scrollStrategy(),
                panelClass: e.panelClass,
                hasBackdrop: e.hasBackdrop,
                direction: e.direction,
                minWidth: e.minWidth,
                minHeight: e.minHeight,
                maxWidth: e.maxWidth,
                maxHeight: e.maxHeight,
                width: e.width,
                height: e.height,
                disposeOnNavigation: e.closeOnNavigation,
              });
              return e.backdropClass && (i.backdropClass = e.backdropClass), i;
            }
            _attachContainer(e, i, r) {
              const o = r.injector ?? r.viewContainerRef?.injector,
                s = [
                  { provide: Ed, useValue: r },
                  { provide: El, useValue: i },
                  { provide: Ml, useValue: e },
                ];
              let a;
              r.container
                ? "function" == typeof r.container
                  ? (a = r.container)
                  : ((a = r.container.type),
                    s.push(...r.container.providers(r)))
                : (a = TT);
              const l = new Fs(
                a,
                r.viewContainerRef,
                ze.create({ parent: o || this._injector, providers: s }),
                r.componentFactoryResolver
              );
              return e.attach(l).instance;
            }
            _attachDialogContent(e, i, r, o) {
              const s = this._createInjector(o, i, r);
              if (e instanceof fn) {
                let a = { $implicit: o.data, dialogRef: i };
                o.templateContext &&
                  (a = {
                    ...a,
                    ...("function" == typeof o.templateContext
                      ? o.templateContext()
                      : o.templateContext),
                  }),
                  r.attachTemplatePortal(new Cd(e, null, a, s));
              } else {
                const a = r.attachComponentPortal(
                  new Fs(e, o.viewContainerRef, s, o.componentFactoryResolver)
                );
                i.componentInstance = a.instance;
              }
            }
            _createInjector(e, i, r) {
              const o = e && e.viewContainerRef && e.viewContainerRef.injector,
                s = [
                  { provide: s4, useValue: e.data },
                  { provide: El, useValue: i },
                ];
              return (
                e.providers &&
                  ("function" == typeof e.providers
                    ? s.push(...e.providers(i, e, r))
                    : s.push(...e.providers)),
                e.direction &&
                  (!o || !o.get(xi, null, $.Optional)) &&
                  s.push({
                    provide: xi,
                    useValue: { value: e.direction, change: j() },
                  }),
                ze.create({ parent: o || this._injector, providers: s })
              );
            }
            _removeOpenDialog(e, i) {
              const r = this.openDialogs.indexOf(e);
              r > -1 &&
                (this.openDialogs.splice(r, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((o, s) => {
                    o
                      ? s.setAttribute("aria-hidden", o)
                      : s.removeAttribute("aria-hidden");
                  }),
                  this._ariaHiddenElements.clear(),
                  i && this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const e = this._overlayContainer.getContainerElement();
              if (e.parentElement) {
                const i = e.parentElement.children;
                for (let r = i.length - 1; r > -1; r--) {
                  const o = i[r];
                  o !== e &&
                    "SCRIPT" !== o.nodeName &&
                    "STYLE" !== o.nodeName &&
                    !o.hasAttribute("aria-live") &&
                    (this._ariaHiddenElements.set(
                      o,
                      o.getAttribute("aria-hidden")
                    ),
                    o.setAttribute("aria-hidden", "true"));
                }
              }
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                b(bn),
                b(ze),
                b(a4, 8),
                b(n, 12),
                b(Md),
                b(xT)
              );
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      function qg(n, t) {
        let e = n.length;
        for (; e--; ) t(n[e]);
      }
      let d4 = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = Q({ type: n })),
          (n.ɵinj = Z({ providers: [AT, c4], imports: [Ps, Dl, qS, Dl] })),
          n
        );
      })();
      function h4(n, t) {}
      const Ns = {
          params: {
            enterAnimationDuration: "150ms",
            exitAnimationDuration: "75ms",
          },
        },
        f4 = {
          dialogContainer: Zi("dialogContainer", [
            Xt("void, exit", Ne({ opacity: 0, transform: "scale(0.7)" })),
            Xt("enter", Ne({ transform: "none" })),
            Ut(
              "* => enter",
              nD([
                Qt(
                  "{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)",
                  Ne({ transform: "none", opacity: 1 })
                ),
                Zp("@*", Kp(), { optional: !0 }),
              ]),
              Ns
            ),
            Ut(
              "* => void, * => exit",
              nD([
                Qt(
                  "{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)",
                  Ne({ opacity: 0 })
                ),
                Zp("@*", Kp(), { optional: !0 }),
              ]),
              Ns
            ),
          ]),
        };
      class Sd {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.maxWidth = "80vw"),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.delayFocusTrap = !0),
            (this.closeOnNavigation = !0),
            (this.enterAnimationDuration = Ns.params.enterAnimationDuration),
            (this.exitAnimationDuration = Ns.params.exitAnimationDuration);
        }
      }
      let p4 = (() => {
          class n extends TT {
            constructor(e, i, r, o, s, a, l, c) {
              super(e, i, r, o, s, a, l, c),
                (this._animationStateChanged = new se());
            }
            _captureInitialFocus() {
              this._config.delayFocusTrap || this._trapFocus();
            }
            _openAnimationDone(e) {
              this._config.delayFocusTrap && this._trapFocus(),
                this._animationStateChanged.next({
                  state: "opened",
                  totalTime: e,
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                h(ie),
                h(hd),
                h(ee, 8),
                h(Sd),
                h(ml),
                h(G),
                h(Ml),
                h(Fr)
              );
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["ng-component"]],
              features: [B],
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              encapsulation: 2,
            })),
            n
          );
        })(),
        m4 = (() => {
          class n extends p4 {
            constructor(e, i, r, o, s, a, l, c, u) {
              super(e, i, r, o, s, a, l, u),
                (this._changeDetectorRef = c),
                (this._state = "enter");
            }
            _onAnimationDone({ toState: e, totalTime: i }) {
              "enter" === e
                ? this._openAnimationDone(i)
                : "exit" === e &&
                  this._animationStateChanged.next({
                    state: "closed",
                    totalTime: i,
                  });
            }
            _onAnimationStart({ toState: e, totalTime: i }) {
              "enter" === e
                ? this._animationStateChanged.next({
                    state: "opening",
                    totalTime: i,
                  })
                : ("exit" === e || "void" === e) &&
                  this._animationStateChanged.next({
                    state: "closing",
                    totalTime: i,
                  });
            }
            _startExitAnimation() {
              (this._state = "exit"), this._changeDetectorRef.markForCheck();
            }
            _getAnimationState() {
              return {
                value: this._state,
                params: {
                  enterAnimationDuration:
                    this._config.enterAnimationDuration ||
                    Ns.params.enterAnimationDuration,
                  exitAnimationDuration:
                    this._config.exitAnimationDuration ||
                    Ns.params.exitAnimationDuration,
                },
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                h(ie),
                h(hd),
                h(ee, 8),
                h(Sd),
                h(ml),
                h(G),
                h(Ml),
                h(st),
                h(Fr)
              );
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-dialog-container"]],
              hostAttrs: ["tabindex", "-1", 1, "mat-dialog-container"],
              hostVars: 7,
              hostBindings: function (e, i) {
                1 & e &&
                  Da("@dialogContainer.start", function (o) {
                    return i._onAnimationStart(o);
                  })("@dialogContainer.done", function (o) {
                    return i._onAnimationDone(o);
                  }),
                  2 & e &&
                    (Ea("id", i._config.id),
                    Ae("aria-modal", i._config.ariaModal)(
                      "role",
                      i._config.role
                    )(
                      "aria-labelledby",
                      i._config.ariaLabel ? null : i._ariaLabelledBy
                    )("aria-label", i._config.ariaLabel)(
                      "aria-describedby",
                      i._config.ariaDescribedBy || null
                    ),
                    Sa("@dialogContainer", i._getAnimationState()));
              },
              features: [B],
              decls: 1,
              vars: 0,
              consts: [["cdkPortalOutlet", ""]],
              template: function (e, i) {
                1 & e && N(0, h4, 0, 0, "ng-template", 0);
              },
              dependencies: [wl],
              styles: [
                ".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions.mat-dialog-actions-align-center,.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions.mat-dialog-actions-align-end,.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}",
              ],
              encapsulation: 2,
              data: { animation: [f4.dialogContainer] },
            })),
            n
          );
        })();
      class Gg {
        constructor(t, e, i) {
          (this._ref = t),
            (this._containerInstance = i),
            (this._afterOpened = new V()),
            (this._beforeClosed = new V()),
            (this._state = 0),
            (this.disableClose = e.disableClose),
            (this.id = t.id),
            i._animationStateChanged
              .pipe(
                qe((r) => "opened" === r.state),
                vt(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            i._animationStateChanged
              .pipe(
                qe((r) => "closed" === r.state),
                vt(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            t.overlayRef.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._finishDialogClose();
            }),
            hr(
              this.backdropClick(),
              this.keydownEvents().pipe(
                qe((r) => 27 === r.keyCode && !this.disableClose && !Xn(r))
              )
            ).subscribe((r) => {
              this.disableClose ||
                (r.preventDefault(),
                (function g4(n, t, e) {
                  (n._closeInteractionType = t), n.close(e);
                })(this, "keydown" === r.type ? "keyboard" : "mouse"));
            });
        }
        close(t) {
          (this._result = t),
            this._containerInstance._animationStateChanged
              .pipe(
                qe((e) => "closing" === e.state),
                vt(1)
              )
              .subscribe((e) => {
                this._beforeClosed.next(t),
                  this._beforeClosed.complete(),
                  this._ref.overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    e.totalTime + 100
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._ref.closed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._ref.backdropClick;
        }
        keydownEvents() {
          return this._ref.keydownEvents;
        }
        updatePosition(t) {
          let e = this._ref.config.positionStrategy;
          return (
            t && (t.left || t.right)
              ? t.left
                ? e.left(t.left)
                : e.right(t.right)
              : e.centerHorizontally(),
            t && (t.top || t.bottom)
              ? t.top
                ? e.top(t.top)
                : e.bottom(t.bottom)
              : e.centerVertically(),
            this._ref.updatePosition(),
            this
          );
        }
        updateSize(t = "", e = "") {
          return this._ref.updateSize(t, e), this;
        }
        addPanelClass(t) {
          return this._ref.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this._ref.removePanelClass(t), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2),
            this._ref.close(this._result, {
              focusOrigin: this._closeInteractionType,
            }),
            (this.componentInstance = null);
        }
      }
      const Sl = new x("MatDialogData"),
        _4 = new x("mat-dialog-default-options"),
        IT = new x("mat-dialog-scroll-strategy"),
        y4 = {
          provide: IT,
          deps: [bn],
          useFactory: function v4(n) {
            return () => n.scrollStrategies.block();
          },
        };
      let b4 = 0,
        C4 = (() => {
          class n {
            constructor(e, i, r, o, s, a, l, c, u, d) {
              (this._overlay = e),
                (this._defaultOptions = r),
                (this._parentDialog = o),
                (this._dialogRefConstructor = l),
                (this._dialogContainerType = c),
                (this._dialogDataToken = u),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new V()),
                (this._afterOpenedAtThisLevel = new V()),
                (this._idPrefix = "mat-dialog-"),
                (this.afterAllClosed = Qa(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(vn(void 0))
                )),
                (this._scrollStrategy = a),
                (this._dialog = i.get(AT));
            }
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            open(e, i) {
              let r;
              ((i = { ...(this._defaultOptions || new Sd()), ...i }).id =
                i.id || `${this._idPrefix}${b4++}`),
                (i.scrollStrategy = i.scrollStrategy || this._scrollStrategy());
              const o = this._dialog.open(e, {
                ...i,
                positionStrategy: this._overlay
                  .position()
                  .global()
                  .centerHorizontally()
                  .centerVertically(),
                disableClose: !0,
                closeOnDestroy: !1,
                container: {
                  type: this._dialogContainerType,
                  providers: () => [
                    { provide: Sd, useValue: i },
                    { provide: Ed, useValue: i },
                  ],
                },
                templateContext: () => ({ dialogRef: r }),
                providers: (s, a, l) => (
                  (r = new this._dialogRefConstructor(s, i, l)),
                  r.updatePosition(i?.position),
                  [
                    { provide: this._dialogContainerType, useValue: l },
                    { provide: this._dialogDataToken, useValue: a.data },
                    { provide: this._dialogRefConstructor, useValue: r },
                  ]
                ),
              });
              return (
                (r.componentInstance = o.componentInstance),
                this.openDialogs.push(r),
                this.afterOpened.next(r),
                r.afterClosed().subscribe(() => {
                  const s = this.openDialogs.indexOf(r);
                  s > -1 &&
                    (this.openDialogs.splice(s, 1),
                    this.openDialogs.length ||
                      this._getAfterAllClosed().next());
                }),
                r
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _closeDialogs(e) {
              let i = e.length;
              for (; i--; ) e[i].close();
            }
          }
          return (
            (n.ɵfac = function (e) {
              Zr();
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Pr = (() => {
          class n extends C4 {
            constructor(e, i, r, o, s, a, l, c) {
              super(e, i, o, a, l, s, Gg, m4, Sl, c);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                b(bn),
                b(ze),
                b(Pa, 8),
                b(_4, 8),
                b(IT),
                b(n, 12),
                b(Md),
                b(pn, 8)
              );
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        w4 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({
              providers: [Pr, y4],
              imports: [d4, Ps, Dl, fe, fe],
            })),
            n
          );
        })();
      function D4(n, t) {
        if ((1 & n && (g(0, "li", 1)(1, "span", 2), v(2), m()()), 2 & n)) {
          const e = t.$implicit;
          Yt("routerLink", "/equipes/dados/", e.id_equipe, ""),
            C(2),
            Ge(" ", e.nome_equipe, "");
        }
      }
      let M4 = (() => {
          class n {
            constructor(e, i, r) {
              (this.equipeService = e),
                (this.dialog = i),
                (this.authService = r),
                (this.equipes = []);
            }
            mostraEquipes() {
              this.equipeService.read().subscribe((e) => {
                this.equipes = e;
              });
            }
            ngOnInit() {
              this.mostraEquipes();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(lr), h(Pr), h(ul));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-read-equipe"]],
              decls: 2,
              vars: 1,
              consts: [
                [3, "routerLink", 4, "ngFor", "ngForOf"],
                [3, "routerLink"],
                [1, "nome"],
              ],
              template: function (e, i) {
                1 & e && (g(0, "ul"), N(1, D4, 3, 2, "li", 0), m()),
                  2 & e && (C(1), M("ngForOf", i.equipes));
              },
              dependencies: [Ti, Zt],
              styles: [
                "ul[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}li[_ngcontent-%COMP%]{background-color:#232b67;border:1px solid #000000;border-radius:10px;display:flex;flex-direction:column;justify-content:space-around;line-height:2rem;list-style:none;margin:10px;min-width:25rem;padding:30px;width:30%;box-sizing:content-box}li[_ngcontent-%COMP%]:hover{cursor:pointer}li[_ngcontent-%COMP%]   span.nome[_ngcontent-%COMP%]{color:#fff;font-size:1.5rem;font-weight:500;margin:2px}",
              ],
            })),
            n
          );
        })(),
        E4 = (() => {
          class n {
            constructor(e) {
              this.router = e;
            }
            ngOnInit() {}
            goToCreateEquipe() {
              this.router.navigate(["equipes/create"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(we));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-equipe"]],
              decls: 5,
              vars: 0,
              consts: [
                [1, "title-view"],
                ["mat-raised-button", "", 1, "add", 3, "click"],
                [
                  "src",
                  "../../../assets/images/add_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                  1,
                  "adicionar",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "h1", 0),
                  v(1, "Equipes"),
                  m(),
                  ge(2, "app-read-equipe"),
                  g(3, "button", 1),
                  I("click", function () {
                    return i.goToCreateEquipe();
                  }),
                  ge(4, "img", 2),
                  m());
              },
              dependencies: [Tt, M4],
            })),
            n
          );
        })();
      function S4(n, t) {
        if (1 & n) {
          const e = zi();
          g(0, "div", 2)(1, "button", 3),
            I("click", function () {
              return ii(e), ri(Ie().action());
            }),
            v(2),
            m()();
        }
        if (2 & n) {
          const e = Ie();
          C(2), Je(e.data.action);
        }
      }
      function T4(n, t) {}
      const kT = new x("MatSnackBarData");
      class Td {
        constructor() {
          (this.politeness = "assertive"),
            (this.announcementMessage = ""),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = "center"),
            (this.verticalPosition = "bottom");
        }
      }
      const x4 = Math.pow(2, 31) - 1;
      class Wg {
        constructor(t, e) {
          (this._overlayRef = e),
            (this._afterDismissed = new V()),
            (this._afterOpened = new V()),
            (this._onAction = new V()),
            (this._dismissedByAction = !1),
            (this.containerInstance = t),
            t._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(),
            clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed ||
            ((this._dismissedByAction = !0),
            this._onAction.next(),
            this._onAction.complete(),
            this.dismiss()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(t) {
          this._durationTimeoutId = setTimeout(
            () => this.dismiss(),
            Math.min(t, x4)
          );
        }
        _open() {
          this._afterOpened.closed ||
            (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({
              dismissedByAction: this._dismissedByAction,
            }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      let A4 = (() => {
        class n {
          constructor(e, i) {
            (this.snackBarRef = e), (this.data = i);
          }
          action() {
            this.snackBarRef.dismissWithAction();
          }
          get hasAction() {
            return !!this.data.action;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(Wg), h(kT));
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["simple-snack-bar"]],
            hostAttrs: [1, "mat-simple-snackbar"],
            decls: 3,
            vars: 2,
            consts: [
              [1, "mat-simple-snack-bar-content"],
              ["class", "mat-simple-snackbar-action", 4, "ngIf"],
              [1, "mat-simple-snackbar-action"],
              ["mat-button", "", 3, "click"],
            ],
            template: function (e, i) {
              1 & e && (g(0, "span", 0), v(1), m(), N(2, S4, 3, 1, "div", 1)),
                2 & e &&
                  (C(1), Je(i.data.message), C(1), M("ngIf", i.hasAction));
            },
            dependencies: [ct, Tt],
            styles: [
              ".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}",
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          n
        );
      })();
      const I4 = {
        snackBarState: Zi("state", [
          Xt("void, hidden", Ne({ transform: "scale(0.8)", opacity: 0 })),
          Xt("visible", Ne({ transform: "scale(1)", opacity: 1 })),
          Ut("* => visible", Qt("150ms cubic-bezier(0, 0, 0.2, 1)")),
          Ut(
            "* => void, * => hidden",
            Qt("75ms cubic-bezier(0.4, 0.0, 1, 1)", Ne({ opacity: 0 }))
          ),
        ]),
      };
      let k4 = (() => {
          class n extends wd {
            constructor(e, i, r, o, s) {
              super(),
                (this._ngZone = e),
                (this._elementRef = i),
                (this._changeDetectorRef = r),
                (this._platform = o),
                (this.snackBarConfig = s),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new V()),
                (this._onExit = new V()),
                (this._onEnter = new V()),
                (this._animationState = "void"),
                (this.attachDomPortal = (a) => {
                  this._assertNotAttached();
                  const l = this._portalOutlet.attachDomPortal(a);
                  return this._afterPortalAttached(), l;
                }),
                (this._live =
                  "assertive" !== s.politeness || s.announcementMessage
                    ? "off" === s.politeness
                      ? "off"
                      : "polite"
                    : "assertive"),
                this._platform.FIREFOX &&
                  ("polite" === this._live && (this._role = "status"),
                  "assertive" === this._live && (this._role = "alert"));
            }
            attachComponentPortal(e) {
              this._assertNotAttached();
              const i = this._portalOutlet.attachComponentPortal(e);
              return this._afterPortalAttached(), i;
            }
            attachTemplatePortal(e) {
              this._assertNotAttached();
              const i = this._portalOutlet.attachTemplatePortal(e);
              return this._afterPortalAttached(), i;
            }
            onAnimationEnd(e) {
              const { fromState: i, toState: r } = e;
              if (
                ((("void" === r && "void" !== i) || "hidden" === r) &&
                  this._completeExit(),
                "visible" === r)
              ) {
                const o = this._onEnter;
                this._ngZone.run(() => {
                  o.next(), o.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = "visible"),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                this._ngZone.run(() => {
                  (this._animationState = "hidden"),
                    this._elementRef.nativeElement.setAttribute("mat-exit", ""),
                    clearTimeout(this._announceTimeoutId);
                }),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0), this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe(vt(1)).subscribe(() => {
                this._ngZone.run(() => {
                  this._onExit.next(), this._onExit.complete();
                });
              });
            }
            _afterPortalAttached() {
              const e = this._elementRef.nativeElement,
                i = this.snackBarConfig.panelClass;
              i &&
                (Array.isArray(i)
                  ? i.forEach((r) => e.classList.add(r))
                  : e.classList.add(i));
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const e =
                        this._elementRef.nativeElement.querySelector(
                          "[aria-hidden]"
                        ),
                      i =
                        this._elementRef.nativeElement.querySelector(
                          "[aria-live]"
                        );
                    if (e && i) {
                      let r = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        e.contains(document.activeElement) &&
                        (r = document.activeElement),
                        e.removeAttribute("aria-hidden"),
                        i.appendChild(e),
                        r?.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(G), h(ie), h(st), h(yt), h(Td));
            }),
            (n.ɵdir = R({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && Et(wl, 7), 2 & e)) {
                  let r;
                  X((r = J())) && (i._portalOutlet = r.first);
                }
              },
              features: [B],
            })),
            n
          );
        })(),
        R4 = (() => {
          class n extends k4 {
            _afterPortalAttached() {
              super._afterPortalAttached(),
                "center" === this.snackBarConfig.horizontalPosition &&
                  this._elementRef.nativeElement.classList.add(
                    "mat-snack-bar-center"
                  ),
                "top" === this.snackBarConfig.verticalPosition &&
                  this._elementRef.nativeElement.classList.add(
                    "mat-snack-bar-top"
                  );
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = je(n)))(i || n);
              };
            })()),
            (n.ɵcmp = H({
              type: n,
              selectors: [["snack-bar-container"]],
              hostAttrs: [1, "mat-snack-bar-container"],
              hostVars: 1,
              hostBindings: function (e, i) {
                1 & e &&
                  Da("@state.done", function (o) {
                    return i.onAnimationEnd(o);
                  }),
                  2 & e && Sa("@state", i._animationState);
              },
              features: [B],
              decls: 3,
              vars: 2,
              consts: [
                ["aria-hidden", "true"],
                ["cdkPortalOutlet", ""],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "div", 0),
                  N(1, T4, 0, 0, "ng-template", 1),
                  m(),
                  ge(2, "div")),
                  2 & e && (C(2), Ae("aria-live", i._live)("role", i._role));
              },
              dependencies: [wl],
              styles: [
                ".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}",
              ],
              encapsulation: 2,
              data: { animation: [I4.snackBarState] },
            })),
            n
          );
        })(),
        RT = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [Ps, Dl, yi, oT, fe, fe] })),
            n
          );
        })();
      const OT = new x("mat-snack-bar-default-options", {
        providedIn: "root",
        factory: function O4() {
          return new Td();
        },
      });
      let F4 = (() => {
          class n {
            constructor(e, i, r, o, s, a) {
              (this._overlay = e),
                (this._live = i),
                (this._injector = r),
                (this._breakpointObserver = o),
                (this._parentSnackBar = s),
                (this._defaultConfig = a),
                (this._snackBarRefAtThisLevel = null);
            }
            get _openedSnackBarRef() {
              const e = this._parentSnackBar;
              return e ? e._openedSnackBarRef : this._snackBarRefAtThisLevel;
            }
            set _openedSnackBarRef(e) {
              this._parentSnackBar
                ? (this._parentSnackBar._openedSnackBarRef = e)
                : (this._snackBarRefAtThisLevel = e);
            }
            openFromComponent(e, i) {
              return this._attach(e, i);
            }
            openFromTemplate(e, i) {
              return this._attach(e, i);
            }
            open(e, i = "", r) {
              const o = { ...this._defaultConfig, ...r };
              return (
                (o.data = { message: e, action: i }),
                o.announcementMessage === e && (o.announcementMessage = void 0),
                this.openFromComponent(this.simpleSnackBarComponent, o)
              );
            }
            dismiss() {
              this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
            }
            ngOnDestroy() {
              this._snackBarRefAtThisLevel &&
                this._snackBarRefAtThisLevel.dismiss();
            }
            _attachSnackBarContainer(e, i) {
              const o = ze.create({
                  parent:
                    (i && i.viewContainerRef && i.viewContainerRef.injector) ||
                    this._injector,
                  providers: [{ provide: Td, useValue: i }],
                }),
                s = new Fs(
                  this.snackBarContainerComponent,
                  i.viewContainerRef,
                  o
                ),
                a = e.attach(s);
              return (a.instance.snackBarConfig = i), a.instance;
            }
            _attach(e, i) {
              const r = { ...new Td(), ...this._defaultConfig, ...i },
                o = this._createOverlay(r),
                s = this._attachSnackBarContainer(o, r),
                a = new Wg(s, o);
              if (e instanceof fn) {
                const l = new Cd(e, null, {
                  $implicit: r.data,
                  snackBarRef: a,
                });
                a.instance = s.attachTemplatePortal(l);
              } else {
                const l = this._createInjector(r, a),
                  c = new Fs(e, void 0, l),
                  u = s.attachComponentPortal(c);
                a.instance = u.instance;
              }
              return (
                this._breakpointObserver
                  .observe("(max-width: 599.98px) and (orientation: portrait)")
                  .pipe(ce(o.detachments()))
                  .subscribe((l) => {
                    o.overlayElement.classList.toggle(
                      this.handsetCssClass,
                      l.matches
                    );
                  }),
                r.announcementMessage &&
                  s._onAnnounce.subscribe(() => {
                    this._live.announce(r.announcementMessage, r.politeness);
                  }),
                this._animateSnackBar(a, r),
                (this._openedSnackBarRef = a),
                this._openedSnackBarRef
              );
            }
            _animateSnackBar(e, i) {
              e.afterDismissed().subscribe(() => {
                this._openedSnackBarRef == e &&
                  (this._openedSnackBarRef = null),
                  i.announcementMessage && this._live.clear();
              }),
                this._openedSnackBarRef
                  ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                      e.containerInstance.enter();
                    }),
                    this._openedSnackBarRef.dismiss())
                  : e.containerInstance.enter(),
                i.duration &&
                  i.duration > 0 &&
                  e.afterOpened().subscribe(() => e._dismissAfter(i.duration));
            }
            _createOverlay(e) {
              const i = new Dd();
              i.direction = e.direction;
              let r = this._overlay.position().global();
              const o = "rtl" === e.direction,
                s =
                  "left" === e.horizontalPosition ||
                  ("start" === e.horizontalPosition && !o) ||
                  ("end" === e.horizontalPosition && o),
                a = !s && "center" !== e.horizontalPosition;
              return (
                s ? r.left("0") : a ? r.right("0") : r.centerHorizontally(),
                "top" === e.verticalPosition ? r.top("0") : r.bottom("0"),
                (i.positionStrategy = r),
                this._overlay.create(i)
              );
            }
            _createInjector(e, i) {
              return ze.create({
                parent:
                  (e && e.viewContainerRef && e.viewContainerRef.injector) ||
                  this._injector,
                providers: [
                  { provide: Wg, useValue: i },
                  { provide: kT, useValue: e.data },
                ],
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(bn), b(Og), b(ze), b(cd), b(n, 12), b(OT));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        P4 = (() => {
          class n extends F4 {
            constructor(e, i, r, o, s, a) {
              super(e, i, r, o, s, a),
                (this.simpleSnackBarComponent = A4),
                (this.snackBarContainerComponent = R4),
                (this.handsetCssClass = "mat-snack-bar-handset");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(bn), b(Og), b(ze), b(cd), b(n, 12), b(OT));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: RT })),
            n
          );
        })(),
        tn = (() => {
          class n {
            constructor(e) {
              this.snackBar = e;
            }
            showMsg({ msg: e }) {
              this.snackBar.open(e, "X", {
                duration: 3e3,
                horizontalPosition: "right",
                verticalPosition: "top",
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(P4));
            }),
            (n.ɵprov = k({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        N4 = (() => {
          class n {
            constructor(e, i, r, o, s) {
              (this.dialogRef = e),
                (this.data = i),
                (this.message = r),
                (this.http = o),
                (this.route = s),
                (this.baseUrl = `${nr_apiUrl}equipes/`);
            }
            fechaDialog() {
              this.dialogRef.close();
            }
            deletaEquipe(e) {
              this.http.delete(`${this.baseUrl}${e}`).subscribe(() => {
                this.message.showMsg({ msg: "Equipe deletada com sucesso." });
              }),
                this.fechaDialog(),
                this.route.navigate(["equipes"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(Gg), h(Sl), h(tn), h(en), h(we));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-delete-warning"]],
              decls: 13,
              vars: 0,
              consts: [
                [1, "material-icons"],
                [3, "click"],
                [1, "deletar", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "h1")(1, "i", 0),
                  v(2, " warning "),
                  m(),
                  v(3, " Aviso\n"),
                  m(),
                  g(4, "p"),
                  v(5, "Tem certeza que deseja deletar esta equipe?"),
                  m(),
                  g(6, "p"),
                  v(
                    7,
                    "Isso deletar\xe1 membros e projetos que tiverem associados a esta equipe."
                  ),
                  m(),
                  g(8, "div")(9, "button", 1),
                  I("click", function () {
                    return i.fechaDialog();
                  }),
                  v(10, "Fechar"),
                  m(),
                  g(11, "button", 2),
                  I("click", function () {
                    return i.deletaEquipe(i.data);
                  }),
                  v(12, "Deletar"),
                  m()());
              },
              styles: [
                "h1[_ngcontent-%COMP%]{align-items:center;display:flex}h1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:5px}button[_ngcontent-%COMP%]{border-radius:5px;height:1.5rem;margin-right:5px;padding:0 10px}button.deletar[_ngcontent-%COMP%]:hover{background-color:#f005}",
              ],
            })),
            n
          );
        })();
      function L4(n, t) {
        if (
          (1 & n &&
            (g(0, "li", 16)(1, "mat-card", 17)(2, "mat-card-title")(
              3,
              "span",
              18
            ),
            v(4),
            m()(),
            g(5, "mat-card-subtitle")(6, "span", 19),
            v(7),
            m()()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          Yt("routerLink", "/membros/dados/", e.id_membro, ""),
            C(4),
            Je(e.nome_membro),
            C(3),
            Je(e.funcao);
        }
      }
      function V4(n, t) {
        if (
          (1 & n &&
            (g(0, "li", 16)(1, "mat-card", 20)(2, "mat-card-title")(
              3,
              "span",
              21
            ),
            v(4),
            m()()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          Yt("routerLink", "../../../projetos/dados/", e.id_projeto, ""),
            C(4),
            Je(e.nome_projeto);
        }
      }
      function B4(n, t) {
        1 & n &&
          (g(0, "div"),
          v(1, " N\xe3o h\xe1 nenhum projeto relacionado a esta equipe "),
          m());
      }
      let j4 = (() => {
        class n {
          constructor(e, i, r) {
            (this.route = e),
              (this.equipeService = i),
              (this.dialog = r),
              (this.membros = []),
              (this.projetos = []),
              (this.equipe = { nome_equipe: "", membros: [], projetos: [] });
          }
          ngOnInit() {
            const e = this.route.snapshot.paramMap.get("id");
            this.equipeService.getById({ id: `${e}` }).subscribe((i) => {
              (this.equipe = i),
                (this.membros = this.equipe.membros),
                (this.projetos = this.equipe.projetos);
            });
          }
          openDialog(e, i, r) {
            this.dialog.open(N4, {
              data: r,
              width: "250px",
              enterAnimationDuration: e,
              exitAnimationDuration: i,
            });
          }
          goBack() {
            history.back();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(yn), h(lr), h(Pr));
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["app-pagina-equipe"]],
            decls: 39,
            vars: 8,
            consts: [
              [1, "material-icons", "arrow", 3, "click"],
              [1, "geral"],
              [1, "dados"],
              [1, "imagem"],
              [1, "title-view"],
              [1, "acoes"],
              ["mat-raised-button", "", 1, "editar", 3, "routerLink"],
              ["mat-raised-button", "", 1, "deletar", 3, "click"],
              [1, "info"],
              [1, "quantidades"],
              [1, "quantidade"],
              [1, "subtitle"],
              [1, "membro"],
              [3, "routerLink", 4, "ngFor", "ngForOf"],
              [1, "projeto"],
              [4, "ngIf"],
              [3, "routerLink"],
              [1, "card"],
              [1, "membro_nome"],
              [1, "membro_funcao"],
              [1, "card", "card_projeto"],
              [1, "projeto_nome"],
            ],
            template: function (e, i) {
              1 & e &&
                (g(0, "i", 0),
                I("click", function () {
                  return i.goBack();
                }),
                v(1, " arrow_back "),
                m(),
                g(2, "div", 1)(3, "div", 2)(4, "div", 3)(5, "span"),
                v(6),
                m()(),
                g(7, "h1", 4),
                v(8),
                m(),
                g(9, "div", 5)(10, "button", 6),
                v(11, " Editar Equipe "),
                m(),
                g(12, "button", 7),
                I("click", function () {
                  return i.openDialog("0ms", "0ms", i.equipe.id_equipe);
                }),
                v(13, " Deletar Equipe "),
                m()()(),
                g(14, "div", 8)(15, "div", 9)(16, "mat-card", 10)(
                  17,
                  "mat-card-title"
                ),
                v(18),
                m(),
                g(19, "mat-card-subtitle"),
                v(20, " Membro(s)"),
                ge(21, "br"),
                v(22, " Cadastrado(s) "),
                m()(),
                g(23, "mat-card", 10)(24, "mat-card-title"),
                v(25),
                m(),
                v(26, " Projeto(s)"),
                ge(27, "br"),
                v(28, " Cadastrado(s) "),
                ge(29, "mat-card-subtitle"),
                m()(),
                g(30, "span", 11),
                v(31, "Membros"),
                m(),
                g(32, "ul", 12),
                N(33, L4, 8, 3, "li", 13),
                m(),
                g(34, "span", 11),
                v(35, "Projetos"),
                m(),
                g(36, "ul", 14),
                N(37, V4, 5, 2, "li", 13),
                m(),
                N(38, B4, 2, 0, "div", 15),
                m()()),
                2 & e &&
                  (C(6),
                  Je(i.equipe.nome_equipe[0]),
                  C(2),
                  Je(i.equipe.nome_equipe),
                  C(2),
                  Yt("routerLink", "/equipes/update/", i.equipe.id_equipe, ""),
                  C(8),
                  Ge(" ", i.membros.length, " "),
                  C(7),
                  Ge(" ", i.projetos.length, " "),
                  C(8),
                  M("ngForOf", i.membros),
                  C(4),
                  M("ngForOf", i.projetos),
                  C(1),
                  M("ngIf", 0 == i.projetos.length));
            },
            dependencies: [Ti, Zt, ct, Tt, ki, Ai, Ii],
            styles: [
              ".arrow[_ngcontent-%COMP%]{position:relative;top:10px;left:20px}.arrow[_ngcontent-%COMP%]:hover{cursor:pointer}.geral[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;text-align:center;margin:20px;height:100%}.title-view[_ngcontent-%COMP%]{margin:20px 0}.dados[_ngcontent-%COMP%]{width:30%;align-items:center;min-width:30rem;padding:10px}.acoes[_ngcontent-%COMP%]{margin-top:20px}.acoes[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:5px;width:10rem}.imagem[_ngcontent-%COMP%]{text-align:center;width:15rem;height:15rem;border:1px solid #000000;border-radius:50%;align-items:center;justify-content:center}.imagem[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:8rem}.info[_ngcontent-%COMP%]{width:60%;min-width:30rem}.quantidades[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:nowrap;margin:20px}.quantidade[_ngcontent-%COMP%]{padding:20px;margin-left:2.5rem;width:10rem;text-align:center;margin-bottom:20px;height:4rem}div[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex-wrap:wrap}li[_ngcontent-%COMP%]{list-style:none}li[_ngcontent-%COMP%]:hover{cursor:pointer}.card[_ngcontent-%COMP%]{margin-top:10px;width:60%;min-width:35rem;box-sizing:content-box}.subtitle[_ngcontent-%COMP%]{font-size:30px;font-weight:700;margin-left:2.5rem;margin-top:20px}.card_projeto[_ngcontent-%COMP%]{text-align:left}",
            ],
          })),
          n
        );
      })();
      function H4(n, t) {
        1 & n &&
          (g(0, "mat-error"), v(1, " Nome da equipe \xe9 requerido "), m());
      }
      let U4 = (() => {
        class n {
          constructor(e, i, r, o) {
            (this.createEquipeService = e),
              (this.formBuilder = i),
              (this.aviso = r),
              (this.router = o),
              (this.formulario = this.formBuilder.group({
                nome: [null, it.required],
              })),
              (this.equipe = { nome_equipe: "" });
          }
          ngOnInit() {}
          goBack() {
            this.router.navigate(["equipes"]);
          }
          onSubmit() {
            this.createEquipeService
              .create({ equipe: this.equipe })
              .subscribe(() => {
                this.aviso.showMsg({ msg: "Equipe criada com sucesso" }),
                  this.goBack();
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(lr), h(Qi), h(tn), h(we));
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["app-create-equipe"]],
            decls: 15,
            vars: 4,
            consts: [
              [1, "form"],
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill", 1, "create-equipe"],
              [
                "matInput",
                "",
                "placeholder",
                "Nome da equipe",
                "name",
                "name_team",
                "formControlName",
                "nome",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
            ],
            template: function (e, i) {
              1 & e &&
                (g(0, "mat-card", 0)(1, "mat-card-title"),
                v(2, " Criar equipe "),
                m(),
                g(3, "mat-card-subtitle"),
                v(4, " \xc1rea para cria\xe7\xe3o de novas equipes "),
                m()(),
                g(5, "form", 1),
                I("ngSubmit", function () {
                  return i.onSubmit();
                }),
                g(6, "mat-form-field", 2)(7, "mat-label"),
                v(8, "Nome da Equipe"),
                m(),
                g(9, "input", 3),
                I("ngModelChange", function (o) {
                  return (i.equipe.nome_equipe = o);
                }),
                m(),
                N(10, H4, 2, 0, "mat-error", 4),
                m(),
                g(11, "button", 5),
                v(12, " Salvar "),
                m(),
                g(13, "button", 6),
                I("click", function () {
                  return i.goBack();
                }),
                v(14, " Cancelar "),
                m()()),
                2 & e &&
                  (C(5),
                  M("formGroup", i.formulario),
                  C(4),
                  M("ngModel", i.equipe.nome_equipe),
                  C(1),
                  M("ngIf", i.formulario.controls.nome.hasError("required")),
                  C(1),
                  M("disabled", !i.formulario.valid));
            },
            dependencies: [
              ct,
              Mi,
              Pn,
              wi,
              Di,
              Tt,
              ki,
              Ai,
              Ii,
              or,
              sr,
              ei,
              ar,
              Jt,
              Qn,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:150px}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{margin-top:10px;border:1px solid blue}button.limpar[_ngcontent-%COMP%]{margin-top:10px;border:1px solid yellow}",
            ],
          })),
          n
        );
      })();
      function $4(n, t) {
        1 & n &&
          (g(0, "mat-error"), v(1, " Nome da equipe \xe9 requerido "), m());
      }
      let z4 = (() => {
          class n {
            constructor(e, i, r, o, s) {
              (this.equipeService = e),
                (this.route = i),
                (this.aviso = r),
                (this.form = o),
                (this.router = s),
                (this.formulario = this.form.group({
                  nome: [null, it.required],
                })),
                (this.equipe = { nome_equipe: "" });
            }
            ngOnInit() {
              const e = this.route.snapshot.paramMap.get("id");
              this.equipeService.getById({ id: `${e}` }).subscribe((i) => {
                this.equipe = i;
              });
            }
            onSubmit() {
              this.equipeService
                .update({ equipe: this.equipe })
                .subscribe(() => {
                  this.aviso.showMsg({ msg: "Equipe atualizada com sucesso" }),
                    this.goBack();
                });
            }
            goBack() {
              history.back();
            }
            limpar() {
              this.formulario.reset();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(lr), h(yn), h(tn), h(Qi), h(we));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-update-equipe"]],
              decls: 17,
              vars: 4,
              consts: [
                [1, "form"],
                [1, "form", 3, "formGroup", "ngSubmit"],
                ["appearance", "fill", 1, "create-equipe"],
                [
                  "matInput",
                  "",
                  "placeholder",
                  "Nome da equipe",
                  "name",
                  "name_team",
                  "formControlName",
                  "nome",
                  "maxlength",
                  "30",
                  3,
                  "ngModel",
                  "ngModelChange",
                ],
                [4, "ngIf"],
                ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
                ["mat-raised-button", "", 1, "cancelar", 3, "click"],
                ["mat-raised-button", "", 1, "limpar", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "mat-card", 0)(1, "mat-card-title"),
                  v(2, " Atualizar equipe "),
                  m(),
                  g(3, "mat-card-subtitle"),
                  v(4, " \xc1rea para atualiza\xe7\xe3o equipes "),
                  m()(),
                  g(5, "form", 1),
                  I("ngSubmit", function () {
                    return i.onSubmit();
                  }),
                  g(6, "mat-form-field", 2)(7, "mat-label"),
                  v(8, "Nome da Equipe"),
                  m(),
                  g(9, "input", 3),
                  I("ngModelChange", function (o) {
                    return (i.equipe.nome_equipe = o);
                  }),
                  m(),
                  N(10, $4, 2, 0, "mat-error", 4),
                  m(),
                  g(11, "button", 5),
                  v(12, "Salvar"),
                  m(),
                  g(13, "button", 6),
                  I("click", function () {
                    return i.goBack();
                  }),
                  v(14, " Cancelar "),
                  m(),
                  g(15, "button", 7),
                  I("click", function () {
                    return i.limpar();
                  }),
                  v(16, "Limpar"),
                  m()()),
                  2 & e &&
                    (C(5),
                    M("formGroup", i.formulario),
                    C(4),
                    M("ngModel", i.equipe.nome_equipe),
                    C(1),
                    M("ngIf", i.formulario.controls.nome.hasError("required")),
                    C(1),
                    M("disabled", !i.formulario.valid));
              },
              dependencies: [
                ct,
                Mi,
                Pn,
                wi,
                Di,
                Ir,
                Tt,
                ki,
                Ai,
                Ii,
                or,
                sr,
                ei,
                ar,
                Jt,
                Qn,
              ],
              styles: [
                ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:150px}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{margin-top:10px;border:1px solid #0000ff}button.limpar[_ngcontent-%COMP%]{margin-top:10px;border:1px solid #ffff00}",
              ],
            })),
            n
          );
        })(),
        FT = (() => {
          class n {
            constructor(e, i, r, o, s) {
              (this.dialogRef = e),
                (this.data = i),
                (this.http = r),
                (this.Aviso = o),
                (this.route = s),
                (this.url = `${nr_apiUrl}membros/`);
            }
            fecha() {
              this.dialogRef.close();
            }
            deletaMembro(e) {
              this.http.delete(`${this.url}${e}`).subscribe(() => {
                this.Aviso.showMsg({ msg: "Membro deletado com sucesso" });
              }),
                this.route.navigate(["membros"]),
                this.fecha();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(Gg), h(Sl), h(en), h(tn), h(we));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-delete-warning"]],
              decls: 13,
              vars: 0,
              consts: [
                [1, "material-icons"],
                [3, "click"],
                [1, "deletar", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "h1")(1, "i", 0),
                  v(2, " warning "),
                  m(),
                  v(3, " Aviso\n"),
                  m(),
                  g(4, "p"),
                  v(5, "Tem certeza que deseja deletar esse membro?"),
                  m(),
                  g(6, "p"),
                  v(
                    7,
                    "Esta a\xe7\xe3o deletar\xe1 as tarefas que estiverem relacionadas a este membro"
                  ),
                  m(),
                  g(8, "div")(9, "button", 1),
                  I("click", function () {
                    return i.fecha();
                  }),
                  v(10, "Cancelar"),
                  m(),
                  g(11, "button", 2),
                  I("click", function () {
                    return i.deletaMembro(i.data);
                  }),
                  v(12, "Deletar"),
                  m()());
              },
              styles: [
                "h1[_ngcontent-%COMP%]{align-items:center;display:flex}h1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:5px}button[_ngcontent-%COMP%]{border-radius:5px;height:1.5rem;margin-right:5px;padding:0 10px}button.deletar[_ngcontent-%COMP%]:hover{background-color:#f005}",
              ],
            })),
            n
          );
        })();
      function q4(n, t) {
        if (
          (1 & n &&
            (g(0, "li")(1, "div", 1)(2, "span", 2),
            v(3),
            m(),
            g(4, "span", 3),
            v(5),
            m()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          C(1),
            Yt("routerLink", "/membros/dados/", e.id_membro, ""),
            C(2),
            Je(e.nome_membro),
            C(2),
            Je(e.funcao);
        }
      }
      let G4 = (() => {
          class n {
            constructor(e, i) {
              (this.membrosService = e),
                (this.dialog = i),
                (this.membros = []),
                (this.equipes = []);
            }
            lerMembros() {
              this.membrosService.read().subscribe((e) => {
                this.membros = e;
              });
            }
            ngOnInit() {
              this.lerMembros();
            }
            openDialog(e, i, r) {
              this.dialog.open(FT, {
                data: r,
                width: "250px",
                enterAnimationDuration: e,
                exitAnimationDuration: i,
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(bo), h(Pr));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-read-membros"]],
              decls: 2,
              vars: 1,
              consts: [
                [4, "ngFor", "ngForOf"],
                [3, "routerLink"],
                [1, "nome"],
                [1, "funcao"],
              ],
              template: function (e, i) {
                1 & e && (g(0, "ul"), N(1, q4, 6, 3, "li", 0), m()),
                  2 & e && (C(1), M("ngForOf", i.membros));
              },
              dependencies: [Ti, Zt],
              styles: [
                "span.nome[_ngcontent-%COMP%]{font-size:2rem;margin:2px}span.funcao[_ngcontent-%COMP%], span.equipe[_ngcontent-%COMP%]{font-size:1rem;margin:2px}span.equipe[_ngcontent-%COMP%]{align-items:center;display:flex}button[_ngcontent-%COMP%]{border:none;cursor:pointer}button.deletar[_ngcontent-%COMP%]:hover{background-color:#ff00009a}button.editar[_ngcontent-%COMP%]:hover{background-color:#ffff0080}ul[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}li[_ngcontent-%COMP%]{background-color:#232b67;border:1px solid #000000;border-radius:10px;color:#fff;display:flex;flex-direction:column;justify-content:space-around;line-height:2rem;list-style:none;margin:10px;min-width:25rem;padding:30px;width:35%;box-sizing:content-box}li[_ngcontent-%COMP%]   span.nome[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;margin:2px}li[_ngcontent-%COMP%]:hover{cursor:pointer}.select_equipe[_ngcontent-%COMP%]{align-items:center}#select_equipe[_ngcontent-%COMP%]{align-items:center;border:1px solid #000000;height:1rem;margin-left:3rem;min-width:25rem;text-align:center;width:35%;font-size:15px;padding:10px}#button_selecionar[_ngcontent-%COMP%]{position:relative;margin-left:10px}#button_voltar[_ngcontent-%COMP%]{margin-left:10px}",
              ],
            })),
            n
          );
        })(),
        W4 = (() => {
          class n {
            constructor(e) {
              this.router = e;
            }
            ngOnInit() {}
            goToCreateMembro() {
              this.router.navigate(["membros/create"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(we));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-membro"]],
              decls: 5,
              vars: 0,
              consts: [
                [1, "title-view"],
                ["mat-raised-button", "", 1, "add", 3, "click"],
                [
                  "src",
                  "./../../../../assets/images/add_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "h1", 0),
                  v(1, "Membros"),
                  m(),
                  ge(2, "app-read-membros"),
                  g(3, "button", 1),
                  I("click", function () {
                    return i.goToCreateMembro();
                  }),
                  ge(4, "img", 2),
                  m());
              },
              dependencies: [Tt, G4],
            })),
            n
          );
        })();
      class Yg {
        constructor(t = !1, e, i = !0, r) {
          (this._multiple = t),
            (this._emitChanges = i),
            (this.compareWith = r),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new V()),
            e &&
              e.length &&
              (t
                ? e.forEach((o) => this._markSelected(o))
                : this._markSelected(e[0]),
              (this._selectedToEmit.length = 0));
        }
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        select(...t) {
          this._verifyValueAssignment(t),
            t.forEach((i) => this._markSelected(i));
          const e = this._hasQueuedChanges();
          return this._emitChangeEvent(), e;
        }
        deselect(...t) {
          this._verifyValueAssignment(t),
            t.forEach((i) => this._unmarkSelected(i));
          const e = this._hasQueuedChanges();
          return this._emitChangeEvent(), e;
        }
        setSelection(...t) {
          this._verifyValueAssignment(t);
          const e = this.selected,
            i = new Set(t);
          t.forEach((o) => this._markSelected(o)),
            e.filter((o) => !i.has(o)).forEach((o) => this._unmarkSelected(o));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        toggle(t) {
          return this.isSelected(t) ? this.deselect(t) : this.select(t);
        }
        clear(t = !0) {
          this._unmarkAll();
          const e = this._hasQueuedChanges();
          return t && this._emitChangeEvent(), e;
        }
        isSelected(t) {
          if (this.compareWith) {
            for (const e of this._selection)
              if (this.compareWith(e, t)) return !0;
            return !1;
          }
          return this._selection.has(t);
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(t) {
          this._multiple && this.selected && this._selected.sort(t);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(t) {
          this.isSelected(t) ||
            (this._multiple || this._unmarkAll(),
            this.isSelected(t) || this._selection.add(t),
            this._emitChanges && this._selectedToEmit.push(t));
        }
        _unmarkSelected(t) {
          this.isSelected(t) &&
            (this._selection.delete(t),
            this._emitChanges && this._deselectedToEmit.push(t));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach((t) => this._unmarkSelected(t));
        }
        _verifyValueAssignment(t) {}
        _hasQueuedChanges() {
          return !(
            !this._deselectedToEmit.length && !this._selectedToEmit.length
          );
        }
      }
      const Z4 = ["trigger"],
        Q4 = ["panel"];
      function X4(n, t) {
        if ((1 & n && (g(0, "span", 8), v(1), m()), 2 & n)) {
          const e = Ie();
          C(1), Je(e.placeholder);
        }
      }
      function J4(n, t) {
        if ((1 & n && (g(0, "span", 12), v(1), m()), 2 & n)) {
          const e = Ie(2);
          C(1), Je(e.triggerValue);
        }
      }
      function eq(n, t) {
        1 & n && pe(0, 0, ["*ngSwitchCase", "true"]);
      }
      function tq(n, t) {
        1 & n &&
          (g(0, "span", 9),
          N(1, J4, 2, 1, "span", 10),
          N(2, eq, 1, 0, "ng-content", 11),
          m()),
          2 & n &&
            (M("ngSwitch", !!Ie().customTrigger), C(2), M("ngSwitchCase", !0));
      }
      function nq(n, t) {
        if (1 & n) {
          const e = zi();
          g(0, "div", 13)(1, "div", 14, 15),
            I("@transformPanel.done", function (r) {
              return ii(e), ri(Ie()._panelDoneAnimatingStream.next(r.toState));
            })("keydown", function (r) {
              return ii(e), ri(Ie()._handleKeydown(r));
            }),
            pe(3, 1),
            m()();
        }
        if (2 & n) {
          const e = Ie();
          M("@transformPanelWrap", void 0),
            C(1),
            cC("mat-select-panel ", e._getPanelTheme(), ""),
            Jr("transform-origin", e._transformOrigin)(
              "font-size",
              e._triggerFontSize,
              "px"
            ),
            M("ngClass", e.panelClass)(
              "@transformPanel",
              e.multiple ? "showing-multiple" : "showing"
            ),
            Ae("id", e.id + "-panel")("aria-multiselectable", e.multiple)(
              "aria-label",
              e.ariaLabel || null
            )("aria-labelledby", e._getPanelAriaLabelledby());
        }
      }
      const iq = [[["mat-select-trigger"]], "*"],
        rq = ["mat-select-trigger", "*"],
        PT = {
          transformPanelWrap: Zi("transformPanelWrap", [
            Ut("* => void", Zp("@transformPanel", [Kp()], { optional: !0 })),
          ]),
          transformPanel: Zi("transformPanel", [
            Xt(
              "void",
              Ne({ transform: "scaleY(0.8)", minWidth: "100%", opacity: 0 })
            ),
            Xt(
              "showing",
              Ne({
                opacity: 1,
                minWidth: "calc(100% + 32px)",
                transform: "scaleY(1)",
              })
            ),
            Xt(
              "showing-multiple",
              Ne({
                opacity: 1,
                minWidth: "calc(100% + 64px)",
                transform: "scaleY(1)",
              })
            ),
            Ut("void => *", Qt("120ms cubic-bezier(0, 0, 0.2, 1)")),
            Ut("* => void", Qt("100ms 25ms linear", Ne({ opacity: 0 }))),
          ]),
        };
      let NT = 0;
      const VT = new x("mat-select-scroll-strategy"),
        lq = new x("MAT_SELECT_CONFIG"),
        cq = {
          provide: VT,
          deps: [bn],
          useFactory: function aq(n) {
            return () => n.scrollStrategies.reposition();
          },
        };
      class uq {
        constructor(t, e) {
          (this.source = t), (this.value = e);
        }
      }
      const dq = vo(
          Ng(
            pd(
              YS(
                class {
                  constructor(n, t, e, i, r) {
                    (this._elementRef = n),
                      (this._defaultErrorStateMatcher = t),
                      (this._parentForm = e),
                      (this._parentFormGroup = i),
                      (this.ngControl = r),
                      (this.stateChanges = new V());
                  }
                }
              )
            )
          )
        ),
        hq = new x("MatSelectTrigger");
      let fq = (() => {
          class n extends dq {
            constructor(e, i, r, o, s, a, l, c, u, d, f, p, _, y) {
              super(s, o, l, c, d),
                (this._viewportRuler = e),
                (this._changeDetectorRef = i),
                (this._ngZone = r),
                (this._dir = a),
                (this._parentFormField = u),
                (this._liveAnnouncer = _),
                (this._defaultOptions = y),
                (this._panelOpen = !1),
                (this._compareWith = (w, D) => w === D),
                (this._uid = "mat-select-" + NT++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new V()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = "mat-select-value-" + NT++),
                (this._panelDoneAnimatingStream = new V()),
                (this._overlayPanelClass =
                  this._defaultOptions?.overlayPanelClass || ""),
                (this._focused = !1),
                (this.controlType = "mat-select"),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  this._defaultOptions?.disableOptionCentering ?? !1),
                (this.ariaLabel = ""),
                (this.optionSelectionChanges = Qa(() => {
                  const w = this.options;
                  return w
                    ? w.changes.pipe(
                        vn(w),
                        Nn(() => hr(...w.map((D) => D.onSelectionChange)))
                      )
                    : this._ngZone.onStable.pipe(
                        vt(1),
                        Nn(() => this.optionSelectionChanges)
                      );
                })),
                (this.openedChange = new se()),
                (this._openedStream = this.openedChange.pipe(
                  qe((w) => w),
                  q(() => {})
                )),
                (this._closedStream = this.openedChange.pipe(
                  qe((w) => !w),
                  q(() => {})
                )),
                (this.selectionChange = new se()),
                (this.valueChange = new se()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != y?.typeaheadDebounceInterval &&
                  (this._typeaheadDebounceInterval =
                    y.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = p),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(f) || 0),
                (this.id = this.id);
            }
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(e) {
              (this._placeholder = e), this.stateChanges.next();
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(it.required) ??
                !1
              );
            }
            set required(e) {
              (this._required = be(e)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(e) {
              this._multiple = be(e);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(e) {
              this._disableOptionCentering = be(e);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(e) {
              (this._compareWith = e),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(e) {
              this._assignValue(e) && this._onChange(e);
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(e) {
              this._typeaheadDebounceInterval = Jn(e);
            }
            get id() {
              return this._id;
            }
            set id(e) {
              (this._id = e || this._uid), this.stateChanges.next();
            }
            ngOnInit() {
              (this._selectionModel = new Yg(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe(Ig(), ce(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe(ce(this._destroy))
                  .subscribe((e) => {
                    e.added.forEach((i) => i.select()),
                      e.removed.forEach((i) => i.deselect());
                  }),
                this.options.changes
                  .pipe(vn(null), ce(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const e = this._getTriggerAriaLabelledby(),
                i = this.ngControl;
              if (e !== this._triggerAriaLabelledBy) {
                const r = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = e),
                  e
                    ? r.setAttribute("aria-labelledby", e)
                    : r.removeAttribute("aria-labelledby");
              }
              i &&
                (this._previousControl !== i.control &&
                  (void 0 !== this._previousControl &&
                    null !== i.disabled &&
                    i.disabled !== this.disabled &&
                    (this.disabled = i.disabled),
                  (this._previousControl = i.control)),
                this.updateErrorState());
            }
            ngOnChanges(e) {
              (e.disabled || e.userAriaDescribedBy) && this.stateChanges.next(),
                e.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval
                  );
            }
            ngOnDestroy() {
              this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? "rtl" : "ltr"
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(e) {
              this._assignValue(e);
            }
            registerOnChange(e) {
              this._onChange = e;
            }
            registerOnTouched(e) {
              this._onTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel?.selected || []
                : this._selectionModel?.selected[0];
            }
            get triggerValue() {
              if (this.empty) return "";
              if (this._multiple) {
                const e = this._selectionModel.selected.map((i) => i.viewValue);
                return this._isRtl() && e.reverse(), e.join(", ");
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && "rtl" === this._dir.value;
            }
            _handleKeydown(e) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(e)
                  : this._handleClosedKeydown(e));
            }
            _handleClosedKeydown(e) {
              const i = e.keyCode,
                r = 40 === i || 38 === i || 37 === i || 39 === i,
                o = 13 === i || 32 === i,
                s = this._keyManager;
              if (
                (!s.isTyping() && o && !Xn(e)) ||
                ((this.multiple || e.altKey) && r)
              )
                e.preventDefault(), this.open();
              else if (!this.multiple) {
                const a = this.selected;
                s.onKeydown(e);
                const l = this.selected;
                l && a !== l && this._liveAnnouncer.announce(l.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(e) {
              const i = this._keyManager,
                r = e.keyCode,
                o = 40 === r || 38 === r,
                s = i.isTyping();
              if (o && e.altKey) e.preventDefault(), this.close();
              else if (s || (13 !== r && 32 !== r) || !i.activeItem || Xn(e))
                if (!s && this._multiple && 65 === r && e.ctrlKey) {
                  e.preventDefault();
                  const a = this.options.some(
                    (l) => !l.disabled && !l.selected
                  );
                  this.options.forEach((l) => {
                    l.disabled || (a ? l.select() : l.deselect());
                  });
                } else {
                  const a = i.activeItemIndex;
                  i.onKeydown(e),
                    this._multiple &&
                      o &&
                      e.shiftKey &&
                      i.activeItem &&
                      i.activeItemIndex !== a &&
                      i.activeItem._selectViaInteraction();
                }
              else e.preventDefault(), i.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange.pipe(vt(1)).subscribe(() => {
                this._changeDetectorRef.detectChanges(),
                  this._positioningSettled();
              });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : "";
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this.ngControl && (this._value = this.ngControl.value),
                  this._setSelectionByValue(this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(e) {
              if (
                (this._selectionModel.selected.forEach((i) =>
                  i.setInactiveStyles()
                ),
                this._selectionModel.clear(),
                this.multiple && e)
              )
                Array.isArray(e),
                  e.forEach((i) => this._selectOptionByValue(i)),
                  this._sortValues();
              else {
                const i = this._selectOptionByValue(e);
                i
                  ? this._keyManager.updateActiveItem(i)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectOptionByValue(e) {
              const i = this.options.find((r) => {
                if (this._selectionModel.isSelected(r)) return !1;
                try {
                  return null != r.value && this._compareWith(r.value, e);
                } catch {
                  return !1;
                }
              });
              return i && this._selectionModel.select(i), i;
            }
            _assignValue(e) {
              return (
                !!(e !== this._value || (this._multiple && Array.isArray(e))) &&
                (this.options && this._setSelectionByValue(e),
                (this._value = e),
                !0)
              );
            }
            _initKeyManager() {
              (this._keyManager = new $U(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr")
                .withHomeAndEnd()
                .withAllowedModifierKeys(["shiftKey"])),
                this._keyManager.tabOut
                  .pipe(ce(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      (!this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction(),
                      this.focus(),
                      this.close());
                  }),
                this._keyManager.change
                  .pipe(ce(this._destroy))
                  .subscribe(() => {
                    this._panelOpen && this.panel
                      ? this._scrollOptionIntoView(
                          this._keyManager.activeItemIndex || 0
                        )
                      : !this._panelOpen &&
                        !this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction();
                  });
            }
            _resetOptions() {
              const e = hr(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe(ce(e)).subscribe((i) => {
                this._onSelect(i.source, i.isUserInput),
                  i.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                hr(...this.options.map((i) => i._stateChanges))
                  .pipe(ce(e))
                  .subscribe(() => {
                    this._changeDetectorRef.markForCheck(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(e, i) {
              const r = this._selectionModel.isSelected(e);
              null != e.value || this._multiple
                ? (r !== e.selected &&
                    (e.selected
                      ? this._selectionModel.select(e)
                      : this._selectionModel.deselect(e)),
                  i && this._keyManager.setActiveItem(e),
                  this.multiple && (this._sortValues(), i && this.focus()))
                : (e.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(e.value)),
                r !== this._selectionModel.isSelected(e) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const e = this.options.toArray();
                this._selectionModel.sort((i, r) =>
                  this.sortComparator
                    ? this.sortComparator(i, r, e)
                    : e.indexOf(i) - e.indexOf(r)
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(e) {
              let i = null;
              (i = this.multiple
                ? this.selected.map((r) => r.value)
                : this.selected
                ? this.selected.value
                : e),
                (this._value = i),
                this.valueChange.emit(i),
                this._onChange(i),
                this.selectionChange.emit(this._getChangeEvent(i)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0]
                    ));
            }
            _canOpen() {
              return (
                !this._panelOpen && !this.disabled && this.options?.length > 0
              );
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _getPanelAriaLabelledby() {
              if (this.ariaLabel) return null;
              const e = this._parentFormField?.getLabelId();
              return this.ariaLabelledby
                ? (e ? e + " " : "") + this.ariaLabelledby
                : e;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              if (this.ariaLabel) return null;
              const e = this._parentFormField?.getLabelId();
              let i = (e ? e + " " : "") + this._valueId;
              return this.ariaLabelledby && (i += " " + this.ariaLabelledby), i;
            }
            _panelDoneAnimating(e) {
              this.openedChange.emit(e);
            }
            setDescribedByIds(e) {
              e.length
                ? this._elementRef.nativeElement.setAttribute(
                    "aria-describedby",
                    e.join(" ")
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    "aria-describedby"
                  );
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                h(bd),
                h(st),
                h(G),
                h(Lg),
                h(ie),
                h(xi, 8),
                h(Ka, 8),
                h(Jt, 8),
                h(jg, 8),
                h(Ci, 10),
                ai("tabindex"),
                h(VT),
                h(Og),
                h(lq, 8)
              );
            }),
            (n.ɵdir = R({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && (Et(Z4, 5), Et(Q4, 5), Et(ST, 5)), 2 & e)) {
                  let r;
                  X((r = J())) && (i.trigger = r.first),
                    X((r = J())) && (i.panel = r.first),
                    X((r = J())) && (i._overlayDir = r.first);
                }
              },
              inputs: {
                userAriaDescribedBy: [
                  "aria-describedby",
                  "userAriaDescribedBy",
                ],
                panelClass: "panelClass",
                placeholder: "placeholder",
                required: "required",
                multiple: "multiple",
                disableOptionCentering: "disableOptionCentering",
                compareWith: "compareWith",
                value: "value",
                ariaLabel: ["aria-label", "ariaLabel"],
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                errorStateMatcher: "errorStateMatcher",
                typeaheadDebounceInterval: "typeaheadDebounceInterval",
                sortComparator: "sortComparator",
                id: "id",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                _closedStream: "closed",
                selectionChange: "selectionChange",
                valueChange: "valueChange",
              },
              features: [B, Mt],
            })),
            n
          );
        })(),
        Vs = (() => {
          class n extends fq {
            constructor() {
              super(...arguments),
                (this._scrollTop = 0),
                (this._triggerFontSize = 0),
                (this._transformOrigin = "top"),
                (this._offsetY = 0),
                (this._positions = [
                  {
                    originX: "start",
                    originY: "top",
                    overlayX: "start",
                    overlayY: "top",
                  },
                  {
                    originX: "start",
                    originY: "bottom",
                    overlayX: "start",
                    overlayY: "bottom",
                  },
                ]);
            }
            _calculateOverlayScroll(e, i, r) {
              const o = this._getItemHeight();
              return Math.min(Math.max(0, o * e - i + o / 2), r);
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe(ce(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._triggerRect =
                        this.trigger.nativeElement.getBoundingClientRect()),
                      this._changeDetectorRef.markForCheck());
                  });
            }
            open() {
              super._canOpen() &&
                (super.open(),
                (this._triggerRect =
                  this.trigger.nativeElement.getBoundingClientRect()),
                (this._triggerFontSize = parseInt(
                  getComputedStyle(this.trigger.nativeElement).fontSize || "0"
                )),
                this._calculateOverlayPosition(),
                this._ngZone.onStable.pipe(vt(1)).subscribe(() => {
                  this._triggerFontSize &&
                    this._overlayDir.overlayRef &&
                    this._overlayDir.overlayRef.overlayElement &&
                    (this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`);
                }));
            }
            _scrollOptionIntoView(e) {
              const i = iT(e, this.options, this.optionGroups),
                r = this._getItemHeight();
              this.panel.nativeElement.scrollTop =
                0 === e && 1 === i
                  ? 0
                  : (function T$(n, t, e, i) {
                      return n < e
                        ? n
                        : n + t > e + i
                        ? Math.max(0, n - i + t)
                        : e;
                    })((e + i) * r, r, this.panel.nativeElement.scrollTop, 256);
            }
            _positioningSettled() {
              this._calculateOverlayOffsetX(),
                (this.panel.nativeElement.scrollTop = this._scrollTop);
            }
            _panelDoneAnimating(e) {
              this.panelOpen
                ? (this._scrollTop = 0)
                : ((this._overlayDir.offsetX = 0),
                  this._changeDetectorRef.markForCheck()),
                super._panelDoneAnimating(e);
            }
            _getChangeEvent(e) {
              return new uq(this, e);
            }
            _calculateOverlayOffsetX() {
              const e =
                  this._overlayDir.overlayRef.overlayElement.getBoundingClientRect(),
                i = this._viewportRuler.getViewportSize(),
                r = this._isRtl(),
                o = this.multiple ? 56 : 32;
              let s;
              if (this.multiple) s = 40;
              else if (this.disableOptionCentering) s = 16;
              else {
                let c = this._selectionModel.selected[0] || this.options.first;
                s = c && c.group ? 32 : 16;
              }
              r || (s *= -1);
              const a = 0 - (e.left + s - (r ? o : 0)),
                l = e.right + s - i.width + (r ? 0 : o);
              a > 0 ? (s += a + 8) : l > 0 && (s -= l + 8),
                (this._overlayDir.offsetX = Math.round(s)),
                this._overlayDir.overlayRef.updatePosition();
            }
            _calculateOverlayOffsetY(e, i, r) {
              const o = this._getItemHeight(),
                s = (o - this._triggerRect.height) / 2,
                a = Math.floor(256 / o);
              let l;
              return this.disableOptionCentering
                ? 0
                : ((l =
                    0 === this._scrollTop
                      ? e * o
                      : this._scrollTop === r
                      ? (e - (this._getItemCount() - a)) * o +
                        (o - ((this._getItemCount() * o - 256) % o))
                      : i - o / 2),
                  Math.round(-1 * l - s));
            }
            _checkOverlayWithinViewport(e) {
              const i = this._getItemHeight(),
                r = this._viewportRuler.getViewportSize(),
                o = this._triggerRect.top - 8,
                s = r.height - this._triggerRect.bottom - 8,
                a = Math.abs(this._offsetY),
                c =
                  Math.min(this._getItemCount() * i, 256) -
                  a -
                  this._triggerRect.height;
              c > s
                ? this._adjustPanelUp(c, s)
                : a > o
                ? this._adjustPanelDown(a, o, e)
                : (this._transformOrigin = this._getOriginBasedOnOption());
            }
            _adjustPanelUp(e, i) {
              const r = Math.round(e - i);
              (this._scrollTop -= r),
                (this._offsetY -= r),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop <= 0 &&
                  ((this._scrollTop = 0),
                  (this._offsetY = 0),
                  (this._transformOrigin = "50% bottom 0px"));
            }
            _adjustPanelDown(e, i, r) {
              const o = Math.round(e - i);
              if (
                ((this._scrollTop += o),
                (this._offsetY += o),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop >= r)
              )
                return (
                  (this._scrollTop = r),
                  (this._offsetY = 0),
                  void (this._transformOrigin = "50% top 0px")
                );
            }
            _calculateOverlayPosition() {
              const e = this._getItemHeight(),
                i = this._getItemCount(),
                r = Math.min(i * e, 256),
                s = i * e - r;
              let a;
              (a = this.empty
                ? 0
                : Math.max(
                    this.options
                      .toArray()
                      .indexOf(this._selectionModel.selected[0]),
                    0
                  )),
                (a += iT(a, this.options, this.optionGroups));
              const l = r / 2;
              (this._scrollTop = this._calculateOverlayScroll(a, l, s)),
                (this._offsetY = this._calculateOverlayOffsetY(a, l, s)),
                this._checkOverlayWithinViewport(s);
            }
            _getOriginBasedOnOption() {
              const e = this._getItemHeight(),
                i = (e - this._triggerRect.height) / 2;
              return `50% ${Math.abs(this._offsetY) - i + e / 2}px 0px`;
            }
            _getItemHeight() {
              return 3 * this._triggerFontSize;
            }
            _getItemCount() {
              return this.options.length + this.optionGroups.length;
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = je(n)))(i || n);
              };
            })()),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-select"]],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (ke(r, hq, 5), ke(r, yo, 5), ke(r, nT, 5)), 2 & e)
                ) {
                  let o;
                  X((o = J())) && (i.customTrigger = o.first),
                    X((o = J())) && (i.options = o),
                    X((o = J())) && (i.optionGroups = o);
                }
              },
              hostAttrs: [
                "role",
                "combobox",
                "aria-autocomplete",
                "none",
                "aria-haspopup",
                "true",
                1,
                "mat-select",
              ],
              hostVars: 19,
              hostBindings: function (e, i) {
                1 & e &&
                  I("keydown", function (o) {
                    return i._handleKeydown(o);
                  })("focus", function () {
                    return i._onFocus();
                  })("blur", function () {
                    return i._onBlur();
                  }),
                  2 & e &&
                    (Ae("id", i.id)("tabindex", i.tabIndex)(
                      "aria-controls",
                      i.panelOpen ? i.id + "-panel" : null
                    )("aria-expanded", i.panelOpen)(
                      "aria-label",
                      i.ariaLabel || null
                    )("aria-required", i.required.toString())(
                      "aria-disabled",
                      i.disabled.toString()
                    )("aria-invalid", i.errorState)(
                      "aria-activedescendant",
                      i._getAriaActiveDescendant()
                    ),
                    Pe("mat-select-disabled", i.disabled)(
                      "mat-select-invalid",
                      i.errorState
                    )("mat-select-required", i.required)(
                      "mat-select-empty",
                      i.empty
                    )("mat-select-multiple", i.multiple));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                tabIndex: "tabIndex",
              },
              exportAs: ["matSelect"],
              features: [
                ae([
                  { provide: gd, useExisting: n },
                  { provide: tT, useExisting: n },
                ]),
                B,
              ],
              ngContentSelectors: rq,
              decls: 9,
              vars: 12,
              consts: [
                ["cdk-overlay-origin", "", 1, "mat-select-trigger", 3, "click"],
                ["origin", "cdkOverlayOrigin", "trigger", ""],
                [1, "mat-select-value", 3, "ngSwitch"],
                [
                  "class",
                  "mat-select-placeholder mat-select-min-line",
                  4,
                  "ngSwitchCase",
                ],
                [
                  "class",
                  "mat-select-value-text",
                  3,
                  "ngSwitch",
                  4,
                  "ngSwitchCase",
                ],
                [1, "mat-select-arrow-wrapper"],
                [1, "mat-select-arrow"],
                [
                  "cdk-connected-overlay",
                  "",
                  "cdkConnectedOverlayLockPosition",
                  "",
                  "cdkConnectedOverlayHasBackdrop",
                  "",
                  "cdkConnectedOverlayBackdropClass",
                  "cdk-overlay-transparent-backdrop",
                  3,
                  "cdkConnectedOverlayPanelClass",
                  "cdkConnectedOverlayScrollStrategy",
                  "cdkConnectedOverlayOrigin",
                  "cdkConnectedOverlayOpen",
                  "cdkConnectedOverlayPositions",
                  "cdkConnectedOverlayMinWidth",
                  "cdkConnectedOverlayOffsetY",
                  "backdropClick",
                  "attach",
                  "detach",
                ],
                [1, "mat-select-placeholder", "mat-select-min-line"],
                [1, "mat-select-value-text", 3, "ngSwitch"],
                ["class", "mat-select-min-line", 4, "ngSwitchDefault"],
                [4, "ngSwitchCase"],
                [1, "mat-select-min-line"],
                [1, "mat-select-panel-wrap"],
                ["role", "listbox", "tabindex", "-1", 3, "ngClass", "keydown"],
                ["panel", ""],
              ],
              template: function (e, i) {
                if (
                  (1 & e &&
                    (mt(iq),
                    g(0, "div", 0, 1),
                    I("click", function () {
                      return i.toggle();
                    }),
                    g(3, "div", 2),
                    N(4, X4, 2, 1, "span", 3),
                    N(5, tq, 3, 2, "span", 4),
                    m(),
                    g(6, "div", 5),
                    ge(7, "div", 6),
                    m()(),
                    N(8, nq, 4, 14, "ng-template", 7),
                    I("backdropClick", function () {
                      return i.close();
                    })("attach", function () {
                      return i._onAttached();
                    })("detach", function () {
                      return i.close();
                    })),
                  2 & e)
                ) {
                  const r = (function zf(n) {
                    return Fo(
                      (function EA() {
                        return ne.lFrame.contextLView;
                      })(),
                      22 + n
                    );
                  })(1);
                  Ae("aria-owns", i.panelOpen ? i.id + "-panel" : null),
                    C(3),
                    M("ngSwitch", i.empty),
                    Ae("id", i._valueId),
                    C(1),
                    M("ngSwitchCase", !0),
                    C(1),
                    M("ngSwitchCase", !1),
                    C(3),
                    M("cdkConnectedOverlayPanelClass", i._overlayPanelClass)(
                      "cdkConnectedOverlayScrollStrategy",
                      i._scrollStrategy
                    )("cdkConnectedOverlayOrigin", r)(
                      "cdkConnectedOverlayOpen",
                      i.panelOpen
                    )("cdkConnectedOverlayPositions", i._positions)(
                      "cdkConnectedOverlayMinWidth",
                      null == i._triggerRect ? null : i._triggerRect.width
                    )("cdkConnectedOverlayOffsetY", i._offsetY);
                }
              },
              dependencies: [Lp, Va, Bp, x0, ST, ET],
              styles: [
                '.mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}',
              ],
              encapsulation: 2,
              data: { animation: [PT.transformPanelWrap, PT.transformPanel] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        pq = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({
              providers: [cq],
              imports: [yi, Ps, rT, fe, wo, Hg, rT, fe],
            })),
            n
          );
        })();
      function mq(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " Nome do membro \xe9 obrigat\xf3rio "),
          m());
      }
      function gq(n, t) {
        if ((1 & n && (g(0, "mat-option", 9), v(1), m()), 2 & n)) {
          const e = t.$implicit;
          M("value", e.id_equipe), C(1), Ge(" ", e.nome_equipe, " ");
        }
      }
      function _q(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " \xc9 necess\xe1rio selecionar a equipe "),
          m());
      }
      let vq = (() => {
        class n {
          constructor(e, i, r, o, s) {
            (this.createMembroService = e),
              (this.equipesService = i),
              (this.formBuilder = r),
              (this.avisoMsg = o),
              (this.router = s),
              (this.formulario = this.formBuilder.group({
                nome: [null, it.required],
                funcao: [null],
                equipe: [null, it.required],
              })),
              (this.membro = { nome_membro: "", funcao: "", id_equipe: 0 });
          }
          ngOnInit() {
            this.equipes = this.equipesService.read();
          }
          goBack() {
            this.router.navigate(["membros"]);
          }
          onSubmit() {
            this.createMembroService
              .create({ membro: this.membro })
              .subscribe(() => {
                this.goBack(),
                  this.avisoMsg.showMsg({ msg: " Membro criado com sucesso " });
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(bo), h(lr), h(Qi), h(tn), h(we));
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["app-create-membros"]],
            decls: 21,
            vars: 10,
            consts: [
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "name",
                "name_member",
                "formControlName",
                "nome",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              [
                "matInput",
                "",
                "placeholder",
                "Fun\xe7\xe3o do Membro",
                "name",
                "funcao",
                "formControlName",
                "funcao",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [
                "name",
                "id_equipe",
                "formControlName",
                "equipe",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [3, "value", 4, "ngFor", "ngForOf"],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (g(0, "form", 0),
                I("ngSubmit", function () {
                  return i.onSubmit();
                }),
                g(1, "mat-form-field", 1)(2, "mat-label"),
                v(3, "Nome do membro"),
                m(),
                g(4, "input", 2),
                I("ngModelChange", function (o) {
                  return (i.membro.nome_membro = o);
                }),
                m(),
                N(5, mq, 2, 0, "mat-error", 3),
                m(),
                g(6, "mat-form-field", 1)(7, "mat-label"),
                v(8, "Fun\xe7\xe3o do membro"),
                m(),
                g(9, "input", 4),
                I("ngModelChange", function (o) {
                  return (i.membro.funcao = o);
                }),
                m()(),
                g(10, "mat-form-field", 1)(11, "mat-label"),
                v(12, "Nome da Equipe"),
                m(),
                g(13, "mat-select", 5),
                I("ngModelChange", function (o) {
                  return (i.membro.id_equipe = o);
                }),
                N(14, gq, 2, 2, "mat-option", 6),
                mi(15, "async"),
                m(),
                N(16, _q, 2, 0, "mat-error", 3),
                m(),
                g(17, "button", 7),
                v(18, " Salvar "),
                m(),
                g(19, "button", 8),
                I("click", function () {
                  return i.goBack();
                }),
                v(20, " Cancelar "),
                m()()),
                2 & e &&
                  (M("formGroup", i.formulario),
                  C(4),
                  M("ngModel", i.membro.nome_membro),
                  C(1),
                  M("ngIf", i.formulario.controls.nome.hasError("required")),
                  C(4),
                  M("ngModel", i.membro.funcao),
                  C(4),
                  M("ngModel", i.membro.id_equipe),
                  C(1),
                  M("ngForOf", gi(15, 8, i.equipes)),
                  C(2),
                  M("ngIf", i.formulario.controls.equipe.hasError("required")),
                  C(1),
                  M("disabled", !i.formulario.valid));
            },
            dependencies: [
              Zt,
              ct,
              Mi,
              Pn,
              wi,
              Di,
              Ir,
              Tt,
              or,
              sr,
              ei,
              ar,
              Vs,
              yo,
              Jt,
              Qn,
              Dr,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:10rem}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function yq(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " Nome do membro \xe9 obrigat\xf3rio "),
          m());
      }
      function bq(n, t) {
        if ((1 & n && (g(0, "mat-option", 9), v(1), m()), 2 & n)) {
          const e = t.$implicit;
          M("value", e.id_equipe), C(1), Ge(" ", e.nome_equipe, " ");
        }
      }
      function Cq(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " \xc9 necess\xe1rio selecionar a equipe "),
          m());
      }
      let wq = (() => {
        class n {
          constructor(e, i, r, o, s, a) {
            (this.membroService = e),
              (this.equipesService = i),
              (this.formBuilder = r),
              (this.route = o),
              (this.router = s),
              (this.aviso = a),
              (this.formulario = this.formBuilder.group({
                nome: [null, it.required],
                funcao: [null],
                equipe: [null, it.required],
              })),
              (this.membro = { nome_membro: "", funcao: "", id_equipe: 0 });
          }
          ngOnInit() {
            this.equipes = this.equipesService.read();
            const e = this.route.snapshot.paramMap.get("id");
            this.membroService.getById({ id: `${e}` }).subscribe((i) => {
              this.membro = i;
            });
          }
          goBack() {
            history.back();
          }
          onSubmit() {
            this.membroService.update({ membro: this.membro }).subscribe(() => {
              this.aviso.showMsg({ msg: "Membro atualizado com sucesso" }),
                this.goBack();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(bo), h(lr), h(Qi), h(yn), h(we), h(tn));
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["app-update-membro"]],
            decls: 21,
            vars: 10,
            consts: [
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "name",
                "name_member",
                "formControlName",
                "nome",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              [
                "matInput",
                "",
                "placeholder",
                "Fun\xe7\xe3o do Membro",
                "formControlName",
                "funcao",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["name", "id_equipe", "formControlName", "equipe", 3, "ngModel"],
              [3, "value", 4, "ngFor", "ngForOf"],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (g(0, "form", 0),
                I("ngSubmit", function () {
                  return i.onSubmit();
                }),
                g(1, "mat-form-field", 1)(2, "mat-label"),
                v(3, "Nome do membro"),
                m(),
                g(4, "input", 2),
                I("ngModelChange", function (o) {
                  return (i.membro.nome_membro = o);
                }),
                m(),
                N(5, yq, 2, 0, "mat-error", 3),
                m(),
                g(6, "mat-form-field", 1)(7, "mat-label"),
                v(8, "Fun\xe7\xe3o do membro"),
                m(),
                g(9, "input", 4),
                I("ngModelChange", function (o) {
                  return (i.membro.funcao = o);
                }),
                m()(),
                g(10, "mat-form-field", 1)(11, "mat-label"),
                v(12, "Nome da Equipe"),
                m(),
                g(13, "mat-select", 5),
                N(14, bq, 2, 2, "mat-option", 6),
                mi(15, "async"),
                m(),
                N(16, Cq, 2, 0, "mat-error", 3),
                m(),
                g(17, "button", 7),
                v(18, " Salvar "),
                m(),
                g(19, "button", 8),
                I("click", function () {
                  return i.goBack();
                }),
                v(20, " Cancelar "),
                m()()),
                2 & e &&
                  (M("formGroup", i.formulario),
                  C(4),
                  M("ngModel", i.membro.nome_membro),
                  C(1),
                  M("ngIf", i.formulario.controls.nome.hasError("required")),
                  C(4),
                  M("ngModel", i.membro.funcao),
                  C(4),
                  M("ngModel", i.membro.id_equipe),
                  C(1),
                  M("ngForOf", gi(15, 8, i.equipes)),
                  C(2),
                  M("ngIf", i.formulario.controls.equipe.hasError("required")),
                  C(1),
                  M("disabled", !i.formulario.valid));
            },
            dependencies: [
              Zt,
              ct,
              Mi,
              Pn,
              wi,
              Di,
              Ir,
              Tt,
              or,
              sr,
              ei,
              ar,
              Vs,
              yo,
              Jt,
              Qn,
              Dr,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:10rem}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function Dq(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " Nome do projeto \xe9 necess\xe1rio "),
          m());
      }
      function Mq(n, t) {
        if ((1 & n && (g(0, "mat-option", 10), v(1), m()), 2 & n)) {
          const e = t.$implicit;
          M("value", e.id_equipe),
            C(1),
            Cr(" ", e.id_equipe, " - ", e.nome_equipe, " ");
        }
      }
      function Eq(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " \xc9 necess\xe1rio escolher a equipe "),
          m());
      }
      let Sq = (() => {
        class n {
          constructor(e, i, r, o, s) {
            (this.router = e),
              (this.avisoMsg = i),
              (this.createProjeto = r),
              (this.equipesService = o),
              (this.formBuilder = s),
              (this.formulario = this.formBuilder.group({
                nome: [null, it.required],
                descricao: [null],
                equipe: [null, it.required],
              })),
              (this.projeto = {
                nome_projeto: "",
                descricao: "",
                id_equipe: 0,
              });
          }
          ngOnInit() {
            this.equipes = this.equipesService.read();
          }
          goBack() {
            this.router.navigate(["projetos"]);
          }
          onSubmit() {
            this.createProjeto.create(this.projeto).subscribe(() => {
              this.goBack(),
                this.avisoMsg.showMsg({ msg: "Projeto criado com sucesso" });
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(we), h(tn), h(Co), h(lr), h(Qi));
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["app-create-projetos"]],
            decls: 26,
            vars: 10,
            consts: [
              [1, "form"],
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "placeholder",
                "Nome do projeto",
                "name",
                "name_project",
                "formControlName",
                "nome",
                "maxlength",
                "40",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              [
                "matInput",
                "",
                "name",
                "description",
                "formControlName",
                "descricao",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [
                "name",
                "equipe_responsavel",
                "formControlName",
                "equipe",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [3, "value", 4, "ngFor", "ngForOf"],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (g(0, "mat-card", 0)(1, "mat-card-title"),
                v(2, " Criar projetos "),
                m(),
                g(3, "mat-card-subtitle"),
                v(4, " \xc1rea para cria\xe7\xe3o de novos projetos "),
                m()(),
                g(5, "form", 1),
                I("ngSubmit", function () {
                  return i.onSubmit();
                }),
                g(6, "mat-form-field", 2)(7, "mat-label"),
                v(8, "Nome do projeto"),
                m(),
                g(9, "input", 3),
                I("ngModelChange", function (o) {
                  return (i.projeto.nome_projeto = o);
                }),
                m(),
                N(10, Dq, 2, 0, "mat-error", 4),
                m(),
                g(11, "mat-form-field", 2)(12, "mat-label"),
                v(13, "Descri\xe7\xe3o do projeto"),
                m(),
                g(14, "textarea", 5),
                I("ngModelChange", function (o) {
                  return (i.projeto.descricao = o);
                }),
                m()(),
                g(15, "mat-form-field", 2)(16, "mat-label"),
                v(17, "Equipe respons\xe1vel"),
                m(),
                g(18, "mat-select", 6),
                I("ngModelChange", function (o) {
                  return (i.projeto.id_equipe = o);
                }),
                N(19, Mq, 2, 3, "mat-option", 7),
                mi(20, "async"),
                m(),
                N(21, Eq, 2, 0, "mat-error", 4),
                m(),
                g(22, "button", 8),
                v(23, " Salvar "),
                m(),
                g(24, "button", 9),
                I("click", function () {
                  return i.goBack();
                }),
                v(25, " Cancelar "),
                m()()),
                2 & e &&
                  (C(5),
                  M("formGroup", i.formulario),
                  C(4),
                  M("ngModel", i.projeto.nome_projeto),
                  C(1),
                  M("ngIf", i.formulario.controls.nome.hasError("required")),
                  C(4),
                  M("ngModel", i.projeto.descricao),
                  C(4),
                  M("ngModel", i.projeto.id_equipe),
                  C(1),
                  M("ngForOf", gi(20, 8, i.equipes)),
                  C(2),
                  M("ngIf", i.formulario.controls.equipe.hasError("required")),
                  C(1),
                  M("disabled", !i.formulario.valid));
            },
            dependencies: [
              Zt,
              ct,
              Mi,
              Pn,
              wi,
              Di,
              Ir,
              Tt,
              ki,
              Ai,
              Ii,
              or,
              sr,
              ei,
              ar,
              Vs,
              yo,
              Jt,
              Qn,
              Dr,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:150px}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function Tq(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " Nome do projeto \xe9 necess\xe1rio "),
          m());
      }
      function xq(n, t) {
        if ((1 & n && (g(0, "mat-option", 10), v(1), m()), 2 & n)) {
          const e = t.$implicit;
          M("value", e.id_equipe),
            C(1),
            Cr(" ", e.id_equipe, " - ", e.nome_equipe, " ");
        }
      }
      function Aq(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " \xc9 necess\xe1rio escolher a equipe "),
          m());
      }
      let Iq = (() => {
        class n {
          constructor(e, i, r, o, s, a) {
            (this.createProjeto = e),
              (this.equipesService = i),
              (this.formBuilder = r),
              (this.avisoMsg = o),
              (this.route = s),
              (this.router = a),
              (this.formulario = this.formBuilder.group({
                nome: [null, it.required],
                descricao: [null],
                equipe: [null, it.required],
              })),
              (this.projeto = {
                nome_projeto: "",
                descricao: "",
                id_equipe: 0,
              });
          }
          ngOnInit() {
            this.equipes = this.equipesService.read();
            const e = this.route.snapshot.paramMap.get("id");
            this.createProjeto.getById(`${e}`).subscribe((i) => {
              this.projeto = i;
            });
          }
          goBack() {
            this.router.navigate(["projetos"]);
          }
          onSubmit() {
            this.createProjeto.update(this.projeto).subscribe(() => {
              this.avisoMsg.showMsg({ msg: "Projeto atualizado com sucesso" }),
                this.goBack();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(Co), h(lr), h(Qi), h(tn), h(yn), h(we));
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["app-update-projeto"]],
            decls: 26,
            vars: 10,
            consts: [
              [1, "form"],
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "placeholder",
                "Nome do projeto",
                "name",
                "name_project",
                "formControlName",
                "nome",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              [
                "matInput",
                "",
                "name",
                "description",
                "formControlName",
                "descricao",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [
                "name",
                "equipe_responsavel",
                "formControlName",
                "equipe",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [3, "value", 4, "ngFor", "ngForOf"],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (g(0, "mat-card", 0)(1, "mat-card-title"),
                v(2, " Atualizar projetos "),
                m(),
                g(3, "mat-card-subtitle"),
                v(4, " \xc1rea para atualiza\xe7\xe3o de projetos"),
                m()(),
                g(5, "form", 1),
                I("ngSubmit", function () {
                  return i.onSubmit();
                }),
                g(6, "mat-form-field", 2)(7, "mat-label"),
                v(8, "Nome do projeto"),
                m(),
                g(9, "input", 3),
                I("ngModelChange", function (o) {
                  return (i.projeto.nome_projeto = o);
                }),
                m(),
                N(10, Tq, 2, 0, "mat-error", 4),
                m(),
                g(11, "mat-form-field", 2)(12, "mat-label"),
                v(13, "Descri\xe7\xe3o do projeto"),
                m(),
                g(14, "textarea", 5),
                I("ngModelChange", function (o) {
                  return (i.projeto.descricao = o);
                }),
                m()(),
                g(15, "mat-form-field", 2)(16, "mat-label"),
                v(17, "Equipe respons\xe1vel"),
                m(),
                g(18, "mat-select", 6),
                I("ngModelChange", function (o) {
                  return (i.projeto.id_equipe = o);
                }),
                N(19, xq, 2, 3, "mat-option", 7),
                mi(20, "async"),
                m(),
                N(21, Aq, 2, 0, "mat-error", 4),
                m(),
                g(22, "button", 8),
                v(23, " Salvar "),
                m(),
                g(24, "button", 9),
                I("click", function () {
                  return i.goBack();
                }),
                v(25, " Cancelar "),
                m()()),
                2 & e &&
                  (C(5),
                  M("formGroup", i.formulario),
                  C(4),
                  M("ngModel", i.projeto.nome_projeto),
                  C(1),
                  M("ngIf", i.formulario.controls.nome.hasError("required")),
                  C(4),
                  M("ngModel", i.projeto.descricao),
                  C(4),
                  M("ngModel", i.projeto.id_equipe),
                  C(1),
                  M("ngForOf", gi(20, 8, i.equipes)),
                  C(2),
                  M("ngIf", i.formulario.controls.equipe.hasError("required")),
                  C(1),
                  M("disabled", !i.formulario.valid));
            },
            dependencies: [
              Zt,
              ct,
              Mi,
              Pn,
              wi,
              Di,
              Tt,
              ki,
              Ai,
              Ii,
              or,
              sr,
              ei,
              ar,
              Vs,
              yo,
              Jt,
              Qn,
              Dr,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:150px}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function kq(n, t) {
        if (
          (1 & n &&
            (g(0, "li", 1)(1, "span", 2),
            v(2),
            m(),
            g(3, "span", 3),
            v(4),
            m()()),
          2 & n)
        ) {
          const e = t.$implicit;
          Yt("routerLink", "dados/", e.id_projeto, ""),
            C(2),
            Je(e.nome_projeto),
            C(2),
            Ge(" ", e.descricao, " ");
        }
      }
      let Rq = (() => {
          class n {
            constructor(e, i, r) {
              (this.projetoService = e),
                (this.message = i),
                (this.dialog = r),
                (this.projetos = []);
            }
            ngOnInit() {
              this.projetoService.read().subscribe((e) => {
                this.projetos = e;
              });
            }
            atualizaProjeto() {
              this.message.showMsg({ msg: "Fun\xe7\xe3o em constru\xe7\xe3o" });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(Co), h(tn), h(Pr));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-read-projetos"]],
              decls: 2,
              vars: 1,
              consts: [
                [3, "routerLink", 4, "ngFor", "ngForOf"],
                [3, "routerLink"],
                [1, "nome"],
                [1, "descricao"],
              ],
              template: function (e, i) {
                1 & e && (g(0, "ul"), N(1, kq, 5, 3, "li", 0), m()),
                  2 & e && (C(1), M("ngForOf", i.projetos));
              },
              dependencies: [Ti, Zt],
              styles: [
                "ul[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}li[_ngcontent-%COMP%]{background-color:#232b67;border:1px solid #000000;border-radius:10px;color:#fff;display:flex;flex-direction:column;height:50px;justify-content:space-around;line-height:2rem;list-style:none;margin:10px;min-width:25rem;padding:30px;width:35%;box-sizing:content-box;cursor:pointer}li[_ngcontent-%COMP%]   span.nome[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;margin:2px}",
              ],
            })),
            n
          );
        })(),
        Oq = (() => {
          class n {
            constructor(e) {
              this.router = e;
            }
            ngOnInit() {}
            goToCreateProjeto() {
              this.router.navigate(["projetos/create"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(we));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-projetos"]],
              decls: 5,
              vars: 0,
              consts: [
                [1, "title-view"],
                ["mat-raised-button", "", 1, "add", 3, "click"],
                [
                  "src",
                  "./../../../../assets/images/add_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "h1", 0),
                  v(1, "Projetos"),
                  m(),
                  ge(2, "app-read-projetos"),
                  g(3, "button", 1),
                  I("click", function () {
                    return i.goToCreateProjeto();
                  }),
                  ge(4, "img", 2),
                  m());
              },
              dependencies: [Tt, Rq],
            })),
            n
          );
        })(),
        Fq = (() => {
          class n {
            constructor(e, i, r, o) {
              (this.dialog = e),
                (this.http = i),
                (this.message = r),
                (this.data = o);
            }
            fechaDialog() {
              this.dialog.close();
            }
            deletaTarefa(e) {
              this.http.delete(`${nr_apiUrl}tarefas/${e}`).subscribe(() => {
                this.message.showMsg({
                  msg: "Tarefa deletada com sucesso\nFavor recarregar a p\xe1gina ",
                });
              }),
                this.fechaDialog();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(El), h(en), h(tn), h(Sl));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-delete-warning"]],
              decls: 11,
              vars: 0,
              consts: [
                [1, "material-icons"],
                [3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "h1")(1, "i", 0),
                  v(2, " warning "),
                  m(),
                  v(3, " Aviso\n"),
                  m(),
                  g(4, "p"),
                  v(5, "Tem certeza que deseja deletar essa tarefa?"),
                  m(),
                  g(6, "div")(7, "button", 1),
                  I("click", function () {
                    return i.fechaDialog();
                  }),
                  v(8, "Fechar"),
                  m(),
                  g(9, "button", 1),
                  I("click", function () {
                    return i.deletaTarefa(i.data);
                  }),
                  v(10, "Deletar"),
                  m()());
              },
              styles: [
                "h1[_ngcontent-%COMP%]{align-items:center;display:flex}h1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:5px}button[_ngcontent-%COMP%]{border-radius:5px;height:1.5rem;margin-right:5px;padding:0 10px}button.deletar[_ngcontent-%COMP%]:hover{background-color:#f005}",
              ],
            })),
            n
          );
        })();
      const Pq = ["tooltip"],
        BT = "tooltip-panel",
        jT = As({ passive: !0 }),
        HT = new x("mat-tooltip-scroll-strategy"),
        Bq = {
          provide: HT,
          deps: [bn],
          useFactory: function Vq(n) {
            return () => n.scrollStrategies.reposition({ scrollThrottle: 20 });
          },
        },
        jq = new x("mat-tooltip-default-options", {
          providedIn: "root",
          factory: function Hq() {
            return { showDelay: 0, hideDelay: 0, touchendHideDelay: 1500 };
          },
        });
      let Uq = (() => {
          class n {
            constructor(e, i, r, o, s, a, l, c, u, d, f, p) {
              (this._overlay = e),
                (this._elementRef = i),
                (this._scrollDispatcher = r),
                (this._viewContainerRef = o),
                (this._ngZone = s),
                (this._platform = a),
                (this._ariaDescriber = l),
                (this._focusMonitor = c),
                (this._dir = d),
                (this._defaultOptions = f),
                (this._position = "below"),
                (this._disabled = !1),
                (this._viewInitialized = !1),
                (this._pointerExitEventsInitialized = !1),
                (this._viewportMargin = 8),
                (this._cssClassPrefix = "mat"),
                (this._showDelay = this._defaultOptions.showDelay),
                (this._hideDelay = this._defaultOptions.hideDelay),
                (this.touchGestures = "auto"),
                (this._message = ""),
                (this._passiveListeners = []),
                (this._destroyed = new V()),
                (this._scrollStrategy = u),
                (this._document = p),
                f &&
                  (f.position && (this.position = f.position),
                  f.touchGestures && (this.touchGestures = f.touchGestures)),
                d.change.pipe(ce(this._destroyed)).subscribe(() => {
                  this._overlayRef && this._updatePosition(this._overlayRef);
                });
            }
            get position() {
              return this._position;
            }
            set position(e) {
              e !== this._position &&
                ((this._position = e),
                this._overlayRef &&
                  (this._updatePosition(this._overlayRef),
                  this._tooltipInstance?.show(0),
                  this._overlayRef.updatePosition()));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = be(e)),
                this._disabled
                  ? this.hide(0)
                  : this._setupPointerEnterEventsIfNeeded();
            }
            get showDelay() {
              return this._showDelay;
            }
            set showDelay(e) {
              this._showDelay = Jn(e);
            }
            get hideDelay() {
              return this._hideDelay;
            }
            set hideDelay(e) {
              (this._hideDelay = Jn(e)),
                this._tooltipInstance &&
                  (this._tooltipInstance._mouseLeaveHideDelay =
                    this._hideDelay);
            }
            get message() {
              return this._message;
            }
            set message(e) {
              this._ariaDescriber.removeDescription(
                this._elementRef.nativeElement,
                this._message,
                "tooltip"
              ),
                (this._message = null != e ? String(e).trim() : ""),
                !this._message && this._isTooltipVisible()
                  ? this.hide(0)
                  : (this._setupPointerEnterEventsIfNeeded(),
                    this._updateTooltipMessage(),
                    this._ngZone.runOutsideAngular(() => {
                      Promise.resolve().then(() => {
                        this._ariaDescriber.describe(
                          this._elementRef.nativeElement,
                          this.message,
                          "tooltip"
                        );
                      });
                    }));
            }
            get tooltipClass() {
              return this._tooltipClass;
            }
            set tooltipClass(e) {
              (this._tooltipClass = e),
                this._tooltipInstance &&
                  this._setTooltipClass(this._tooltipClass);
            }
            ngAfterViewInit() {
              (this._viewInitialized = !0),
                this._setupPointerEnterEventsIfNeeded(),
                this._focusMonitor
                  .monitor(this._elementRef)
                  .pipe(ce(this._destroyed))
                  .subscribe((e) => {
                    e
                      ? "keyboard" === e && this._ngZone.run(() => this.show())
                      : this._ngZone.run(() => this.hide(0));
                  });
            }
            ngOnDestroy() {
              const e = this._elementRef.nativeElement;
              clearTimeout(this._touchstartTimeout),
                this._overlayRef &&
                  (this._overlayRef.dispose(), (this._tooltipInstance = null)),
                this._passiveListeners.forEach(([i, r]) => {
                  e.removeEventListener(i, r, jT);
                }),
                (this._passiveListeners.length = 0),
                this._destroyed.next(),
                this._destroyed.complete(),
                this._ariaDescriber.removeDescription(
                  e,
                  this.message,
                  "tooltip"
                ),
                this._focusMonitor.stopMonitoring(e);
            }
            show(e = this.showDelay) {
              if (
                this.disabled ||
                !this.message ||
                (this._isTooltipVisible() &&
                  !this._tooltipInstance._showTimeoutId &&
                  !this._tooltipInstance._hideTimeoutId)
              )
                return;
              const i = this._createOverlay();
              this._detach(),
                (this._portal =
                  this._portal ||
                  new Fs(this._tooltipComponent, this._viewContainerRef));
              const r = (this._tooltipInstance = i.attach(
                this._portal
              ).instance);
              (r._triggerElement = this._elementRef.nativeElement),
                (r._mouseLeaveHideDelay = this._hideDelay),
                r
                  .afterHidden()
                  .pipe(ce(this._destroyed))
                  .subscribe(() => this._detach()),
                this._setTooltipClass(this._tooltipClass),
                this._updateTooltipMessage(),
                r.show(e);
            }
            hide(e = this.hideDelay) {
              this._tooltipInstance && this._tooltipInstance.hide(e);
            }
            toggle() {
              this._isTooltipVisible() ? this.hide() : this.show();
            }
            _isTooltipVisible() {
              return (
                !!this._tooltipInstance && this._tooltipInstance.isVisible()
              );
            }
            _createOverlay() {
              if (this._overlayRef) return this._overlayRef;
              const e = this._scrollDispatcher.getAncestorScrollContainers(
                  this._elementRef
                ),
                i = this._overlay
                  .position()
                  .flexibleConnectedTo(this._elementRef)
                  .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)
                  .withFlexibleDimensions(!1)
                  .withViewportMargin(this._viewportMargin)
                  .withScrollableContainers(e);
              return (
                i.positionChanges.pipe(ce(this._destroyed)).subscribe((r) => {
                  this._updateCurrentPositionClass(r.connectionPair),
                    this._tooltipInstance &&
                      r.scrollableViewProperties.isOverlayClipped &&
                      this._tooltipInstance.isVisible() &&
                      this._ngZone.run(() => this.hide(0));
                }),
                (this._overlayRef = this._overlay.create({
                  direction: this._dir,
                  positionStrategy: i,
                  panelClass: `${this._cssClassPrefix}-${BT}`,
                  scrollStrategy: this._scrollStrategy(),
                })),
                this._updatePosition(this._overlayRef),
                this._overlayRef
                  .detachments()
                  .pipe(ce(this._destroyed))
                  .subscribe(() => this._detach()),
                this._overlayRef
                  .outsidePointerEvents()
                  .pipe(ce(this._destroyed))
                  .subscribe(() =>
                    this._tooltipInstance?._handleBodyInteraction()
                  ),
                this._overlayRef
                  .keydownEvents()
                  .pipe(ce(this._destroyed))
                  .subscribe((r) => {
                    this._isTooltipVisible() &&
                      27 === r.keyCode &&
                      !Xn(r) &&
                      (r.preventDefault(),
                      r.stopPropagation(),
                      this._ngZone.run(() => this.hide(0)));
                  }),
                this._defaultOptions?.disableTooltipInteractivity &&
                  this._overlayRef.addPanelClass(
                    `${this._cssClassPrefix}-tooltip-panel-non-interactive`
                  ),
                this._overlayRef
              );
            }
            _detach() {
              this._overlayRef &&
                this._overlayRef.hasAttached() &&
                this._overlayRef.detach(),
                (this._tooltipInstance = null);
            }
            _updatePosition(e) {
              const i = e.getConfig().positionStrategy,
                r = this._getOrigin(),
                o = this._getOverlayPosition();
              i.withPositions([
                this._addOffset({ ...r.main, ...o.main }),
                this._addOffset({ ...r.fallback, ...o.fallback }),
              ]);
            }
            _addOffset(e) {
              return e;
            }
            _getOrigin() {
              const e = !this._dir || "ltr" == this._dir.value,
                i = this.position;
              let r;
              "above" == i || "below" == i
                ? (r = {
                    originX: "center",
                    originY: "above" == i ? "top" : "bottom",
                  })
                : "before" == i || ("left" == i && e) || ("right" == i && !e)
                ? (r = { originX: "start", originY: "center" })
                : ("after" == i ||
                    ("right" == i && e) ||
                    ("left" == i && !e)) &&
                  (r = { originX: "end", originY: "center" });
              const { x: o, y: s } = this._invertPosition(r.originX, r.originY);
              return { main: r, fallback: { originX: o, originY: s } };
            }
            _getOverlayPosition() {
              const e = !this._dir || "ltr" == this._dir.value,
                i = this.position;
              let r;
              "above" == i
                ? (r = { overlayX: "center", overlayY: "bottom" })
                : "below" == i
                ? (r = { overlayX: "center", overlayY: "top" })
                : "before" == i || ("left" == i && e) || ("right" == i && !e)
                ? (r = { overlayX: "end", overlayY: "center" })
                : ("after" == i ||
                    ("right" == i && e) ||
                    ("left" == i && !e)) &&
                  (r = { overlayX: "start", overlayY: "center" });
              const { x: o, y: s } = this._invertPosition(
                r.overlayX,
                r.overlayY
              );
              return { main: r, fallback: { overlayX: o, overlayY: s } };
            }
            _updateTooltipMessage() {
              this._tooltipInstance &&
                ((this._tooltipInstance.message = this.message),
                this._tooltipInstance._markForCheck(),
                this._ngZone.onMicrotaskEmpty
                  .pipe(vt(1), ce(this._destroyed))
                  .subscribe(() => {
                    this._tooltipInstance && this._overlayRef.updatePosition();
                  }));
            }
            _setTooltipClass(e) {
              this._tooltipInstance &&
                ((this._tooltipInstance.tooltipClass = e),
                this._tooltipInstance._markForCheck());
            }
            _invertPosition(e, i) {
              return (
                "above" === this.position || "below" === this.position
                  ? "top" === i
                    ? (i = "bottom")
                    : "bottom" === i && (i = "top")
                  : "end" === e
                  ? (e = "start")
                  : "start" === e && (e = "end"),
                { x: e, y: i }
              );
            }
            _updateCurrentPositionClass(e) {
              const { overlayY: i, originX: r, originY: o } = e;
              let s;
              if (
                ((s =
                  "center" === i
                    ? this._dir && "rtl" === this._dir.value
                      ? "end" === r
                        ? "left"
                        : "right"
                      : "start" === r
                      ? "left"
                      : "right"
                    : "bottom" === i && "top" === o
                    ? "above"
                    : "below"),
                s !== this._currentPosition)
              ) {
                const a = this._overlayRef;
                if (a) {
                  const l = `${this._cssClassPrefix}-${BT}-`;
                  a.removePanelClass(l + this._currentPosition),
                    a.addPanelClass(l + s);
                }
                this._currentPosition = s;
              }
            }
            _setupPointerEnterEventsIfNeeded() {
              this._disabled ||
                !this.message ||
                !this._viewInitialized ||
                this._passiveListeners.length ||
                (this._platformSupportsMouseEvents()
                  ? this._passiveListeners.push([
                      "mouseenter",
                      () => {
                        this._setupPointerExitEventsIfNeeded(), this.show();
                      },
                    ])
                  : "off" !== this.touchGestures &&
                    (this._disableNativeGesturesIfNecessary(),
                    this._passiveListeners.push([
                      "touchstart",
                      () => {
                        this._setupPointerExitEventsIfNeeded(),
                          clearTimeout(this._touchstartTimeout),
                          (this._touchstartTimeout = setTimeout(
                            () => this.show(),
                            500
                          ));
                      },
                    ])),
                this._addListeners(this._passiveListeners));
            }
            _setupPointerExitEventsIfNeeded() {
              if (this._pointerExitEventsInitialized) return;
              this._pointerExitEventsInitialized = !0;
              const e = [];
              if (this._platformSupportsMouseEvents())
                e.push(
                  [
                    "mouseleave",
                    (i) => {
                      const r = i.relatedTarget;
                      (!r || !this._overlayRef?.overlayElement.contains(r)) &&
                        this.hide();
                    },
                  ],
                  ["wheel", (i) => this._wheelListener(i)]
                );
              else if ("off" !== this.touchGestures) {
                this._disableNativeGesturesIfNecessary();
                const i = () => {
                  clearTimeout(this._touchstartTimeout),
                    this.hide(this._defaultOptions.touchendHideDelay);
                };
                e.push(["touchend", i], ["touchcancel", i]);
              }
              this._addListeners(e), this._passiveListeners.push(...e);
            }
            _addListeners(e) {
              e.forEach(([i, r]) => {
                this._elementRef.nativeElement.addEventListener(i, r, jT);
              });
            }
            _platformSupportsMouseEvents() {
              return !this._platform.IOS && !this._platform.ANDROID;
            }
            _wheelListener(e) {
              if (this._isTooltipVisible()) {
                const i = this._document.elementFromPoint(e.clientX, e.clientY),
                  r = this._elementRef.nativeElement;
                i !== r && !r.contains(i) && this.hide();
              }
            }
            _disableNativeGesturesIfNecessary() {
              const e = this.touchGestures;
              if ("off" !== e) {
                const i = this._elementRef.nativeElement,
                  r = i.style;
                ("on" === e ||
                  ("INPUT" !== i.nodeName && "TEXTAREA" !== i.nodeName)) &&
                  (r.userSelect =
                    r.msUserSelect =
                    r.webkitUserSelect =
                    r.MozUserSelect =
                      "none"),
                  ("on" === e || !i.draggable) && (r.webkitUserDrag = "none"),
                  (r.touchAction = "none"),
                  (r.webkitTapHighlightColor = "transparent");
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              Zr();
            }),
            (n.ɵdir = R({
              type: n,
              inputs: {
                position: ["matTooltipPosition", "position"],
                disabled: ["matTooltipDisabled", "disabled"],
                showDelay: ["matTooltipShowDelay", "showDelay"],
                hideDelay: ["matTooltipHideDelay", "hideDelay"],
                touchGestures: ["matTooltipTouchGestures", "touchGestures"],
                message: ["matTooltip", "message"],
                tooltipClass: ["matTooltipClass", "tooltipClass"],
              },
            })),
            n
          );
        })(),
        $q = (() => {
          class n extends Uq {
            constructor(e, i, r, o, s, a, l, c, u, d, f, p) {
              super(e, i, r, o, s, a, l, c, u, d, f, p),
                (this._tooltipComponent = qq);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                h(bn),
                h(ie),
                h(bl),
                h(Rt),
                h(G),
                h(yt),
                h(UU),
                h(Fr),
                h(HT),
                h(xi, 8),
                h(jq, 8),
                h(ee)
              );
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [["", "matTooltip", ""]],
              hostAttrs: [1, "mat-tooltip-trigger"],
              exportAs: ["matTooltip"],
              features: [B],
            })),
            n
          );
        })(),
        zq = (() => {
          class n {
            constructor(e, i) {
              (this._changeDetectorRef = e),
                (this._visibility = "initial"),
                (this._closeOnInteraction = !1),
                (this._isVisible = !1),
                (this._onHide = new V()),
                (this._animationsDisabled = "NoopAnimations" === i);
            }
            show(e) {
              clearTimeout(this._hideTimeoutId),
                (this._showTimeoutId = setTimeout(() => {
                  this._toggleVisibility(!0), (this._showTimeoutId = void 0);
                }, e));
            }
            hide(e) {
              clearTimeout(this._showTimeoutId),
                (this._hideTimeoutId = setTimeout(() => {
                  this._toggleVisibility(!1), (this._hideTimeoutId = void 0);
                }, e));
            }
            afterHidden() {
              return this._onHide;
            }
            isVisible() {
              return this._isVisible;
            }
            ngOnDestroy() {
              clearTimeout(this._showTimeoutId),
                clearTimeout(this._hideTimeoutId),
                this._onHide.complete(),
                (this._triggerElement = null);
            }
            _handleBodyInteraction() {
              this._closeOnInteraction && this.hide(0);
            }
            _markForCheck() {
              this._changeDetectorRef.markForCheck();
            }
            _handleMouseLeave({ relatedTarget: e }) {
              (!e || !this._triggerElement.contains(e)) &&
                this.hide(this._mouseLeaveHideDelay);
            }
            _onShow() {}
            _handleAnimationEnd({ animationName: e }) {
              (e === this._showAnimation || e === this._hideAnimation) &&
                this._finalizeAnimation(e === this._showAnimation);
            }
            _finalizeAnimation(e) {
              e
                ? (this._closeOnInteraction = !0)
                : this.isVisible() || this._onHide.next();
            }
            _toggleVisibility(e) {
              const i = this._tooltip.nativeElement,
                r = this._showAnimation,
                o = this._hideAnimation;
              if (
                (i.classList.remove(e ? o : r),
                i.classList.add(e ? r : o),
                (this._isVisible = e),
                e &&
                  !this._animationsDisabled &&
                  "function" == typeof getComputedStyle)
              ) {
                const s = getComputedStyle(i);
                ("0s" === s.getPropertyValue("animation-duration") ||
                  "none" === s.getPropertyValue("animation-name")) &&
                  (this._animationsDisabled = !0);
              }
              e && this._onShow(),
                this._animationsDisabled &&
                  (i.classList.add("_mat-animation-noopable"),
                  this._finalizeAnimation(e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(st), h(pn, 8));
            }),
            (n.ɵdir = R({ type: n })),
            n
          );
        })(),
        qq = (() => {
          class n extends zq {
            constructor(e, i, r) {
              super(e, r),
                (this._breakpointObserver = i),
                (this._isHandset = this._breakpointObserver.observe(
                  "(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)"
                )),
                (this._showAnimation = "mat-tooltip-show"),
                (this._hideAnimation = "mat-tooltip-hide");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(st), h(cd), h(pn, 8));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-tooltip-component"]],
              viewQuery: function (e, i) {
                if ((1 & e && Et(Pq, 7), 2 & e)) {
                  let r;
                  X((r = J())) && (i._tooltip = r.first);
                }
              },
              hostAttrs: ["aria-hidden", "true"],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  I("mouseleave", function (o) {
                    return i._handleMouseLeave(o);
                  }),
                  2 & e && Jr("zoom", i.isVisible() ? 1 : null);
              },
              features: [B],
              decls: 4,
              vars: 6,
              consts: [
                [1, "mat-tooltip", 3, "ngClass", "animationend"],
                ["tooltip", ""],
              ],
              template: function (e, i) {
                if (
                  (1 & e &&
                    (g(0, "div", 0, 1),
                    I("animationend", function (o) {
                      return i._handleAnimationEnd(o);
                    }),
                    mi(2, "async"),
                    v(3),
                    m()),
                  2 & e)
                ) {
                  let r;
                  Pe(
                    "mat-tooltip-handset",
                    null == (r = gi(2, 4, i._isHandset)) ? null : r.matches
                  ),
                    M("ngClass", i.tooltipClass),
                    C(3),
                    Je(i.message);
                }
              },
              dependencies: [Lp, Dr],
              styles: [
                ".mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis;transform:scale(0)}.mat-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}.mat-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-tooltip-show{0%{opacity:0;transform:scale(0)}50%{opacity:.5;transform:scale(0.99)}100%{opacity:1;transform:scale(1)}}@keyframes mat-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(1)}}.mat-tooltip-show{animation:mat-tooltip-show 200ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-tooltip-hide{animation:mat-tooltip-hide 100ms cubic-bezier(0, 0, 0.2, 1) forwards}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Gq = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({
              providers: [Bq],
              imports: [qS, yi, Ps, fe, fe, wo],
            })),
            n
          );
        })();
      function Wq(n, t) {
        if (1 & n) {
          const e = zi();
          g(0, "li")(1, "span", 1),
            v(2),
            m(),
            g(3, "span", 2),
            v(4),
            m(),
            g(5, "span", 3)(6, "i", 4),
            v(7, " description "),
            m(),
            v(8),
            m(),
            g(9, "span", 5)(10, "i", 4),
            v(11, " person "),
            m(),
            v(12),
            m(),
            g(13, "div")(14, "button", 6),
            I("click", function () {
              const o = ii(e).$implicit;
              return ri(Ie().openDialog("0ms", "0ms", o.id_tarefa));
            }),
            g(15, "i", 7),
            v(16, " delete "),
            m()(),
            g(17, "button", 8)(18, "i", 7),
            v(19, " create "),
            m()()()();
        }
        if (2 & n) {
          const e = t.$implicit;
          C(2),
            Je(e.nome_tarefa),
            C(2),
            Ge(" ", e.descricao, " "),
            C(4),
            Ge(" ", e.nome_projeto, " "),
            C(4),
            Ge(" ", e.nome_membro, " "),
            C(5),
            Yt("routerLink", "/tarefas/update/", e.id_tarefa, "");
        }
      }
      let Yq = (() => {
          class n {
            constructor(e, i, r, o) {
              (this.tarefaService = e),
                (this.message = i),
                (this.http = r),
                (this.dialog = o),
                (this.tarefas = []),
                (this.tarefasUrl = `${nr_apiUrl}tarefas/`);
            }
            ngOnInit() {
              this.tarefaService.read().subscribe((e) => {
                this.tarefas = e;
              });
            }
            openDialog(e, i, r) {
              this.dialog.open(Fq, {
                data: r,
                width: "250px",
                enterAnimationDuration: e,
                exitAnimationDuration: i,
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(_d), h(tn), h(en), h(Pr));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-read-tarefas"]],
              decls: 2,
              vars: 1,
              consts: [
                [4, "ngFor", "ngForOf"],
                [1, "nome"],
                [1, "descricao"],
                [1, "projeto"],
                [1, "material-icons", "icon-components"],
                [1, "membro"],
                ["matTooltip", "Deletar tarefa", 1, "deletar", 3, "click"],
                [1, "material-icons"],
                ["matTooltip", "Editar tarefa", 1, "editar", 3, "routerLink"],
              ],
              template: function (e, i) {
                1 & e && (g(0, "ul"), N(1, Wq, 20, 5, "li", 0), m()),
                  2 & e && (C(1), M("ngForOf", i.tarefas));
              },
              dependencies: [Ti, Zt, $q],
              styles: [
                "ul[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}li[_ngcontent-%COMP%]{background-color:#232b67;border:1px solid black;border-radius:10px;color:#fff;display:flex;flex-direction:column;height:150px;justify-content:space-around;line-height:2rem;list-style:none;margin:10px;min-width:25rem;padding:30px;width:35%}li[_ngcontent-%COMP%]   span.nome[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;margin:2px}",
              ],
            })),
            n
          );
        })(),
        Kq = (() => {
          class n {
            constructor(e) {
              this.Route = e;
            }
            ngOnInit() {}
            goToCreateTarefa() {
              this.Route.navigate(["tarefas/create"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(we));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-tarefas"]],
              decls: 5,
              vars: 0,
              consts: [
                [1, "title-view"],
                ["mat-raised-button", "", 1, "add", 3, "click"],
                [
                  "src",
                  "./../../../../assets/images/add_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "h1", 0),
                  v(1, "Tarefas"),
                  m(),
                  ge(2, "app-read-tarefas"),
                  g(3, "button", 1),
                  I("click", function () {
                    return i.goToCreateTarefa();
                  }),
                  ge(4, "img", 2),
                  m());
              },
              dependencies: [Tt, Yq],
            })),
            n
          );
        })();
      function Zq(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " O canpo nome da tarefa n\xe3o pode estar em branco "),
          m());
      }
      function Qq(n, t) {
        if ((1 & n && (g(0, "mat-option", 12), v(1), m()), 2 & n)) {
          const e = t.$implicit;
          M("value", e.id_projeto),
            C(1),
            Cr(" ", e.id_projeto, " - ", e.nome_projeto, " ");
        }
      }
      function Xq(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " Projeto da tarefa n\xe3o pode ser branco "),
          m());
      }
      function Jq(n, t) {
        if ((1 & n && (g(0, "mat-option", 12), v(1), m()), 2 & n)) {
          const e = t.$implicit;
          M("value", e.id_membro),
            C(1),
            Cr(" ", e.id_membro, " - ", e.nome_membro, " ");
        }
      }
      function e8(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " Nome do membro n\xe3o pode estar em branco "),
          m());
      }
      let t8 = (() => {
        class n {
          constructor(e, i, r, o, s, a) {
            (this.router = e),
              (this.projetoService = i),
              (this.membroService = r),
              (this.createTarefa = o),
              (this.formBuilder = s),
              (this.avisoMsg = a),
              (this.formulario = this.formBuilder.group({
                nome: [null, it.required],
                descricao: [null],
                membro: [null, it.required],
                projeto: [null, it.required],
              })),
              (this.tarefa = {
                nome_tarefa: "",
                descricao: "",
                id_membro: 0,
                id_projeto: 0,
              });
          }
          ngOnInit() {
            (this.membros = this.membroService.read()),
              (this.projetos = this.projetoService.read());
          }
          goBack() {
            this.router.navigate(["tarefas"]);
          }
          onSubmit() {
            this.createTarefa.create(this.tarefa).subscribe(() => {
              this.goBack(),
                this.avisoMsg.showMsg({ msg: "Tarefa criada com sucesso" });
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(we), h(Co), h(bo), h(_d), h(Qi), h(tn));
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["app-create-tarefas"]],
            decls: 33,
            vars: 15,
            consts: [
              [1, "form"],
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "placeholder",
                "Nome da tarefa",
                "name",
                "name_task",
                "formControlName",
                "nome",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              ["appearance", "fill", 1, "descricao"],
              [
                "matInput",
                "",
                "cols",
                "30",
                "rows",
                "10",
                "name",
                "description",
                "formControlName",
                "descricao",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [
                "name",
                "projeto_tarefa",
                "formControlName",
                "projeto",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [3, "value", 4, "ngFor", "ngForOf"],
              [
                "name",
                "membro_responsavel",
                "formControlName",
                "membro",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (g(0, "mat-card", 0)(1, "mat-card-title"),
                v(2, " Criar tarefa "),
                m(),
                g(3, "mat-card-subtitle"),
                v(4, " \xc1rea para criar tarefas novas "),
                m()(),
                g(5, "form", 1),
                I("ngSubmit", function () {
                  return i.onSubmit();
                }),
                g(6, "mat-form-field", 2)(7, "mat-label"),
                v(8, "Nome da Tarefa"),
                m(),
                g(9, "input", 3),
                I("ngModelChange", function (o) {
                  return (i.tarefa.nome_tarefa = o);
                }),
                m(),
                N(10, Zq, 2, 0, "mat-error", 4),
                m(),
                g(11, "mat-form-field", 5)(12, "mat-label"),
                v(13, "Descri\xe7\xe3o da Tarefa"),
                m(),
                g(14, "textarea", 6),
                I("ngModelChange", function (o) {
                  return (i.tarefa.descricao = o);
                }),
                m()(),
                g(15, "mat-form-field", 2)(16, "mat-label"),
                v(17, "Projeto da Tarefa"),
                m(),
                g(18, "mat-select", 7),
                I("ngModelChange", function (o) {
                  return (i.tarefa.id_projeto = o);
                }),
                N(19, Qq, 2, 3, "mat-option", 8),
                mi(20, "async"),
                m(),
                N(21, Xq, 2, 0, "mat-error", 4),
                m(),
                g(22, "mat-form-field", 2)(23, "mat-label"),
                v(24, "Nome do Integrante"),
                m(),
                g(25, "mat-select", 9),
                I("ngModelChange", function (o) {
                  return (i.tarefa.id_membro = o);
                }),
                N(26, Jq, 2, 3, "mat-option", 8),
                mi(27, "async"),
                m(),
                N(28, e8, 2, 0, "mat-error", 4),
                m(),
                g(29, "button", 10),
                v(30, " Salvar "),
                m(),
                g(31, "button", 11),
                I("click", function () {
                  return i.goBack();
                }),
                v(32, " Cancelar "),
                m()()),
                2 & e &&
                  (C(5),
                  M("formGroup", i.formulario),
                  C(4),
                  M("ngModel", i.tarefa.nome_tarefa),
                  C(1),
                  M("ngIf", i.formulario.controls.nome.hasError("required")),
                  C(4),
                  M("ngModel", i.tarefa.descricao),
                  C(4),
                  M("ngModel", i.tarefa.id_projeto),
                  C(1),
                  M("ngForOf", gi(20, 11, i.projetos)),
                  C(2),
                  M("ngIf", i.formulario.controls.projeto.hasError("required")),
                  C(4),
                  M("ngModel", i.tarefa.id_membro),
                  C(1),
                  M("ngForOf", gi(27, 13, i.membros)),
                  C(2),
                  M("ngIf", i.formulario.controls.membro.hasError("required")),
                  C(1),
                  M("disabled", !i.formulario.valid));
            },
            dependencies: [
              Zt,
              ct,
              Mi,
              Pn,
              wi,
              Di,
              Ir,
              Tt,
              ki,
              Ai,
              Ii,
              or,
              sr,
              ei,
              ar,
              Vs,
              yo,
              Jt,
              Qn,
              Dr,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:10rem}.salvar[_ngcontent-%COMP%]{background-color:#60e160}.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function n8(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " O canpo nome da tarefa n\xe3o pode estar em branco "),
          m());
      }
      function i8(n, t) {
        if ((1 & n && (g(0, "mat-option", 12), v(1), m()), 2 & n)) {
          const e = t.$implicit;
          M("value", e.id_projeto),
            C(1),
            Cr(" ", e.id_projeto, " - ", e.nome_projeto, " ");
        }
      }
      function r8(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " Projeto da tarefa n\xe3o pode ser branco "),
          m());
      }
      function o8(n, t) {
        if ((1 & n && (g(0, "mat-option", 12), v(1), m()), 2 & n)) {
          const e = t.$implicit;
          M("value", e.id_membro),
            C(1),
            Cr(" ", e.id_membro, " - ", e.nome_membro, " ");
        }
      }
      function s8(n, t) {
        1 & n &&
          (g(0, "mat-error"),
          v(1, " Nome do membro n\xe3o pode estar em branco "),
          m());
      }
      let a8 = (() => {
        class n {
          constructor(e, i, r, o, s, a, l) {
            (this.projetoService = e),
              (this.membroService = i),
              (this.createTarefa = r),
              (this.formBuilder = o),
              (this.avisoMsg = s),
              (this.route = a),
              (this.router = l),
              (this.formulario = this.formBuilder.group({
                nome: [null, it.required],
                descricao: [null],
                membro: [null, it.required],
                projeto: [null, it.required],
              })),
              (this.tarefa = {
                nome_tarefa: "",
                descricao: "",
                id_membro: 0,
                id_projeto: 0,
              });
          }
          ngOnInit() {
            (this.membros = this.membroService.read()),
              (this.projetos = this.projetoService.read());
            const e = this.route.snapshot.paramMap.get("id");
            this.createTarefa.getById(`${e}`).subscribe((i) => {
              this.tarefa = i;
            });
          }
          goBack() {
            this.router.navigate(["tarefas"]);
          }
          onSubmit() {
            this.createTarefa.update(this.tarefa).subscribe(() => {
              this.avisoMsg.showMsg({ msg: "Tarefa atualizada com sucesso" }),
                this.goBack();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              h(Co),
              h(bo),
              h(_d),
              h(Qi),
              h(tn),
              h(yn),
              h(we)
            );
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["app-update-tarefa"]],
            decls: 33,
            vars: 15,
            consts: [
              [1, "form"],
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "placeholder",
                "Nome da tarefa",
                "name",
                "name_task",
                "formControlName",
                "nome",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              ["appearance", "fill", 1, "descricao"],
              [
                "matInput",
                "",
                "cols",
                "30",
                "rows",
                "10",
                "name",
                "description",
                "formControlName",
                "descricao",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [
                "name",
                "projeto_tarefa",
                "formControlName",
                "projeto",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [3, "value", 4, "ngFor", "ngForOf"],
              [
                "name",
                "membro_responsavel",
                "formControlName",
                "membro",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (g(0, "mat-card", 0)(1, "mat-card-title"),
                v(2, " Atualizar tarefa "),
                m(),
                g(3, "mat-card-subtitle"),
                v(4, " \xc1rea para atualizar tarefas "),
                m()(),
                g(5, "form", 1),
                I("ngSubmit", function () {
                  return i.onSubmit();
                }),
                g(6, "mat-form-field", 2)(7, "mat-label"),
                v(8, "Nome da Tarefa"),
                m(),
                g(9, "input", 3),
                I("ngModelChange", function (o) {
                  return (i.tarefa.nome_tarefa = o);
                }),
                m(),
                N(10, n8, 2, 0, "mat-error", 4),
                m(),
                g(11, "mat-form-field", 5)(12, "mat-label"),
                v(13, "Descri\xe7\xe3o da Tarefa"),
                m(),
                g(14, "textarea", 6),
                I("ngModelChange", function (o) {
                  return (i.tarefa.descricao = o);
                }),
                m()(),
                g(15, "mat-form-field", 2)(16, "mat-label"),
                v(17, "Projeto da Tarefa"),
                m(),
                g(18, "mat-select", 7),
                I("ngModelChange", function (o) {
                  return (i.tarefa.id_projeto = o);
                }),
                N(19, i8, 2, 3, "mat-option", 8),
                mi(20, "async"),
                m(),
                N(21, r8, 2, 0, "mat-error", 4),
                m(),
                g(22, "mat-form-field", 2)(23, "mat-label"),
                v(24, "Nome do Integrante"),
                m(),
                g(25, "mat-select", 9),
                I("ngModelChange", function (o) {
                  return (i.tarefa.id_membro = o);
                }),
                N(26, o8, 2, 3, "mat-option", 8),
                mi(27, "async"),
                m(),
                N(28, s8, 2, 0, "mat-error", 4),
                m(),
                g(29, "button", 10),
                v(30, " Salvar "),
                m(),
                g(31, "button", 11),
                I("click", function () {
                  return i.goBack();
                }),
                v(32, " Cancelar "),
                m()()),
                2 & e &&
                  (C(5),
                  M("formGroup", i.formulario),
                  C(4),
                  M("ngModel", i.tarefa.nome_tarefa),
                  C(1),
                  M("ngIf", i.formulario.controls.nome.hasError("required")),
                  C(4),
                  M("ngModel", i.tarefa.descricao),
                  C(4),
                  M("ngModel", i.tarefa.id_projeto),
                  C(1),
                  M("ngForOf", gi(20, 11, i.projetos)),
                  C(2),
                  M("ngIf", i.formulario.controls.projeto.hasError("required")),
                  C(4),
                  M("ngModel", i.tarefa.id_membro),
                  C(1),
                  M("ngForOf", gi(27, 13, i.membros)),
                  C(2),
                  M("ngIf", i.formulario.controls.membro.hasError("required")),
                  C(1),
                  M("disabled", !i.formulario.valid));
            },
            dependencies: [
              Zt,
              ct,
              Mi,
              Pn,
              wi,
              Di,
              Ir,
              Tt,
              ki,
              Ai,
              Ii,
              or,
              sr,
              ei,
              ar,
              Vs,
              yo,
              Jt,
              Qn,
              Dr,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:10rem}.salvar[_ngcontent-%COMP%]{background-color:#60e160}.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function l8(n, t) {
        if (
          (1 & n &&
            (g(0, "li", 14)(1, "mat-card", 15)(2, "mat-card-title"),
            v(3),
            m(),
            g(4, "mat-card-subtitle"),
            v(5),
            m()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          C(3), Ge(" ", e.nome_tarefa, " "), C(2), Ge(" ", e.descricao, " ");
        }
      }
      function c8(n, t) {
        if ((1 & n && (g(0, "ul", 9), N(1, l8, 6, 2, "li", 13), m()), 2 & n)) {
          const e = Ie();
          C(1), M("ngForOf", e.tarefas);
        }
      }
      function u8(n, t) {
        1 & n &&
          (g(0, "div", 16),
          ge(1, "img", 17),
          v(2, " N\xe3o h\xe1 nenhuma tarefa atribu\xedda a esta pesssoa "),
          m());
      }
      let d8 = (() => {
          class n {
            constructor(e, i, r) {
              (this.route = e),
                (this.dialog = i),
                (this.membroService = r),
                (this.tarefas = []),
                (this.membro = {
                  id_membro: 0,
                  nome_membro: "",
                  id_equipe: 0,
                  nome_equipe: "",
                  funcao: "",
                  tarefas: [],
                });
            }
            ngOnInit() {
              const e = this.route.snapshot.paramMap.get("id");
              this.membroService.getById({ id: `${e}` }).subscribe((i) => {
                (this.membro.nome_membro = i.nome_membro),
                  (this.membro.id_membro = i.id_membro),
                  (this.membro.id_equipe = i.id_equipe),
                  (this.membro.nome_equipe = i.nome_equipe),
                  (this.membro.funcao = i.funcao),
                  (this.tarefas = i.tarefas);
              });
            }
            openDialog(e, i, r) {
              this.dialog.open(FT, {
                data: r,
                width: "250px",
                enterAnimationDuration: e,
                exitAnimationDuration: i,
              });
            }
            goBack() {
              history.back();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(yn), h(Pr), h(bo));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-pagina-membro"]],
              decls: 21,
              vars: 7,
              consts: [
                [1, "material-icons", "arrow", 3, "click"],
                [1, "geral"],
                [1, "dados"],
                [1, "imagem"],
                [1, "title-view"],
                [1, "equipe", 3, "routerLink"],
                [1, "acoes"],
                ["mat-raised-button", "", 1, "editar", 3, "routerLink"],
                ["mat-raised-button", "", 1, "deletar", 3, "click"],
                [1, "tarefas"],
                [1, "subtitle"],
                ["class", "tarefas", 4, "ngIf"],
                ["class", "vazio", 4, "ngIf"],
                ["class", "card", 4, "ngFor", "ngForOf"],
                [1, "card"],
                [1, "tarefa"],
                [1, "vazio"],
                [
                  "src",
                  "./../../../../assets/images/info_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "i", 0),
                  I("click", function () {
                    return i.goBack();
                  }),
                  v(1, " arrow_back "),
                  m(),
                  g(2, "div", 1)(3, "div", 2)(4, "div", 3)(5, "span"),
                  v(6),
                  m()(),
                  g(7, "h1", 4),
                  v(8),
                  m(),
                  g(9, "span", 5),
                  v(10),
                  m(),
                  g(11, "div", 6)(12, "button", 7),
                  v(13, " Editar Membro "),
                  m(),
                  g(14, "button", 8),
                  I("click", function () {
                    return i.openDialog("0ms", "0ms", i.membro.id_membro);
                  }),
                  v(15, " Deletar Membro "),
                  m()()(),
                  g(16, "div", 9)(17, "span", 10),
                  v(18, " Tarefas "),
                  m(),
                  N(19, c8, 2, 1, "ul", 11),
                  N(20, u8, 3, 0, "div", 12),
                  m()()),
                  2 & e &&
                    (C(6),
                    Je(i.membro.nome_membro[0]),
                    C(2),
                    Je(i.membro.nome_membro),
                    C(1),
                    Yt("routerLink", "/equipes/dados/", i.membro.id_equipe, ""),
                    C(1),
                    Ge(" ", i.membro.nome_equipe, " "),
                    C(2),
                    Yt(
                      "routerLink",
                      "/membros/update/",
                      i.membro.id_membro,
                      ""
                    ),
                    C(7),
                    M("ngIf", i.tarefas.length > 0),
                    C(1),
                    M("ngIf", 0 == i.tarefas.length));
              },
              dependencies: [Ti, Zt, ct, Tt, ki, Ai, Ii],
              styles: [
                ".arrow[_ngcontent-%COMP%]{position:relative;top:10px;left:20px}.arrow[_ngcontent-%COMP%]:hover{cursor:pointer}.geral[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;text-align:center}.dados[_ngcontent-%COMP%]{width:30%;min-width:30rem;padding:10px;display:flex;align-items:center;flex-direction:column}.dados[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{margin-top:10px}.imagem[_ngcontent-%COMP%]{display:flex;text-align:center;width:15rem;height:15rem;border:1px solid #000000;border-radius:50%;align-items:center;justify-content:center}.title-view[_ngcontent-%COMP%]{margin:0}.imagem[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:8rem}.acoes[_ngcontent-%COMP%]{margin-top:20px}.equipe[_ngcontent-%COMP%]{font-size:1.5rem}.equipe[_ngcontent-%COMP%]:hover{cursor:pointer}.acoes[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:5px;width:10rem}li[_ngcontent-%COMP%]{list-style:none}.tarefas[_ngcontent-%COMP%]{width:60%;display:flex;flex-direction:column;align-items:left}.subtitle[_ngcontent-%COMP%]{font-size:30px;font-weight:700;margin-left:2.5rem;margin-top:20px}.card[_ngcontent-%COMP%]{text-align:left;margin-top:10px;width:60%;min-width:35rem;box-sizing:content-box}.vazio[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;font-size:20px}.vazio[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:5rem}",
              ],
            })),
            n
          );
        })(),
        h8 = (() => {
          class n {
            constructor(e, i, r, o, s) {
              (this.dialog = e),
                (this.data = i),
                (this.http = r),
                (this.message = o),
                (this.router = s),
                (this.urlProjeto =
                  "https://api-go-projects.herokuapp.com/projetos/");
            }
            fechaDialog() {
              this.dialog.close();
            }
            deletaProjeto(e) {
              this.http.delete(`${this.urlProjeto}${e}`).subscribe(() => {
                this.message.showMsg({
                  msg: "Projeto deletado com sucesso\nFavor recarregar a p\xe1gina",
                });
              }),
                this.fechaDialog(),
                this.router.navigate(["/projetos"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(El), h(Sl), h(en), h(tn), h(we));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-delete-warning"]],
              decls: 13,
              vars: 0,
              consts: [
                [1, "material-icons"],
                [3, "click"],
                [1, "deletar", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (g(0, "h1")(1, "i", 0),
                  v(2, " warning "),
                  m(),
                  v(3, " Aviso\n"),
                  m(),
                  g(4, "p"),
                  v(5, "Tem certeza que deseja deletar este projeto?"),
                  m(),
                  g(6, "p"),
                  v(
                    7,
                    "Isto deletar\xe1 as tarefas que estiverem rela\xe7\xe3o a esse projeto"
                  ),
                  m(),
                  g(8, "div")(9, "button", 1),
                  I("click", function () {
                    return i.fechaDialog();
                  }),
                  v(10, "Fechar"),
                  m(),
                  g(11, "button", 2),
                  I("click", function () {
                    return i.deletaProjeto(i.data);
                  }),
                  v(12, "Deletar"),
                  m()());
              },
              styles: [
                "h1[_ngcontent-%COMP%]{align-items:center;display:flex}h1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:5px}button[_ngcontent-%COMP%]{border-radius:5px;height:1.5rem;margin-right:5px;padding:0 10px}button.deletar[_ngcontent-%COMP%]:hover{background-color:#f005}",
              ],
            })),
            n
          );
        })();
      function f8(n, t) {
        if (
          (1 & n &&
            (g(0, "li", 14)(1, "mat-card", 15)(2, "mat-card-title"),
            v(3),
            m(),
            g(4, "mat-card-subtitle"),
            v(5),
            m()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          C(3), Ge(" ", e.nome_tarefa, " "), C(2), Ge(" ", e.descricao, " ");
        }
      }
      function p8(n, t) {
        if ((1 & n && (g(0, "ul", 9), N(1, f8, 6, 2, "li", 13), m()), 2 & n)) {
          const e = Ie();
          C(1), M("ngForOf", e.tarefas);
        }
      }
      function m8(n, t) {
        1 & n &&
          (g(0, "div"),
          ge(1, "img", 16),
          v(2, " N\xe3o h\xe1 nenhuma tarefa relacionada a este projeto "),
          m());
      }
      const g8 = [
        { path: "", component: yz },
        { path: "dashboard", component: Sz, canActivate: [wt] },
        { path: "equipes", component: E4, canActivate: [wt] },
        { path: "equipes/dados/:id", component: j4, canActivate: [wt] },
        { path: "equipes/create", component: U4, canActivate: [wt] },
        { path: "equipes/update/:id", component: z4, canActivate: [wt] },
        { path: "membros", component: W4, canActivate: [wt] },
        { path: "membros/create", component: vq, canActivate: [wt] },
        { path: "membros/update/:id", component: wq, canActivate: [wt] },
        { path: "membros/dados/:id", component: d8, canActivate: [wt] },
        { path: "projetos", component: Oq, canActivate: [wt] },
        { path: "projetos/create", component: Sq, canActivate: [wt] },
        { path: "projetos/update/:id", component: Iq, canActivate: [wt] },
        {
          path: "projetos/dados/:id",
          component: (() => {
            class n {
              constructor(e, i, r) {
                (this.route = e),
                  (this.dialog = i),
                  (this.projetoService = r),
                  (this.tarefas = []),
                  (this.projeto = {
                    id_projeto: 0,
                    nome_projeto: "",
                    descricao: "",
                    id_equipe: 0,
                    nome_equipe: "",
                    tarefas: [],
                  });
              }
              ngOnInit() {
                const e = this.route.snapshot.paramMap.get("id");
                this.projetoService.getById(`${e}`).subscribe((i) => {
                  (this.projeto = i), (this.tarefas = i.tarefas);
                });
              }
              goBack() {
                history.back();
              }
              openDialog(e, i, r) {
                this.dialog.open(h8, {
                  data: r,
                  width: "250px",
                  enterAnimationDuration: e,
                  exitAnimationDuration: i,
                });
              }
            }
            return (
              (n.ɵfac = function (e) {
                return new (e || n)(h(yn), h(Pr), h(Co));
              }),
              (n.ɵcmp = H({
                type: n,
                selectors: [["app-pagina-projeto"]],
                decls: 21,
                vars: 7,
                consts: [
                  [1, "material-icons", "arrow", 3, "click"],
                  [1, "geral"],
                  [1, "dados"],
                  [1, "imagem"],
                  [1, "title-view"],
                  [1, "equipe", 3, "routerLink"],
                  [1, "acoes"],
                  ["mat-raised-button", "", 1, "editar", 3, "routerLink"],
                  ["mat-raised-button", "", 1, "deletar", 3, "click"],
                  [1, "tarefas"],
                  [1, "subtitle"],
                  ["class", "tarefas", 4, "ngIf"],
                  [4, "ngIf"],
                  ["class", "card", 4, "ngFor", "ngForOf"],
                  [1, "card"],
                  [1, "tarefa"],
                  [
                    "src",
                    "../../../../assets/images/info_FILL0_wght400_GRAD0_opsz48.svg",
                    "alt",
                    "",
                  ],
                ],
                template: function (e, i) {
                  1 & e &&
                    (g(0, "i", 0),
                    I("click", function () {
                      return i.goBack();
                    }),
                    v(1, " arrow_back "),
                    m(),
                    g(2, "div", 1)(3, "div", 2)(4, "div", 3)(5, "span"),
                    v(6),
                    m()(),
                    g(7, "h1", 4),
                    v(8),
                    m(),
                    g(9, "span", 5),
                    v(10),
                    m(),
                    g(11, "div", 6)(12, "button", 7),
                    v(13, " Editar Projeto "),
                    m(),
                    g(14, "button", 8),
                    I("click", function () {
                      return i.openDialog("0ms", "0ms", i.projeto.id_projeto);
                    }),
                    v(15, " Deletar Projeto "),
                    m()()(),
                    g(16, "div", 9)(17, "span", 10),
                    v(18, " Tarefas "),
                    m(),
                    N(19, p8, 2, 1, "ul", 11),
                    N(20, m8, 3, 0, "div", 12),
                    m()()),
                    2 & e &&
                      (C(6),
                      Je(i.projeto.nome_projeto[0]),
                      C(2),
                      Je(i.projeto.nome_projeto),
                      C(1),
                      Yt(
                        "routerLink",
                        "/equipes/dados/",
                        i.projeto.id_equipe,
                        ""
                      ),
                      C(1),
                      Ge(" ", i.projeto.nome_equipe, " "),
                      C(2),
                      Yt(
                        "routerLink",
                        "/projetos/update/",
                        i.projeto.id_projeto,
                        ""
                      ),
                      C(7),
                      M("ngIf", 0 != i.tarefas.length),
                      C(1),
                      M("ngIf", 0 == i.tarefas.length));
                },
                dependencies: [Ti, Zt, ct, Tt, ki, Ai, Ii],
                styles: [
                  ".arrow[_ngcontent-%COMP%]{position:relative;top:10px;left:20px}.title-view[_ngcontent-%COMP%]{height:auto}.arrow[_ngcontent-%COMP%]:hover{cursor:pointer}.geral[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;text-align:center}.dados[_ngcontent-%COMP%]{width:30%;min-width:30rem;padding:10px;display:flex;align-items:center;flex-direction:column}.dados[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{margin-top:10px}.imagem[_ngcontent-%COMP%]{display:flex;text-align:center;width:15rem;height:15rem;border:1px solid #000000;border-radius:50%;align-items:center;justify-content:center}.title-view[_ngcontent-%COMP%]{margin:0}.imagem[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:8rem}.acoes[_ngcontent-%COMP%]{margin-top:20px}.equipe[_ngcontent-%COMP%]{font-size:1.5rem}.equipe[_ngcontent-%COMP%]:hover{cursor:pointer}.acoes[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:5px;width:10rem}li[_ngcontent-%COMP%]{list-style:none}.tarefas[_ngcontent-%COMP%]{width:60%;display:flex;flex-direction:column;align-items:left}.subtitle[_ngcontent-%COMP%]{font-size:30px;font-weight:700;margin-left:2.5rem;margin-top:20px}.card[_ngcontent-%COMP%]{text-align:left;margin-top:10px;width:60%;min-width:35rem;box-sizing:content-box}.vazio[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;font-size:20px}.vazio[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:5rem}",
                ],
              })),
              n
            );
          })(),
          canActivate: [wt],
        },
        { path: "tarefas", component: Kq, canActivate: [wt] },
        { path: "tarefas/create", component: t8, canActivate: [wt] },
        { path: "tarefas/update/:id", component: a8, canActivate: [wt] },
      ];
      let _8 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [aS.forRoot(g8), aS] })),
            n
          );
        })(),
        v8 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [fe, fe] })),
            n
          );
        })();
      const UT = ["*"],
        b8 = [
          [
            ["", "mat-list-avatar", ""],
            ["", "mat-list-icon", ""],
            ["", "matListAvatar", ""],
            ["", "matListIcon", ""],
          ],
          [
            ["", "mat-line", ""],
            ["", "matLine", ""],
          ],
          "*",
        ],
        C8 = [
          "[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]",
          "[mat-line], [matLine]",
          "*",
        ],
        S8 = pd(vo(class {})),
        T8 = vo(class {}),
        x8 = new x("MatList"),
        $T = new x("MatNavList");
      let A8 = (() => {
          class n extends S8 {
            constructor() {
              super(...arguments), (this._stateChanges = new V());
            }
            ngOnChanges() {
              this._stateChanges.next();
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = je(n)))(i || n);
              };
            })()),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-nav-list"]],
              hostAttrs: [
                "role",
                "navigation",
                1,
                "mat-nav-list",
                "mat-list-base",
              ],
              inputs: { disableRipple: "disableRipple", disabled: "disabled" },
              exportAs: ["matNavList"],
              features: [ae([{ provide: $T, useExisting: n }]), B, Mt],
              ngContentSelectors: UT,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (mt(), pe(0));
              },
              styles: [
                '.mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}button.mat-list-item,button.mat-list-option{padding:0;width:100%;background:none;color:inherit;border:none;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] button.mat-list-item,[dir=rtl] button.mat-list-option{text-align:right}button.mat-list-item::-moz-focus-inner,button.mat-list-option::-moz-focus-inner{border:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:hover{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        zT = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["", "mat-list-avatar", ""],
                ["", "matListAvatar", ""],
              ],
              hostAttrs: [1, "mat-list-avatar"],
            })),
            n
          );
        })(),
        qT = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [
                ["", "mat-list-icon", ""],
                ["", "matListIcon", ""],
              ],
              hostAttrs: [1, "mat-list-icon"],
            })),
            n
          );
        })(),
        I8 = (() => {
          class n extends T8 {
            constructor(e, i, r, o) {
              super(),
                (this._element = e),
                (this._isInteractiveList = !1),
                (this._destroyed = new V()),
                (this._disabled = !1),
                (this._isInteractiveList = !!(
                  r ||
                  (o && "action-list" === o._getListType())
                )),
                (this._list = r || o);
              const s = this._getHostElement();
              "button" === s.nodeName.toLowerCase() &&
                !s.hasAttribute("type") &&
                s.setAttribute("type", "button"),
                this._list &&
                  this._list._stateChanges
                    .pipe(ce(this._destroyed))
                    .subscribe(() => {
                      i.markForCheck();
                    });
            }
            get disabled() {
              return this._disabled || !(!this._list || !this._list.disabled);
            }
            set disabled(e) {
              this._disabled = be(e);
            }
            ngAfterContentInit() {
              !(function ZS(n, t, e = "mat") {
                n.changes.pipe(vn(n)).subscribe(({ length: i }) => {
                  _l(t, `${e}-2-line`, !1),
                    _l(t, `${e}-3-line`, !1),
                    _l(t, `${e}-multi-line`, !1),
                    2 === i || 3 === i
                      ? _l(t, `${e}-${i}-line`, !0)
                      : i > 3 && _l(t, `${e}-multi-line`, !0);
                });
              })(this._lines, this._element);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _isRippleDisabled() {
              return (
                !this._isInteractiveList ||
                this.disableRipple ||
                !(!this._list || !this._list.disableRipple)
              );
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(ie), h(st), h($T, 8), h(x8, 8));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [
                ["mat-list-item"],
                ["a", "mat-list-item", ""],
                ["button", "mat-list-item", ""],
              ],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (ke(r, zT, 5), ke(r, qT, 5), ke(r, KS, 5)), 2 & e)
                ) {
                  let o;
                  X((o = J())) && (i._avatar = o.first),
                    X((o = J())) && (i._icon = o.first),
                    X((o = J())) && (i._lines = o);
                }
              },
              hostAttrs: [1, "mat-list-item", "mat-focus-indicator"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  Pe("mat-list-item-disabled", i.disabled)(
                    "mat-list-item-with-avatar",
                    i._avatar || i._icon
                  );
              },
              inputs: { disableRipple: "disableRipple", disabled: "disabled" },
              exportAs: ["matListItem"],
              features: [B],
              ngContentSelectors: C8,
              decls: 6,
              vars: 2,
              consts: [
                [1, "mat-list-item-content"],
                [
                  "mat-ripple",
                  "",
                  1,
                  "mat-list-item-ripple",
                  3,
                  "matRippleTrigger",
                  "matRippleDisabled",
                ],
                [1, "mat-list-text"],
              ],
              template: function (e, i) {
                1 & e &&
                  (mt(b8),
                  g(0, "span", 0),
                  ge(1, "span", 1),
                  pe(2),
                  g(3, "span", 2),
                  pe(4, 1),
                  m(),
                  pe(5, 2),
                  m()),
                  2 & e &&
                    (C(1),
                    M("matRippleTrigger", i._getHostElement())(
                      "matRippleDisabled",
                      i._isRippleDisabled()
                    ));
              },
              dependencies: [Rs],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        N8 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [md, vl, fe, Bg, yi, md, fe, Bg, v8] })),
            n
          );
        })();
      const Ad = ["*"],
        L8 = ["content"];
      function V8(n, t) {
        if (1 & n) {
          const e = zi();
          g(0, "div", 2),
            I("click", function () {
              return ii(e), ri(Ie()._onBackdropClicked());
            }),
            m();
        }
        2 & n && Pe("mat-drawer-shown", Ie()._isShowingBackdrop());
      }
      function B8(n, t) {
        1 & n && (g(0, "mat-drawer-content"), pe(1, 2), m());
      }
      const j8 = [[["mat-drawer"]], [["mat-drawer-content"]], "*"],
        H8 = ["mat-drawer", "mat-drawer-content", "*"];
      function U8(n, t) {
        if (1 & n) {
          const e = zi();
          g(0, "div", 2),
            I("click", function () {
              return ii(e), ri(Ie()._onBackdropClicked());
            }),
            m();
        }
        2 & n && Pe("mat-drawer-shown", Ie()._isShowingBackdrop());
      }
      function $8(n, t) {
        1 & n && (g(0, "mat-sidenav-content"), pe(1, 2), m());
      }
      const z8 = [[["mat-sidenav"]], [["mat-sidenav-content"]], "*"],
        q8 = ["mat-sidenav", "mat-sidenav-content", "*"],
        WT = {
          transformDrawer: Zi("transform", [
            Xt(
              "open, open-instant",
              Ne({ transform: "none", visibility: "visible" })
            ),
            Xt("void", Ne({ "box-shadow": "none", visibility: "hidden" })),
            Ut("void => open-instant", Qt("0ms")),
            Ut(
              "void <=> open, open-instant => void",
              Qt("400ms cubic-bezier(0.25, 0.8, 0.25, 1)")
            ),
          ]),
        },
        W8 = new x("MAT_DRAWER_DEFAULT_AUTOSIZE", {
          providedIn: "root",
          factory: function Y8() {
            return !1;
          },
        }),
        Kg = new x("MAT_DRAWER_CONTAINER");
      let Id = (() => {
          class n extends Cl {
            constructor(e, i, r, o, s) {
              super(r, o, s),
                (this._changeDetectorRef = e),
                (this._container = i);
            }
            ngAfterContentInit() {
              this._container._contentMarginChanges.subscribe(() => {
                this._changeDetectorRef.markForCheck();
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(st), h(Me(() => KT)), h(ie), h(bl), h(G));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-drawer-content"]],
              hostAttrs: [1, "mat-drawer-content"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  Jr("margin-left", i._container._contentMargins.left, "px")(
                    "margin-right",
                    i._container._contentMargins.right,
                    "px"
                  );
              },
              features: [ae([{ provide: Cl, useExisting: n }]), B],
              ngContentSelectors: Ad,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (mt(), pe(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        YT = (() => {
          class n {
            constructor(e, i, r, o, s, a, l, c) {
              (this._elementRef = e),
                (this._focusTrapFactory = i),
                (this._focusMonitor = r),
                (this._platform = o),
                (this._ngZone = s),
                (this._interactivityChecker = a),
                (this._doc = l),
                (this._container = c),
                (this._elementFocusedBeforeDrawerWasOpened = null),
                (this._enableAnimations = !1),
                (this._position = "start"),
                (this._mode = "over"),
                (this._disableClose = !1),
                (this._opened = !1),
                (this._animationStarted = new V()),
                (this._animationEnd = new V()),
                (this._animationState = "void"),
                (this.openedChange = new se(!0)),
                (this._openedStream = this.openedChange.pipe(
                  qe((u) => u),
                  q(() => {})
                )),
                (this.openedStart = this._animationStarted.pipe(
                  qe(
                    (u) =>
                      u.fromState !== u.toState &&
                      0 === u.toState.indexOf("open")
                  ),
                  zm(void 0)
                )),
                (this._closedStream = this.openedChange.pipe(
                  qe((u) => !u),
                  q(() => {})
                )),
                (this.closedStart = this._animationStarted.pipe(
                  qe((u) => u.fromState !== u.toState && "void" === u.toState),
                  zm(void 0)
                )),
                (this._destroyed = new V()),
                (this.onPositionChanged = new se()),
                (this._modeChanged = new V()),
                this.openedChange.subscribe((u) => {
                  u
                    ? (this._doc &&
                        (this._elementFocusedBeforeDrawerWasOpened =
                          this._doc.activeElement),
                      this._takeFocus())
                    : this._isFocusWithinDrawer() &&
                      this._restoreFocus(this._openedVia || "program");
                }),
                this._ngZone.runOutsideAngular(() => {
                  Os(this._elementRef.nativeElement, "keydown")
                    .pipe(
                      qe(
                        (u) => 27 === u.keyCode && !this.disableClose && !Xn(u)
                      ),
                      ce(this._destroyed)
                    )
                    .subscribe((u) =>
                      this._ngZone.run(() => {
                        this.close(), u.stopPropagation(), u.preventDefault();
                      })
                    );
                }),
                this._animationEnd
                  .pipe(
                    Ig(
                      (u, d) =>
                        u.fromState === d.fromState && u.toState === d.toState
                    )
                  )
                  .subscribe((u) => {
                    const { fromState: d, toState: f } = u;
                    ((0 === f.indexOf("open") && "void" === d) ||
                      ("void" === f && 0 === d.indexOf("open"))) &&
                      this.openedChange.emit(this._opened);
                  });
            }
            get position() {
              return this._position;
            }
            set position(e) {
              (e = "end" === e ? "end" : "start") !== this._position &&
                (this._isAttached && this._updatePositionInParent(e),
                (this._position = e),
                this.onPositionChanged.emit());
            }
            get mode() {
              return this._mode;
            }
            set mode(e) {
              (this._mode = e),
                this._updateFocusTrapState(),
                this._modeChanged.next();
            }
            get disableClose() {
              return this._disableClose;
            }
            set disableClose(e) {
              this._disableClose = be(e);
            }
            get autoFocus() {
              return (
                this._autoFocus ??
                ("side" === this.mode ? "dialog" : "first-tabbable")
              );
            }
            set autoFocus(e) {
              ("true" === e || "false" === e || null == e) && (e = be(e)),
                (this._autoFocus = e);
            }
            get opened() {
              return this._opened;
            }
            set opened(e) {
              this.toggle(be(e));
            }
            _forceFocus(e, i) {
              this._interactivityChecker.isFocusable(e) ||
                ((e.tabIndex = -1),
                this._ngZone.runOutsideAngular(() => {
                  const r = () => {
                    e.removeEventListener("blur", r),
                      e.removeEventListener("mousedown", r),
                      e.removeAttribute("tabindex");
                  };
                  e.addEventListener("blur", r),
                    e.addEventListener("mousedown", r);
                })),
                e.focus(i);
            }
            _focusByCssSelector(e, i) {
              let r = this._elementRef.nativeElement.querySelector(e);
              r && this._forceFocus(r, i);
            }
            _takeFocus() {
              if (!this._focusTrap) return;
              const e = this._elementRef.nativeElement;
              switch (this.autoFocus) {
                case !1:
                case "dialog":
                  return;
                case !0:
                case "first-tabbable":
                  this._focusTrap.focusInitialElementWhenReady().then((i) => {
                    !i &&
                      "function" ==
                        typeof this._elementRef.nativeElement.focus &&
                      e.focus();
                  });
                  break;
                case "first-heading":
                  this._focusByCssSelector(
                    'h1, h2, h3, h4, h5, h6, [role="heading"]'
                  );
                  break;
                default:
                  this._focusByCssSelector(this.autoFocus);
              }
            }
            _restoreFocus(e) {
              "dialog" !== this.autoFocus &&
                (this._elementFocusedBeforeDrawerWasOpened
                  ? this._focusMonitor.focusVia(
                      this._elementFocusedBeforeDrawerWasOpened,
                      e
                    )
                  : this._elementRef.nativeElement.blur(),
                (this._elementFocusedBeforeDrawerWasOpened = null));
            }
            _isFocusWithinDrawer() {
              const e = this._doc.activeElement;
              return !!e && this._elementRef.nativeElement.contains(e);
            }
            ngAfterViewInit() {
              (this._isAttached = !0),
                (this._focusTrap = this._focusTrapFactory.create(
                  this._elementRef.nativeElement
                )),
                this._updateFocusTrapState(),
                "end" === this._position && this._updatePositionInParent("end");
            }
            ngAfterContentChecked() {
              this._platform.isBrowser && (this._enableAnimations = !0);
            }
            ngOnDestroy() {
              this._focusTrap && this._focusTrap.destroy(),
                this._anchor?.remove(),
                (this._anchor = null),
                this._animationStarted.complete(),
                this._animationEnd.complete(),
                this._modeChanged.complete(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open(e) {
              return this.toggle(!0, e);
            }
            close() {
              return this.toggle(!1);
            }
            _closeViaBackdropClick() {
              return this._setOpen(!1, !0, "mouse");
            }
            toggle(e = !this.opened, i) {
              e && i && (this._openedVia = i);
              const r = this._setOpen(
                e,
                !e && this._isFocusWithinDrawer(),
                this._openedVia || "program"
              );
              return e || (this._openedVia = null), r;
            }
            _setOpen(e, i, r) {
              return (
                (this._opened = e),
                e
                  ? (this._animationState = this._enableAnimations
                      ? "open"
                      : "open-instant")
                  : ((this._animationState = "void"),
                    i && this._restoreFocus(r)),
                this._updateFocusTrapState(),
                new Promise((o) => {
                  this.openedChange
                    .pipe(vt(1))
                    .subscribe((s) => o(s ? "open" : "close"));
                })
              );
            }
            _getWidth() {
              return (
                (this._elementRef.nativeElement &&
                  this._elementRef.nativeElement.offsetWidth) ||
                0
              );
            }
            _updateFocusTrapState() {
              this._focusTrap &&
                (this._focusTrap.enabled = this.opened && "side" !== this.mode);
            }
            _updatePositionInParent(e) {
              const i = this._elementRef.nativeElement,
                r = i.parentNode;
              "end" === e
                ? (this._anchor ||
                    ((this._anchor =
                      this._doc.createComment("mat-drawer-anchor")),
                    r.insertBefore(this._anchor, i)),
                  r.appendChild(i))
                : this._anchor &&
                  this._anchor.parentNode.insertBefore(i, this._anchor);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                h(ie),
                h(hd),
                h(Fr),
                h(yt),
                h(G),
                h(ml),
                h(ee, 8),
                h(Kg, 8)
              );
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-drawer"]],
              viewQuery: function (e, i) {
                if ((1 & e && Et(L8, 5), 2 & e)) {
                  let r;
                  X((r = J())) && (i._content = r.first);
                }
              },
              hostAttrs: ["tabIndex", "-1", 1, "mat-drawer"],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  Da("@transform.start", function (o) {
                    return i._animationStarted.next(o);
                  })("@transform.done", function (o) {
                    return i._animationEnd.next(o);
                  }),
                  2 & e &&
                    (Ae("align", null),
                    Sa("@transform", i._animationState),
                    Pe("mat-drawer-end", "end" === i.position)(
                      "mat-drawer-over",
                      "over" === i.mode
                    )("mat-drawer-push", "push" === i.mode)(
                      "mat-drawer-side",
                      "side" === i.mode
                    )("mat-drawer-opened", i.opened));
              },
              inputs: {
                position: "position",
                mode: "mode",
                disableClose: "disableClose",
                autoFocus: "autoFocus",
                opened: "opened",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                openedStart: "openedStart",
                _closedStream: "closed",
                closedStart: "closedStart",
                onPositionChanged: "positionChanged",
              },
              exportAs: ["matDrawer"],
              ngContentSelectors: Ad,
              decls: 3,
              vars: 0,
              consts: [
                ["cdkScrollable", "", 1, "mat-drawer-inner-container"],
                ["content", ""],
              ],
              template: function (e, i) {
                1 & e && (mt(), g(0, "div", 0, 1), pe(2), m());
              },
              dependencies: [Cl],
              encapsulation: 2,
              data: { animation: [WT.transformDrawer] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        KT = (() => {
          class n {
            constructor(e, i, r, o, s, a = !1, l) {
              (this._dir = e),
                (this._element = i),
                (this._ngZone = r),
                (this._changeDetectorRef = o),
                (this._animationMode = l),
                (this._drawers = new ps()),
                (this.backdropClick = new se()),
                (this._destroyed = new V()),
                (this._doCheckSubject = new V()),
                (this._contentMargins = { left: null, right: null }),
                (this._contentMarginChanges = new V()),
                e &&
                  e.change.pipe(ce(this._destroyed)).subscribe(() => {
                    this._validateDrawers(), this.updateContentMargins();
                  }),
                s
                  .change()
                  .pipe(ce(this._destroyed))
                  .subscribe(() => this.updateContentMargins()),
                (this._autosize = a);
            }
            get start() {
              return this._start;
            }
            get end() {
              return this._end;
            }
            get autosize() {
              return this._autosize;
            }
            set autosize(e) {
              this._autosize = be(e);
            }
            get hasBackdrop() {
              return (
                this._backdropOverride ??
                (!this._start ||
                  "side" !== this._start.mode ||
                  !this._end ||
                  "side" !== this._end.mode)
              );
            }
            set hasBackdrop(e) {
              this._backdropOverride = null == e ? null : be(e);
            }
            get scrollable() {
              return this._userContent || this._content;
            }
            ngAfterContentInit() {
              this._allDrawers.changes
                .pipe(vn(this._allDrawers), ce(this._destroyed))
                .subscribe((e) => {
                  this._drawers.reset(
                    e.filter((i) => !i._container || i._container === this)
                  ),
                    this._drawers.notifyOnChanges();
                }),
                this._drawers.changes.pipe(vn(null)).subscribe(() => {
                  this._validateDrawers(),
                    this._drawers.forEach((e) => {
                      this._watchDrawerToggle(e),
                        this._watchDrawerPosition(e),
                        this._watchDrawerMode(e);
                    }),
                    (!this._drawers.length ||
                      this._isDrawerOpen(this._start) ||
                      this._isDrawerOpen(this._end)) &&
                      this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._ngZone.runOutsideAngular(() => {
                  this._doCheckSubject
                    .pipe(ad(10), ce(this._destroyed))
                    .subscribe(() => this.updateContentMargins());
                });
            }
            ngOnDestroy() {
              this._contentMarginChanges.complete(),
                this._doCheckSubject.complete(),
                this._drawers.destroy(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open() {
              this._drawers.forEach((e) => e.open());
            }
            close() {
              this._drawers.forEach((e) => e.close());
            }
            updateContentMargins() {
              let e = 0,
                i = 0;
              if (this._left && this._left.opened)
                if ("side" == this._left.mode) e += this._left._getWidth();
                else if ("push" == this._left.mode) {
                  const r = this._left._getWidth();
                  (e += r), (i -= r);
                }
              if (this._right && this._right.opened)
                if ("side" == this._right.mode) i += this._right._getWidth();
                else if ("push" == this._right.mode) {
                  const r = this._right._getWidth();
                  (i += r), (e -= r);
                }
              (e = e || null),
                (i = i || null),
                (e !== this._contentMargins.left ||
                  i !== this._contentMargins.right) &&
                  ((this._contentMargins = { left: e, right: i }),
                  this._ngZone.run(() =>
                    this._contentMarginChanges.next(this._contentMargins)
                  ));
            }
            ngDoCheck() {
              this._autosize &&
                this._isPushed() &&
                this._ngZone.runOutsideAngular(() =>
                  this._doCheckSubject.next()
                );
            }
            _watchDrawerToggle(e) {
              e._animationStarted
                .pipe(
                  qe((i) => i.fromState !== i.toState),
                  ce(this._drawers.changes)
                )
                .subscribe((i) => {
                  "open-instant" !== i.toState &&
                    "NoopAnimations" !== this._animationMode &&
                    this._element.nativeElement.classList.add(
                      "mat-drawer-transition"
                    ),
                    this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                "side" !== e.mode &&
                  e.openedChange
                    .pipe(ce(this._drawers.changes))
                    .subscribe(() => this._setContainerClass(e.opened));
            }
            _watchDrawerPosition(e) {
              !e ||
                e.onPositionChanged
                  .pipe(ce(this._drawers.changes))
                  .subscribe(() => {
                    this._ngZone.onMicrotaskEmpty.pipe(vt(1)).subscribe(() => {
                      this._validateDrawers();
                    });
                  });
            }
            _watchDrawerMode(e) {
              e &&
                e._modeChanged
                  .pipe(ce(hr(this._drawers.changes, this._destroyed)))
                  .subscribe(() => {
                    this.updateContentMargins(),
                      this._changeDetectorRef.markForCheck();
                  });
            }
            _setContainerClass(e) {
              const i = this._element.nativeElement.classList,
                r = "mat-drawer-container-has-open";
              e ? i.add(r) : i.remove(r);
            }
            _validateDrawers() {
              (this._start = this._end = null),
                this._drawers.forEach((e) => {
                  "end" == e.position ? (this._end = e) : (this._start = e);
                }),
                (this._right = this._left = null),
                this._dir && "rtl" === this._dir.value
                  ? ((this._left = this._end), (this._right = this._start))
                  : ((this._left = this._start), (this._right = this._end));
            }
            _isPushed() {
              return (
                (this._isDrawerOpen(this._start) &&
                  "over" != this._start.mode) ||
                (this._isDrawerOpen(this._end) && "over" != this._end.mode)
              );
            }
            _onBackdropClicked() {
              this.backdropClick.emit(), this._closeModalDrawersViaBackdrop();
            }
            _closeModalDrawersViaBackdrop() {
              [this._start, this._end]
                .filter((e) => e && !e.disableClose && this._canHaveBackdrop(e))
                .forEach((e) => e._closeViaBackdropClick());
            }
            _isShowingBackdrop() {
              return (
                (this._isDrawerOpen(this._start) &&
                  this._canHaveBackdrop(this._start)) ||
                (this._isDrawerOpen(this._end) &&
                  this._canHaveBackdrop(this._end))
              );
            }
            _canHaveBackdrop(e) {
              return "side" !== e.mode || !!this._backdropOverride;
            }
            _isDrawerOpen(e) {
              return null != e && e.opened;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                h(xi, 8),
                h(ie),
                h(G),
                h(st),
                h(bd),
                h(W8),
                h(pn, 8)
              );
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-drawer-container"]],
              contentQueries: function (e, i, r) {
                if ((1 & e && (ke(r, Id, 5), ke(r, YT, 5)), 2 & e)) {
                  let o;
                  X((o = J())) && (i._content = o.first),
                    X((o = J())) && (i._allDrawers = o);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && Et(Id, 5), 2 & e)) {
                  let r;
                  X((r = J())) && (i._userContent = r.first);
                }
              },
              hostAttrs: [1, "mat-drawer-container"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  Pe(
                    "mat-drawer-container-explicit-backdrop",
                    i._backdropOverride
                  );
              },
              inputs: { autosize: "autosize", hasBackdrop: "hasBackdrop" },
              outputs: { backdropClick: "backdropClick" },
              exportAs: ["matDrawerContainer"],
              features: [ae([{ provide: Kg, useExisting: n }])],
              ngContentSelectors: H8,
              decls: 4,
              vars: 2,
              consts: [
                [
                  "class",
                  "mat-drawer-backdrop",
                  3,
                  "mat-drawer-shown",
                  "click",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [1, "mat-drawer-backdrop", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (mt(j8),
                  N(0, V8, 1, 2, "div", 0),
                  pe(1),
                  pe(2, 1),
                  N(3, B8, 2, 0, "mat-drawer-content", 1)),
                  2 & e &&
                    (M("ngIf", i.hasBackdrop), C(3), M("ngIf", !i._content));
              },
              dependencies: [ct, Id],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        ZT = (() => {
          class n extends Id {
            constructor(e, i, r, o, s) {
              super(e, i, r, o, s);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(st), h(Me(() => XT)), h(ie), h(bl), h(G));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-sidenav-content"]],
              hostAttrs: [1, "mat-drawer-content", "mat-sidenav-content"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  Jr("margin-left", i._container._contentMargins.left, "px")(
                    "margin-right",
                    i._container._contentMargins.right,
                    "px"
                  );
              },
              features: [ae([{ provide: Cl, useExisting: n }]), B],
              ngContentSelectors: Ad,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (mt(), pe(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        QT = (() => {
          class n extends YT {
            constructor() {
              super(...arguments),
                (this._fixedInViewport = !1),
                (this._fixedTopGap = 0),
                (this._fixedBottomGap = 0);
            }
            get fixedInViewport() {
              return this._fixedInViewport;
            }
            set fixedInViewport(e) {
              this._fixedInViewport = be(e);
            }
            get fixedTopGap() {
              return this._fixedTopGap;
            }
            set fixedTopGap(e) {
              this._fixedTopGap = Jn(e);
            }
            get fixedBottomGap() {
              return this._fixedBottomGap;
            }
            set fixedBottomGap(e) {
              this._fixedBottomGap = Jn(e);
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = je(n)))(i || n);
              };
            })()),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-sidenav"]],
              hostAttrs: ["tabIndex", "-1", 1, "mat-drawer", "mat-sidenav"],
              hostVars: 17,
              hostBindings: function (e, i) {
                2 & e &&
                  (Ae("align", null),
                  Jr("top", i.fixedInViewport ? i.fixedTopGap : null, "px")(
                    "bottom",
                    i.fixedInViewport ? i.fixedBottomGap : null,
                    "px"
                  ),
                  Pe("mat-drawer-end", "end" === i.position)(
                    "mat-drawer-over",
                    "over" === i.mode
                  )("mat-drawer-push", "push" === i.mode)(
                    "mat-drawer-side",
                    "side" === i.mode
                  )("mat-drawer-opened", i.opened)(
                    "mat-sidenav-fixed",
                    i.fixedInViewport
                  ));
              },
              inputs: {
                fixedInViewport: "fixedInViewport",
                fixedTopGap: "fixedTopGap",
                fixedBottomGap: "fixedBottomGap",
              },
              exportAs: ["matSidenav"],
              features: [B],
              ngContentSelectors: Ad,
              decls: 3,
              vars: 0,
              consts: [
                ["cdkScrollable", "", 1, "mat-drawer-inner-container"],
                ["content", ""],
              ],
              template: function (e, i) {
                1 & e && (mt(), g(0, "div", 0, 1), pe(2), m());
              },
              dependencies: [Cl],
              encapsulation: 2,
              data: { animation: [WT.transformDrawer] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        XT = (() => {
          class n extends KT {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = je(n)))(i || n);
              };
            })()),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-sidenav-container"]],
              contentQueries: function (e, i, r) {
                if ((1 & e && (ke(r, ZT, 5), ke(r, QT, 5)), 2 & e)) {
                  let o;
                  X((o = J())) && (i._content = o.first),
                    X((o = J())) && (i._allDrawers = o);
                }
              },
              hostAttrs: [1, "mat-drawer-container", "mat-sidenav-container"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  Pe(
                    "mat-drawer-container-explicit-backdrop",
                    i._backdropOverride
                  );
              },
              exportAs: ["matSidenavContainer"],
              features: [ae([{ provide: Kg, useExisting: n }]), B],
              ngContentSelectors: q8,
              decls: 4,
              vars: 2,
              consts: [
                [
                  "class",
                  "mat-drawer-backdrop",
                  3,
                  "mat-drawer-shown",
                  "click",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [1, "mat-drawer-backdrop", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (mt(z8),
                  N(0, U8, 1, 2, "div", 0),
                  pe(1),
                  pe(2, 1),
                  N(3, $8, 2, 0, "mat-sidenav-content", 1)),
                  2 & e &&
                    (M("ngIf", i.hasBackdrop), C(3), M("ngIf", !i._content));
              },
              dependencies: [ct, ZT],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        K8 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [yi, fe, wo, wo, fe] })),
            n
          );
        })();
      function Z8(n, t) {
        if (1 & n) {
          const e = zi();
          g(0, "button", 13),
            I("click", function () {
              return ii(e), ri(Ie(2).logout());
            }),
            g(1, "i", 7),
            v(2, " logout "),
            m(),
            v(3, " Logout "),
            m();
        }
      }
      function Q8(n, t) {
        if (
          (1 & n &&
            (g(0, "mat-sidenav", 2)(1, "a", 3),
            ge(2, "img", 4),
            m(),
            g(3, "mat-nav-list", 5)(4, "a", 6)(5, "i", 7),
            v(6, " dashboard "),
            m(),
            v(7, " Dashboard "),
            m(),
            g(8, "a", 8)(9, "i", 7),
            v(10, " people "),
            m(),
            v(11, " Equipe "),
            m(),
            g(12, "a", 9)(13, "i", 7),
            v(14, " person "),
            m(),
            v(15, " Membro "),
            m(),
            g(16, "a", 10)(17, "i", 7),
            v(18, " description "),
            m(),
            v(19, " Projetos "),
            m(),
            g(20, "a", 11)(21, "i", 7),
            v(22, " assignment "),
            m(),
            v(23, " Tarefas "),
            m()(),
            N(24, Z8, 4, 0, "button", 12),
            m()),
          2 & n)
        ) {
          const e = Ie();
          C(24), M("ngIf", e.mostraMenu);
        }
      }
      let X8 = (() => {
        class n {
          constructor(e) {
            (this.authGuard = e), (this.mostraMenu = !1);
          }
          ngOnInit() {
            this.authGuard.mostrarMenuEmmiter.subscribe(
              (e) => (this.mostraMenu = e)
            );
          }
          logout() {
            window.localStorage.setItem("token", ""),
              window.document.location.reload();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(h(wt));
          }),
          (n.ɵcmp = H({
            type: n,
            selectors: [["app-nav"]],
            decls: 4,
            vars: 1,
            consts: [
              [1, "container"],
              [
                "class",
                "sidenav",
                "mode",
                "side",
                "opened",
                "",
                "fixedInViewport",
                "True",
                4,
                "ngIf",
              ],
              [
                "mode",
                "side",
                "opened",
                "",
                "fixedInViewport",
                "True",
                1,
                "sidenav",
              ],
              ["mat-list-item", ""],
              [
                "src",
                "../../../../assets/images/Brisanet_logo.png",
                "alt",
                "Logo Brisanet",
                1,
                "logo",
              ],
              [1, "nav-list"],
              ["mat-list-item", "", "routerLink", "dashboard"],
              [1, "material-icons"],
              ["mat-list-item", "", "routerLink", "equipes"],
              ["mat-list-item", "", "routerLink", "membros"],
              ["mat-list-item", "", "routerLink", "projetos"],
              ["mat-list-item", "", "routerLink", "tarefas"],
              ["class", "logout", 3, "click", 4, "ngIf"],
              [1, "logout", 3, "click"],
            ],
            template: function (e, i) {
              1 & e &&
                (g(0, "mat-sidenav-container", 0),
                N(1, Q8, 25, 1, "mat-sidenav", 1),
                g(2, "mat-card-content"),
                ge(3, "router-outlet"),
                m()()),
                2 & e && (C(1), M("ngIf", i.mostraMenu));
            },
            dependencies: [rg, Xu, ct, hT, A8, I8, QT, XT],
            styles: [
              ".sidenav[_ngcontent-%COMP%]{border-radius:5px;display:flex;flex-direction:column;height:auto;transition:.5s;width:12rem}a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin:2rem 1rem}.mat-list-item[_ngcontent-%COMP%]{transition:.5s}.mat-list-item[_ngcontent-%COMP%]:hover{color:#f56e28;height:3rem;transition:.5s;transform:scale(1.1)}.logo[_ngcontent-%COMP%]{margin-top:1rem;margin-left:1rem;max-height:3rem}a[_ngcontent-%COMP%]:focus{color:#f56e28}.logout[_ngcontent-%COMP%]{position:absolute;bottom:40px;display:flex;justify-content:space-evenly;margin-left:25px;align-items:center;width:100px;height:40px;border-radius:5px}",
            ],
          })),
          n
        );
      })();
      const J8 = ["*", [["mat-toolbar-row"]]],
        e5 = ["*", "mat-toolbar-row"],
        t5 = Pg(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          }
        );
      let n5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = R({
              type: n,
              selectors: [["mat-toolbar-row"]],
              hostAttrs: [1, "mat-toolbar-row"],
              exportAs: ["matToolbarRow"],
            })),
            n
          );
        })(),
        i5 = (() => {
          class n extends t5 {
            constructor(e, i, r) {
              super(e), (this._platform = i), (this._document = r);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                (this._checkToolbarMixedModes(),
                this._toolbarRows.changes.subscribe(() =>
                  this._checkToolbarMixedModes()
                ));
            }
            _checkToolbarMixedModes() {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(h(ie), h(yt), h(ee));
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["mat-toolbar"]],
              contentQueries: function (e, i, r) {
                if ((1 & e && ke(r, n5, 5), 2 & e)) {
                  let o;
                  X((o = J())) && (i._toolbarRows = o);
                }
              },
              hostAttrs: [1, "mat-toolbar"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  Pe("mat-toolbar-multiple-rows", i._toolbarRows.length > 0)(
                    "mat-toolbar-single-row",
                    0 === i._toolbarRows.length
                  );
              },
              inputs: { color: "color" },
              exportAs: ["matToolbar"],
              features: [B],
              ngContentSelectors: e5,
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && (mt(J8), pe(0), pe(1, 1));
              },
              styles: [
                ".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        r5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [fe, fe] })),
            n
          );
        })(),
        o5 = (() => {
          class n {
            constructor() {}
            ngOnInit() {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-header"]],
              decls: 4,
              vars: 0,
              consts: [[1, "header"]],
              template: function (e, i) {
                1 & e &&
                  (g(0, "mat-toolbar", 0)(1, "span")(2, "a"),
                  v(3, " Sistema de Gerenciamento de Projetos "),
                  m()()());
              },
              dependencies: [i5],
              styles: [
                ".header[_ngcontent-%COMP%]{background-color:#fff;justify-content:flex-end}",
              ],
            })),
            n
          );
        })(),
        s5 = (() => {
          class n {
            constructor() {
              this.title = "projeto-brisa";
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = H({
              type: n,
              selectors: [["app-root"]],
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && ge(0, "app-header")(1, "app-nav");
              },
              dependencies: [X8, o5],
              styles: ["app-header[_ngcontent-%COMP%]{position:relative}"],
            })),
            n
          );
        })(),
        c5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [md, fe, md, fe] })),
            n
          );
        })(),
        w5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [vl, fe, fe] })),
            n
          );
        })(),
        T5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({})),
            n
          );
        })(),
        P5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [T5, fe, fe] })),
            n
          );
        })(),
        H5 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = Q({ type: n })),
            (n.ɵinj = Z({ imports: [fe, fe] })),
            n
          );
        })();
      const q5 = {
        provide: new x("mat-menu-scroll-strategy"),
        deps: [bn],
        useFactory: function z5(n) {
          return () => n.scrollStrategies.reposition();
        },
      };
      let G5 = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = Q({ type: n })),
          (n.ɵinj = Z({ providers: [q5], imports: [yi, fe, vl, Ps, wo, fe] })),
          n
        );
      })();
      const W5 = [
        {
          provide: vg,
          useClass: (() => {
            class n {
              constructor(e) {
                this.authService = e;
              }
              intercept(e, i) {
                const r = window.localStorage.getItem("token");
                let o = e;
                return (
                  r &&
                    (o = e.clone({
                      headers: e.headers.set("Authorization", "Bearer " + r),
                    })),
                  i.handle(o).pipe(Ei(this.handleError))
                );
              }
              handleError(e) {
                return (
                  e.error instanceof ErrorEvent
                    ? console.error("Ocorreu um erro:", e.error.message)
                    : console.error(
                        `C\xf3digo do erro ${e.status}, Erro: ${JSON.stringify(
                          e.error
                        )}`
                      ),
                  uo("Ocorreu um erro, tente novamente")
                );
              }
            }
            return (
              (n.ɵfac = function (e) {
                return new (e || n)(b(ul));
              }),
              (n.ɵprov = k({ token: n, factory: n.ɵfac })),
              n
            );
          })(),
          multi: !0,
        },
      ];
      let Y5 = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = Q({ type: n, bootstrap: [s5] })),
          (n.ɵinj = Z({
            providers: [ul, wt, W5],
            imports: [
              _8,
              x2,
              K0,
              yi,
              kj,
              mU,
              NU,
              oT,
              Ez,
              w4,
              c5,
              mz,
              H5,
              N8,
              G5,
              w5,
              pq,
              K8,
              RT,
              r5,
              Gq,
              P5,
              KM,
            ],
          })),
          n
        );
      })();
      (function rN() {
        Qw = !1;
      })(),
        gV()
          .bootstrapModule(Y5)
          .catch((n) => console.error(n));
    },
  },
  (ye) => {
    ye((ye.s = 335));
  },
]);
