"use strict";
(self.webpackChunkprojeto_brisa = self.webpackChunkprojeto_brisa || []).push([
  [179],
  {
    974: () => {
      function Ae(n) {
        return "function" == typeof n;
      }
      function qa(n) {
        const e = n((i) => {
          Error.call(i), (i.stack = new Error().stack);
        });
        return (
          (e.prototype = Object.create(Error.prototype)),
          (e.prototype.constructor = e),
          e
        );
      }
      const iu = qa(
        (n) =>
          function (e) {
            n(this),
              (this.message = e
                ? `${e.length} errors occurred during unsubscription:\n${e
                    .map((i, r) => `${r + 1}) ${i.toString()}`)
                    .join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = e);
          }
      );
      function Eo(n, t) {
        if (n) {
          const e = n.indexOf(t);
          0 <= e && n.splice(e, 1);
        }
      }
      class bt {
        constructor(t) {
          (this.initialTeardown = t),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let t;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: e } = this;
            if (e)
              if (((this._parentage = null), Array.isArray(e)))
                for (const s of e) s.remove(this);
              else e.remove(this);
            const { initialTeardown: i } = this;
            if (Ae(i))
              try {
                i();
              } catch (s) {
                t = s instanceof iu ? s.errors : [s];
              }
            const { _finalizers: r } = this;
            if (r) {
              this._finalizers = null;
              for (const s of r)
                try {
                  Xv(s);
                } catch (o) {
                  (t = t ?? []),
                    o instanceof iu ? (t = [...t, ...o.errors]) : t.push(o);
                }
            }
            if (t) throw new iu(t);
          }
        }
        add(t) {
          var e;
          if (t && t !== this)
            if (this.closed) Xv(t);
            else {
              if (t instanceof bt) {
                if (t.closed || t._hasParent(this)) return;
                t._addParent(this);
              }
              (this._finalizers =
                null !== (e = this._finalizers) && void 0 !== e ? e : []).push(
                t
              );
            }
        }
        _hasParent(t) {
          const { _parentage: e } = this;
          return e === t || (Array.isArray(e) && e.includes(t));
        }
        _addParent(t) {
          const { _parentage: e } = this;
          this._parentage = Array.isArray(e) ? (e.push(t), e) : e ? [e, t] : t;
        }
        _removeParent(t) {
          const { _parentage: e } = this;
          e === t ? (this._parentage = null) : Array.isArray(e) && Eo(e, t);
        }
        remove(t) {
          const { _finalizers: e } = this;
          e && Eo(e, t), t instanceof bt && t._removeParent(this);
        }
      }
      bt.EMPTY = (() => {
        const n = new bt();
        return (n.closed = !0), n;
      })();
      const Yv = bt.EMPTY;
      function Kv(n) {
        return (
          n instanceof bt ||
          (n && "closed" in n && Ae(n.remove) && Ae(n.add) && Ae(n.unsubscribe))
        );
      }
      function Xv(n) {
        Ae(n) ? n() : n.unsubscribe();
      }
      const Ss = {
          onUnhandledError: null,
          onStoppedNotification: null,
          Promise: void 0,
          useDeprecatedSynchronousErrorHandling: !1,
          useDeprecatedNextContext: !1,
        },
        ru = {
          setTimeout(n, t, ...e) {
            const { delegate: i } = ru;
            return i?.setTimeout
              ? i.setTimeout(n, t, ...e)
              : setTimeout(n, t, ...e);
          },
          clearTimeout(n) {
            const { delegate: t } = ru;
            return (t?.clearTimeout || clearTimeout)(n);
          },
          delegate: void 0,
        };
      function Zv(n) {
        ru.setTimeout(() => {
          const { onUnhandledError: t } = Ss;
          if (!t) throw n;
          t(n);
        });
      }
      function Uf() {}
      const mO = $f("C", void 0, void 0);
      function $f(n, t, e) {
        return { kind: n, value: t, error: e };
      }
      let Ts = null;
      function su(n) {
        if (Ss.useDeprecatedSynchronousErrorHandling) {
          const t = !Ts;
          if ((t && (Ts = { errorThrown: !1, error: null }), n(), t)) {
            const { errorThrown: e, error: i } = Ts;
            if (((Ts = null), e)) throw i;
          }
        } else n();
      }
      class qf extends bt {
        constructor(t) {
          super(),
            (this.isStopped = !1),
            t
              ? ((this.destination = t), Kv(t) && t.add(this))
              : (this.destination = wO);
        }
        static create(t, e, i) {
          return new Wa(t, e, i);
        }
        next(t) {
          this.isStopped
            ? Gf(
                (function _O(n) {
                  return $f("N", n, void 0);
                })(t),
                this
              )
            : this._next(t);
        }
        error(t) {
          this.isStopped
            ? Gf(
                (function gO(n) {
                  return $f("E", void 0, n);
                })(t),
                this
              )
            : ((this.isStopped = !0), this._error(t));
        }
        complete() {
          this.isStopped
            ? Gf(mO, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(t) {
          this.destination.next(t);
        }
        _error(t) {
          try {
            this.destination.error(t);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const vO = Function.prototype.bind;
      function Wf(n, t) {
        return vO.call(n, t);
      }
      class bO {
        constructor(t) {
          this.partialObserver = t;
        }
        next(t) {
          const { partialObserver: e } = this;
          if (e.next)
            try {
              e.next(t);
            } catch (i) {
              ou(i);
            }
        }
        error(t) {
          const { partialObserver: e } = this;
          if (e.error)
            try {
              e.error(t);
            } catch (i) {
              ou(i);
            }
          else ou(t);
        }
        complete() {
          const { partialObserver: t } = this;
          if (t.complete)
            try {
              t.complete();
            } catch (e) {
              ou(e);
            }
        }
      }
      class Wa extends qf {
        constructor(t, e, i) {
          let r;
          if ((super(), Ae(t) || !t))
            r = {
              next: t ?? void 0,
              error: e ?? void 0,
              complete: i ?? void 0,
            };
          else {
            let s;
            this && Ss.useDeprecatedNextContext
              ? ((s = Object.create(t)),
                (s.unsubscribe = () => this.unsubscribe()),
                (r = {
                  next: t.next && Wf(t.next, s),
                  error: t.error && Wf(t.error, s),
                  complete: t.complete && Wf(t.complete, s),
                }))
              : (r = t);
          }
          this.destination = new bO(r);
        }
      }
      function ou(n) {
        Ss.useDeprecatedSynchronousErrorHandling
          ? (function yO(n) {
              Ss.useDeprecatedSynchronousErrorHandling &&
                Ts &&
                ((Ts.errorThrown = !0), (Ts.error = n));
            })(n)
          : Zv(n);
      }
      function Gf(n, t) {
        const { onStoppedNotification: e } = Ss;
        e && ru.setTimeout(() => e(n, t));
      }
      const wO = {
          closed: !0,
          next: Uf,
          error: function CO(n) {
            throw n;
          },
          complete: Uf,
        },
        Yf =
          ("function" == typeof Symbol && Symbol.observable) || "@@observable";
      function Kr(n) {
        return n;
      }
      function Qv(n) {
        return 0 === n.length
          ? Kr
          : 1 === n.length
          ? n[0]
          : function (e) {
              return n.reduce((i, r) => r(i), e);
            };
      }
      let We = (() => {
        class n {
          constructor(e) {
            e && (this._subscribe = e);
          }
          lift(e) {
            const i = new n();
            return (i.source = this), (i.operator = e), i;
          }
          subscribe(e, i, r) {
            const s = (function xO(n) {
              return (
                (n && n instanceof qf) ||
                ((function DO(n) {
                  return n && Ae(n.next) && Ae(n.error) && Ae(n.complete);
                })(n) &&
                  Kv(n))
              );
            })(e)
              ? e
              : new Wa(e, i, r);
            return (
              su(() => {
                const { operator: o, source: a } = this;
                s.add(
                  o
                    ? o.call(s, a)
                    : a
                    ? this._subscribe(s)
                    : this._trySubscribe(s)
                );
              }),
              s
            );
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (i) {
              e.error(i);
            }
          }
          forEach(e, i) {
            return new (i = Jv(i))((r, s) => {
              const o = new Wa({
                next: (a) => {
                  try {
                    e(a);
                  } catch (l) {
                    s(l), o.unsubscribe();
                  }
                },
                error: s,
                complete: r,
              });
              this.subscribe(o);
            });
          }
          _subscribe(e) {
            var i;
            return null === (i = this.source) || void 0 === i
              ? void 0
              : i.subscribe(e);
          }
          [Yf]() {
            return this;
          }
          pipe(...e) {
            return Qv(e)(this);
          }
          toPromise(e) {
            return new (e = Jv(e))((i, r) => {
              let s;
              this.subscribe(
                (o) => (s = o),
                (o) => r(o),
                () => i(s)
              );
            });
          }
        }
        return (n.create = (t) => new n(t)), n;
      })();
      function Jv(n) {
        var t;
        return null !== (t = n ?? Ss.Promise) && void 0 !== t ? t : Promise;
      }
      const EO = qa(
        (n) =>
          function () {
            n(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      let $ = (() => {
        class n extends We {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(e) {
            const i = new eb(this, this);
            return (i.operator = e), i;
          }
          _throwIfClosed() {
            if (this.closed) throw new EO();
          }
          next(e) {
            su(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const i of this.currentObservers) i.next(e);
              }
            });
          }
          error(e) {
            su(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = e);
                const { observers: i } = this;
                for (; i.length; ) i.shift().error(e);
              }
            });
          }
          complete() {
            su(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: e } = this;
                for (; e.length; ) e.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var e;
            return (
              (null === (e = this.observers) || void 0 === e
                ? void 0
                : e.length) > 0
            );
          }
          _trySubscribe(e) {
            return this._throwIfClosed(), super._trySubscribe(e);
          }
          _subscribe(e) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(e),
              this._innerSubscribe(e)
            );
          }
          _innerSubscribe(e) {
            const { hasError: i, isStopped: r, observers: s } = this;
            return i || r
              ? Yv
              : ((this.currentObservers = null),
                s.push(e),
                new bt(() => {
                  (this.currentObservers = null), Eo(s, e);
                }));
          }
          _checkFinalizedStatuses(e) {
            const { hasError: i, thrownError: r, isStopped: s } = this;
            i ? e.error(r) : s && e.complete();
          }
          asObservable() {
            const e = new We();
            return (e.source = this), e;
          }
        }
        return (n.create = (t, e) => new eb(t, e)), n;
      })();
      class eb extends $ {
        constructor(t, e) {
          super(), (this.destination = t), (this.source = e);
        }
        next(t) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.next) ||
            void 0 === i ||
            i.call(e, t);
        }
        error(t) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.error) ||
            void 0 === i ||
            i.call(e, t);
        }
        complete() {
          var t, e;
          null ===
            (e =
              null === (t = this.destination) || void 0 === t
                ? void 0
                : t.complete) ||
            void 0 === e ||
            e.call(t);
        }
        _subscribe(t) {
          var e, i;
          return null !==
            (i =
              null === (e = this.source) || void 0 === e
                ? void 0
                : e.subscribe(t)) && void 0 !== i
            ? i
            : Yv;
        }
      }
      function tb(n) {
        return Ae(n?.lift);
      }
      function ft(n) {
        return (t) => {
          if (tb(t))
            return t.lift(function (e) {
              try {
                return n(e, this);
              } catch (i) {
                this.error(i);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
      function ot(n, t, e, i, r) {
        return new SO(n, t, e, i, r);
      }
      class SO extends qf {
        constructor(t, e, i, r, s, o) {
          super(t),
            (this.onFinalize = s),
            (this.shouldUnsubscribe = o),
            (this._next = e
              ? function (a) {
                  try {
                    e(a);
                  } catch (l) {
                    t.error(l);
                  }
                }
              : super._next),
            (this._error = r
              ? function (a) {
                  try {
                    r(a);
                  } catch (l) {
                    t.error(l);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = i
              ? function () {
                  try {
                    i();
                  } catch (a) {
                    t.error(a);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var t;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: e } = this;
            super.unsubscribe(),
              !e &&
                (null === (t = this.onFinalize) ||
                  void 0 === t ||
                  t.call(this));
          }
        }
      }
      function Z(n, t) {
        return ft((e, i) => {
          let r = 0;
          e.subscribe(
            ot(i, (s) => {
              i.next(n.call(t, s, r++));
            })
          );
        });
      }
      function As(n) {
        return this instanceof As ? ((this.v = n), this) : new As(n);
      }
      function kO(n, t, e) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var r,
          i = e.apply(n, t || []),
          s = [];
        return (
          (r = {}),
          o("next"),
          o("throw"),
          o("return"),
          (r[Symbol.asyncIterator] = function () {
            return this;
          }),
          r
        );
        function o(h) {
          i[h] &&
            (r[h] = function (f) {
              return new Promise(function (p, m) {
                s.push([h, f, p, m]) > 1 || a(h, f);
              });
            });
        }
        function a(h, f) {
          try {
            !(function l(h) {
              h.value instanceof As
                ? Promise.resolve(h.value.v).then(c, u)
                : d(s[0][2], h);
            })(i[h](f));
          } catch (p) {
            d(s[0][3], p);
          }
        }
        function c(h) {
          a("next", h);
        }
        function u(h) {
          a("throw", h);
        }
        function d(h, f) {
          h(f), s.shift(), s.length && a(s[0][0], s[0][1]);
        }
      }
      function IO(n) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var e,
          t = n[Symbol.asyncIterator];
        return t
          ? t.call(n)
          : ((n = (function rb(n) {
              var t = "function" == typeof Symbol && Symbol.iterator,
                e = t && n[t],
                i = 0;
              if (e) return e.call(n);
              if (n && "number" == typeof n.length)
                return {
                  next: function () {
                    return (
                      n && i >= n.length && (n = void 0),
                      { value: n && n[i++], done: !n }
                    );
                  },
                };
              throw new TypeError(
                t
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(n)),
            (e = {}),
            i("next"),
            i("throw"),
            i("return"),
            (e[Symbol.asyncIterator] = function () {
              return this;
            }),
            e);
        function i(s) {
          e[s] =
            n[s] &&
            function (o) {
              return new Promise(function (a, l) {
                !(function r(s, o, a, l) {
                  Promise.resolve(l).then(function (c) {
                    s({ value: c, done: a });
                  }, o);
                })(a, l, (o = n[s](o)).done, o.value);
              });
            };
        }
      }
      const Xf = (n) =>
        n && "number" == typeof n.length && "function" != typeof n;
      function sb(n) {
        return Ae(n?.then);
      }
      function ob(n) {
        return Ae(n[Yf]);
      }
      function ab(n) {
        return Symbol.asyncIterator && Ae(n?.[Symbol.asyncIterator]);
      }
      function lb(n) {
        return new TypeError(
          `You provided ${
            null !== n && "object" == typeof n ? "an invalid object" : `'${n}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      const cb = (function RO() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
      function ub(n) {
        return Ae(n?.[cb]);
      }
      function db(n) {
        return kO(this, arguments, function* () {
          const e = n.getReader();
          try {
            for (;;) {
              const { value: i, done: r } = yield As(e.read());
              if (r) return yield As(void 0);
              yield yield As(i);
            }
          } finally {
            e.releaseLock();
          }
        });
      }
      function hb(n) {
        return Ae(n?.getReader);
      }
      function _n(n) {
        if (n instanceof We) return n;
        if (null != n) {
          if (ob(n))
            return (function PO(n) {
              return new We((t) => {
                const e = n[Yf]();
                if (Ae(e.subscribe)) return e.subscribe(t);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(n);
          if (Xf(n))
            return (function FO(n) {
              return new We((t) => {
                for (let e = 0; e < n.length && !t.closed; e++) t.next(n[e]);
                t.complete();
              });
            })(n);
          if (sb(n))
            return (function NO(n) {
              return new We((t) => {
                n.then(
                  (e) => {
                    t.closed || (t.next(e), t.complete());
                  },
                  (e) => t.error(e)
                ).then(null, Zv);
              });
            })(n);
          if (ab(n)) return fb(n);
          if (ub(n))
            return (function LO(n) {
              return new We((t) => {
                for (const e of n) if ((t.next(e), t.closed)) return;
                t.complete();
              });
            })(n);
          if (hb(n))
            return (function BO(n) {
              return fb(db(n));
            })(n);
        }
        throw lb(n);
      }
      function fb(n) {
        return new We((t) => {
          (function VO(n, t) {
            var e, i, r, s;
            return (function TO(n, t, e, i) {
              return new (e || (e = Promise))(function (s, o) {
                function a(u) {
                  try {
                    c(i.next(u));
                  } catch (d) {
                    o(d);
                  }
                }
                function l(u) {
                  try {
                    c(i.throw(u));
                  } catch (d) {
                    o(d);
                  }
                }
                function c(u) {
                  u.done
                    ? s(u.value)
                    : (function r(s) {
                        return s instanceof e
                          ? s
                          : new e(function (o) {
                              o(s);
                            });
                      })(u.value).then(a, l);
                }
                c((i = i.apply(n, t || [])).next());
              });
            })(this, void 0, void 0, function* () {
              try {
                for (e = IO(n); !(i = yield e.next()).done; )
                  if ((t.next(i.value), t.closed)) return;
              } catch (o) {
                r = { error: o };
              } finally {
                try {
                  i && !i.done && (s = e.return) && (yield s.call(e));
                } finally {
                  if (r) throw r.error;
                }
              }
              t.complete();
            });
          })(n, t).catch((e) => t.error(e));
        });
      }
      function pr(n, t, e, i = 0, r = !1) {
        const s = t.schedule(function () {
          e(), r ? n.add(this.schedule(null, i)) : this.unsubscribe();
        }, i);
        if ((n.add(s), !r)) return s;
      }
      function zt(n, t, e = 1 / 0) {
        return Ae(t)
          ? zt((i, r) => Z((s, o) => t(i, s, r, o))(_n(n(i, r))), e)
          : ("number" == typeof t && (e = t),
            ft((i, r) =>
              (function jO(n, t, e, i, r, s, o, a) {
                const l = [];
                let c = 0,
                  u = 0,
                  d = !1;
                const h = () => {
                    d && !l.length && !c && t.complete();
                  },
                  f = (m) => (c < i ? p(m) : l.push(m)),
                  p = (m) => {
                    s && t.next(m), c++;
                    let _ = !1;
                    _n(e(m, u++)).subscribe(
                      ot(
                        t,
                        (v) => {
                          r?.(v), s ? f(v) : t.next(v);
                        },
                        () => {
                          _ = !0;
                        },
                        void 0,
                        () => {
                          if (_)
                            try {
                              for (c--; l.length && c < i; ) {
                                const v = l.shift();
                                o ? pr(t, o, () => p(v)) : p(v);
                              }
                              h();
                            } catch (v) {
                              t.error(v);
                            }
                        }
                      )
                    );
                  };
                return (
                  n.subscribe(
                    ot(t, f, () => {
                      (d = !0), h();
                    })
                  ),
                  () => {
                    a?.();
                  }
                );
              })(i, r, n, e)
            ));
      }
      function So(n = 1 / 0) {
        return zt(Kr, n);
      }
      const Oi = new We((n) => n.complete());
      function pb(n) {
        return n && Ae(n.schedule);
      }
      function Zf(n) {
        return n[n.length - 1];
      }
      function mb(n) {
        return Ae(Zf(n)) ? n.pop() : void 0;
      }
      function Ga(n) {
        return pb(Zf(n)) ? n.pop() : void 0;
      }
      function gb(n, t = 0) {
        return ft((e, i) => {
          e.subscribe(
            ot(
              i,
              (r) => pr(i, n, () => i.next(r), t),
              () => pr(i, n, () => i.complete(), t),
              (r) => pr(i, n, () => i.error(r), t)
            )
          );
        });
      }
      function _b(n, t = 0) {
        return ft((e, i) => {
          i.add(n.schedule(() => e.subscribe(i), t));
        });
      }
      function yb(n, t) {
        if (!n) throw new Error("Iterable cannot be null");
        return new We((e) => {
          pr(e, t, () => {
            const i = n[Symbol.asyncIterator]();
            pr(
              e,
              t,
              () => {
                i.next().then((r) => {
                  r.done ? e.complete() : e.next(r.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      function Dt(n, t) {
        return t
          ? (function YO(n, t) {
              if (null != n) {
                if (ob(n))
                  return (function UO(n, t) {
                    return _n(n).pipe(_b(t), gb(t));
                  })(n, t);
                if (Xf(n))
                  return (function qO(n, t) {
                    return new We((e) => {
                      let i = 0;
                      return t.schedule(function () {
                        i === n.length
                          ? e.complete()
                          : (e.next(n[i++]), e.closed || this.schedule());
                      });
                    });
                  })(n, t);
                if (sb(n))
                  return (function $O(n, t) {
                    return _n(n).pipe(_b(t), gb(t));
                  })(n, t);
                if (ab(n)) return yb(n, t);
                if (ub(n))
                  return (function WO(n, t) {
                    return new We((e) => {
                      let i;
                      return (
                        pr(e, t, () => {
                          (i = n[cb]()),
                            pr(
                              e,
                              t,
                              () => {
                                let r, s;
                                try {
                                  ({ value: r, done: s } = i.next());
                                } catch (o) {
                                  return void e.error(o);
                                }
                                s ? e.complete() : e.next(r);
                              },
                              0,
                              !0
                            );
                        }),
                        () => Ae(i?.return) && i.return()
                      );
                    });
                  })(n, t);
                if (hb(n))
                  return (function GO(n, t) {
                    return yb(db(n), t);
                  })(n, t);
              }
              throw lb(n);
            })(n, t)
          : _n(n);
      }
      function Xr(...n) {
        const t = Ga(n),
          e = (function zO(n, t) {
            return "number" == typeof Zf(n) ? n.pop() : t;
          })(n, 1 / 0),
          i = n;
        return i.length ? (1 === i.length ? _n(i[0]) : So(e)(Dt(i, t))) : Oi;
      }
      function Qf(n, t, ...e) {
        if (!0 === t) return void n();
        if (!1 === t) return;
        const i = new Wa({
          next: () => {
            i.unsubscribe(), n();
          },
        });
        return t(...e).subscribe(i);
      }
      function Ze(n) {
        for (let t in n) if (n[t] === Ze) return t;
        throw Error("Could not find renamed property on target object.");
      }
      function Jf(n, t) {
        for (const e in t)
          t.hasOwnProperty(e) && !n.hasOwnProperty(e) && (n[e] = t[e]);
      }
      function Qe(n) {
        if ("string" == typeof n) return n;
        if (Array.isArray(n)) return "[" + n.map(Qe).join(", ") + "]";
        if (null == n) return "" + n;
        if (n.overriddenName) return `${n.overriddenName}`;
        if (n.name) return `${n.name}`;
        const t = n.toString();
        if (null == t) return "" + t;
        const e = t.indexOf("\n");
        return -1 === e ? t : t.substring(0, e);
      }
      function ep(n, t) {
        return null == n || "" === n
          ? null === t
            ? ""
            : t
          : null == t || "" === t
          ? n
          : n + " " + t;
      }
      const KO = Ze({ __forward_ref__: Ze });
      function Le(n) {
        return (
          (n.__forward_ref__ = Le),
          (n.toString = function () {
            return Qe(this());
          }),
          n
        );
      }
      function te(n) {
        return tp(n) ? n() : n;
      }
      function tp(n) {
        return (
          "function" == typeof n &&
          n.hasOwnProperty(KO) &&
          n.__forward_ref__ === Le
        );
      }
      class k extends Error {
        constructor(t, e) {
          super(
            (function au(n, t) {
              return `NG0${Math.abs(n)}${t ? ": " + t.trim() : ""}`;
            })(t, e)
          ),
            (this.code = t);
        }
      }
      function de(n) {
        return "string" == typeof n ? n : null == n ? "" : String(n);
      }
      function lu(n, t) {
        throw new k(-201, !1);
      }
      function In(n, t) {
        null == n &&
          (function He(n, t, e, i) {
            throw new Error(
              `ASSERTION ERROR: ${n}` +
                (null == i ? "" : ` [Expected=> ${e} ${i} ${t} <=Actual]`)
            );
          })(t, n, null, "!=");
      }
      function F(n) {
        return {
          token: n.token,
          providedIn: n.providedIn || null,
          factory: n.factory,
          value: void 0,
        };
      }
      function ne(n) {
        return { providers: n.providers || [], imports: n.imports || [] };
      }
      function np(n) {
        return bb(n, cu) || bb(n, wb);
      }
      function bb(n, t) {
        return n.hasOwnProperty(t) ? n[t] : null;
      }
      function Cb(n) {
        return n && (n.hasOwnProperty(ip) || n.hasOwnProperty(iR))
          ? n[ip]
          : null;
      }
      const cu = Ze({ ɵprov: Ze }),
        ip = Ze({ ɵinj: Ze }),
        wb = Ze({ ngInjectableDef: Ze }),
        iR = Ze({ ngInjectorDef: Ze });
      var K = (() => (
        ((K = K || {})[(K.Default = 0)] = "Default"),
        (K[(K.Host = 1)] = "Host"),
        (K[(K.Self = 2)] = "Self"),
        (K[(K.SkipSelf = 4)] = "SkipSelf"),
        (K[(K.Optional = 8)] = "Optional"),
        K
      ))();
      let rp;
      function Xn(n) {
        const t = rp;
        return (rp = n), t;
      }
      function Mb(n, t, e) {
        const i = np(n);
        return i && "root" == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : e & K.Optional
          ? null
          : void 0 !== t
          ? t
          : void lu(Qe(n));
      }
      function Zr(n) {
        return { toString: n }.toString();
      }
      var pi = (() => (
          ((pi = pi || {})[(pi.OnPush = 0)] = "OnPush"),
          (pi[(pi.Default = 1)] = "Default"),
          pi
        ))(),
        mi = (() => {
          return (
            ((n = mi || (mi = {}))[(n.Emulated = 0)] = "Emulated"),
            (n[(n.None = 2)] = "None"),
            (n[(n.ShadowDom = 3)] = "ShadowDom"),
            mi
          );
          var n;
        })();
      const Ge = (() =>
          (typeof globalThis < "u" && globalThis) ||
          (typeof global < "u" && global) ||
          (typeof window < "u" && window) ||
          (typeof self < "u" &&
            typeof WorkerGlobalScope < "u" &&
            self instanceof WorkerGlobalScope &&
            self))(),
        To = {},
        Ve = [],
        uu = Ze({ ɵcmp: Ze }),
        sp = Ze({ ɵdir: Ze }),
        op = Ze({ ɵpipe: Ze }),
        Db = Ze({ ɵmod: Ze }),
        gr = Ze({ ɵfac: Ze }),
        Ya = Ze({ __NG_ELEMENT_ID__: Ze });
      let sR = 0;
      function G(n) {
        return Zr(() => {
          const e = !0 === n.standalone,
            i = {},
            r = {
              type: n.type,
              providersResolver: null,
              decls: n.decls,
              vars: n.vars,
              factory: null,
              template: n.template || null,
              consts: n.consts || null,
              ngContentSelectors: n.ngContentSelectors,
              hostBindings: n.hostBindings || null,
              hostVars: n.hostVars || 0,
              hostAttrs: n.hostAttrs || null,
              contentQueries: n.contentQueries || null,
              declaredInputs: i,
              inputs: null,
              outputs: null,
              exportAs: n.exportAs || null,
              onPush: n.changeDetection === pi.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              standalone: e,
              dependencies: (e && n.dependencies) || null,
              getStandaloneInjector: null,
              selectors: n.selectors || Ve,
              viewQuery: n.viewQuery || null,
              features: n.features || null,
              data: n.data || {},
              encapsulation: n.encapsulation || mi.Emulated,
              id: "c" + sR++,
              styles: n.styles || Ve,
              _: null,
              setInput: null,
              schemas: n.schemas || null,
              tView: null,
            },
            s = n.dependencies,
            o = n.features;
          return (
            (r.inputs = Sb(n.inputs, i)),
            (r.outputs = Sb(n.outputs)),
            o && o.forEach((a) => a(r)),
            (r.directiveDefs = s
              ? () => ("function" == typeof s ? s() : s).map(xb).filter(Eb)
              : null),
            (r.pipeDefs = s
              ? () => ("function" == typeof s ? s() : s).map(ln).filter(Eb)
              : null),
            r
          );
        });
      }
      function xb(n) {
        return $e(n) || an(n);
      }
      function Eb(n) {
        return null !== n;
      }
      const aR = {};
      function re(n) {
        return Zr(() => {
          const t = {
            type: n.type,
            bootstrap: n.bootstrap || Ve,
            declarations: n.declarations || Ve,
            imports: n.imports || Ve,
            exports: n.exports || Ve,
            transitiveCompileScopes: null,
            schemas: n.schemas || null,
            id: n.id || null,
          };
          return null != n.id && (aR[n.id] = n.type), t;
        });
      }
      function Sb(n, t) {
        if (null == n) return To;
        const e = {};
        for (const i in n)
          if (n.hasOwnProperty(i)) {
            let r = n[i],
              s = r;
            Array.isArray(r) && ((s = r[1]), (r = r[0])),
              (e[r] = i),
              t && (t[r] = s);
          }
        return e;
      }
      const N = G;
      function yn(n) {
        return {
          type: n.type,
          name: n.name,
          factory: null,
          pure: !1 !== n.pure,
          standalone: !0 === n.standalone,
          onDestroy: n.type.prototype.ngOnDestroy || null,
        };
      }
      function $e(n) {
        return n[uu] || null;
      }
      function an(n) {
        return n[sp] || null;
      }
      function ln(n) {
        return n[op] || null;
      }
      function On(n, t) {
        const e = n[Db] || null;
        if (!e && !0 === t)
          throw new Error(`Type ${Qe(n)} does not have '\u0275mod' property.`);
        return e;
      }
      function vn(n) {
        return Array.isArray(n) && "object" == typeof n[1];
      }
      function _i(n) {
        return Array.isArray(n) && !0 === n[1];
      }
      function cp(n) {
        return 0 != (8 & n.flags);
      }
      function pu(n) {
        return 2 == (2 & n.flags);
      }
      function mu(n) {
        return 1 == (1 & n.flags);
      }
      function yi(n) {
        return null !== n.template;
      }
      function hR(n) {
        return 0 != (256 & n[2]);
      }
      function Ps(n, t) {
        return n.hasOwnProperty(gr) ? n[gr] : null;
      }
      class mR {
        constructor(t, e, i) {
          (this.previousValue = t),
            (this.currentValue = e),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Gt() {
        return kb;
      }
      function kb(n) {
        return n.type.prototype.ngOnChanges && (n.setInput = _R), gR;
      }
      function gR() {
        const n = Ob(this),
          t = n?.current;
        if (t) {
          const e = n.previous;
          if (e === To) n.previous = t;
          else for (let i in t) e[i] = t[i];
          (n.current = null), this.ngOnChanges(t);
        }
      }
      function _R(n, t, e, i) {
        const r =
            Ob(n) ||
            (function yR(n, t) {
              return (n[Ib] = t);
            })(n, { previous: To, current: null }),
          s = r.current || (r.current = {}),
          o = r.previous,
          a = this.declaredInputs[e],
          l = o[a];
        (s[a] = new mR(l && l.currentValue, t, o === To)), (n[i] = t);
      }
      Gt.ngInherit = !0;
      const Ib = "__ngSimpleChanges__";
      function Ob(n) {
        return n[Ib] || null;
      }
      function xt(n) {
        for (; Array.isArray(n); ) n = n[0];
        return n;
      }
      function gu(n, t) {
        return xt(t[n]);
      }
      function Jn(n, t) {
        return xt(t[n.index]);
      }
      function pp(n, t) {
        return n.data[t];
      }
      function Ro(n, t) {
        return n[t];
      }
      function Pn(n, t) {
        const e = t[n];
        return vn(e) ? e : e[0];
      }
      function Rb(n) {
        return 4 == (4 & n[2]);
      }
      function mp(n) {
        return 64 == (64 & n[2]);
      }
      function Qr(n, t) {
        return null == t ? null : n[t];
      }
      function Pb(n) {
        n[18] = 0;
      }
      function gp(n, t) {
        n[5] += t;
        let e = n,
          i = n[3];
        for (
          ;
          null !== i && ((1 === t && 1 === e[5]) || (-1 === t && 0 === e[5]));

        )
          (i[5] += t), (e = i), (i = i[3]);
      }
      const le = { lFrame: Ub(null), bindingsEnabled: !0 };
      function Nb() {
        return le.bindingsEnabled;
      }
      function I() {
        return le.lFrame.lView;
      }
      function Oe() {
        return le.lFrame.tView;
      }
      function Ri(n) {
        return (le.lFrame.contextLView = n), n[8];
      }
      function Pi(n) {
        return (le.lFrame.contextLView = null), n;
      }
      function Pt() {
        let n = Lb();
        for (; null !== n && 64 === n.type; ) n = n.parent;
        return n;
      }
      function Lb() {
        return le.lFrame.currentTNode;
      }
      function Fi(n, t) {
        const e = le.lFrame;
        (e.currentTNode = n), (e.isParent = t);
      }
      function _p() {
        return le.lFrame.isParent;
      }
      function yp() {
        le.lFrame.isParent = !1;
      }
      function Po() {
        return le.lFrame.bindingIndex++;
      }
      function yr(n) {
        const t = le.lFrame,
          e = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + n), e;
      }
      function OR(n, t) {
        const e = le.lFrame;
        (e.bindingIndex = e.bindingRootIndex = n), vp(t);
      }
      function vp(n) {
        le.lFrame.currentDirectiveIndex = n;
      }
      function bp(n) {
        const t = le.lFrame.currentDirectiveIndex;
        return -1 === t ? null : n[t];
      }
      function jb() {
        return le.lFrame.currentQueryIndex;
      }
      function Cp(n) {
        le.lFrame.currentQueryIndex = n;
      }
      function PR(n) {
        const t = n[1];
        return 2 === t.type ? t.declTNode : 1 === t.type ? n[6] : null;
      }
      function Hb(n, t, e) {
        if (e & K.SkipSelf) {
          let r = t,
            s = n;
          for (
            ;
            !((r = r.parent),
            null !== r ||
              e & K.Host ||
              ((r = PR(s)), null === r || ((s = s[15]), 10 & r.type)));

          );
          if (null === r) return !1;
          (t = r), (n = s);
        }
        const i = (le.lFrame = zb());
        return (i.currentTNode = t), (i.lView = n), !0;
      }
      function wp(n) {
        const t = zb(),
          e = n[1];
        (le.lFrame = t),
          (t.currentTNode = e.firstChild),
          (t.lView = n),
          (t.tView = e),
          (t.contextLView = n),
          (t.bindingIndex = e.bindingStartIndex),
          (t.inI18n = !1);
      }
      function zb() {
        const n = le.lFrame,
          t = null === n ? null : n.child;
        return null === t ? Ub(n) : t;
      }
      function Ub(n) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: n,
          child: null,
          inI18n: !1,
        };
        return null !== n && (n.child = t), t;
      }
      function $b() {
        const n = le.lFrame;
        return (
          (le.lFrame = n.parent), (n.currentTNode = null), (n.lView = null), n
        );
      }
      const qb = $b;
      function Mp() {
        const n = $b();
        (n.isParent = !0),
          (n.tView = null),
          (n.selectedIndex = -1),
          (n.contextLView = null),
          (n.elementDepthCount = 0),
          (n.currentDirectiveIndex = -1),
          (n.currentNamespace = null),
          (n.bindingRootIndex = -1),
          (n.bindingIndex = -1),
          (n.currentQueryIndex = 0);
      }
      function un() {
        return le.lFrame.selectedIndex;
      }
      function Jr(n) {
        le.lFrame.selectedIndex = n;
      }
      function mt() {
        const n = le.lFrame;
        return pp(n.tView, n.selectedIndex);
      }
      function yu(n, t) {
        for (let e = t.directiveStart, i = t.directiveEnd; e < i; e++) {
          const s = n.data[e].type.prototype,
            {
              ngAfterContentInit: o,
              ngAfterContentChecked: a,
              ngAfterViewInit: l,
              ngAfterViewChecked: c,
              ngOnDestroy: u,
            } = s;
          o && (n.contentHooks || (n.contentHooks = [])).push(-e, o),
            a &&
              ((n.contentHooks || (n.contentHooks = [])).push(e, a),
              (n.contentCheckHooks || (n.contentCheckHooks = [])).push(e, a)),
            l && (n.viewHooks || (n.viewHooks = [])).push(-e, l),
            c &&
              ((n.viewHooks || (n.viewHooks = [])).push(e, c),
              (n.viewCheckHooks || (n.viewCheckHooks = [])).push(e, c)),
            null != u && (n.destroyHooks || (n.destroyHooks = [])).push(e, u);
        }
      }
      function vu(n, t, e) {
        Wb(n, t, 3, e);
      }
      function bu(n, t, e, i) {
        (3 & n[2]) === e && Wb(n, t, e, i);
      }
      function Dp(n, t) {
        let e = n[2];
        (3 & e) === t && ((e &= 2047), (e += 1), (n[2] = e));
      }
      function Wb(n, t, e, i) {
        const s = i ?? -1,
          o = t.length - 1;
        let a = 0;
        for (let l = void 0 !== i ? 65535 & n[18] : 0; l < o; l++)
          if ("number" == typeof t[l + 1]) {
            if (((a = t[l]), null != i && a >= i)) break;
          } else
            t[l] < 0 && (n[18] += 65536),
              (a < s || -1 == s) &&
                (UR(n, e, t, l), (n[18] = (4294901760 & n[18]) + l + 2)),
              l++;
      }
      function UR(n, t, e, i) {
        const r = e[i] < 0,
          s = e[i + 1],
          a = n[r ? -e[i] : e[i]];
        if (r) {
          if (n[2] >> 11 < n[18] >> 16 && (3 & n[2]) === t) {
            n[2] += 2048;
            try {
              s.call(a);
            } finally {
            }
          }
        } else
          try {
            s.call(a);
          } finally {
          }
      }
      class Ja {
        constructor(t, e, i) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = e),
            (this.injectImpl = i);
        }
      }
      function Cu(n, t, e) {
        let i = 0;
        for (; i < e.length; ) {
          const r = e[i];
          if ("number" == typeof r) {
            if (0 !== r) break;
            i++;
            const s = e[i++],
              o = e[i++],
              a = e[i++];
            n.setAttribute(t, o, a, s);
          } else {
            const s = r,
              o = e[++i];
            Yb(s) ? n.setProperty(t, s, o) : n.setAttribute(t, s, o), i++;
          }
        }
        return i;
      }
      function Gb(n) {
        return 3 === n || 4 === n || 6 === n;
      }
      function Yb(n) {
        return 64 === n.charCodeAt(0);
      }
      function wu(n, t) {
        if (null !== t && 0 !== t.length)
          if (null === n || 0 === n.length) n = t.slice();
          else {
            let e = -1;
            for (let i = 0; i < t.length; i++) {
              const r = t[i];
              "number" == typeof r
                ? (e = r)
                : 0 === e ||
                  Kb(n, e, r, null, -1 === e || 2 === e ? t[++i] : null);
            }
          }
        return n;
      }
      function Kb(n, t, e, i, r) {
        let s = 0,
          o = n.length;
        if (-1 === t) o = -1;
        else
          for (; s < n.length; ) {
            const a = n[s++];
            if ("number" == typeof a) {
              if (a === t) {
                o = -1;
                break;
              }
              if (a > t) {
                o = s - 1;
                break;
              }
            }
          }
        for (; s < n.length; ) {
          const a = n[s];
          if ("number" == typeof a) break;
          if (a === e) {
            if (null === i) return void (null !== r && (n[s + 1] = r));
            if (i === n[s + 1]) return void (n[s + 2] = r);
          }
          s++, null !== i && s++, null !== r && s++;
        }
        -1 !== o && (n.splice(o, 0, t), (s = o + 1)),
          n.splice(s++, 0, e),
          null !== i && n.splice(s++, 0, i),
          null !== r && n.splice(s++, 0, r);
      }
      function Xb(n) {
        return -1 !== n;
      }
      function Fo(n) {
        return 32767 & n;
      }
      function No(n, t) {
        let e = (function YR(n) {
            return n >> 16;
          })(n),
          i = t;
        for (; e > 0; ) (i = i[15]), e--;
        return i;
      }
      let Ep = !0;
      function Mu(n) {
        const t = Ep;
        return (Ep = n), t;
      }
      let KR = 0;
      const Ni = {};
      function tl(n, t) {
        const e = Tp(n, t);
        if (-1 !== e) return e;
        const i = t[1];
        i.firstCreatePass &&
          ((n.injectorIndex = t.length),
          Sp(i.data, n),
          Sp(t, null),
          Sp(i.blueprint, null));
        const r = Du(n, t),
          s = n.injectorIndex;
        if (Xb(r)) {
          const o = Fo(r),
            a = No(r, t),
            l = a[1].data;
          for (let c = 0; c < 8; c++) t[s + c] = a[o + c] | l[o + c];
        }
        return (t[s + 8] = r), s;
      }
      function Sp(n, t) {
        n.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function Tp(n, t) {
        return -1 === n.injectorIndex ||
          (n.parent && n.parent.injectorIndex === n.injectorIndex) ||
          null === t[n.injectorIndex + 8]
          ? -1
          : n.injectorIndex;
      }
      function Du(n, t) {
        if (n.parent && -1 !== n.parent.injectorIndex)
          return n.parent.injectorIndex;
        let e = 0,
          i = null,
          r = t;
        for (; null !== r; ) {
          if (((i = o0(r)), null === i)) return -1;
          if ((e++, (r = r[15]), -1 !== i.injectorIndex))
            return i.injectorIndex | (e << 16);
        }
        return -1;
      }
      function xu(n, t, e) {
        !(function XR(n, t, e) {
          let i;
          "string" == typeof e
            ? (i = e.charCodeAt(0) || 0)
            : e.hasOwnProperty(Ya) && (i = e[Ya]),
            null == i && (i = e[Ya] = KR++);
          const r = 255 & i;
          t.data[n + (r >> 5)] |= 1 << r;
        })(n, t, e);
      }
      function Jb(n, t, e) {
        if (e & K.Optional) return n;
        lu();
      }
      function e0(n, t, e, i) {
        if (
          (e & K.Optional && void 0 === i && (i = null),
          0 == (e & (K.Self | K.Host)))
        ) {
          const r = n[9],
            s = Xn(void 0);
          try {
            return r ? r.get(t, i, e & K.Optional) : Mb(t, i, e & K.Optional);
          } finally {
            Xn(s);
          }
        }
        return Jb(i, 0, e);
      }
      function t0(n, t, e, i = K.Default, r) {
        if (null !== n) {
          if (1024 & t[2]) {
            const o = (function tP(n, t, e, i, r) {
              let s = n,
                o = t;
              for (
                ;
                null !== s && null !== o && 1024 & o[2] && !(256 & o[2]);

              ) {
                const a = n0(s, o, e, i | K.Self, Ni);
                if (a !== Ni) return a;
                let l = s.parent;
                if (!l) {
                  const c = o[21];
                  if (c) {
                    const u = c.get(e, Ni, i);
                    if (u !== Ni) return u;
                  }
                  (l = o0(o)), (o = o[15]);
                }
                s = l;
              }
              return r;
            })(n, t, e, i, Ni);
            if (o !== Ni) return o;
          }
          const s = n0(n, t, e, i, Ni);
          if (s !== Ni) return s;
        }
        return e0(t, e, i, r);
      }
      function n0(n, t, e, i, r) {
        const s = (function JR(n) {
          if ("string" == typeof n) return n.charCodeAt(0) || 0;
          const t = n.hasOwnProperty(Ya) ? n[Ya] : void 0;
          return "number" == typeof t ? (t >= 0 ? 255 & t : eP) : t;
        })(e);
        if ("function" == typeof s) {
          if (!Hb(t, n, i)) return i & K.Host ? Jb(r, 0, i) : e0(t, e, i, r);
          try {
            const o = s(i);
            if (null != o || i & K.Optional) return o;
            lu();
          } finally {
            qb();
          }
        } else if ("number" == typeof s) {
          let o = null,
            a = Tp(n, t),
            l = -1,
            c = i & K.Host ? t[16][6] : null;
          for (
            (-1 === a || i & K.SkipSelf) &&
            ((l = -1 === a ? Du(n, t) : t[a + 8]),
            -1 !== l && s0(i, !1)
              ? ((o = t[1]), (a = Fo(l)), (t = No(l, t)))
              : (a = -1));
            -1 !== a;

          ) {
            const u = t[1];
            if (r0(s, a, u.data)) {
              const d = QR(a, t, e, o, i, c);
              if (d !== Ni) return d;
            }
            (l = t[a + 8]),
              -1 !== l && s0(i, t[1].data[a + 8] === c) && r0(s, a, t)
                ? ((o = u), (a = Fo(l)), (t = No(l, t)))
                : (a = -1);
          }
        }
        return r;
      }
      function QR(n, t, e, i, r, s) {
        const o = t[1],
          a = o.data[n + 8],
          u = Eu(
            a,
            o,
            e,
            null == i ? pu(a) && Ep : i != o && 0 != (3 & a.type),
            r & K.Host && s === a
          );
        return null !== u ? nl(t, o, u, a) : Ni;
      }
      function Eu(n, t, e, i, r) {
        const s = n.providerIndexes,
          o = t.data,
          a = 1048575 & s,
          l = n.directiveStart,
          u = s >> 20,
          h = r ? a + u : n.directiveEnd;
        for (let f = i ? a : a + u; f < h; f++) {
          const p = o[f];
          if ((f < l && e === p) || (f >= l && p.type === e)) return f;
        }
        if (r) {
          const f = o[l];
          if (f && yi(f) && f.type === e) return l;
        }
        return null;
      }
      function nl(n, t, e, i) {
        let r = n[e];
        const s = t.data;
        if (
          (function $R(n) {
            return n instanceof Ja;
          })(r)
        ) {
          const o = r;
          o.resolving &&
            (function XO(n, t) {
              const e = t ? `. Dependency path: ${t.join(" > ")} > ${n}` : "";
              throw new k(
                -200,
                `Circular dependency in DI detected for ${n}${e}`
              );
            })(
              (function Be(n) {
                return "function" == typeof n
                  ? n.name || n.toString()
                  : "object" == typeof n &&
                    null != n &&
                    "function" == typeof n.type
                  ? n.type.name || n.type.toString()
                  : de(n);
              })(s[e])
            );
          const a = Mu(o.canSeeViewProviders);
          o.resolving = !0;
          const l = o.injectImpl ? Xn(o.injectImpl) : null;
          Hb(n, i, K.Default);
          try {
            (r = n[e] = o.factory(void 0, s, n, i)),
              t.firstCreatePass &&
                e >= i.directiveStart &&
                (function zR(n, t, e) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: r,
                    ngDoCheck: s,
                  } = t.type.prototype;
                  if (i) {
                    const o = kb(t);
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(n, o),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(n, o);
                  }
                  r &&
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(0 - n, r),
                    s &&
                      ((e.preOrderHooks || (e.preOrderHooks = [])).push(n, s),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(n, s));
                })(e, s[e], t);
          } finally {
            null !== l && Xn(l), Mu(a), (o.resolving = !1), qb();
          }
        }
        return r;
      }
      function r0(n, t, e) {
        return !!(e[t + (n >> 5)] & (1 << n));
      }
      function s0(n, t) {
        return !(n & K.Self || (n & K.Host && t));
      }
      class Lo {
        constructor(t, e) {
          (this._tNode = t), (this._lView = e);
        }
        get(t, e, i) {
          return t0(this._tNode, this._lView, t, i, e);
        }
      }
      function eP() {
        return new Lo(Pt(), I());
      }
      function tt(n) {
        return Zr(() => {
          const t = n.prototype.constructor,
            e = t[gr] || Ap(t),
            i = Object.prototype;
          let r = Object.getPrototypeOf(n.prototype).constructor;
          for (; r && r !== i; ) {
            const s = r[gr] || Ap(r);
            if (s && s !== e) return s;
            r = Object.getPrototypeOf(r);
          }
          return (s) => new s();
        });
      }
      function Ap(n) {
        return tp(n)
          ? () => {
              const t = Ap(te(n));
              return t && t();
            }
          : Ps(n);
      }
      function o0(n) {
        const t = n[1],
          e = t.type;
        return 2 === e ? t.declTNode : 1 === e ? n[6] : null;
      }
      function Li(n) {
        return (function ZR(n, t) {
          if ("class" === t) return n.classes;
          if ("style" === t) return n.styles;
          const e = n.attrs;
          if (e) {
            const i = e.length;
            let r = 0;
            for (; r < i; ) {
              const s = e[r];
              if (Gb(s)) break;
              if (0 === s) r += 2;
              else if ("number" == typeof s)
                for (r++; r < i && "string" == typeof e[r]; ) r++;
              else {
                if (s === t) return e[r + 1];
                r += 2;
              }
            }
          }
          return null;
        })(Pt(), n);
      }
      const Vo = "__parameters__";
      function Ho(n, t, e) {
        return Zr(() => {
          const i = (function kp(n) {
            return function (...e) {
              if (n) {
                const i = n(...e);
                for (const r in i) this[r] = i[r];
              }
            };
          })(t);
          function r(...s) {
            if (this instanceof r) return i.apply(this, s), this;
            const o = new r(...s);
            return (a.annotation = o), a;
            function a(l, c, u) {
              const d = l.hasOwnProperty(Vo)
                ? l[Vo]
                : Object.defineProperty(l, Vo, { value: [] })[Vo];
              for (; d.length <= u; ) d.push(null);
              return (d[u] = d[u] || []).push(o), l;
            }
          }
          return (
            e && (r.prototype = Object.create(e.prototype)),
            (r.prototype.ngMetadataName = n),
            (r.annotationCls = r),
            r
          );
        });
      }
      class R {
        constructor(t, e) {
          (this._desc = t),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = F({
                  token: this,
                  providedIn: e.providedIn || "root",
                  factory: e.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const iP = new R("AnalyzeForEntryComponents");
      function Fn(n, t) {
        void 0 === t && (t = n);
        for (let e = 0; e < n.length; e++) {
          let i = n[e];
          Array.isArray(i)
            ? (t === n && (t = n.slice(0, e)), Fn(i, t))
            : t !== n && t.push(i);
        }
        return t;
      }
      function vr(n, t) {
        n.forEach((e) => (Array.isArray(e) ? vr(e, t) : t(e)));
      }
      function l0(n, t, e) {
        t >= n.length ? n.push(e) : n.splice(t, 0, e);
      }
      function Su(n, t) {
        return t >= n.length - 1 ? n.pop() : n.splice(t, 1)[0];
      }
      function sl(n, t) {
        const e = [];
        for (let i = 0; i < n; i++) e.push(t);
        return e;
      }
      function Nn(n, t, e) {
        let i = zo(n, t);
        return (
          i >= 0
            ? (n[1 | i] = e)
            : ((i = ~i),
              (function oP(n, t, e, i) {
                let r = n.length;
                if (r == t) n.push(e, i);
                else if (1 === r) n.push(i, n[0]), (n[0] = e);
                else {
                  for (r--, n.push(n[r - 1], n[r]); r > t; )
                    (n[r] = n[r - 2]), r--;
                  (n[t] = e), (n[t + 1] = i);
                }
              })(n, i, t, e)),
          i
        );
      }
      function Op(n, t) {
        const e = zo(n, t);
        if (e >= 0) return n[1 | e];
      }
      function zo(n, t) {
        return (function d0(n, t, e) {
          let i = 0,
            r = n.length >> e;
          for (; r !== i; ) {
            const s = i + ((r - i) >> 1),
              o = n[s << e];
            if (t === o) return s << e;
            o > t ? (r = s) : (i = s + 1);
          }
          return ~(r << e);
        })(n, t, 1);
      }
      const ol = {},
        Pp = "__NG_DI_FLAG__",
        Au = "ngTempTokenPath",
        pP = /\n/gm,
        h0 = "__source";
      let al;
      function Uo(n) {
        const t = al;
        return (al = n), t;
      }
      function gP(n, t = K.Default) {
        if (void 0 === al) throw new k(-203, !1);
        return null === al
          ? Mb(n, void 0, t)
          : al.get(n, t & K.Optional ? null : void 0, t);
      }
      function x(n, t = K.Default) {
        return (
          (function rR() {
            return rp;
          })() || gP
        )(te(n), t);
      }
      function Ln(n, t = K.Default) {
        return (
          "number" != typeof t &&
            (t =
              0 |
              (t.optional && 8) |
              (t.host && 1) |
              (t.self && 2) |
              (t.skipSelf && 4)),
          x(n, t)
        );
      }
      function Fp(n) {
        const t = [];
        for (let e = 0; e < n.length; e++) {
          const i = te(n[e]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new k(900, !1);
            let r,
              s = K.Default;
            for (let o = 0; o < i.length; o++) {
              const a = i[o],
                l = _P(a);
              "number" == typeof l
                ? -1 === l
                  ? (r = a.token)
                  : (s |= l)
                : (r = a);
            }
            t.push(x(r, s));
          } else t.push(x(i));
        }
        return t;
      }
      function ll(n, t) {
        return (n[Pp] = t), (n.prototype[Pp] = t), n;
      }
      function _P(n) {
        return n[Pp];
      }
      const Bi = ll(Ho("Optional"), 8),
        $o = ll(Ho("SkipSelf"), 4);
      let Lp;
      class Fs {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      function Bn(n) {
        return n instanceof Fs ? n.changingThisBreaksApplicationSecurity : n;
      }
      const WP =
          /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
        GP =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      var je = (() => (
        ((je = je || {})[(je.NONE = 0)] = "NONE"),
        (je[(je.HTML = 1)] = "HTML"),
        (je[(je.STYLE = 2)] = "STYLE"),
        (je[(je.SCRIPT = 3)] = "SCRIPT"),
        (je[(je.URL = 4)] = "URL"),
        (je[(je.RESOURCE_URL = 5)] = "RESOURCE_URL"),
        je
      ))();
      function $p(n) {
        const t = (function fl() {
          const n = I();
          return n && n[12];
        })();
        return t
          ? t.sanitize(je.URL, n) || ""
          : (function Vi(n, t) {
              const e = (function LP(n) {
                return (n instanceof Fs && n.getTypeName()) || null;
              })(n);
              if (null != e && e !== t) {
                if ("ResourceURL" === e && "URL" === t) return !0;
                throw new Error(
                  `Required a safe ${t}, got a ${e} (see https://g.co/ng/security#xss)`
                );
              }
              return e === t;
            })(n, "URL")
          ? Bn(n)
          : (function dl(n) {
              return (n = String(n)).match(WP) || n.match(GP)
                ? n
                : "unsafe:" + n;
            })(de(n));
      }
      const qp = new R("ENVIRONMENT_INITIALIZER"),
        P0 = new R("INJECTOR", -1),
        F0 = new R("INJECTOR_DEF_TYPES");
      class N0 {
        get(t, e = ol) {
          if (e === ol) {
            const i = new Error(`NullInjectorError: No provider for ${Qe(t)}!`);
            throw ((i.name = "NullInjectorError"), i);
          }
          return e;
        }
      }
      function oF(...n) {
        return { ɵproviders: L0(0, n) };
      }
      function L0(n, ...t) {
        const e = [],
          i = new Set();
        let r;
        return (
          vr(t, (s) => {
            const o = s;
            Wp(o, e, [], i) && (r || (r = []), r.push(o));
          }),
          void 0 !== r && B0(r, e),
          e
        );
      }
      function B0(n, t) {
        for (let e = 0; e < n.length; e++) {
          const { providers: r } = n[e];
          vr(r, (s) => {
            t.push(s);
          });
        }
      }
      function Wp(n, t, e, i) {
        if (!(n = te(n))) return !1;
        let r = null,
          s = Cb(n);
        const o = !s && $e(n);
        if (s || o) {
          if (o && !o.standalone) return !1;
          r = n;
        } else {
          const l = n.ngModule;
          if (((s = Cb(l)), !s)) return !1;
          r = l;
        }
        const a = i.has(r);
        if (o) {
          if (a) return !1;
          if ((i.add(r), o.dependencies)) {
            const l =
              "function" == typeof o.dependencies
                ? o.dependencies()
                : o.dependencies;
            for (const c of l) Wp(c, t, e, i);
          }
        } else {
          if (!s) return !1;
          {
            if (null != s.imports && !a) {
              let c;
              i.add(r);
              try {
                vr(s.imports, (u) => {
                  Wp(u, t, e, i) && (c || (c = []), c.push(u));
                });
              } finally {
              }
              void 0 !== c && B0(c, t);
            }
            if (!a) {
              const c = Ps(r) || (() => new r());
              t.push(
                { provide: r, useFactory: c, deps: Ve },
                { provide: F0, useValue: r, multi: !0 },
                { provide: qp, useValue: () => x(r), multi: !0 }
              );
            }
            const l = s.providers;
            null == l ||
              a ||
              vr(l, (u) => {
                t.push(u);
              });
          }
        }
        return r !== n && void 0 !== n.providers;
      }
      const aF = Ze({ provide: String, useValue: Ze });
      function Gp(n) {
        return null !== n && "object" == typeof n && aF in n;
      }
      function Ns(n) {
        return "function" == typeof n;
      }
      const Yp = new R("Set Injector scope."),
        Fu = {},
        cF = {};
      let Kp;
      function Nu() {
        return void 0 === Kp && (Kp = new N0()), Kp;
      }
      class ts {}
      class H0 extends ts {
        constructor(t, e, i, r) {
          super(),
            (this.parent = e),
            (this.source = i),
            (this.scopes = r),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            Zp(t, (o) => this.processProvider(o)),
            this.records.set(P0, Go(void 0, this)),
            r.has("environment") && this.records.set(ts, Go(void 0, this));
          const s = this.records.get(Yp);
          null != s && "string" == typeof s.value && this.scopes.add(s.value),
            (this.injectorDefTypes = new Set(this.get(F0.multi, Ve, K.Self)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const t of this._ngOnDestroyHooks) t.ngOnDestroy();
            for (const t of this._onDestroyHooks) t();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(t) {
          this._onDestroyHooks.push(t);
        }
        runInContext(t) {
          this.assertNotDestroyed();
          const e = Uo(this),
            i = Xn(void 0);
          try {
            return t();
          } finally {
            Uo(e), Xn(i);
          }
        }
        get(t, e = ol, i = K.Default) {
          this.assertNotDestroyed();
          const r = Uo(this),
            s = Xn(void 0);
          try {
            if (!(i & K.SkipSelf)) {
              let a = this.records.get(t);
              if (void 0 === a) {
                const l =
                  (function pF(n) {
                    return (
                      "function" == typeof n ||
                      ("object" == typeof n && n instanceof R)
                    );
                  })(t) && np(t);
                (a = l && this.injectableDefInScope(l) ? Go(Xp(t), Fu) : null),
                  this.records.set(t, a);
              }
              if (null != a) return this.hydrate(t, a);
            }
            return (i & K.Self ? Nu() : this.parent).get(
              t,
              (e = i & K.Optional && e === ol ? null : e)
            );
          } catch (o) {
            if ("NullInjectorError" === o.name) {
              if (((o[Au] = o[Au] || []).unshift(Qe(t)), r)) throw o;
              return (function yP(n, t, e, i) {
                const r = n[Au];
                throw (
                  (t[h0] && r.unshift(t[h0]),
                  (n.message = (function vP(n, t, e, i = null) {
                    n =
                      n && "\n" === n.charAt(0) && "\u0275" == n.charAt(1)
                        ? n.slice(2)
                        : n;
                    let r = Qe(t);
                    if (Array.isArray(t)) r = t.map(Qe).join(" -> ");
                    else if ("object" == typeof t) {
                      let s = [];
                      for (let o in t)
                        if (t.hasOwnProperty(o)) {
                          let a = t[o];
                          s.push(
                            o +
                              ":" +
                              ("string" == typeof a ? JSON.stringify(a) : Qe(a))
                          );
                        }
                      r = `{${s.join(", ")}}`;
                    }
                    return `${e}${i ? "(" + i + ")" : ""}[${r}]: ${n.replace(
                      pP,
                      "\n  "
                    )}`;
                  })("\n" + n.message, r, e, i)),
                  (n.ngTokenPath = r),
                  (n[Au] = null),
                  n)
                );
              })(o, t, "R3InjectorError", this.source);
            }
            throw o;
          } finally {
            Xn(s), Uo(r);
          }
        }
        resolveInjectorInitializers() {
          const t = Uo(this),
            e = Xn(void 0);
          try {
            const i = this.get(qp.multi, Ve, K.Self);
            for (const r of i) r();
          } finally {
            Uo(t), Xn(e);
          }
        }
        toString() {
          const t = [],
            e = this.records;
          for (const i of e.keys()) t.push(Qe(i));
          return `R3Injector[${t.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new k(205, !1);
        }
        processProvider(t) {
          let e = Ns((t = te(t))) ? t : te(t && t.provide);
          const i = (function dF(n) {
            return Gp(n) ? Go(void 0, n.useValue) : Go(z0(n), Fu);
          })(t);
          if (Ns(t) || !0 !== t.multi) this.records.get(e);
          else {
            let r = this.records.get(e);
            r ||
              ((r = Go(void 0, Fu, !0)),
              (r.factory = () => Fp(r.multi)),
              this.records.set(e, r)),
              (e = t),
              r.multi.push(t);
          }
          this.records.set(e, i);
        }
        hydrate(t, e) {
          return (
            e.value === Fu && ((e.value = cF), (e.value = e.factory())),
            "object" == typeof e.value &&
              e.value &&
              (function fF(n) {
                return (
                  null !== n &&
                  "object" == typeof n &&
                  "function" == typeof n.ngOnDestroy
                );
              })(e.value) &&
              this._ngOnDestroyHooks.add(e.value),
            e.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const e = te(t.providedIn);
          return "string" == typeof e
            ? "any" === e || this.scopes.has(e)
            : this.injectorDefTypes.has(e);
        }
      }
      function Xp(n) {
        const t = np(n),
          e = null !== t ? t.factory : Ps(n);
        if (null !== e) return e;
        if (n instanceof R) throw new k(204, !1);
        if (n instanceof Function)
          return (function uF(n) {
            const t = n.length;
            if (t > 0) throw (sl(t, "?"), new k(204, !1));
            const e = (function tR(n) {
              const t = n && (n[cu] || n[wb]);
              if (t) {
                const e = (function nR(n) {
                  if (n.hasOwnProperty("name")) return n.name;
                  const t = ("" + n).match(/^function\s*([^\s(]+)/);
                  return null === t ? "" : t[1];
                })(n);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`
                  ),
                  t
                );
              }
              return null;
            })(n);
            return null !== e ? () => e.factory(n) : () => new n();
          })(n);
        throw new k(204, !1);
      }
      function z0(n, t, e) {
        let i;
        if (Ns(n)) {
          const r = te(n);
          return Ps(r) || Xp(r);
        }
        if (Gp(n)) i = () => te(n.useValue);
        else if (
          (function j0(n) {
            return !(!n || !n.useFactory);
          })(n)
        )
          i = () => n.useFactory(...Fp(n.deps || []));
        else if (
          (function V0(n) {
            return !(!n || !n.useExisting);
          })(n)
        )
          i = () => x(te(n.useExisting));
        else {
          const r = te(n && (n.useClass || n.provide));
          if (
            !(function hF(n) {
              return !!n.deps;
            })(n)
          )
            return Ps(r) || Xp(r);
          i = () => new r(...Fp(n.deps));
        }
        return i;
      }
      function Go(n, t, e = !1) {
        return { factory: n, value: t, multi: e ? [] : void 0 };
      }
      function mF(n) {
        return !!n.ɵproviders;
      }
      function Zp(n, t) {
        for (const e of n)
          Array.isArray(e) ? Zp(e, t) : mF(e) ? Zp(e.ɵproviders, t) : t(e);
      }
      class U0 {}
      class yF {
        resolveComponentFactory(t) {
          throw (function _F(n) {
            const t = Error(
              `No component factory found for ${Qe(
                n
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (t.ngComponent = n), t;
          })(t);
        }
      }
      let Ls = (() => {
        class n {}
        return (n.NULL = new yF()), n;
      })();
      function vF() {
        return Yo(Pt(), I());
      }
      function Yo(n, t) {
        return new ce(Jn(n, t));
      }
      let ce = (() => {
        class n {
          constructor(e) {
            this.nativeElement = e;
          }
        }
        return (n.__NG_ELEMENT_ID__ = vF), n;
      })();
      function bF(n) {
        return n instanceof ce ? n.nativeElement : n;
      }
      class pl {}
      let br = (() => {
          class n {}
          return (
            (n.__NG_ELEMENT_ID__ = () =>
              (function CF() {
                const n = I(),
                  e = Pn(Pt().index, n);
                return (vn(e) ? e : n)[11];
              })()),
            n
          );
        })(),
        wF = (() => {
          class n {}
          return (
            (n.ɵprov = F({
              token: n,
              providedIn: "root",
              factory: () => null,
            })),
            n
          );
        })();
      class Bs {
        constructor(t) {
          (this.full = t),
            (this.major = t.split(".")[0]),
            (this.minor = t.split(".")[1]),
            (this.patch = t.split(".").slice(2).join("."));
        }
      }
      const MF = new Bs("14.1.0"),
        Qp = {};
      function im(n) {
        return n.ngOriginalError;
      }
      class ns {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const e = this._findOriginalError(t);
          this._console.error("ERROR", t),
            e && this._console.error("ORIGINAL ERROR", e);
        }
        _findOriginalError(t) {
          let e = t && im(t);
          for (; e && im(e); ) e = im(e);
          return e || null;
        }
      }
      const rm = new Map();
      let NF = 0;
      const om = "__ngContext__";
      function Qt(n, t) {
        vn(t)
          ? ((n[om] = t[20]),
            (function BF(n) {
              rm.set(n[20], n);
            })(t))
          : (n[om] = t);
      }
      function ml(n) {
        const t = n[om];
        return "number" == typeof t
          ? (function K0(n) {
              return rm.get(n) || null;
            })(t)
          : t || null;
      }
      function am(n) {
        const t = ml(n);
        return t ? (vn(t) ? t : t.lView) : null;
      }
      const GF = (() =>
        (
          (typeof requestAnimationFrame < "u" && requestAnimationFrame) ||
          setTimeout
        ).bind(Ge))();
      function Cr(n) {
        return n instanceof Function ? n() : n;
      }
      var bn = (() => (
        ((bn = bn || {})[(bn.Important = 1)] = "Important"),
        (bn[(bn.DashCase = 2)] = "DashCase"),
        bn
      ))();
      function cm(n, t) {
        return undefined(n, t);
      }
      function gl(n) {
        const t = n[3];
        return _i(t) ? t[3] : t;
      }
      function um(n) {
        return iC(n[13]);
      }
      function dm(n) {
        return iC(n[4]);
      }
      function iC(n) {
        for (; null !== n && !_i(n); ) n = n[4];
        return n;
      }
      function Xo(n, t, e, i, r) {
        if (null != i) {
          let s,
            o = !1;
          _i(i) ? (s = i) : vn(i) && ((o = !0), (i = i[0]));
          const a = xt(i);
          0 === n && null !== e
            ? null == r
              ? cC(t, e, a)
              : Vs(t, e, a, r || null, !0)
            : 1 === n && null !== e
            ? Vs(t, e, a, r || null, !0)
            : 2 === n
            ? (function gC(n, t, e) {
                const i = Lu(n, t);
                i &&
                  (function dN(n, t, e, i) {
                    n.removeChild(t, e, i);
                  })(n, i, t, e);
              })(t, a, o)
            : 3 === n && t.destroyNode(a),
            null != s &&
              (function pN(n, t, e, i, r) {
                const s = e[7];
                s !== xt(e) && Xo(t, n, i, s, r);
                for (let a = 10; a < e.length; a++) {
                  const l = e[a];
                  _l(l[1], l, n, t, i, s);
                }
              })(t, n, s, e, r);
        }
      }
      function fm(n, t, e) {
        return n.createElement(t, e);
      }
      function sC(n, t) {
        const e = n[9],
          i = e.indexOf(t),
          r = t[3];
        512 & t[2] && ((t[2] &= -513), gp(r, -1)), e.splice(i, 1);
      }
      function pm(n, t) {
        if (n.length <= 10) return;
        const e = 10 + t,
          i = n[e];
        if (i) {
          const r = i[17];
          null !== r && r !== n && sC(r, i), t > 0 && (n[e - 1][4] = i[4]);
          const s = Su(n, 10 + t);
          !(function iN(n, t) {
            _l(n, t, t[11], 2, null, null), (t[0] = null), (t[6] = null);
          })(i[1], i);
          const o = s[19];
          null !== o && o.detachView(s[1]),
            (i[3] = null),
            (i[4] = null),
            (i[2] &= -65);
        }
        return i;
      }
      function oC(n, t) {
        if (!(128 & t[2])) {
          const e = t[11];
          e.destroyNode && _l(n, t, e, 3, null, null),
            (function oN(n) {
              let t = n[13];
              if (!t) return mm(n[1], n);
              for (; t; ) {
                let e = null;
                if (vn(t)) e = t[13];
                else {
                  const i = t[10];
                  i && (e = i);
                }
                if (!e) {
                  for (; t && !t[4] && t !== n; )
                    vn(t) && mm(t[1], t), (t = t[3]);
                  null === t && (t = n), vn(t) && mm(t[1], t), (e = t && t[4]);
                }
                t = e;
              }
            })(t);
        }
      }
      function mm(n, t) {
        if (!(128 & t[2])) {
          (t[2] &= -65),
            (t[2] |= 128),
            (function uN(n, t) {
              let e;
              if (null != n && null != (e = n.destroyHooks))
                for (let i = 0; i < e.length; i += 2) {
                  const r = t[e[i]];
                  if (!(r instanceof Ja)) {
                    const s = e[i + 1];
                    if (Array.isArray(s))
                      for (let o = 0; o < s.length; o += 2) {
                        const a = r[s[o]],
                          l = s[o + 1];
                        try {
                          l.call(a);
                        } finally {
                        }
                      }
                    else
                      try {
                        s.call(r);
                      } finally {
                      }
                  }
                }
            })(n, t),
            (function cN(n, t) {
              const e = n.cleanup,
                i = t[7];
              let r = -1;
              if (null !== e)
                for (let s = 0; s < e.length - 1; s += 2)
                  if ("string" == typeof e[s]) {
                    const o = e[s + 1],
                      a = "function" == typeof o ? o(t) : xt(t[o]),
                      l = i[(r = e[s + 2])],
                      c = e[s + 3];
                    "boolean" == typeof c
                      ? a.removeEventListener(e[s], l, c)
                      : c >= 0
                      ? i[(r = c)]()
                      : i[(r = -c)].unsubscribe(),
                      (s += 2);
                  } else {
                    const o = i[(r = e[s + 1])];
                    e[s].call(o);
                  }
              if (null !== i) {
                for (let s = r + 1; s < i.length; s++) (0, i[s])();
                t[7] = null;
              }
            })(n, t),
            1 === t[1].type && t[11].destroy();
          const e = t[17];
          if (null !== e && _i(t[3])) {
            e !== t[3] && sC(e, t);
            const i = t[19];
            null !== i && i.detachView(n);
          }
          !(function VF(n) {
            rm.delete(n[20]);
          })(t);
        }
      }
      function aC(n, t, e) {
        return (function lC(n, t, e) {
          let i = t;
          for (; null !== i && 40 & i.type; ) i = (t = i).parent;
          if (null === i) return e[0];
          if (2 & i.flags) {
            const r = n.data[i.directiveStart].encapsulation;
            if (r === mi.None || r === mi.Emulated) return null;
          }
          return Jn(i, e);
        })(n, t.parent, e);
      }
      function Vs(n, t, e, i, r) {
        n.insertBefore(t, e, i, r);
      }
      function cC(n, t, e) {
        n.appendChild(t, e);
      }
      function uC(n, t, e, i, r) {
        null !== i ? Vs(n, t, e, i, r) : cC(n, t, e);
      }
      function Lu(n, t) {
        return n.parentNode(t);
      }
      function dC(n, t, e) {
        return fC(n, t, e);
      }
      let fC = function hC(n, t, e) {
        return 40 & n.type ? Jn(n, e) : null;
      };
      function Bu(n, t, e, i) {
        const r = aC(n, i, t),
          s = t[11],
          a = dC(i.parent || t[6], i, t);
        if (null != r)
          if (Array.isArray(e))
            for (let l = 0; l < e.length; l++) uC(s, r, e[l], a, !1);
          else uC(s, r, e, a, !1);
      }
      function Vu(n, t) {
        if (null !== t) {
          const e = t.type;
          if (3 & e) return Jn(t, n);
          if (4 & e) return _m(-1, n[t.index]);
          if (8 & e) {
            const i = t.child;
            if (null !== i) return Vu(n, i);
            {
              const r = n[t.index];
              return _i(r) ? _m(-1, r) : xt(r);
            }
          }
          if (32 & e) return cm(t, n)() || xt(n[t.index]);
          {
            const i = mC(n, t);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : Vu(gl(n[16]), i)
              : Vu(n, t.next);
          }
        }
        return null;
      }
      function mC(n, t) {
        return null !== t ? n[16][6].projection[t.projection] : null;
      }
      function _m(n, t) {
        const e = 10 + n + 1;
        if (e < t.length) {
          const i = t[e],
            r = i[1].firstChild;
          if (null !== r) return Vu(i, r);
        }
        return t[7];
      }
      function ym(n, t, e, i, r, s, o) {
        for (; null != e; ) {
          const a = i[e.index],
            l = e.type;
          if (
            (o && 0 === t && (a && Qt(xt(a), i), (e.flags |= 4)),
            64 != (64 & e.flags))
          )
            if (8 & l) ym(n, t, e.child, i, r, s, !1), Xo(t, n, r, a, s);
            else if (32 & l) {
              const c = cm(e, i);
              let u;
              for (; (u = c()); ) Xo(t, n, r, u, s);
              Xo(t, n, r, a, s);
            } else 16 & l ? _C(n, t, i, e, r, s) : Xo(t, n, r, a, s);
          e = o ? e.projectionNext : e.next;
        }
      }
      function _l(n, t, e, i, r, s) {
        ym(e, i, n.firstChild, t, r, s, !1);
      }
      function _C(n, t, e, i, r, s) {
        const o = e[16],
          l = o[6].projection[i.projection];
        if (Array.isArray(l))
          for (let c = 0; c < l.length; c++) Xo(t, n, r, l[c], s);
        else ym(n, t, l, o[3], r, s, !0);
      }
      function yC(n, t, e) {
        n.setAttribute(t, "style", e);
      }
      function vm(n, t, e) {
        "" === e
          ? n.removeAttribute(t, "class")
          : n.setAttribute(t, "class", e);
      }
      function vC(n, t, e) {
        let i = n.length;
        for (;;) {
          const r = n.indexOf(t, e);
          if (-1 === r) return r;
          if (0 === r || n.charCodeAt(r - 1) <= 32) {
            const s = t.length;
            if (r + s === i || n.charCodeAt(r + s) <= 32) return r;
          }
          e = r + 1;
        }
      }
      const bC = "ng-template";
      function gN(n, t, e) {
        let i = 0;
        for (; i < n.length; ) {
          let r = n[i++];
          if (e && "class" === r) {
            if (((r = n[i]), -1 !== vC(r.toLowerCase(), t, 0))) return !0;
          } else if (1 === r) {
            for (; i < n.length && "string" == typeof (r = n[i++]); )
              if (r.toLowerCase() === t) return !0;
            return !1;
          }
        }
        return !1;
      }
      function CC(n) {
        return 4 === n.type && n.value !== bC;
      }
      function _N(n, t, e) {
        return t === (4 !== n.type || e ? n.value : bC);
      }
      function yN(n, t, e) {
        let i = 4;
        const r = n.attrs || [],
          s = (function CN(n) {
            for (let t = 0; t < n.length; t++) if (Gb(n[t])) return t;
            return n.length;
          })(r);
        let o = !1;
        for (let a = 0; a < t.length; a++) {
          const l = t[a];
          if ("number" != typeof l) {
            if (!o)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ("" !== l && !_N(n, l, e)) || ("" === l && 1 === t.length))
                ) {
                  if (vi(i)) return !1;
                  o = !0;
                }
              } else {
                const c = 8 & i ? l : t[++a];
                if (8 & i && null !== n.attrs) {
                  if (!gN(n.attrs, c, e)) {
                    if (vi(i)) return !1;
                    o = !0;
                  }
                  continue;
                }
                const d = vN(8 & i ? "class" : l, r, CC(n), e);
                if (-1 === d) {
                  if (vi(i)) return !1;
                  o = !0;
                  continue;
                }
                if ("" !== c) {
                  let h;
                  h = d > s ? "" : r[d + 1].toLowerCase();
                  const f = 8 & i ? h : null;
                  if ((f && -1 !== vC(f, c, 0)) || (2 & i && c !== h)) {
                    if (vi(i)) return !1;
                    o = !0;
                  }
                }
              }
          } else {
            if (!o && !vi(i) && !vi(l)) return !1;
            if (o && vi(l)) continue;
            (o = !1), (i = l | (1 & i));
          }
        }
        return vi(i) || o;
      }
      function vi(n) {
        return 0 == (1 & n);
      }
      function vN(n, t, e, i) {
        if (null === t) return -1;
        let r = 0;
        if (i || !e) {
          let s = !1;
          for (; r < t.length; ) {
            const o = t[r];
            if (o === n) return r;
            if (3 === o || 6 === o) s = !0;
            else {
              if (1 === o || 2 === o) {
                let a = t[++r];
                for (; "string" == typeof a; ) a = t[++r];
                continue;
              }
              if (4 === o) break;
              if (0 === o) {
                r += 4;
                continue;
              }
            }
            r += s ? 1 : 2;
          }
          return -1;
        }
        return (function wN(n, t) {
          let e = n.indexOf(4);
          if (e > -1)
            for (e++; e < n.length; ) {
              const i = n[e];
              if ("number" == typeof i) return -1;
              if (i === t) return e;
              e++;
            }
          return -1;
        })(t, n);
      }
      function wC(n, t, e = !1) {
        for (let i = 0; i < t.length; i++) if (yN(n, t[i], e)) return !0;
        return !1;
      }
      function MN(n, t) {
        e: for (let e = 0; e < t.length; e++) {
          const i = t[e];
          if (n.length === i.length) {
            for (let r = 0; r < n.length; r++) if (n[r] !== i[r]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function MC(n, t) {
        return n ? ":not(" + t.trim() + ")" : t;
      }
      function DN(n) {
        let t = n[0],
          e = 1,
          i = 2,
          r = "",
          s = !1;
        for (; e < n.length; ) {
          let o = n[e];
          if ("string" == typeof o)
            if (2 & i) {
              const a = n[++e];
              r += "[" + o + (a.length > 0 ? '="' + a + '"' : "") + "]";
            } else 8 & i ? (r += "." + o) : 4 & i && (r += " " + o);
          else
            "" !== r && !vi(o) && ((t += MC(s, r)), (r = "")),
              (i = o),
              (s = s || !vi(i));
          e++;
        }
        return "" !== r && (t += MC(s, r)), t;
      }
      const he = {};
      function E(n) {
        DC(Oe(), I(), un() + n, !1);
      }
      function DC(n, t, e, i) {
        if (!i)
          if (3 == (3 & t[2])) {
            const s = n.preOrderCheckHooks;
            null !== s && vu(t, s, e);
          } else {
            const s = n.preOrderHooks;
            null !== s && bu(t, s, 0, e);
          }
        Jr(e);
      }
      function TC(n, t = null, e = null, i) {
        const r = AC(n, t, e, i);
        return r.resolveInjectorInitializers(), r;
      }
      function AC(n, t = null, e = null, i, r = new Set()) {
        const s = [e || Ve, oF(n)];
        return (
          (i = i || ("object" == typeof n ? void 0 : Qe(n))),
          new H0(s, t || Nu(), i || null, r)
        );
      }
      let lt = (() => {
        class n {
          static create(e, i) {
            if (Array.isArray(e)) return TC({ name: "" }, i, e, "");
            {
              const r = e.name ?? "";
              return TC({ name: r }, e.parent, e.providers, r);
            }
          }
        }
        return (
          (n.THROW_IF_NOT_FOUND = ol),
          (n.NULL = new N0()),
          (n.ɵprov = F({ token: n, providedIn: "any", factory: () => x(P0) })),
          (n.__NG_ELEMENT_ID__ = -1),
          n
        );
      })();
      function g(n, t = K.Default) {
        const e = I();
        return null === e ? x(n, t) : t0(Pt(), e, te(n), t);
      }
      function js() {
        throw new Error("invalid");
      }
      function Hu(n, t) {
        return (n << 17) | (t << 2);
      }
      function bi(n) {
        return (n >> 17) & 32767;
      }
      function Dm(n) {
        return 2 | n;
      }
      function wr(n) {
        return (131068 & n) >> 2;
      }
      function xm(n, t) {
        return (-131069 & n) | (t << 2);
      }
      function Em(n) {
        return 1 | n;
      }
      function WC(n, t) {
        const e = n.contentQueries;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) {
            const r = e[i],
              s = e[i + 1];
            if (-1 !== s) {
              const o = n.data[s];
              Cp(r), o.contentQueries(2, t[s], s);
            }
          }
      }
      function $u(n, t, e, i, r, s, o, a, l, c, u) {
        const d = t.blueprint.slice();
        return (
          (d[0] = r),
          (d[2] = 76 | i),
          (null !== u || (n && 1024 & n[2])) && (d[2] |= 1024),
          Pb(d),
          (d[3] = d[15] = n),
          (d[8] = e),
          (d[10] = o || (n && n[10])),
          (d[11] = a || (n && n[11])),
          (d[12] = l || (n && n[12]) || null),
          (d[9] = c || (n && n[9]) || null),
          (d[6] = s),
          (d[20] = (function LF() {
            return NF++;
          })()),
          (d[21] = u),
          (d[16] = 2 == t.type ? n[16] : d),
          d
        );
      }
      function Qo(n, t, e, i, r) {
        let s = n.data[t];
        if (null === s)
          (s = (function Fm(n, t, e, i, r) {
            const s = Lb(),
              o = _p(),
              l = (n.data[t] = (function aL(n, t, e, i, r, s) {
                return {
                  type: e,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: t ? t.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: r,
                  attrs: s,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: t,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, o ? s : s && s.parent, e, t, i, r));
            return (
              null === n.firstChild && (n.firstChild = l),
              null !== s &&
                (o
                  ? null == s.child && null !== l.parent && (s.child = l)
                  : null === s.next && (s.next = l)),
              l
            );
          })(n, t, e, i, r)),
            (function IR() {
              return le.lFrame.inI18n;
            })() && (s.flags |= 64);
        else if (64 & s.type) {
          (s.type = e), (s.value = i), (s.attrs = r);
          const o = (function Qa() {
            const n = le.lFrame,
              t = n.currentTNode;
            return n.isParent ? t : t.parent;
          })();
          s.injectorIndex = null === o ? -1 : o.injectorIndex;
        }
        return Fi(s, !0), s;
      }
      function Jo(n, t, e, i) {
        if (0 === e) return -1;
        const r = t.length;
        for (let s = 0; s < e; s++)
          t.push(i), n.blueprint.push(i), n.data.push(null);
        return r;
      }
      function qu(n, t, e) {
        wp(t);
        try {
          const i = n.viewQuery;
          null !== i && $m(1, i, e);
          const r = n.template;
          null !== r && GC(n, t, r, 1, e),
            n.firstCreatePass && (n.firstCreatePass = !1),
            n.staticContentQueries && WC(n, t),
            n.staticViewQueries && $m(2, n.viewQuery, e);
          const s = n.components;
          null !== s &&
            (function iL(n, t) {
              for (let e = 0; e < t.length; e++) ML(n, t[e]);
            })(t, s);
        } catch (i) {
          throw (
            (n.firstCreatePass &&
              ((n.incompleteFirstPass = !0), (n.firstCreatePass = !1)),
            i)
          );
        } finally {
          (t[2] &= -5), Mp();
        }
      }
      function yl(n, t, e, i) {
        const r = t[2];
        if (128 != (128 & r)) {
          wp(t);
          try {
            Pb(t),
              (function Bb(n) {
                return (le.lFrame.bindingIndex = n);
              })(n.bindingStartIndex),
              null !== e && GC(n, t, e, 2, i);
            const o = 3 == (3 & r);
            if (o) {
              const c = n.preOrderCheckHooks;
              null !== c && vu(t, c, null);
            } else {
              const c = n.preOrderHooks;
              null !== c && bu(t, c, 0, null), Dp(t, 0);
            }
            if (
              ((function CL(n) {
                for (let t = um(n); null !== t; t = dm(t)) {
                  if (!t[2]) continue;
                  const e = t[9];
                  for (let i = 0; i < e.length; i++) {
                    const r = e[i],
                      s = r[3];
                    0 == (512 & r[2]) && gp(s, 1), (r[2] |= 512);
                  }
                }
              })(t),
              (function bL(n) {
                for (let t = um(n); null !== t; t = dm(t))
                  for (let e = 10; e < t.length; e++) {
                    const i = t[e],
                      r = i[1];
                    mp(i) && yl(r, i, r.template, i[8]);
                  }
              })(t),
              null !== n.contentQueries && WC(n, t),
              o)
            ) {
              const c = n.contentCheckHooks;
              null !== c && vu(t, c);
            } else {
              const c = n.contentHooks;
              null !== c && bu(t, c, 1), Dp(t, 1);
            }
            !(function tL(n, t) {
              const e = n.hostBindingOpCodes;
              if (null !== e)
                try {
                  for (let i = 0; i < e.length; i++) {
                    const r = e[i];
                    if (r < 0) Jr(~r);
                    else {
                      const s = r,
                        o = e[++i],
                        a = e[++i];
                      OR(o, s), a(2, t[s]);
                    }
                  }
                } finally {
                  Jr(-1);
                }
            })(n, t);
            const a = n.components;
            null !== a &&
              (function nL(n, t) {
                for (let e = 0; e < t.length; e++) wL(n, t[e]);
              })(t, a);
            const l = n.viewQuery;
            if ((null !== l && $m(2, l, i), o)) {
              const c = n.viewCheckHooks;
              null !== c && vu(t, c);
            } else {
              const c = n.viewHooks;
              null !== c && bu(t, c, 2), Dp(t, 2);
            }
            !0 === n.firstUpdatePass && (n.firstUpdatePass = !1),
              (t[2] &= -41),
              512 & t[2] && ((t[2] &= -513), gp(t[3], -1));
          } finally {
            Mp();
          }
        }
      }
      function rL(n, t, e, i) {
        const r = t[10],
          o = Rb(t);
        try {
          !o && r.begin && r.begin(), o && qu(n, t, i), yl(n, t, e, i);
        } finally {
          !o && r.end && r.end();
        }
      }
      function GC(n, t, e, i, r) {
        const s = un(),
          o = 2 & i;
        try {
          Jr(-1), o && t.length > 22 && DC(n, t, 22, !1), e(i, r);
        } finally {
          Jr(s);
        }
      }
      function YC(n, t, e) {
        if (cp(t)) {
          const r = t.directiveEnd;
          for (let s = t.directiveStart; s < r; s++) {
            const o = n.data[s];
            o.contentQueries && o.contentQueries(1, e[s], s);
          }
        }
      }
      function Nm(n, t, e) {
        !Nb() ||
          ((function hL(n, t, e, i) {
            const r = e.directiveStart,
              s = e.directiveEnd;
            n.firstCreatePass || tl(e, t), Qt(i, t);
            const o = e.initialInputs;
            for (let a = r; a < s; a++) {
              const l = n.data[a],
                c = yi(l);
              c && _L(t, e, l);
              const u = nl(t, n, a, e);
              Qt(u, t),
                null !== o && yL(0, a - r, u, l, 0, o),
                c && (Pn(e.index, t)[8] = u);
            }
          })(n, t, e, Jn(e, t)),
          128 == (128 & e.flags) &&
            (function fL(n, t, e) {
              const i = e.directiveStart,
                r = e.directiveEnd,
                s = e.index,
                o = (function RR() {
                  return le.lFrame.currentDirectiveIndex;
                })();
              try {
                Jr(s);
                for (let a = i; a < r; a++) {
                  const l = n.data[a],
                    c = t[a];
                  vp(a),
                    (null !== l.hostBindings ||
                      0 !== l.hostVars ||
                      null !== l.hostAttrs) &&
                      tw(l, c);
                }
              } finally {
                Jr(-1), vp(o);
              }
            })(n, t, e));
      }
      function Lm(n, t, e = Jn) {
        const i = t.localNames;
        if (null !== i) {
          let r = t.index + 1;
          for (let s = 0; s < i.length; s += 2) {
            const o = i[s + 1],
              a = -1 === o ? e(t, n) : n[o];
            n[r++] = a;
          }
        }
      }
      function KC(n) {
        const t = n.tView;
        return null === t || t.incompleteFirstPass
          ? (n.tView = Bm(
              1,
              null,
              n.template,
              n.decls,
              n.vars,
              n.directiveDefs,
              n.pipeDefs,
              n.viewQuery,
              n.schemas,
              n.consts
            ))
          : t;
      }
      function Bm(n, t, e, i, r, s, o, a, l, c) {
        const u = 22 + i,
          d = u + r,
          h = (function sL(n, t) {
            const e = [];
            for (let i = 0; i < t; i++) e.push(i < n ? null : he);
            return e;
          })(u, d),
          f = "function" == typeof c ? c() : c;
        return (h[1] = {
          type: n,
          blueprint: h,
          template: e,
          queries: null,
          viewQuery: a,
          declTNode: t,
          data: h.slice().fill(null, u),
          bindingStartIndex: u,
          expandoStartIndex: d,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof s ? s() : s,
          pipeRegistry: "function" == typeof o ? o() : o,
          firstChild: null,
          schemas: l,
          consts: f,
          incompleteFirstPass: !1,
        });
      }
      function XC(n, t, e, i) {
        const r = lw(t);
        null === e
          ? r.push(i)
          : (r.push(e), n.firstCreatePass && cw(n).push(i, r.length - 1));
      }
      function ZC(n, t, e) {
        for (let i in n)
          if (n.hasOwnProperty(i)) {
            const r = n[i];
            (e = null === e ? {} : e).hasOwnProperty(i)
              ? e[i].push(t, r)
              : (e[i] = [t, r]);
          }
        return e;
      }
      function QC(n, t) {
        const i = t.directiveEnd,
          r = n.data,
          s = t.attrs,
          o = [];
        let a = null,
          l = null;
        for (let c = t.directiveStart; c < i; c++) {
          const u = r[c],
            d = u.inputs,
            h = null === s || CC(t) ? null : vL(d, s);
          o.push(h), (a = ZC(d, c, a)), (l = ZC(u.outputs, c, l));
        }
        null !== a &&
          (a.hasOwnProperty("class") && (t.flags |= 16),
          a.hasOwnProperty("style") && (t.flags |= 32)),
          (t.initialInputs = o),
          (t.inputs = a),
          (t.outputs = l);
      }
      function Vn(n, t, e, i, r, s, o, a) {
        const l = Jn(t, e);
        let u,
          c = t.inputs;
        !a && null != c && (u = c[i])
          ? (qm(n, e, u, i, r), pu(t) && JC(e, t.index))
          : 3 & t.type &&
            ((i = (function lL(n) {
              return "class" === n
                ? "className"
                : "for" === n
                ? "htmlFor"
                : "formaction" === n
                ? "formAction"
                : "innerHtml" === n
                ? "innerHTML"
                : "readonly" === n
                ? "readOnly"
                : "tabindex" === n
                ? "tabIndex"
                : n;
            })(i)),
            (r = null != o ? o(r, t.value || "", i) : r),
            s.setProperty(l, i, r));
      }
      function JC(n, t) {
        const e = Pn(t, n);
        16 & e[2] || (e[2] |= 32);
      }
      function Vm(n, t, e, i) {
        let r = !1;
        if (Nb()) {
          const s = (function pL(n, t, e) {
              const i = n.directiveRegistry;
              let r = null;
              if (i)
                for (let s = 0; s < i.length; s++) {
                  const o = i[s];
                  wC(e, o.selectors, !1) &&
                    (r || (r = []),
                    xu(tl(e, t), n, o.type),
                    yi(o) ? (nw(n, e), r.unshift(o)) : r.push(o));
                }
              return r;
            })(n, t, e),
            o = null === i ? null : { "": -1 };
          if (null !== s) {
            (r = !0), iw(e, n.data.length, s.length);
            for (let u = 0; u < s.length; u++) {
              const d = s[u];
              d.providersResolver && d.providersResolver(d);
            }
            let a = !1,
              l = !1,
              c = Jo(n, t, s.length, null);
            for (let u = 0; u < s.length; u++) {
              const d = s[u];
              (e.mergedAttrs = wu(e.mergedAttrs, d.hostAttrs)),
                rw(n, e, t, c, d),
                gL(c, d, o),
                null !== d.contentQueries && (e.flags |= 8),
                (null !== d.hostBindings ||
                  null !== d.hostAttrs ||
                  0 !== d.hostVars) &&
                  (e.flags |= 128);
              const h = d.type.prototype;
              !a &&
                (h.ngOnChanges || h.ngOnInit || h.ngDoCheck) &&
                ((n.preOrderHooks || (n.preOrderHooks = [])).push(e.index),
                (a = !0)),
                !l &&
                  (h.ngOnChanges || h.ngDoCheck) &&
                  ((n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(
                    e.index
                  ),
                  (l = !0)),
                c++;
            }
            QC(n, e);
          }
          o &&
            (function mL(n, t, e) {
              if (t) {
                const i = (n.localNames = []);
                for (let r = 0; r < t.length; r += 2) {
                  const s = e[t[r + 1]];
                  if (null == s) throw new k(-301, !1);
                  i.push(t[r], s);
                }
              }
            })(e, i, o);
        }
        return (e.mergedAttrs = wu(e.mergedAttrs, e.attrs)), r;
      }
      function ew(n, t, e, i, r, s) {
        const o = s.hostBindings;
        if (o) {
          let a = n.hostBindingOpCodes;
          null === a && (a = n.hostBindingOpCodes = []);
          const l = ~t.index;
          (function dL(n) {
            let t = n.length;
            for (; t > 0; ) {
              const e = n[--t];
              if ("number" == typeof e && e < 0) return e;
            }
            return 0;
          })(a) != l && a.push(l),
            a.push(i, r, o);
        }
      }
      function tw(n, t) {
        null !== n.hostBindings && n.hostBindings(1, t);
      }
      function nw(n, t) {
        (t.flags |= 2), (n.components || (n.components = [])).push(t.index);
      }
      function gL(n, t, e) {
        if (e) {
          if (t.exportAs)
            for (let i = 0; i < t.exportAs.length; i++) e[t.exportAs[i]] = n;
          yi(t) && (e[""] = n);
        }
      }
      function iw(n, t, e) {
        (n.flags |= 1),
          (n.directiveStart = t),
          (n.directiveEnd = t + e),
          (n.providerIndexes = t);
      }
      function rw(n, t, e, i, r) {
        n.data[i] = r;
        const s = r.factory || (r.factory = Ps(r.type)),
          o = new Ja(s, yi(r), g);
        (n.blueprint[i] = o),
          (e[i] = o),
          ew(n, t, 0, i, Jo(n, e, r.hostVars, he), r);
      }
      function _L(n, t, e) {
        const i = Jn(t, n),
          r = KC(e),
          s = n[10],
          o = Wu(
            n,
            $u(
              n,
              r,
              null,
              e.onPush ? 32 : 16,
              i,
              t,
              s,
              s.createRenderer(i, e),
              null,
              null,
              null
            )
          );
        n[t.index] = o;
      }
      function Hi(n, t, e, i, r, s) {
        const o = Jn(n, t);
        !(function jm(n, t, e, i, r, s, o) {
          if (null == s) n.removeAttribute(t, r, e);
          else {
            const a = null == o ? de(s) : o(s, i || "", r);
            n.setAttribute(t, r, a, e);
          }
        })(t[11], o, s, n.value, e, i, r);
      }
      function yL(n, t, e, i, r, s) {
        const o = s[t];
        if (null !== o) {
          const a = i.setInput;
          for (let l = 0; l < o.length; ) {
            const c = o[l++],
              u = o[l++],
              d = o[l++];
            null !== a ? i.setInput(e, d, c, u) : (e[u] = d);
          }
        }
      }
      function vL(n, t) {
        let e = null,
          i = 0;
        for (; i < t.length; ) {
          const r = t[i];
          if (0 !== r)
            if (5 !== r) {
              if ("number" == typeof r) break;
              n.hasOwnProperty(r) &&
                (null === e && (e = []), e.push(r, n[r], t[i + 1])),
                (i += 2);
            } else i += 2;
          else i += 4;
        }
        return e;
      }
      function sw(n, t, e, i) {
        return new Array(n, !0, !1, t, null, 0, i, e, null, null);
      }
      function wL(n, t) {
        const e = Pn(t, n);
        if (mp(e)) {
          const i = e[1];
          48 & e[2] ? yl(i, e, i.template, e[8]) : e[5] > 0 && Hm(e);
        }
      }
      function Hm(n) {
        for (let i = um(n); null !== i; i = dm(i))
          for (let r = 10; r < i.length; r++) {
            const s = i[r];
            if (512 & s[2]) {
              const o = s[1];
              yl(o, s, o.template, s[8]);
            } else s[5] > 0 && Hm(s);
          }
        const e = n[1].components;
        if (null !== e)
          for (let i = 0; i < e.length; i++) {
            const r = Pn(e[i], n);
            mp(r) && r[5] > 0 && Hm(r);
          }
      }
      function ML(n, t) {
        const e = Pn(t, n),
          i = e[1];
        (function DL(n, t) {
          for (let e = t.length; e < n.blueprint.length; e++)
            t.push(n.blueprint[e]);
        })(i, e),
          qu(i, e, e[8]);
      }
      function Wu(n, t) {
        return n[13] ? (n[14][4] = t) : (n[13] = t), (n[14] = t), t;
      }
      function zm(n) {
        for (; n; ) {
          n[2] |= 32;
          const t = gl(n);
          if (hR(n) && !t) return n;
          n = t;
        }
        return null;
      }
      function aw(n) {
        !(function ow(n) {
          for (let t = 0; t < n.components.length; t++) {
            const e = n.components[t],
              i = am(e);
            if (null !== i) {
              const r = i[1];
              rL(r, i, r.template, e);
            }
          }
        })(n[8]);
      }
      function $m(n, t, e) {
        Cp(0), t(n, e);
      }
      const EL = (() => Promise.resolve(null))();
      function lw(n) {
        return n[7] || (n[7] = []);
      }
      function cw(n) {
        return n.cleanup || (n.cleanup = []);
      }
      function uw(n, t, e) {
        return (
          (null === n || yi(n)) &&
            (e = (function wR(n) {
              for (; Array.isArray(n); ) {
                if ("object" == typeof n[1]) return n;
                n = n[0];
              }
              return null;
            })(e[t.index])),
          e[11]
        );
      }
      function dw(n, t) {
        const e = n[9],
          i = e ? e.get(ns, null) : null;
        i && i.handleError(t);
      }
      function qm(n, t, e, i, r) {
        for (let s = 0; s < e.length; ) {
          const o = e[s++],
            a = e[s++],
            l = t[o],
            c = n.data[o];
          null !== c.setInput ? c.setInput(l, r, i, a) : (l[a] = r);
        }
      }
      function Mr(n, t, e) {
        const i = gu(t, n);
        !(function rC(n, t, e) {
          n.setValue(t, e);
        })(n[11], i, e);
      }
      function Gu(n, t, e) {
        let i = e ? n.styles : null,
          r = e ? n.classes : null,
          s = 0;
        if (null !== t)
          for (let o = 0; o < t.length; o++) {
            const a = t[o];
            "number" == typeof a
              ? (s = a)
              : 1 == s
              ? (r = ep(r, a))
              : 2 == s && (i = ep(i, a + ": " + t[++o] + ";"));
          }
        e ? (n.styles = i) : (n.stylesWithoutHost = i),
          e ? (n.classes = r) : (n.classesWithoutHost = r);
      }
      function Yu(n, t, e, i, r = !1) {
        for (; null !== e; ) {
          const s = t[e.index];
          if ((null !== s && i.push(xt(s)), _i(s)))
            for (let a = 10; a < s.length; a++) {
              const l = s[a],
                c = l[1].firstChild;
              null !== c && Yu(l[1], l, c, i);
            }
          const o = e.type;
          if (8 & o) Yu(n, t, e.child, i);
          else if (32 & o) {
            const a = cm(e, t);
            let l;
            for (; (l = a()); ) i.push(l);
          } else if (16 & o) {
            const a = mC(t, e);
            if (Array.isArray(a)) i.push(...a);
            else {
              const l = gl(t[16]);
              Yu(l[1], l, a, i, !0);
            }
          }
          e = r ? e.projectionNext : e.next;
        }
        return i;
      }
      class vl {
        constructor(t, e) {
          (this._lView = t),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get rootNodes() {
          const t = this._lView,
            e = t[1];
          return Yu(e, t, e.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        set context(t) {
          this._lView[8] = t;
        }
        get destroyed() {
          return 128 == (128 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[3];
            if (_i(t)) {
              const e = t[8],
                i = e ? e.indexOf(this) : -1;
              i > -1 && (pm(t, i), Su(e, i));
            }
            this._attachedToViewContainer = !1;
          }
          oC(this._lView[1], this._lView);
        }
        onDestroy(t) {
          XC(this._lView[1], this._lView, null, t);
        }
        markForCheck() {
          zm(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -65;
        }
        reattach() {
          this._lView[2] |= 64;
        }
        detectChanges() {
          !(function Um(n, t, e) {
            const i = t[10];
            i.begin && i.begin();
            try {
              yl(n, t, n.template, e);
            } catch (r) {
              throw (dw(t, r), r);
            } finally {
              i.end && i.end();
            }
          })(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new k(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function sN(n, t) {
              _l(n, t, t[11], 2, null, null);
            })(this._lView[1], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new k(902, !1);
          this._appRef = t;
        }
      }
      class SL extends vl {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          aw(this._view);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class Wm extends Ls {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const e = $e(t);
          return new bl(e, this.ngModule);
        }
      }
      function hw(n) {
        const t = [];
        for (let e in n)
          n.hasOwnProperty(e) && t.push({ propName: n[e], templateName: e });
        return t;
      }
      class AL {
        constructor(t, e) {
          (this.injector = t), (this.parentInjector = e);
        }
        get(t, e, i) {
          const r = this.injector.get(t, Qp, i);
          return r !== Qp || e === Qp ? r : this.parentInjector.get(t, e, i);
        }
      }
      class bl extends U0 {
        constructor(t, e) {
          super(),
            (this.componentDef = t),
            (this.ngModule = e),
            (this.componentType = t.type),
            (this.selector = (function xN(n) {
              return n.map(DN).join(",");
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!e);
        }
        get inputs() {
          return hw(this.componentDef.inputs);
        }
        get outputs() {
          return hw(this.componentDef.outputs);
        }
        create(t, e, i, r) {
          let s = (r = r || this.ngModule) instanceof ts ? r : r?.injector;
          s &&
            null !== this.componentDef.getStandaloneInjector &&
            (s = this.componentDef.getStandaloneInjector(s) || s);
          const o = s ? new AL(t, s) : t,
            a = o.get(pl, null);
          if (null === a) throw new k(407, !1);
          const l = o.get(wF, null),
            c = a.createRenderer(null, this.componentDef),
            u = this.componentDef.selectors[0][0] || "div",
            d = i
              ? (function oL(n, t, e) {
                  return n.selectRootElement(t, e === mi.ShadowDom);
                })(c, i, this.componentDef.encapsulation)
              : fm(
                  a.createRenderer(null, this.componentDef),
                  u,
                  (function TL(n) {
                    const t = n.toLowerCase();
                    return "svg" === t ? "svg" : "math" === t ? "math" : null;
                  })(u)
                ),
            h = this.componentDef.onPush ? 288 : 272,
            f = (function PL(n, t) {
              return {
                components: [],
                scheduler: n || GF,
                clean: EL,
                playerHandler: t || null,
                flags: 0,
              };
            })(),
            p = Bm(0, null, null, 1, 0, null, null, null, null, null),
            m = $u(null, p, f, h, null, null, a, c, l, o, null);
          let _, v;
          wp(m);
          try {
            const M = (function OL(n, t, e, i, r, s) {
              const o = e[1];
              e[22] = n;
              const l = Qo(o, 22, 2, "#host", null),
                c = (l.mergedAttrs = t.hostAttrs);
              null !== c &&
                (Gu(l, c, !0),
                null !== n &&
                  (Cu(r, n, c),
                  null !== l.classes && vm(r, n, l.classes),
                  null !== l.styles && yC(r, n, l.styles)));
              const u = i.createRenderer(n, t),
                d = $u(
                  e,
                  KC(t),
                  null,
                  t.onPush ? 32 : 16,
                  e[22],
                  l,
                  i,
                  u,
                  s || null,
                  null,
                  null
                );
              return (
                o.firstCreatePass &&
                  (xu(tl(l, e), o, t.type), nw(o, l), iw(l, e.length, 1)),
                Wu(e, d),
                (e[22] = d)
              );
            })(d, this.componentDef, m, a, c);
            if (d)
              if (i) Cu(c, d, ["ng-version", MF.full]);
              else {
                const { attrs: C, classes: D } = (function EN(n) {
                  const t = [],
                    e = [];
                  let i = 1,
                    r = 2;
                  for (; i < n.length; ) {
                    let s = n[i];
                    if ("string" == typeof s)
                      2 === r
                        ? "" !== s && t.push(s, n[++i])
                        : 8 === r && e.push(s);
                    else {
                      if (!vi(r)) break;
                      r = s;
                    }
                    i++;
                  }
                  return { attrs: t, classes: e };
                })(this.componentDef.selectors[0]);
                C && Cu(c, d, C), D && D.length > 0 && vm(c, d, D.join(" "));
              }
            if (((v = pp(p, 22)), void 0 !== e)) {
              const C = (v.projection = []);
              for (let D = 0; D < this.ngContentSelectors.length; D++) {
                const S = e[D];
                C.push(null != S ? Array.from(S) : null);
              }
            }
            (_ = (function RL(n, t, e, i, r) {
              const s = e[1],
                o = (function uL(n, t, e) {
                  const i = Pt();
                  n.firstCreatePass &&
                    (e.providersResolver && e.providersResolver(e),
                    rw(n, i, t, Jo(n, t, 1, null), e),
                    QC(n, i));
                  const r = nl(t, n, i.directiveStart, i);
                  Qt(r, t);
                  const s = Jn(i, t);
                  return s && Qt(s, t), r;
                })(s, e, t);
              if ((i.components.push(o), (n[8] = o), null !== r))
                for (const l of r) l(o, t);
              if (t.contentQueries) {
                const l = Pt();
                t.contentQueries(1, o, l.directiveStart);
              }
              const a = Pt();
              return (
                !s.firstCreatePass ||
                  (null === t.hostBindings && null === t.hostAttrs) ||
                  (Jr(a.index),
                  ew(e[1], a, 0, a.directiveStart, a.directiveEnd, t),
                  tw(t, o)),
                o
              );
            })(M, this.componentDef, m, f, [FL])),
              qu(p, m, null);
          } finally {
            Mp();
          }
          return new IL(this.componentType, _, Yo(v, m), m, v);
        }
      }
      class IL extends class gF {} {
        constructor(t, e, i, r, s) {
          super(),
            (this.location = i),
            (this._rootLView = r),
            (this._tNode = s),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new SL(r)),
            (this.componentType = t);
        }
        setInput(t, e) {
          const i = this._tNode.inputs;
          let r;
          if (null !== i && (r = i[t])) {
            const s = this._rootLView;
            qm(s[1], s, r, t, e), JC(s, this._tNode.index);
          }
        }
        get injector() {
          return new Lo(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      function FL() {
        const n = Pt();
        yu(I()[1], n);
      }
      function q(n) {
        let t = (function fw(n) {
            return Object.getPrototypeOf(n.prototype).constructor;
          })(n.type),
          e = !0;
        const i = [n];
        for (; t; ) {
          let r;
          if (yi(n)) r = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new k(903, !1);
            r = t.ɵdir;
          }
          if (r) {
            if (e) {
              i.push(r);
              const o = n;
              (o.inputs = Gm(n.inputs)),
                (o.declaredInputs = Gm(n.declaredInputs)),
                (o.outputs = Gm(n.outputs));
              const a = r.hostBindings;
              a && VL(n, a);
              const l = r.viewQuery,
                c = r.contentQueries;
              if (
                (l && LL(n, l),
                c && BL(n, c),
                Jf(n.inputs, r.inputs),
                Jf(n.declaredInputs, r.declaredInputs),
                Jf(n.outputs, r.outputs),
                yi(r) && r.data.animation)
              ) {
                const u = n.data;
                u.animation = (u.animation || []).concat(r.data.animation);
              }
            }
            const s = r.features;
            if (s)
              for (let o = 0; o < s.length; o++) {
                const a = s[o];
                a && a.ngInherit && a(n), a === q && (e = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function NL(n) {
          let t = 0,
            e = null;
          for (let i = n.length - 1; i >= 0; i--) {
            const r = n[i];
            (r.hostVars = t += r.hostVars),
              (r.hostAttrs = wu(r.hostAttrs, (e = wu(e, r.hostAttrs))));
          }
        })(i);
      }
      function Gm(n) {
        return n === To ? {} : n === Ve ? [] : n;
      }
      function LL(n, t) {
        const e = n.viewQuery;
        n.viewQuery = e
          ? (i, r) => {
              t(i, r), e(i, r);
            }
          : t;
      }
      function BL(n, t) {
        const e = n.contentQueries;
        n.contentQueries = e
          ? (i, r, s) => {
              t(i, r, s), e(i, r, s);
            }
          : t;
      }
      function VL(n, t) {
        const e = n.hostBindings;
        n.hostBindings = e
          ? (i, r) => {
              t(i, r), e(i, r);
            }
          : t;
      }
      let Ku = null;
      function Hs() {
        if (!Ku) {
          const n = Ge.Symbol;
          if (n && n.iterator) Ku = n.iterator;
          else {
            const t = Object.getOwnPropertyNames(Map.prototype);
            for (let e = 0; e < t.length; ++e) {
              const i = t[e];
              "entries" !== i &&
                "size" !== i &&
                Map.prototype[i] === Map.prototype.entries &&
                (Ku = i);
            }
          }
        }
        return Ku;
      }
      function Cl(n) {
        return (
          !!Ym(n) && (Array.isArray(n) || (!(n instanceof Map) && Hs() in n))
        );
      }
      function Ym(n) {
        return null !== n && ("function" == typeof n || "object" == typeof n);
      }
      function Jt(n, t, e) {
        return !Object.is(n[t], e) && ((n[t] = e), !0);
      }
      function ze(n, t, e, i) {
        const r = I();
        return Jt(r, Po(), t) && (Oe(), Hi(mt(), r, n, t, e, i)), ze;
      }
      function ta(n, t, e, i) {
        return Jt(n, Po(), e) ? t + de(e) + i : he;
      }
      function na(n, t, e, i, r, s) {
        const a = (function zs(n, t, e, i) {
          const r = Jt(n, t, e);
          return Jt(n, t + 1, i) || r;
        })(
          n,
          (function _r() {
            return le.lFrame.bindingIndex;
          })(),
          e,
          r
        );
        return yr(2), a ? t + de(e) + i + de(r) + s : he;
      }
      function B(n, t, e, i, r, s, o, a) {
        const l = I(),
          c = Oe(),
          u = n + 22,
          d = c.firstCreatePass
            ? (function YL(n, t, e, i, r, s, o, a, l) {
                const c = t.consts,
                  u = Qo(t, n, 4, o || null, Qr(c, a));
                Vm(t, e, u, Qr(c, l)), yu(t, u);
                const d = (u.tViews = Bm(
                  2,
                  u,
                  i,
                  r,
                  s,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  c
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, u),
                    (d.queries = t.queries.embeddedTView(u))),
                  u
                );
              })(u, c, l, t, e, i, r, s, o)
            : c.data[u];
        Fi(d, !1);
        const h = l[11].createComment("");
        Bu(c, l, h, d),
          Qt(h, l),
          Wu(l, (l[u] = sw(h, l, h, d))),
          mu(d) && Nm(c, l, d),
          null != o && Lm(l, d, a);
      }
      function T(n, t, e) {
        const i = I();
        return Jt(i, Po(), t) && Vn(Oe(), mt(), i, n, t, i[11], e, !1), T;
      }
      function Xm(n, t, e, i, r) {
        const o = r ? "class" : "style";
        qm(n, e, t.inputs[o], o, i);
      }
      function b(n, t, e, i) {
        const r = I(),
          s = Oe(),
          o = 22 + n,
          a = r[11],
          l = (r[o] = fm(
            a,
            t,
            (function HR() {
              return le.lFrame.currentNamespace;
            })()
          )),
          c = s.firstCreatePass
            ? (function XL(n, t, e, i, r, s, o) {
                const a = t.consts,
                  c = Qo(t, n, 2, r, Qr(a, s));
                return (
                  Vm(t, e, c, Qr(a, o)),
                  null !== c.attrs && Gu(c, c.attrs, !1),
                  null !== c.mergedAttrs && Gu(c, c.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, c),
                  c
                );
              })(o, s, r, 0, t, e, i)
            : s.data[o];
        Fi(c, !0);
        const u = c.mergedAttrs;
        null !== u && Cu(a, l, u);
        const d = c.classes;
        null !== d && vm(a, l, d);
        const h = c.styles;
        return (
          null !== h && yC(a, l, h),
          64 != (64 & c.flags) && Bu(s, r, l, c),
          0 ===
            (function xR() {
              return le.lFrame.elementDepthCount;
            })() && Qt(l, r),
          (function ER() {
            le.lFrame.elementDepthCount++;
          })(),
          mu(c) && (Nm(s, r, c), YC(s, c, r)),
          null !== i && Lm(r, c),
          b
        );
      }
      function y() {
        let n = Pt();
        _p() ? yp() : ((n = n.parent), Fi(n, !1));
        const t = n;
        !(function SR() {
          le.lFrame.elementDepthCount--;
        })();
        const e = Oe();
        return (
          e.firstCreatePass && (yu(e, n), cp(n) && e.queries.elementEnd(n)),
          null != t.classesWithoutHost &&
            (function WR(n) {
              return 0 != (16 & n.flags);
            })(t) &&
            Xm(e, t, I(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function GR(n) {
              return 0 != (32 & n.flags);
            })(t) &&
            Xm(e, t, I(), t.stylesWithoutHost, !1),
          y
        );
      }
      function ge(n, t, e, i) {
        return b(n, t, e, i), y(), ge;
      }
      function Ml(n, t, e) {
        const i = I(),
          r = Oe(),
          s = n + 22,
          o = r.firstCreatePass
            ? (function ZL(n, t, e, i, r) {
                const s = t.consts,
                  o = Qr(s, i),
                  a = Qo(t, n, 8, "ng-container", o);
                return (
                  null !== o && Gu(a, o, !0),
                  Vm(t, e, a, Qr(s, r)),
                  null !== t.queries && t.queries.elementStart(t, a),
                  a
                );
              })(s, r, i, t, e)
            : r.data[s];
        Fi(o, !0);
        const a = (i[s] = i[11].createComment(""));
        return (
          Bu(r, i, a, o),
          Qt(a, i),
          mu(o) && (Nm(r, i, o), YC(r, o, i)),
          null != e && Lm(i, o),
          Ml
        );
      }
      function Dl() {
        let n = Pt();
        const t = Oe();
        return (
          _p() ? yp() : ((n = n.parent), Fi(n, !1)),
          t.firstCreatePass && (yu(t, n), cp(n) && t.queries.elementEnd(n)),
          Dl
        );
      }
      function Dr() {
        return I();
      }
      function xl(n) {
        return !!n && "function" == typeof n.then;
      }
      function Mw(n) {
        return !!n && "function" == typeof n.subscribe;
      }
      const Zm = Mw;
      function P(n, t, e, i) {
        const r = I(),
          s = Oe(),
          o = Pt();
        return Dw(s, r, r[11], o, n, t, 0, i), P;
      }
      function El(n, t) {
        const e = Pt(),
          i = I(),
          r = Oe();
        return Dw(r, i, uw(bp(r.data), e, i), e, n, t), El;
      }
      function Dw(n, t, e, i, r, s, o, a) {
        const l = mu(i),
          u = n.firstCreatePass && cw(n),
          d = t[8],
          h = lw(t);
        let f = !0;
        if (3 & i.type || a) {
          const _ = Jn(i, t),
            v = a ? a(_) : _,
            M = h.length,
            C = a ? (S) => a(xt(S[i.index])) : i.index;
          let D = null;
          if (
            (!a &&
              l &&
              (D = (function QL(n, t, e, i) {
                const r = n.cleanup;
                if (null != r)
                  for (let s = 0; s < r.length - 1; s += 2) {
                    const o = r[s];
                    if (o === e && r[s + 1] === i) {
                      const a = t[7],
                        l = r[s + 2];
                      return a.length > l ? a[l] : null;
                    }
                    "string" == typeof o && (s += 2);
                  }
                return null;
              })(n, t, r, i.index)),
            null !== D)
          )
            ((D.__ngLastListenerFn__ || D).__ngNextListenerFn__ = s),
              (D.__ngLastListenerFn__ = s),
              (f = !1);
          else {
            s = Ew(i, t, d, s, !1);
            const S = e.listen(v, r, s);
            h.push(s, S), u && u.push(r, C, M, M + 1);
          }
        } else s = Ew(i, t, d, s, !1);
        const p = i.outputs;
        let m;
        if (f && null !== p && (m = p[r])) {
          const _ = m.length;
          if (_)
            for (let v = 0; v < _; v += 2) {
              const A = t[m[v]][m[v + 1]].subscribe(s),
                O = h.length;
              h.push(s, A), u && u.push(r, i.index, O, -(O + 1));
            }
        }
      }
      function xw(n, t, e, i) {
        try {
          return !1 !== e(i);
        } catch (r) {
          return dw(n, r), !1;
        }
      }
      function Ew(n, t, e, i, r) {
        return function s(o) {
          if (o === Function) return i;
          zm(2 & n.flags ? Pn(n.index, t) : t);
          let l = xw(t, 0, i, o),
            c = s.__ngNextListenerFn__;
          for (; c; ) (l = xw(t, 0, c, o) && l), (c = c.__ngNextListenerFn__);
          return r && !1 === l && (o.preventDefault(), (o.returnValue = !1)), l;
        };
      }
      function Re(n = 1) {
        return (function FR(n) {
          return (le.lFrame.contextLView = (function NR(n, t) {
            for (; n > 0; ) (t = t[15]), n--;
            return t;
          })(n, le.lFrame.contextLView))[8];
        })(n);
      }
      function JL(n, t) {
        let e = null;
        const i = (function bN(n) {
          const t = n.attrs;
          if (null != t) {
            const e = t.indexOf(5);
            if (0 == (1 & e)) return t[e + 1];
          }
          return null;
        })(n);
        for (let r = 0; r < t.length; r++) {
          const s = t[r];
          if ("*" !== s) {
            if (null === i ? wC(n, s, !0) : MN(i, s)) return r;
          } else e = r;
        }
        return e;
      }
      function Nt(n) {
        const t = I()[16][6];
        if (!t.projection) {
          const i = (t.projection = sl(n ? n.length : 1, null)),
            r = i.slice();
          let s = t.child;
          for (; null !== s; ) {
            const o = n ? JL(s, n) : 0;
            null !== o &&
              (r[o] ? (r[o].projectionNext = s) : (i[o] = s), (r[o] = s)),
              (s = s.next);
          }
        }
      }
      function De(n, t = 0, e) {
        const i = I(),
          r = Oe(),
          s = Qo(r, 22 + n, 16, null, e || null);
        null === s.projection && (s.projection = t),
          yp(),
          64 != (64 & s.flags) &&
            (function fN(n, t, e) {
              _C(t[11], 0, t, e, aC(n, e, t), dC(e.parent || t[6], e, t));
            })(r, i, s);
      }
      function Cn(n, t, e, i, r) {
        const s = I(),
          o = ta(s, t, e, i);
        return o !== he && Vn(Oe(), mt(), s, n, o, s[11], r, !1), Cn;
      }
      function Nw(n, t, e, i, r) {
        const s = n[e + 1],
          o = null === t;
        let a = i ? bi(s) : wr(s),
          l = !1;
        for (; 0 !== a && (!1 === l || o); ) {
          const u = n[a + 1];
          n2(n[a], t) && ((l = !0), (n[a + 1] = i ? Em(u) : Dm(u))),
            (a = i ? bi(u) : wr(u));
        }
        l && (n[e + 1] = i ? Dm(s) : Em(s));
      }
      function n2(n, t) {
        return (
          null === n ||
          null == t ||
          (Array.isArray(n) ? n[1] : n) === t ||
          (!(!Array.isArray(n) || "string" != typeof t) && zo(n, t) >= 0)
        );
      }
      const Lt = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function Lw(n) {
        return n.substring(Lt.key, Lt.keyEnd);
      }
      function Bw(n, t) {
        const e = Lt.textEnd;
        return e === t
          ? -1
          : ((t = Lt.keyEnd =
              (function a2(n, t, e) {
                for (; t < e && n.charCodeAt(t) > 32; ) t++;
                return t;
              })(n, (Lt.key = t), e)),
            ca(n, t, e));
      }
      function ca(n, t, e) {
        for (; t < e && n.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function Us(n, t, e) {
        return Ci(n, t, e, !1), Us;
      }
      function Ye(n, t) {
        return Ci(n, t, null, !0), Ye;
      }
      function $i(n, t) {
        for (
          let e = (function s2(n) {
            return (
              (function jw(n) {
                (Lt.key = 0),
                  (Lt.keyEnd = 0),
                  (Lt.value = 0),
                  (Lt.valueEnd = 0),
                  (Lt.textEnd = n.length);
              })(n),
              Bw(n, ca(n, 0, Lt.textEnd))
            );
          })(t);
          e >= 0;
          e = Bw(t, e)
        )
          Nn(n, Lw(t), !0);
      }
      function Ci(n, t, e, i) {
        const r = I(),
          s = Oe(),
          o = yr(2);
        s.firstUpdatePass && $w(s, n, o, i),
          t !== he &&
            Jt(r, o, t) &&
            Ww(
              s,
              s.data[un()],
              r,
              r[11],
              n,
              (r[o + 1] = (function y2(n, t) {
                return (
                  null == n ||
                    ("string" == typeof t
                      ? (n += t)
                      : "object" == typeof n && (n = Qe(Bn(n)))),
                  n
                );
              })(t, e)),
              i,
              o
            );
      }
      function Uw(n, t) {
        return t >= n.expandoStartIndex;
      }
      function $w(n, t, e, i) {
        const r = n.data;
        if (null === r[e + 1]) {
          const s = r[un()],
            o = Uw(n, e);
          Yw(s, i) && null === t && !o && (t = !1),
            (t = (function h2(n, t, e, i) {
              const r = bp(n);
              let s = i ? t.residualClasses : t.residualStyles;
              if (null === r)
                0 === (i ? t.classBindings : t.styleBindings) &&
                  ((e = Sl((e = Qm(null, n, t, e, i)), t.attrs, i)),
                  (s = null));
              else {
                const o = t.directiveStylingLast;
                if (-1 === o || n[o] !== r)
                  if (((e = Qm(r, n, t, e, i)), null === s)) {
                    let l = (function f2(n, t, e) {
                      const i = e ? t.classBindings : t.styleBindings;
                      if (0 !== wr(i)) return n[bi(i)];
                    })(n, t, i);
                    void 0 !== l &&
                      Array.isArray(l) &&
                      ((l = Qm(null, n, t, l[1], i)),
                      (l = Sl(l, t.attrs, i)),
                      (function p2(n, t, e, i) {
                        n[bi(e ? t.classBindings : t.styleBindings)] = i;
                      })(n, t, i, l));
                  } else
                    s = (function m2(n, t, e) {
                      let i;
                      const r = t.directiveEnd;
                      for (let s = 1 + t.directiveStylingLast; s < r; s++)
                        i = Sl(i, n[s].hostAttrs, e);
                      return Sl(i, t.attrs, e);
                    })(n, t, i);
              }
              return (
                void 0 !== s &&
                  (i ? (t.residualClasses = s) : (t.residualStyles = s)),
                e
              );
            })(r, s, t, i)),
            (function e2(n, t, e, i, r, s) {
              let o = s ? t.classBindings : t.styleBindings,
                a = bi(o),
                l = wr(o);
              n[i] = e;
              let u,
                c = !1;
              if (Array.isArray(e)) {
                const d = e;
                (u = d[1]), (null === u || zo(d, u) > 0) && (c = !0);
              } else u = e;
              if (r)
                if (0 !== l) {
                  const h = bi(n[a + 1]);
                  (n[i + 1] = Hu(h, a)),
                    0 !== h && (n[h + 1] = xm(n[h + 1], i)),
                    (n[a + 1] = (function qN(n, t) {
                      return (131071 & n) | (t << 17);
                    })(n[a + 1], i));
                } else
                  (n[i + 1] = Hu(a, 0)),
                    0 !== a && (n[a + 1] = xm(n[a + 1], i)),
                    (a = i);
              else
                (n[i + 1] = Hu(l, 0)),
                  0 === a ? (a = i) : (n[l + 1] = xm(n[l + 1], i)),
                  (l = i);
              c && (n[i + 1] = Dm(n[i + 1])),
                Nw(n, u, i, !0),
                Nw(n, u, i, !1),
                (function t2(n, t, e, i, r) {
                  const s = r ? n.residualClasses : n.residualStyles;
                  null != s &&
                    "string" == typeof t &&
                    zo(s, t) >= 0 &&
                    (e[i + 1] = Em(e[i + 1]));
                })(t, u, n, i, s),
                (o = Hu(a, l)),
                s ? (t.classBindings = o) : (t.styleBindings = o);
            })(r, s, t, e, o, i);
        }
      }
      function Qm(n, t, e, i, r) {
        let s = null;
        const o = e.directiveEnd;
        let a = e.directiveStylingLast;
        for (
          -1 === a ? (a = e.directiveStart) : a++;
          a < o && ((s = t[a]), (i = Sl(i, s.hostAttrs, r)), s !== n);

        )
          a++;
        return null !== n && (e.directiveStylingLast = a), i;
      }
      function Sl(n, t, e) {
        const i = e ? 1 : 2;
        let r = -1;
        if (null !== t)
          for (let s = 0; s < t.length; s++) {
            const o = t[s];
            "number" == typeof o
              ? (r = o)
              : r === i &&
                (Array.isArray(n) || (n = void 0 === n ? [] : ["", n]),
                Nn(n, o, !!e || t[++s]));
          }
        return void 0 === n ? null : n;
      }
      function Ww(n, t, e, i, r, s, o, a) {
        if (!(3 & t.type)) return;
        const l = n.data,
          c = l[a + 1];
        Qu(
          (function BC(n) {
            return 1 == (1 & n);
          })(c)
            ? Gw(l, t, e, r, wr(c), o)
            : void 0
        ) ||
          (Qu(s) ||
            ((function LC(n) {
              return 2 == (2 & n);
            })(c) &&
              (s = Gw(l, null, e, r, a, o))),
          (function mN(n, t, e, i, r) {
            if (t) r ? n.addClass(e, i) : n.removeClass(e, i);
            else {
              let s = -1 === i.indexOf("-") ? void 0 : bn.DashCase;
              null == r
                ? n.removeStyle(e, i, s)
                : ("string" == typeof r &&
                    r.endsWith("!important") &&
                    ((r = r.slice(0, -10)), (s |= bn.Important)),
                  n.setStyle(e, i, r, s));
            }
          })(i, o, gu(un(), e), r, s));
      }
      function Gw(n, t, e, i, r, s) {
        const o = null === t;
        let a;
        for (; r > 0; ) {
          const l = n[r],
            c = Array.isArray(l),
            u = c ? l[1] : l,
            d = null === u;
          let h = e[r + 1];
          h === he && (h = d ? Ve : void 0);
          let f = d ? Op(h, i) : u === i ? h : void 0;
          if ((c && !Qu(f) && (f = Op(l, i)), Qu(f) && ((a = f), o))) return a;
          const p = n[r + 1];
          r = o ? bi(p) : wr(p);
        }
        if (null !== t) {
          let l = s ? t.residualClasses : t.residualStyles;
          null != l && (a = Op(l, i));
        }
        return a;
      }
      function Qu(n) {
        return void 0 !== n;
      }
      function Yw(n, t) {
        return 0 != (n.flags & (t ? 16 : 32));
      }
      function w(n, t = "") {
        const e = I(),
          i = Oe(),
          r = n + 22,
          s = i.firstCreatePass ? Qo(i, r, 1, t, null) : i.data[r],
          o = (e[r] = (function hm(n, t) {
            return n.createText(t);
          })(e[11], t));
        Bu(i, e, o, s), Fi(s, !1);
      }
      function gt(n) {
        return dt("", n, ""), gt;
      }
      function dt(n, t, e) {
        const i = I(),
          r = ta(i, n, t, e);
        return r !== he && Mr(i, un(), r), dt;
      }
      function ss(n, t, e, i, r) {
        const s = I(),
          o = na(s, n, t, e, i, r);
        return o !== he && Mr(s, un(), o), ss;
      }
      function nM(n, t, e) {
        !(function wi(n, t, e, i) {
          const r = Oe(),
            s = yr(2);
          r.firstUpdatePass && $w(r, null, s, i);
          const o = I();
          if (e !== he && Jt(o, s, e)) {
            const a = r.data[un()];
            if (Yw(a, i) && !Uw(r, s)) {
              let l = i ? a.classesWithoutHost : a.stylesWithoutHost;
              null !== l && (e = ep(l, e || "")), Xm(r, a, o, e, i);
            } else
              !(function _2(n, t, e, i, r, s, o, a) {
                r === he && (r = Ve);
                let l = 0,
                  c = 0,
                  u = 0 < r.length ? r[0] : null,
                  d = 0 < s.length ? s[0] : null;
                for (; null !== u || null !== d; ) {
                  const h = l < r.length ? r[l + 1] : void 0,
                    f = c < s.length ? s[c + 1] : void 0;
                  let m,
                    p = null;
                  u === d
                    ? ((l += 2), (c += 2), h !== f && ((p = d), (m = f)))
                    : null === d || (null !== u && u < d)
                    ? ((l += 2), (p = u))
                    : ((c += 2), (p = d), (m = f)),
                    null !== p && Ww(n, t, e, i, p, m, o, a),
                    (u = l < r.length ? r[l] : null),
                    (d = c < s.length ? s[c] : null);
                }
              })(
                r,
                a,
                o,
                o[11],
                o[s + 1],
                (o[s + 1] = (function g2(n, t, e) {
                  if (null == e || "" === e) return Ve;
                  const i = [],
                    r = Bn(e);
                  if (Array.isArray(r))
                    for (let s = 0; s < r.length; s++) n(i, r[s], !0);
                  else if ("object" == typeof r)
                    for (const s in r) r.hasOwnProperty(s) && n(i, s, r[s]);
                  else "string" == typeof r && t(i, r);
                  return i;
                })(n, t, e)),
                i,
                s
              );
          }
        })(Nn, $i, ta(I(), n, t, e), !0);
      }
      function Tl(n, t, e) {
        const i = I();
        return Jt(i, Po(), t) && Vn(Oe(), mt(), i, n, t, i[11], e, !0), Tl;
      }
      function Al(n, t, e) {
        const i = I();
        if (Jt(i, Po(), t)) {
          const s = Oe(),
            o = mt();
          Vn(s, o, i, n, t, uw(bp(s.data), o, i), e, !0);
        }
        return Al;
      }
      const da = "en-US";
      let pM = da;
      function tg(n, t, e, i, r) {
        if (((n = te(n)), Array.isArray(n)))
          for (let s = 0; s < n.length; s++) tg(n[s], t, e, i, r);
        else {
          const s = Oe(),
            o = I();
          let a = Ns(n) ? n : te(n.provide),
            l = z0(n);
          const c = Pt(),
            u = 1048575 & c.providerIndexes,
            d = c.directiveStart,
            h = c.providerIndexes >> 20;
          if (Ns(n) || !n.multi) {
            const f = new Ja(l, r, g),
              p = ig(a, t, r ? u : u + h, d);
            -1 === p
              ? (xu(tl(c, o), s, a),
                ng(s, n, t.length),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(f),
                o.push(f))
              : ((e[p] = f), (o[p] = f));
          } else {
            const f = ig(a, t, u + h, d),
              p = ig(a, t, u, u + h),
              m = f >= 0 && e[f],
              _ = p >= 0 && e[p];
            if ((r && !_) || (!r && !m)) {
              xu(tl(c, o), s, a);
              const v = (function FB(n, t, e, i, r) {
                const s = new Ja(n, e, g);
                return (
                  (s.multi = []),
                  (s.index = t),
                  (s.componentProviders = 0),
                  VM(s, r, i && !e),
                  s
                );
              })(r ? PB : RB, e.length, r, i, l);
              !r && _ && (e[p].providerFactory = v),
                ng(s, n, t.length, 0),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(v),
                o.push(v);
            } else ng(s, n, f > -1 ? f : p, VM(e[r ? p : f], l, !r && i));
            !r && i && _ && e[p].componentProviders++;
          }
        }
      }
      function ng(n, t, e, i) {
        const r = Ns(t),
          s = (function lF(n) {
            return !!n.useClass;
          })(t);
        if (r || s) {
          const l = (s ? te(t.useClass) : t).prototype.ngOnDestroy;
          if (l) {
            const c = n.destroyHooks || (n.destroyHooks = []);
            if (!r && t.multi) {
              const u = c.indexOf(e);
              -1 === u ? c.push(e, [i, l]) : c[u + 1].push(i, l);
            } else c.push(e, l);
          }
        }
      }
      function VM(n, t, e) {
        return e && n.componentProviders++, n.multi.push(t) - 1;
      }
      function ig(n, t, e, i) {
        for (let r = e; r < i; r++) if (t[r] === n) return r;
        return -1;
      }
      function RB(n, t, e, i) {
        return rg(this.multi, []);
      }
      function PB(n, t, e, i) {
        const r = this.multi;
        let s;
        if (this.providerFactory) {
          const o = this.providerFactory.componentProviders,
            a = nl(e, e[1], this.providerFactory.index, i);
          (s = a.slice(0, o)), rg(r, s);
          for (let l = o; l < a.length; l++) s.push(a[l]);
        } else (s = []), rg(r, s);
        return s;
      }
      function rg(n, t) {
        for (let e = 0; e < n.length; e++) t.push((0, n[e])());
        return t;
      }
      function pe(n, t = []) {
        return (e) => {
          e.providersResolver = (i, r) =>
            (function OB(n, t, e) {
              const i = Oe();
              if (i.firstCreatePass) {
                const r = yi(n);
                tg(e, i.data, i.blueprint, r, !0),
                  tg(t, i.data, i.blueprint, r, !1);
              }
            })(i, r ? r(n) : n, t);
        };
      }
      class qs {}
      class jM {}
      class HM extends qs {
        constructor(t, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Wm(this));
          const i = On(t);
          (this._bootstrapComponents = Cr(i.bootstrap)),
            (this._r3Injector = AC(
              t,
              e,
              [
                { provide: qs, useValue: this },
                { provide: Ls, useValue: this.componentFactoryResolver },
              ],
              Qe(t),
              new Set(["environment"])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(t));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class sg extends jM {
        constructor(t) {
          super(), (this.moduleType = t);
        }
        create(t) {
          return new HM(this.moduleType, t);
        }
      }
      class LB extends qs {
        constructor(t, e, i) {
          super(),
            (this.componentFactoryResolver = new Wm(this)),
            (this.instance = null);
          const r = new H0(
            [
              ...t,
              { provide: qs, useValue: this },
              { provide: Ls, useValue: this.componentFactoryResolver },
            ],
            e || Nu(),
            i,
            new Set(["environment"])
          );
          (this.injector = r), r.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(t) {
          this.injector.onDestroy(t);
        }
      }
      function id(n, t, e = null) {
        return new LB(n, t, e).injector;
      }
      function KM(n, t, e, i, r, s) {
        const o = t + e;
        return Jt(n, o, r)
          ? (function zi(n, t, e) {
              return (n[t] = e);
            })(n, o + 1, s ? i.call(s, r) : i(r))
          : (function Pl(n, t) {
              const e = n[t];
              return e === he ? void 0 : e;
            })(n, o + 1);
      }
      function qi(n, t) {
        const e = Oe();
        let i;
        const r = n + 22;
        e.firstCreatePass
          ? ((i = (function iV(n, t) {
              if (t)
                for (let e = t.length - 1; e >= 0; e--) {
                  const i = t[e];
                  if (n === i.name) return i;
                }
            })(t, e.pipeRegistry)),
            (e.data[r] = i),
            i.onDestroy &&
              (e.destroyHooks || (e.destroyHooks = [])).push(r, i.onDestroy))
          : (i = e.data[r]);
        const s = i.factory || (i.factory = Ps(i.type)),
          o = Xn(g);
        try {
          const a = Mu(!1),
            l = s();
          return (
            Mu(a),
            (function KL(n, t, e, i) {
              e >= n.data.length &&
                ((n.data[e] = null), (n.blueprint[e] = null)),
                (t[e] = i);
            })(e, I(), r, l),
            l
          );
        } finally {
          Xn(o);
        }
      }
      function Wi(n, t, e) {
        const i = n + 22,
          r = I(),
          s = Ro(r, i);
        return (function Fl(n, t) {
          return n[1].data[t].pure;
        })(r, i)
          ? KM(
              r,
              (function cn() {
                const n = le.lFrame;
                let t = n.bindingRootIndex;
                return (
                  -1 === t &&
                    (t = n.bindingRootIndex = n.tView.bindingStartIndex),
                  t
                );
              })(),
              t,
              s.transform,
              e,
              s
            )
          : s.transform(e);
      }
      function ag(n) {
        return (t) => {
          setTimeout(n, void 0, t);
        };
      }
      const fe = class lV extends $ {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, e, i) {
          let r = t,
            s = e || (() => null),
            o = i;
          if (t && "object" == typeof t) {
            const l = t;
            (r = l.next?.bind(l)),
              (s = l.error?.bind(l)),
              (o = l.complete?.bind(l));
          }
          this.__isAsync && ((s = ag(s)), r && (r = ag(r)), o && (o = ag(o)));
          const a = super.subscribe({ next: r, error: s, complete: o });
          return t instanceof bt && t.add(a), a;
        }
      };
      function cV() {
        return this._results[Hs()]();
      }
      class fa {
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = Hs(),
            i = fa.prototype;
          i[e] || (i[e] = cV);
        }
        get changes() {
          return this._changes || (this._changes = new fe());
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, e) {
          return this._results.reduce(t, e);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, e) {
          const i = this;
          i.dirty = !1;
          const r = Fn(t);
          (this._changesDetected = !(function rP(n, t, e) {
            if (n.length !== t.length) return !1;
            for (let i = 0; i < n.length; i++) {
              let r = n[i],
                s = t[i];
              if ((e && ((r = e(r)), (s = e(s))), s !== r)) return !1;
            }
            return !0;
          })(i._results, r, e)) &&
            ((i._results = r),
            (i.length = r.length),
            (i.last = r[this.length - 1]),
            (i.first = r[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let jn = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = hV), n;
      })();
      const uV = jn,
        dV = class extends uV {
          constructor(t, e, i) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = e),
              (this.elementRef = i);
          }
          createEmbeddedView(t, e) {
            const i = this._declarationTContainer.tViews,
              r = $u(
                this._declarationLView,
                i,
                t,
                16,
                null,
                i.declTNode,
                null,
                null,
                null,
                null,
                e || null
              );
            r[17] = this._declarationLView[this._declarationTContainer.index];
            const o = this._declarationLView[19];
            return (
              null !== o && (r[19] = o.createEmbeddedView(i)),
              qu(i, r, t),
              new vl(r)
            );
          }
        };
      function hV() {
        return rd(Pt(), I());
      }
      function rd(n, t) {
        return 4 & n.type ? new dV(t, n, Yo(n, t)) : null;
      }
      let en = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = fV), n;
      })();
      function fV() {
        return nD(Pt(), I());
      }
      const pV = en,
        eD = class extends pV {
          constructor(t, e, i) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = e),
              (this._hostLView = i);
          }
          get element() {
            return Yo(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Lo(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = Du(this._hostTNode, this._hostLView);
            if (Xb(t)) {
              const e = No(t, this._hostLView),
                i = Fo(t);
              return new Lo(e[1].data[i + 8], e);
            }
            return new Lo(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const e = tD(this._lContainer);
            return (null !== e && e[t]) || null;
          }
          get length() {
            return this._lContainer.length - 10;
          }
          createEmbeddedView(t, e, i) {
            let r, s;
            "number" == typeof i
              ? (r = i)
              : null != i && ((r = i.index), (s = i.injector));
            const o = t.createEmbeddedView(e || {}, s);
            return this.insert(o, r), o;
          }
          createComponent(t, e, i, r, s) {
            const o =
              t &&
              !(function rl(n) {
                return "function" == typeof n;
              })(t);
            let a;
            if (o) a = e;
            else {
              const d = e || {};
              (a = d.index),
                (i = d.injector),
                (r = d.projectableNodes),
                (s = d.environmentInjector || d.ngModuleRef);
            }
            const l = o ? t : new bl($e(t)),
              c = i || this.parentInjector;
            if (!s && null == l.ngModule) {
              const h = (o ? c : this.parentInjector).get(ts, null);
              h && (s = h);
            }
            const u = l.create(c, r, void 0, s);
            return this.insert(u.hostView, a), u;
          }
          insert(t, e) {
            const i = t._lView,
              r = i[1];
            if (
              (function DR(n) {
                return _i(n[3]);
              })(i)
            ) {
              const u = this.indexOf(t);
              if (-1 !== u) this.detach(u);
              else {
                const d = i[3],
                  h = new eD(d, d[6], d[3]);
                h.detach(h.indexOf(t));
              }
            }
            const s = this._adjustIndex(e),
              o = this._lContainer;
            !(function aN(n, t, e, i) {
              const r = 10 + i,
                s = e.length;
              i > 0 && (e[r - 1][4] = t),
                i < s - 10
                  ? ((t[4] = e[r]), l0(e, 10 + i, t))
                  : (e.push(t), (t[4] = null)),
                (t[3] = e);
              const o = t[17];
              null !== o &&
                e !== o &&
                (function lN(n, t) {
                  const e = n[9];
                  t[16] !== t[3][3][16] && (n[2] = !0),
                    null === e ? (n[9] = [t]) : e.push(t);
                })(o, t);
              const a = t[19];
              null !== a && a.insertView(n), (t[2] |= 64);
            })(r, i, o, s);
            const a = _m(s, o),
              l = i[11],
              c = Lu(l, o[7]);
            return (
              null !== c &&
                (function rN(n, t, e, i, r, s) {
                  (i[0] = r), (i[6] = t), _l(n, i, e, 1, r, s);
                })(r, o[6], l, i, c, a),
              t.attachToViewContainerRef(),
              l0(lg(o), s, t),
              t
            );
          }
          move(t, e) {
            return this.insert(t, e);
          }
          indexOf(t) {
            const e = tD(this._lContainer);
            return null !== e ? e.indexOf(t) : -1;
          }
          remove(t) {
            const e = this._adjustIndex(t, -1),
              i = pm(this._lContainer, e);
            i && (Su(lg(this._lContainer), e), oC(i[1], i));
          }
          detach(t) {
            const e = this._adjustIndex(t, -1),
              i = pm(this._lContainer, e);
            return i && null != Su(lg(this._lContainer), e) ? new vl(i) : null;
          }
          _adjustIndex(t, e = 0) {
            return t ?? this.length + e;
          }
        };
      function tD(n) {
        return n[8];
      }
      function lg(n) {
        return n[8] || (n[8] = []);
      }
      function nD(n, t) {
        let e;
        const i = t[n.index];
        if (_i(i)) e = i;
        else {
          let r;
          if (8 & n.type) r = xt(i);
          else {
            const s = t[11];
            r = s.createComment("");
            const o = Jn(n, t);
            Vs(
              s,
              Lu(s, o),
              r,
              (function hN(n, t) {
                return n.nextSibling(t);
              })(s, o),
              !1
            );
          }
          (t[n.index] = e = sw(i, t, r, n)), Wu(t, e);
        }
        return new eD(e, n, t);
      }
      class cg {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new cg(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class ug {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const e = t.queries;
          if (null !== e) {
            const i =
                null !== t.contentQueries ? t.contentQueries[0] : e.length,
              r = [];
            for (let s = 0; s < i; s++) {
              const o = e.getByIndex(s);
              r.push(this.queries[o.indexInDeclarationView].clone());
            }
            return new ug(r);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let e = 0; e < this.queries.length; e++)
            null !== aD(t, e).matches && this.queries[e].setDirty();
        }
      }
      class iD {
        constructor(t, e, i = null) {
          (this.predicate = t), (this.flags = e), (this.read = i);
        }
      }
      class dg {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(t, e);
        }
        elementEnd(t) {
          for (let e = 0; e < this.queries.length; e++)
            this.queries[e].elementEnd(t);
        }
        embeddedTView(t) {
          let e = null;
          for (let i = 0; i < this.length; i++) {
            const r = null !== e ? e.length : 0,
              s = this.getByIndex(i).embeddedTView(t, r);
            s &&
              ((s.indexInDeclarationView = i),
              null !== e ? e.push(s) : (e = [s]));
          }
          return null !== e ? new dg(e) : null;
        }
        template(t, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(t, e);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class hg {
        constructor(t, e = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(t, e) {
          this.isApplyingToNode(e) && this.matchTNode(t, e);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, e) {
          this.elementStart(t, e);
        }
        embeddedTView(t, e) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, e),
              new hg(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let i = t.parent;
            for (; null !== i && 8 & i.type && i.index !== e; ) i = i.parent;
            return e === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, e) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let r = 0; r < i.length; r++) {
              const s = i[r];
              this.matchTNodeWithReadOption(t, e, _V(e, s)),
                this.matchTNodeWithReadOption(t, e, Eu(e, t, s, !1, !1));
            }
          else
            i === jn
              ? 4 & e.type && this.matchTNodeWithReadOption(t, e, -1)
              : this.matchTNodeWithReadOption(t, e, Eu(e, t, i, !1, !1));
        }
        matchTNodeWithReadOption(t, e, i) {
          if (null !== i) {
            const r = this.metadata.read;
            if (null !== r)
              if (r === ce || r === en || (r === jn && 4 & e.type))
                this.addMatch(e.index, -2);
              else {
                const s = Eu(e, t, r, !1, !1);
                null !== s && this.addMatch(e.index, s);
              }
            else this.addMatch(e.index, i);
          }
        }
        addMatch(t, e) {
          null === this.matches
            ? (this.matches = [t, e])
            : this.matches.push(t, e);
        }
      }
      function _V(n, t) {
        const e = n.localNames;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) if (e[i] === t) return e[i + 1];
        return null;
      }
      function vV(n, t, e, i) {
        return -1 === e
          ? (function yV(n, t) {
              return 11 & n.type ? Yo(n, t) : 4 & n.type ? rd(n, t) : null;
            })(t, n)
          : -2 === e
          ? (function bV(n, t, e) {
              return e === ce
                ? Yo(t, n)
                : e === jn
                ? rd(t, n)
                : e === en
                ? nD(t, n)
                : void 0;
            })(n, t, i)
          : nl(n, n[1], e, t);
      }
      function rD(n, t, e, i) {
        const r = t[19].queries[i];
        if (null === r.matches) {
          const s = n.data,
            o = e.matches,
            a = [];
          for (let l = 0; l < o.length; l += 2) {
            const c = o[l];
            a.push(c < 0 ? null : vV(t, s[c], o[l + 1], e.metadata.read));
          }
          r.matches = a;
        }
        return r.matches;
      }
      function fg(n, t, e, i) {
        const r = n.queries.getByIndex(e),
          s = r.matches;
        if (null !== s) {
          const o = rD(n, t, r, e);
          for (let a = 0; a < s.length; a += 2) {
            const l = s[a];
            if (l > 0) i.push(o[a / 2]);
            else {
              const c = s[a + 1],
                u = t[-l];
              for (let d = 10; d < u.length; d++) {
                const h = u[d];
                h[17] === h[3] && fg(h[1], h, c, i);
              }
              if (null !== u[9]) {
                const d = u[9];
                for (let h = 0; h < d.length; h++) {
                  const f = d[h];
                  fg(f[1], f, c, i);
                }
              }
            }
          }
        }
        return i;
      }
      function se(n) {
        const t = I(),
          e = Oe(),
          i = jb();
        Cp(i + 1);
        const r = aD(e, i);
        if (n.dirty && Rb(t) === (2 == (2 & r.metadata.flags))) {
          if (null === r.matches) n.reset([]);
          else {
            const s = r.crossesNgTemplate ? fg(e, t, i, []) : rD(e, t, r, i);
            n.reset(s, bF), n.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function $t(n, t, e) {
        const i = Oe();
        i.firstCreatePass &&
          (oD(i, new iD(n, t, e), -1),
          2 == (2 & t) && (i.staticViewQueries = !0)),
          sD(i, I(), t);
      }
      function Ue(n, t, e, i) {
        const r = Oe();
        if (r.firstCreatePass) {
          const s = Pt();
          oD(r, new iD(t, e, i), s.index),
            (function wV(n, t) {
              const e = n.contentQueries || (n.contentQueries = []);
              t !== (e.length ? e[e.length - 1] : -1) &&
                e.push(n.queries.length - 1, t);
            })(r, n),
            2 == (2 & e) && (r.staticContentQueries = !0);
        }
        sD(r, I(), e);
      }
      function oe() {
        return (function CV(n, t) {
          return n[19].queries[t].queryList;
        })(I(), jb());
      }
      function sD(n, t, e) {
        const i = new fa(4 == (4 & e));
        XC(n, t, i, i.destroy),
          null === t[19] && (t[19] = new ug()),
          t[19].queries.push(new cg(i));
      }
      function oD(n, t, e) {
        null === n.queries && (n.queries = new dg()),
          n.queries.track(new hg(t, e));
      }
      function aD(n, t) {
        return n.queries.getByIndex(t);
      }
      function od(...n) {}
      const ad = new R("Application Initializer");
      let ld = (() => {
        class n {
          constructor(e) {
            (this.appInits = e),
              (this.resolve = od),
              (this.reject = od),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, r) => {
                (this.resolve = i), (this.reject = r);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const e = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let r = 0; r < this.appInits.length; r++) {
                const s = this.appInits[r]();
                if (xl(s)) e.push(s);
                else if (Zm(s)) {
                  const o = new Promise((a, l) => {
                    s.subscribe({ complete: a, error: l });
                  });
                  e.push(o);
                }
              }
            Promise.all(e)
              .then(() => {
                i();
              })
              .catch((r) => {
                this.reject(r);
              }),
              0 === e.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(ad, 8));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const _a = new R("AppId", {
        providedIn: "root",
        factory: function ED() {
          return `${yg()}${yg()}${yg()}`;
        },
      });
      function yg() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const SD = new R("Platform Initializer"),
        cd = new R("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        TD = new R("appBootstrapListener"),
        Hn = new R("AnimationModuleType");
      let UV = (() => {
        class n {
          log(e) {
            console.log(e);
          }
          warn(e) {
            console.warn(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "platform" })),
          n
        );
      })();
      const Gi = new R("LocaleId", {
        providedIn: "root",
        factory: () =>
          Ln(Gi, K.Optional | K.SkipSelf) ||
          (function $V() {
            return (typeof $localize < "u" && $localize.locale) || da;
          })(),
      });
      class WV {
        constructor(t, e) {
          (this.ngModuleFactory = t), (this.componentFactories = e);
        }
      }
      let vg = (() => {
        class n {
          compileModuleSync(e) {
            return new sg(e);
          }
          compileModuleAsync(e) {
            return Promise.resolve(this.compileModuleSync(e));
          }
          compileModuleAndAllComponentsSync(e) {
            const i = this.compileModuleSync(e),
              s = Cr(On(e).declarations).reduce((o, a) => {
                const l = $e(a);
                return l && o.push(new bl(l)), o;
              }, []);
            return new WV(i, s);
          }
          compileModuleAndAllComponentsAsync(e) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(e));
          }
          clearCache() {}
          clearCacheFor(e) {}
          getModuleId(e) {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const KV = (() => Promise.resolve(0))();
      function bg(n) {
        typeof Zone > "u"
          ? KV.then(() => {
              n && n.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", n);
      }
      class Q {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new fe(!1)),
            (this.onMicrotaskEmpty = new fe(!1)),
            (this.onStable = new fe(!1)),
            (this.onError = new fe(!1)),
            typeof Zone > "u")
          )
            throw new k(908, !1);
          Zone.assertZonePatched();
          const r = this;
          if (
            ((r._nesting = 0),
            (r._outer = r._inner = Zone.current),
            Zone.AsyncStackTaggingZoneSpec)
          ) {
            const s = Zone.AsyncStackTaggingZoneSpec;
            r._inner = r._inner.fork(new s("Angular"));
          }
          Zone.TaskTrackingZoneSpec &&
            (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)),
            (r.shouldCoalesceEventChangeDetection = !i && e),
            (r.shouldCoalesceRunChangeDetection = i),
            (r.lastRequestAnimationFrameId = -1),
            (r.nativeRequestAnimationFrame = (function XV() {
              let n = Ge.requestAnimationFrame,
                t = Ge.cancelAnimationFrame;
              if (typeof Zone < "u" && n && t) {
                const e = n[Zone.__symbol__("OriginalDelegate")];
                e && (n = e);
                const i = t[Zone.__symbol__("OriginalDelegate")];
                i && (t = i);
              }
              return {
                nativeRequestAnimationFrame: n,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function JV(n) {
              const t = () => {
                !(function QV(n) {
                  n.isCheckStableRunning ||
                    -1 !== n.lastRequestAnimationFrameId ||
                    ((n.lastRequestAnimationFrameId =
                      n.nativeRequestAnimationFrame.call(Ge, () => {
                        n.fakeTopEventTask ||
                          (n.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (n.lastRequestAnimationFrameId = -1),
                                wg(n),
                                (n.isCheckStableRunning = !0),
                                Cg(n),
                                (n.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          n.fakeTopEventTask.invoke();
                      })),
                    wg(n));
                })(n);
              };
              n._inner = n._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (e, i, r, s, o, a) => {
                  try {
                    return ID(n), e.invokeTask(r, s, o, a);
                  } finally {
                    ((n.shouldCoalesceEventChangeDetection &&
                      "eventTask" === s.type) ||
                      n.shouldCoalesceRunChangeDetection) &&
                      t(),
                      OD(n);
                  }
                },
                onInvoke: (e, i, r, s, o, a, l) => {
                  try {
                    return ID(n), e.invoke(r, s, o, a, l);
                  } finally {
                    n.shouldCoalesceRunChangeDetection && t(), OD(n);
                  }
                },
                onHasTask: (e, i, r, s) => {
                  e.hasTask(r, s),
                    i === r &&
                      ("microTask" == s.change
                        ? ((n._hasPendingMicrotasks = s.microTask),
                          wg(n),
                          Cg(n))
                        : "macroTask" == s.change &&
                          (n.hasPendingMacrotasks = s.macroTask));
                },
                onHandleError: (e, i, r, s) => (
                  e.handleError(r, s),
                  n.runOutsideAngular(() => n.onError.emit(s)),
                  !1
                ),
              });
            })(r);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!Q.isInAngularZone()) throw new k(909, !1);
        }
        static assertNotInAngularZone() {
          if (Q.isInAngularZone()) throw new k(909, !1);
        }
        run(t, e, i) {
          return this._inner.run(t, e, i);
        }
        runTask(t, e, i, r) {
          const s = this._inner,
            o = s.scheduleEventTask("NgZoneEvent: " + r, t, ZV, od, od);
          try {
            return s.runTask(o, e, i);
          } finally {
            s.cancelTask(o);
          }
        }
        runGuarded(t, e, i) {
          return this._inner.runGuarded(t, e, i);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const ZV = {};
      function Cg(n) {
        if (0 == n._nesting && !n.hasPendingMicrotasks && !n.isStable)
          try {
            n._nesting++, n.onMicrotaskEmpty.emit(null);
          } finally {
            if ((n._nesting--, !n.hasPendingMicrotasks))
              try {
                n.runOutsideAngular(() => n.onStable.emit(null));
              } finally {
                n.isStable = !0;
              }
          }
      }
      function wg(n) {
        n.hasPendingMicrotasks = !!(
          n._hasPendingMicrotasks ||
          ((n.shouldCoalesceEventChangeDetection ||
            n.shouldCoalesceRunChangeDetection) &&
            -1 !== n.lastRequestAnimationFrameId)
        );
      }
      function ID(n) {
        n._nesting++,
          n.isStable && ((n.isStable = !1), n.onUnstable.emit(null));
      }
      function OD(n) {
        n._nesting--, Cg(n);
      }
      class ej {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new fe()),
            (this.onMicrotaskEmpty = new fe()),
            (this.onStable = new fe()),
            (this.onError = new fe());
        }
        run(t, e, i) {
          return t.apply(e, i);
        }
        runGuarded(t, e, i) {
          return t.apply(e, i);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, e, i, r) {
          return t.apply(e, i);
        }
      }
      const RD = new R(""),
        ud = new R("");
      let xg,
        Mg = (() => {
          class n {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                xg ||
                  ((function tj(n) {
                    xg = n;
                  })(r),
                  r.addToWindow(i)),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Q.assertNotInAngularZone(),
                        bg(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                bg(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (i) =>
                    !i.updateCb ||
                    !i.updateCb(e) ||
                    (clearTimeout(i.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, i, r) {
              let s = -1;
              i &&
                i > 0 &&
                (s = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (o) => o.timeoutId !== s
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: e, timeoutId: s, updateCb: r });
            }
            whenStable(e, i, r) {
              if (r && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(e, i, r), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(e) {
              this.registry.registerApplication(e, this);
            }
            unregisterApplication(e) {
              this.registry.unregisterApplication(e);
            }
            findProviders(e, i, r) {
              return [];
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Q), x(Dg), x(ud));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Dg = (() => {
          class n {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(e, i) {
              this._applications.set(e, i);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, i = !0) {
              return xg?.findTestabilityInTree(this, e, i) ?? null;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = F({
              token: n,
              factory: n.ɵfac,
              providedIn: "platform",
            })),
            n
          );
        })(),
        os = null;
      const PD = new R("AllowMultipleToken"),
        Eg = new R("PlatformDestroyListeners");
      class FD {
        constructor(t, e) {
          (this.name = t), (this.token = e);
        }
      }
      function LD(n, t, e = []) {
        const i = `Platform: ${t}`,
          r = new R(i);
        return (s = []) => {
          let o = Sg();
          if (!o || o.injector.get(PD, !1)) {
            const a = [...e, ...s, { provide: r, useValue: !0 }];
            n
              ? n(a)
              : (function rj(n) {
                  if (os && !os.get(PD, !1)) throw new k(400, !1);
                  os = n;
                  const t = n.get(VD);
                  (function ND(n) {
                    const t = n.get(SD, null);
                    t && t.forEach((e) => e());
                  })(n);
                })(
                  (function BD(n = [], t) {
                    return lt.create({
                      name: t,
                      providers: [
                        { provide: Yp, useValue: "platform" },
                        { provide: Eg, useValue: new Set([() => (os = null)]) },
                        ...n,
                      ],
                    });
                  })(a, i)
                );
          }
          return (function oj(n) {
            const t = Sg();
            if (!t) throw new k(401, !1);
            return t;
          })();
        };
      }
      function Sg() {
        return os?.get(VD) ?? null;
      }
      let VD = (() => {
        class n {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, i) {
            const r = (function aj(n, t) {
                let e;
                return (
                  (e =
                    "noop" === n
                      ? new ej()
                      : ("zone.js" === n ? void 0 : n) || new Q(t)),
                  e
                );
              })(
                i?.ngZone,
                (function jD(n) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!n || !n.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!n || !n.ngZoneRunCoalescing) || !1,
                  };
                })(i)
              ),
              s = [{ provide: Q, useValue: r }];
            return r.run(() => {
              const o = lt.create({
                  providers: s,
                  parent: this.injector,
                  name: e.moduleType.name,
                }),
                a = e.create(o),
                l = a.injector.get(ns, null);
              if (!l) throw new k(402, !1);
              return (
                r.runOutsideAngular(() => {
                  const c = r.onError.subscribe({
                    next: (u) => {
                      l.handleError(u);
                    },
                  });
                  a.onDestroy(() => {
                    dd(this._modules, a), c.unsubscribe();
                  });
                }),
                (function HD(n, t, e) {
                  try {
                    const i = e();
                    return xl(i)
                      ? i.catch((r) => {
                          throw (
                            (t.runOutsideAngular(() => n.handleError(r)), r)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (t.runOutsideAngular(() => n.handleError(i)), i);
                  }
                })(l, r, () => {
                  const c = a.injector.get(ld);
                  return (
                    c.runInitializers(),
                    c.donePromise.then(
                      () => (
                        (function mM(n) {
                          In(n, "Expected localeId to be defined"),
                            "string" == typeof n &&
                              (pM = n.toLowerCase().replace(/_/g, "-"));
                        })(a.injector.get(Gi, da) || da),
                        this._moduleDoBootstrap(a),
                        a
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, i = []) {
            const r = zD({}, i);
            return (function nj(n, t, e) {
              const i = new sg(e);
              return Promise.resolve(i);
            })(0, 0, e).then((s) => this.bootstrapModuleFactory(s, r));
          }
          _moduleDoBootstrap(e) {
            const i = e.injector.get(ya);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((r) => i.bootstrap(r));
            else {
              if (!e.instance.ngDoBootstrap) throw new k(403, !1);
              e.instance.ngDoBootstrap(i);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new k(404, !1);
            this._modules.slice().forEach((i) => i.destroy()),
              this._destroyListeners.forEach((i) => i());
            const e = this._injector.get(Eg, null);
            e && (e.forEach((i) => i()), e.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(lt));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "platform" })),
          n
        );
      })();
      function zD(n, t) {
        return Array.isArray(t) ? t.reduce(zD, n) : { ...n, ...t };
      }
      let ya = (() => {
        class n {
          constructor(e, i, r) {
            (this._zone = e),
              (this._injector = i),
              (this._exceptionHandler = r),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const s = new We((a) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    a.next(this._stable), a.complete();
                  });
              }),
              o = new We((a) => {
                let l;
                this._zone.runOutsideAngular(() => {
                  l = this._zone.onStable.subscribe(() => {
                    Q.assertNotInAngularZone(),
                      bg(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), a.next(!0));
                      });
                  });
                });
                const c = this._zone.onUnstable.subscribe(() => {
                  Q.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        a.next(!1);
                      }));
                });
                return () => {
                  l.unsubscribe(), c.unsubscribe();
                };
              });
            this.isStable = Xr(
              s,
              o.pipe(
                (function vb(n = {}) {
                  const {
                    connector: t = () => new $(),
                    resetOnError: e = !0,
                    resetOnComplete: i = !0,
                    resetOnRefCountZero: r = !0,
                  } = n;
                  return (s) => {
                    let o,
                      a,
                      l,
                      c = 0,
                      u = !1,
                      d = !1;
                    const h = () => {
                        a?.unsubscribe(), (a = void 0);
                      },
                      f = () => {
                        h(), (o = l = void 0), (u = d = !1);
                      },
                      p = () => {
                        const m = o;
                        f(), m?.unsubscribe();
                      };
                    return ft((m, _) => {
                      c++, !d && !u && h();
                      const v = (l = l ?? t());
                      _.add(() => {
                        c--, 0 === c && !d && !u && (a = Qf(p, r));
                      }),
                        v.subscribe(_),
                        !o &&
                          c > 0 &&
                          ((o = new Wa({
                            next: (M) => v.next(M),
                            error: (M) => {
                              (d = !0), h(), (a = Qf(f, e, M)), v.error(M);
                            },
                            complete: () => {
                              (u = !0), h(), (a = Qf(f, i)), v.complete();
                            },
                          })),
                          _n(m).subscribe(o));
                    })(s);
                  };
                })()
              )
            );
          }
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          bootstrap(e, i) {
            const r = e instanceof U0;
            if (!this._injector.get(ld).done)
              throw (
                (!r &&
                  (function ma(n) {
                    const t = $e(n) || an(n) || ln(n);
                    return null !== t && t.standalone;
                  })(e),
                new k(405, false))
              );
            let o;
            (o = r ? e : this._injector.get(Ls).resolveComponentFactory(e)),
              this.componentTypes.push(o.componentType);
            const a = (function ij(n) {
                return n.isBoundToModule;
              })(o)
                ? void 0
                : this._injector.get(qs),
              c = o.create(lt.NULL, [], i || o.selector, a),
              u = c.location.nativeElement,
              d = c.injector.get(RD, null);
            return (
              d?.registerApplication(u),
              c.onDestroy(() => {
                this.detachView(c.hostView),
                  dd(this.components, c),
                  d?.unregisterApplication(u);
              }),
              this._loadComponent(c),
              c
            );
          }
          tick() {
            if (this._runningTick) throw new k(101, !1);
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
            } catch (e) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(e)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const i = e;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(e) {
            const i = e;
            dd(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView),
              this.tick(),
              this.components.push(e),
              this._injector
                .get(TD, [])
                .concat(this._bootstrapListeners)
                .forEach((r) => r(e));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((e) => e()),
                  this._views.slice().forEach((e) => e.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(e) {
            return (
              this._destroyListeners.push(e),
              () => dd(this._destroyListeners, e)
            );
          }
          destroy() {
            if (this._destroyed) throw new k(406, !1);
            const e = this._injector;
            e.destroy && !e.destroyed && e.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(Q), x(ts), x(ns));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function dd(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      let $D = !0,
        Et = (() => {
          class n {}
          return (n.__NG_ELEMENT_ID__ = uj), n;
        })();
      function uj(n) {
        return (function dj(n, t, e) {
          if (pu(n) && !e) {
            const i = Pn(n.index, t);
            return new vl(i, i);
          }
          return 47 & n.type ? new vl(t[16], t) : null;
        })(Pt(), I(), 16 == (16 & n));
      }
      class KD {
        constructor() {}
        supports(t) {
          return Cl(t);
        }
        create(t) {
          return new _j(t);
        }
      }
      const gj = (n, t) => t;
      class _j {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || gj);
        }
        forEachItem(t) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) t(e);
        }
        forEachOperation(t) {
          let e = this._itHead,
            i = this._removalsHead,
            r = 0,
            s = null;
          for (; e || i; ) {
            const o = !i || (e && e.currentIndex < ZD(i, r, s)) ? e : i,
              a = ZD(o, r, s),
              l = o.currentIndex;
            if (o === i) r--, (i = i._nextRemoved);
            else if (((e = e._next), null == o.previousIndex)) r++;
            else {
              s || (s = []);
              const c = a - r,
                u = l - r;
              if (c != u) {
                for (let h = 0; h < c; h++) {
                  const f = h < s.length ? s[h] : (s[h] = 0),
                    p = f + h;
                  u <= p && p < c && (s[h] = f + 1);
                }
                s[o.previousIndex] = u - c;
              }
            }
            a !== l && t(o, a, l);
          }
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachMovedItem(t) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        forEachIdentityChange(t) {
          let e;
          for (
            e = this._identityChangesHead;
            null !== e;
            e = e._nextIdentityChange
          )
            t(e);
        }
        diff(t) {
          if ((null == t && (t = []), !Cl(t))) throw new k(900, !1);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let r,
            s,
            o,
            e = this._itHead,
            i = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let a = 0; a < this.length; a++)
              (s = t[a]),
                (o = this._trackByFn(a, s)),
                null !== e && Object.is(e.trackById, o)
                  ? (i && (e = this._verifyReinsertion(e, s, o, a)),
                    Object.is(e.item, s) || this._addIdentityChange(e, s))
                  : ((e = this._mismatch(e, s, o, a)), (i = !0)),
                (e = e._next);
          } else
            (r = 0),
              (function $L(n, t) {
                if (Array.isArray(n))
                  for (let e = 0; e < n.length; e++) t(n[e]);
                else {
                  const e = n[Hs()]();
                  let i;
                  for (; !(i = e.next()).done; ) t(i.value);
                }
              })(t, (a) => {
                (o = this._trackByFn(r, a)),
                  null !== e && Object.is(e.trackById, o)
                    ? (i && (e = this._verifyReinsertion(e, a, o, r)),
                      Object.is(e.item, a) || this._addIdentityChange(e, a))
                    : ((e = this._mismatch(e, a, o, r)), (i = !0)),
                  (e = e._next),
                  r++;
              }),
              (this.length = r);
          return this._truncate(e), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, e, i, r) {
          let s;
          return (
            null === t ? (s = this._itTail) : ((s = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._reinsertAfter(t, s, r))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, r))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._moveAfter(t, s, r))
              : (t = this._addAfter(new yj(e, i), s, r)),
            t
          );
        }
        _verifyReinsertion(t, e, i, r) {
          let s =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== s
              ? (t = this._reinsertAfter(s, t._prev, r))
              : t.currentIndex != r &&
                ((t.currentIndex = r), this._addToMoves(t, r)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const e = t._next;
            this._addToRemovals(this._unlink(t)), (t = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, e, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const r = t._prevRemoved,
            s = t._nextRemoved;
          return (
            null === r ? (this._removalsHead = s) : (r._nextRemoved = s),
            null === s ? (this._removalsTail = r) : (s._prevRemoved = r),
            this._insertAfter(t, e, i),
            this._addToMoves(t, i),
            t
          );
        }
        _moveAfter(t, e, i) {
          return (
            this._unlink(t),
            this._insertAfter(t, e, i),
            this._addToMoves(t, i),
            t
          );
        }
        _addAfter(t, e, i) {
          return (
            this._insertAfter(t, e, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, e, i) {
          const r = null === e ? this._itHead : e._next;
          return (
            (t._next = r),
            (t._prev = e),
            null === r ? (this._itTail = t) : (r._prev = t),
            null === e ? (this._itHead = t) : (e._next = t),
            null === this._linkedRecords && (this._linkedRecords = new XD()),
            this._linkedRecords.put(t),
            (t.currentIndex = i),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const e = t._prev,
            i = t._next;
          return (
            null === e ? (this._itHead = i) : (e._next = i),
            null === i ? (this._itTail = e) : (i._prev = e),
            t
          );
        }
        _addToMoves(t, e) {
          return (
            t.previousIndex === e ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new XD()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, e) {
          return (
            (t.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class yj {
        constructor(t, e) {
          (this.item = t),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class vj {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, e) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === e || e <= i.currentIndex) &&
              Object.is(i.trackById, t)
            )
              return i;
          return null;
        }
        remove(t) {
          const e = t._prevDup,
            i = t._nextDup;
          return (
            null === e ? (this._head = i) : (e._nextDup = i),
            null === i ? (this._tail = e) : (i._prevDup = e),
            null === this._head
          );
        }
      }
      class XD {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const e = t.trackById;
          let i = this.map.get(e);
          i || ((i = new vj()), this.map.set(e, i)), i.add(t);
        }
        get(t, e) {
          const r = this.map.get(t);
          return r ? r.get(t, e) : null;
        }
        remove(t) {
          const e = t.trackById;
          return this.map.get(e).remove(t) && this.map.delete(e), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function ZD(n, t, e) {
        const i = n.previousIndex;
        if (null === i) return i;
        let r = 0;
        return e && i < e.length && (r = e[i]), i + t + r;
      }
      class QD {
        constructor() {}
        supports(t) {
          return t instanceof Map || Ym(t);
        }
        create() {
          return new bj();
        }
      }
      class bj {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) t(e);
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachChangedItem(t) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || Ym(t))) throw new k(900, !1);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (i, r) => {
              if (e && e.key === r)
                this._maybeAddToChanges(e, i),
                  (this._appendAfter = e),
                  (e = e._next);
              else {
                const s = this._getOrCreateRecordForKey(r, i);
                e = this._insertBeforeOrAppend(e, s);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let i = e; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, e) {
          if (t) {
            const i = t._prev;
            return (
              (e._next = t),
              (e._prev = i),
              (t._prev = e),
              i && (i._next = e),
              t === this._mapHead && (this._mapHead = e),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = e), (e._prev = this._appendAfter))
              : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(t, e) {
          if (this._records.has(t)) {
            const r = this._records.get(t);
            this._maybeAddToChanges(r, e);
            const s = r._prev,
              o = r._next;
            return (
              s && (s._next = o),
              o && (o._prev = s),
              (r._next = null),
              (r._prev = null),
              r
            );
          }
          const i = new Cj(t);
          return (
            this._records.set(t, i),
            (i.currentValue = e),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, e) {
          Object.is(e, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = e),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, e) {
          t instanceof Map
            ? t.forEach(e)
            : Object.keys(t).forEach((i) => e(t[i], i));
        }
      }
      class Cj {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function JD() {
        return new Gs([new KD()]);
      }
      let Gs = (() => {
        class n {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (null != i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new n(e);
          }
          static extend(e) {
            return {
              provide: n,
              useFactory: (i) => n.create(e, i || JD()),
              deps: [[n, new $o(), new Bi()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (null != i) return i;
            throw new k(901, !1);
          }
        }
        return (n.ɵprov = F({ token: n, providedIn: "root", factory: JD })), n;
      })();
      function ex() {
        return new Ll([new QD()]);
      }
      let Ll = (() => {
        class n {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new n(e);
          }
          static extend(e) {
            return {
              provide: n,
              useFactory: (i) => n.create(e, i || ex()),
              deps: [[n, new $o(), new Bi()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (i) return i;
            throw new k(901, !1);
          }
        }
        return (n.ɵprov = F({ token: n, providedIn: "root", factory: ex })), n;
      })();
      const Dj = LD(null, "core", []);
      let xj = (() => {
        class n {
          constructor(e) {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(ya));
          }),
          (n.ɵmod = re({ type: n })),
          (n.ɵinj = ne({})),
          n
        );
      })();
      function Er(n) {
        return "boolean" == typeof n ? n : null != n && "false" !== n;
      }
      let pd = null;
      function Yi() {
        return pd;
      }
      const ae = new R("DocumentToken");
      let md = (() => {
        class n {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = F({
            token: n,
            factory: function () {
              return (function Aj() {
                return x(tx);
              })();
            },
            providedIn: "platform",
          })),
          n
        );
      })();
      const kj = new R("Location Initialized");
      let tx = (() => {
        class n extends md {
          constructor(e) {
            super(), (this._doc = e), this._init();
          }
          _init() {
            (this.location = window.location), (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return Yi().getBaseHref(this._doc);
          }
          onPopState(e) {
            const i = Yi().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("popstate", e, !1),
              () => i.removeEventListener("popstate", e)
            );
          }
          onHashChange(e) {
            const i = Yi().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("hashchange", e, !1),
              () => i.removeEventListener("hashchange", e)
            );
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(e) {
            this.location.pathname = e;
          }
          pushState(e, i, r) {
            nx() ? this._history.pushState(e, i, r) : (this.location.hash = r);
          }
          replaceState(e, i, r) {
            nx()
              ? this._history.replaceState(e, i, r)
              : (this.location.hash = r);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(e = 0) {
            this._history.go(e);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(ae));
          }),
          (n.ɵprov = F({
            token: n,
            factory: function () {
              return (function Ij() {
                return new tx(x(ae));
              })();
            },
            providedIn: "platform",
          })),
          n
        );
      })();
      function nx() {
        return !!window.history.pushState;
      }
      function Og(n, t) {
        if (0 == n.length) return t;
        if (0 == t.length) return n;
        let e = 0;
        return (
          n.endsWith("/") && e++,
          t.startsWith("/") && e++,
          2 == e ? n + t.substring(1) : 1 == e ? n + t : n + "/" + t
        );
      }
      function ix(n) {
        const t = n.match(/#|\?|$/),
          e = (t && t.index) || n.length;
        return n.slice(0, e - ("/" === n[e - 1] ? 1 : 0)) + n.slice(e);
      }
      function Sr(n) {
        return n && "?" !== n[0] ? "?" + n : n;
      }
      let Ys = (() => {
        class n {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = F({
            token: n,
            factory: function () {
              return (function Oj() {
                const n = x(ae).location;
                return new sx(x(md), (n && n.origin) || "");
              })();
            },
            providedIn: "root",
          })),
          n
        );
      })();
      const rx = new R("appBaseHref");
      let sx = (() => {
          class n extends Ys {
            constructor(e, i) {
              if (
                (super(),
                (this._platformLocation = e),
                (this._removeListenerFns = []),
                null == i && (i = this._platformLocation.getBaseHrefFromDOM()),
                null == i)
              )
                throw new Error(
                  "No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document."
                );
              this._baseHref = i;
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return Og(this._baseHref, e);
            }
            path(e = !1) {
              const i =
                  this._platformLocation.pathname +
                  Sr(this._platformLocation.search),
                r = this._platformLocation.hash;
              return r && e ? `${i}${r}` : i;
            }
            pushState(e, i, r, s) {
              const o = this.prepareExternalUrl(r + Sr(s));
              this._platformLocation.pushState(e, i, o);
            }
            replaceState(e, i, r, s) {
              const o = this.prepareExternalUrl(r + Sr(s));
              this._platformLocation.replaceState(e, i, o);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(md), x(rx, 8));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Rj = (() => {
          class n extends Ys {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != i && (this._baseHref = i);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let i = this._platformLocation.hash;
              return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i;
            }
            prepareExternalUrl(e) {
              const i = Og(this._baseHref, e);
              return i.length > 0 ? "#" + i : i;
            }
            pushState(e, i, r, s) {
              let o = this.prepareExternalUrl(r + Sr(s));
              0 == o.length && (o = this._platformLocation.pathname),
                this._platformLocation.pushState(e, i, o);
            }
            replaceState(e, i, r, s) {
              let o = this.prepareExternalUrl(r + Sr(s));
              0 == o.length && (o = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, i, o);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(md), x(rx, 8));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Bl = (() => {
          class n {
            constructor(e) {
              (this._subject = new fe()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = e);
              const i = this._locationStrategy.getBaseHref();
              (this._baseHref = ix(ox(i))),
                this._locationStrategy.onPopState((r) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: r.state,
                    type: r.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(e = !1) {
              return this.normalize(this._locationStrategy.path(e));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(e, i = "") {
              return this.path() == this.normalize(e + Sr(i));
            }
            normalize(e) {
              return n.stripTrailingSlash(
                (function Fj(n, t) {
                  return n && t.startsWith(n) ? t.substring(n.length) : t;
                })(this._baseHref, ox(e))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._locationStrategy.prepareExternalUrl(e)
              );
            }
            go(e, i = "", r = null) {
              this._locationStrategy.pushState(r, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Sr(i)),
                  r
                );
            }
            replaceState(e, i = "", r = null) {
              this._locationStrategy.replaceState(r, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Sr(i)),
                  r
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(e = 0) {
              this._locationStrategy.historyGo?.(e);
            }
            onUrlChange(e) {
              return (
                this._urlChangeListeners.push(e),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  })),
                () => {
                  const i = this._urlChangeListeners.indexOf(e);
                  this._urlChangeListeners.splice(i, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(e = "", i) {
              this._urlChangeListeners.forEach((r) => r(e, i));
            }
            subscribe(e, i, r) {
              return this._subject.subscribe({
                next: e,
                error: i,
                complete: r,
              });
            }
          }
          return (
            (n.normalizeQueryParams = Sr),
            (n.joinWithSlash = Og),
            (n.stripTrailingSlash = ix),
            (n.ɵfac = function (e) {
              return new (e || n)(x(Ys));
            }),
            (n.ɵprov = F({
              token: n,
              factory: function () {
                return (function Pj() {
                  return new Bl(x(Ys));
                })();
              },
              providedIn: "root",
            })),
            n
          );
        })();
      function ox(n) {
        return n.replace(/\/index.html$/, "");
      }
      function mx(n, t) {
        t = encodeURIComponent(t);
        for (const e of n.split(";")) {
          const i = e.indexOf("="),
            [r, s] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
          if (r.trim() === t) return decodeURIComponent(s);
        }
        return null;
      }
      let zg = (() => {
        class n {
          constructor(e, i, r, s) {
            (this._iterableDiffers = e),
              (this._keyValueDiffers = i),
              (this._ngEl = r),
              (this._renderer = s),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._initialClasses = []),
              (this._rawClass = null);
          }
          set klass(e) {
            this._removeClasses(this._initialClasses),
              (this._initialClasses =
                "string" == typeof e ? e.split(/\s+/) : []),
              this._applyClasses(this._initialClasses),
              this._applyClasses(this._rawClass);
          }
          set ngClass(e) {
            this._removeClasses(this._rawClass),
              this._applyClasses(this._initialClasses),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._rawClass = "string" == typeof e ? e.split(/\s+/) : e),
              this._rawClass &&
                (Cl(this._rawClass)
                  ? (this._iterableDiffer = this._iterableDiffers
                      .find(this._rawClass)
                      .create())
                  : (this._keyValueDiffer = this._keyValueDiffers
                      .find(this._rawClass)
                      .create()));
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const e = this._iterableDiffer.diff(this._rawClass);
              e && this._applyIterableChanges(e);
            } else if (this._keyValueDiffer) {
              const e = this._keyValueDiffer.diff(this._rawClass);
              e && this._applyKeyValueChanges(e);
            }
          }
          _applyKeyValueChanges(e) {
            e.forEachAddedItem((i) => this._toggleClass(i.key, i.currentValue)),
              e.forEachChangedItem((i) =>
                this._toggleClass(i.key, i.currentValue)
              ),
              e.forEachRemovedItem((i) => {
                i.previousValue && this._toggleClass(i.key, !1);
              });
          }
          _applyIterableChanges(e) {
            e.forEachAddedItem((i) => {
              if ("string" != typeof i.item)
                throw new Error(
                  `NgClass can only toggle CSS classes expressed as strings, got ${Qe(
                    i.item
                  )}`
                );
              this._toggleClass(i.item, !0);
            }),
              e.forEachRemovedItem((i) => this._toggleClass(i.item, !1));
          }
          _applyClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((i) => this._toggleClass(i, !0))
                : Object.keys(e).forEach((i) => this._toggleClass(i, !!e[i])));
          }
          _removeClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((i) => this._toggleClass(i, !1))
                : Object.keys(e).forEach((i) => this._toggleClass(i, !1)));
          }
          _toggleClass(e, i) {
            (e = e.trim()) &&
              e.split(/\s+/g).forEach((r) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, r)
                  : this._renderer.removeClass(this._ngEl.nativeElement, r);
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(Gs), g(Ll), g(ce), g(br));
          }),
          (n.ɵdir = N({
            type: n,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
            standalone: !0,
          })),
          n
        );
      })();
      class vH {
        constructor(t, e, i, r) {
          (this.$implicit = t),
            (this.ngForOf = e),
            (this.index = i),
            (this.count = r);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let Mn = (() => {
        class n {
          constructor(e, i, r) {
            (this._viewContainer = e),
              (this._template = i),
              (this._differs = r),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            this._trackByFn = e;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const e = this._ngForOf;
              !this._differ &&
                e &&
                (this._differ = this._differs
                  .find(e)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const i = this._viewContainer;
            e.forEachOperation((r, s, o) => {
              if (null == r.previousIndex)
                i.createEmbeddedView(
                  this._template,
                  new vH(r.item, this._ngForOf, -1, -1),
                  null === o ? void 0 : o
                );
              else if (null == o) i.remove(null === s ? void 0 : s);
              else if (null !== s) {
                const a = i.get(s);
                i.move(a, o), yx(a, r);
              }
            });
            for (let r = 0, s = i.length; r < s; r++) {
              const a = i.get(r).context;
              (a.index = r), (a.count = s), (a.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((r) => {
              yx(i.get(r.currentIndex), r);
            });
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(en), g(jn), g(Gs));
          }),
          (n.ɵdir = N({
            type: n,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
            standalone: !0,
          })),
          n
        );
      })();
      function yx(n, t) {
        n.context.$implicit = t.item;
      }
      let At = (() => {
        class n {
          constructor(e, i) {
            (this._viewContainer = e),
              (this._context = new CH()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            vx("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            vx("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(en), g(jn));
          }),
          (n.ɵdir = N({
            type: n,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          })),
          n
        );
      })();
      class CH {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function vx(n, t) {
        if (t && !t.createEmbeddedView)
          throw new Error(
            `${n} must be a TemplateRef, but received '${Qe(t)}'.`
          );
      }
      class Ug {
        constructor(t, e) {
          (this._viewContainerRef = t),
            (this._templateRef = e),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(t) {
          t && !this._created
            ? this.create()
            : !t && this._created && this.destroy();
        }
      }
      let Hl = (() => {
          class n {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews || (this._defaultViews = []),
                this._defaultViews.push(e);
            }
            _matchCase(e) {
              const i = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || i),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                i
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (let i = 0; i < this._defaultViews.length; i++)
                  this._defaultViews[i].enforceState(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
              standalone: !0,
            })),
            n
          );
        })(),
        $g = (() => {
          class n {
            constructor(e, i, r) {
              (this.ngSwitch = r), r._addCase(), (this._view = new Ug(e, i));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(en), g(jn), g(Hl, 9));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
              standalone: !0,
            })),
            n
          );
        })(),
        bx = (() => {
          class n {
            constructor(e, i, r) {
              r._addDefault(new Ug(e, i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(en), g(jn), g(Hl, 9));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [["", "ngSwitchDefault", ""]],
              standalone: !0,
            })),
            n
          );
        })();
      class xH {
        createSubscription(t, e) {
          return t.subscribe({
            next: e,
            error: (i) => {
              throw i;
            },
          });
        }
        dispose(t) {
          t.unsubscribe();
        }
      }
      class EH {
        createSubscription(t, e) {
          return t.then(e, (i) => {
            throw i;
          });
        }
        dispose(t) {}
      }
      const SH = new EH(),
        TH = new xH();
      let as = (() => {
          class n {
            constructor(e) {
              (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null),
                (this._strategy = null),
                (this._ref = e);
            }
            ngOnDestroy() {
              this._subscription && this._dispose(), (this._ref = null);
            }
            transform(e) {
              return this._obj
                ? e !== this._obj
                  ? (this._dispose(), this.transform(e))
                  : this._latestValue
                : (e && this._subscribe(e), this._latestValue);
            }
            _subscribe(e) {
              (this._obj = e),
                (this._strategy = this._selectStrategy(e)),
                (this._subscription = this._strategy.createSubscription(
                  e,
                  (i) => this._updateLatestValue(e, i)
                ));
            }
            _selectStrategy(e) {
              if (xl(e)) return SH;
              if (Mw(e)) return TH;
              throw (function xi(n, t) {
                return new k(2100, !1);
              })();
            }
            _dispose() {
              this._strategy.dispose(this._subscription),
                (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null);
            }
            _updateLatestValue(e, i) {
              e === this._obj &&
                ((this._latestValue = i), this._ref.markForCheck());
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Et, 16));
            }),
            (n.ɵpipe = yn({
              name: "async",
              type: n,
              pure: !1,
              standalone: !0,
            })),
            n
          );
        })(),
        Ki = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({})),
            n
          );
        })();
      const Mx = "browser";
      let KH = (() => {
        class n {}
        return (
          (n.ɵprov = F({
            token: n,
            providedIn: "root",
            factory: () => new XH(x(ae), window),
          })),
          n
        );
      })();
      class XH {
        constructor(t, e) {
          (this.document = t), (this.window = e), (this.offset = () => [0, 0]);
        }
        setOffset(t) {
          this.offset = Array.isArray(t) ? () => t : t;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(t) {
          this.supportsScrolling() && this.window.scrollTo(t[0], t[1]);
        }
        scrollToAnchor(t) {
          if (!this.supportsScrolling()) return;
          const e = (function ZH(n, t) {
            const e = n.getElementById(t) || n.getElementsByName(t)[0];
            if (e) return e;
            if (
              "function" == typeof n.createTreeWalker &&
              n.body &&
              (n.body.createShadowRoot || n.body.attachShadow)
            ) {
              const i = n.createTreeWalker(n.body, NodeFilter.SHOW_ELEMENT);
              let r = i.currentNode;
              for (; r; ) {
                const s = r.shadowRoot;
                if (s) {
                  const o =
                    s.getElementById(t) || s.querySelector(`[name="${t}"]`);
                  if (o) return o;
                }
                r = i.nextNode();
              }
            }
            return null;
          })(this.document, t);
          e && (this.scrollToElement(e), e.focus());
        }
        setHistoryScrollRestoration(t) {
          if (this.supportScrollRestoration()) {
            const e = this.window.history;
            e && e.scrollRestoration && (e.scrollRestoration = t);
          }
        }
        scrollToElement(t) {
          const e = t.getBoundingClientRect(),
            i = e.left + this.window.pageXOffset,
            r = e.top + this.window.pageYOffset,
            s = this.offset();
          this.window.scrollTo(i - s[0], r - s[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const t =
              Dx(this.window.history) ||
              Dx(Object.getPrototypeOf(this.window.history));
            return !(!t || (!t.writable && !t.set));
          } catch {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      function Dx(n) {
        return Object.getOwnPropertyDescriptor(n, "scrollRestoration");
      }
      class xx {}
      class Gg extends class QH extends class Tj {} {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      } {
        static makeCurrent() {
          !(function Sj(n) {
            pd || (pd = n);
          })(new Gg());
        }
        onAndCancel(t, e, i) {
          return (
            t.addEventListener(e, i, !1),
            () => {
              t.removeEventListener(e, i, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          t.parentNode && t.parentNode.removeChild(t);
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return "window" === e
            ? window
            : "document" === e
            ? t
            : "body" === e
            ? t.body
            : null;
        }
        getBaseHref(t) {
          const e = (function JH() {
            return (
              (zl = zl || document.querySelector("base")),
              zl ? zl.getAttribute("href") : null
            );
          })();
          return null == e
            ? null
            : (function ez(n) {
                (xd = xd || document.createElement("a")),
                  xd.setAttribute("href", n);
                const t = xd.pathname;
                return "/" === t.charAt(0) ? t : `/${t}`;
              })(e);
        }
        resetBaseElement() {
          zl = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(t) {
          return mx(document.cookie, t);
        }
      }
      let xd,
        zl = null;
      const Ex = new R("TRANSITION_ID"),
        nz = [
          {
            provide: ad,
            useFactory: function tz(n, t, e) {
              return () => {
                e.get(ld).donePromise.then(() => {
                  const i = Yi(),
                    r = t.querySelectorAll(`style[ng-transition="${n}"]`);
                  for (let s = 0; s < r.length; s++) i.remove(r[s]);
                });
              };
            },
            deps: [Ex, ae, lt],
            multi: !0,
          },
        ];
      let rz = (() => {
        class n {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Ed = new R("EventManagerPlugins");
      let Sd = (() => {
        class n {
          constructor(e, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              e.forEach((r) => (r.manager = this)),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, i, r) {
            return this._findPluginFor(i).addEventListener(e, i, r);
          }
          addGlobalEventListener(e, i, r) {
            return this._findPluginFor(i).addGlobalEventListener(e, i, r);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            const i = this._eventNameToPlugin.get(e);
            if (i) return i;
            const r = this._plugins;
            for (let s = 0; s < r.length; s++) {
              const o = r[s];
              if (o.supports(e)) return this._eventNameToPlugin.set(e, o), o;
            }
            throw new Error(`No event manager plugin found for event ${e}`);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(Ed), x(Q));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Sx {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, i) {
          const r = Yi().getGlobalEventTarget(this._doc, t);
          if (!r)
            throw new Error(`Unsupported event target ${r} for event ${e}`);
          return this.addEventListener(r, e, i);
        }
      }
      let Tx = (() => {
          class n {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(e) {
              const i = new Set();
              e.forEach((r) => {
                this._stylesSet.has(r) || (this._stylesSet.add(r), i.add(r));
              }),
                this.onStylesAdded(i);
            }
            onStylesAdded(e) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Ul = (() => {
          class n extends Tx {
            constructor(e) {
              super(),
                (this._doc = e),
                (this._hostNodes = new Map()),
                this._hostNodes.set(e.head, []);
            }
            _addStylesToHost(e, i, r) {
              e.forEach((s) => {
                const o = this._doc.createElement("style");
                (o.textContent = s), r.push(i.appendChild(o));
              });
            }
            addHost(e) {
              const i = [];
              this._addStylesToHost(this._stylesSet, e, i),
                this._hostNodes.set(e, i);
            }
            removeHost(e) {
              const i = this._hostNodes.get(e);
              i && i.forEach(Ax), this._hostNodes.delete(e);
            }
            onStylesAdded(e) {
              this._hostNodes.forEach((i, r) => {
                this._addStylesToHost(e, r, i);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((e) => e.forEach(Ax));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(ae));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      function Ax(n) {
        Yi().remove(n);
      }
      const Yg = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        Kg = /%COMP%/g;
      function Td(n, t, e) {
        for (let i = 0; i < t.length; i++) {
          let r = t[i];
          Array.isArray(r) ? Td(n, r, e) : ((r = r.replace(Kg, n)), e.push(r));
        }
        return e;
      }
      function Ox(n) {
        return (t) => {
          if ("__ngUnwrap__" === t) return n;
          !1 === n(t) && (t.preventDefault(), (t.returnValue = !1));
        };
      }
      let Ad = (() => {
        class n {
          constructor(e, i, r) {
            (this.eventManager = e),
              (this.sharedStylesHost = i),
              (this.appId = r),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new Xg(e));
          }
          createRenderer(e, i) {
            if (!e || !i) return this.defaultRenderer;
            switch (i.encapsulation) {
              case mi.Emulated: {
                let r = this.rendererByCompId.get(i.id);
                return (
                  r ||
                    ((r = new uz(
                      this.eventManager,
                      this.sharedStylesHost,
                      i,
                      this.appId
                    )),
                    this.rendererByCompId.set(i.id, r)),
                  r.applyToHost(e),
                  r
                );
              }
              case 1:
              case mi.ShadowDom:
                return new dz(this.eventManager, this.sharedStylesHost, e, i);
              default:
                if (!this.rendererByCompId.has(i.id)) {
                  const r = Td(i.id, i.styles, []);
                  this.sharedStylesHost.addStyles(r),
                    this.rendererByCompId.set(i.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(Sd), x(Ul), x(_a));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Xg {
        constructor(t) {
          (this.eventManager = t),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(t, e) {
          return e
            ? document.createElementNS(Yg[e] || e, t)
            : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          (Px(t) ? t.content : t).appendChild(e);
        }
        insertBefore(t, e, i) {
          t && (Px(t) ? t.content : t).insertBefore(e, i);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let i = "string" == typeof t ? document.querySelector(t) : t;
          if (!i)
            throw new Error(`The selector "${t}" did not match any elements`);
          return e || (i.textContent = ""), i;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, i, r) {
          if (r) {
            e = r + ":" + e;
            const s = Yg[r];
            s ? t.setAttributeNS(s, e, i) : t.setAttribute(e, i);
          } else t.setAttribute(e, i);
        }
        removeAttribute(t, e, i) {
          if (i) {
            const r = Yg[i];
            r ? t.removeAttributeNS(r, e) : t.removeAttribute(`${i}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, i, r) {
          r & (bn.DashCase | bn.Important)
            ? t.style.setProperty(e, i, r & bn.Important ? "important" : "")
            : (t.style[e] = i);
        }
        removeStyle(t, e, i) {
          i & bn.DashCase ? t.style.removeProperty(e) : (t.style[e] = "");
        }
        setProperty(t, e, i) {
          t[e] = i;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, i) {
          return "string" == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, Ox(i))
            : this.eventManager.addEventListener(t, e, Ox(i));
        }
      }
      function Px(n) {
        return "TEMPLATE" === n.tagName && void 0 !== n.content;
      }
      class uz extends Xg {
        constructor(t, e, i, r) {
          super(t), (this.component = i);
          const s = Td(r + "-" + i.id, i.styles, []);
          e.addStyles(s),
            (this.contentAttr = (function az(n) {
              return "_ngcontent-%COMP%".replace(Kg, n);
            })(r + "-" + i.id)),
            (this.hostAttr = (function lz(n) {
              return "_nghost-%COMP%".replace(Kg, n);
            })(r + "-" + i.id));
        }
        applyToHost(t) {
          super.setAttribute(t, this.hostAttr, "");
        }
        createElement(t, e) {
          const i = super.createElement(t, e);
          return super.setAttribute(i, this.contentAttr, ""), i;
        }
      }
      class dz extends Xg {
        constructor(t, e, i, r) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const s = Td(r.id, r.styles, []);
          for (let o = 0; o < s.length; o++) {
            const a = document.createElement("style");
            (a.textContent = s[o]), this.shadowRoot.appendChild(a);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, i) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, i);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(t))
          );
        }
      }
      let hz = (() => {
        class n extends Sx {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, i, r) {
            return (
              e.addEventListener(i, r, !1),
              () => this.removeEventListener(e, i, r)
            );
          }
          removeEventListener(e, i, r) {
            return e.removeEventListener(i, r);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(ae));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Fx = ["alt", "control", "meta", "shift"],
        pz = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        Nx = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        mz = {
          alt: (n) => n.altKey,
          control: (n) => n.ctrlKey,
          meta: (n) => n.metaKey,
          shift: (n) => n.shiftKey,
        };
      let gz = (() => {
        class n extends Sx {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return null != n.parseEventName(e);
          }
          addEventListener(e, i, r) {
            const s = n.parseEventName(i),
              o = n.eventCallback(s.fullKey, r, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => Yi().onAndCancel(e, s.domEventName, o));
          }
          static parseEventName(e) {
            const i = e.toLowerCase().split("."),
              r = i.shift();
            if (0 === i.length || ("keydown" !== r && "keyup" !== r))
              return null;
            const s = n._normalizeKey(i.pop());
            let o = "";
            if (
              (Fx.forEach((l) => {
                const c = i.indexOf(l);
                c > -1 && (i.splice(c, 1), (o += l + "."));
              }),
              (o += s),
              0 != i.length || 0 === s.length)
            )
              return null;
            const a = {};
            return (a.domEventName = r), (a.fullKey = o), a;
          }
          static getEventFullKey(e) {
            let i = "",
              r = (function _z(n) {
                let t = n.key;
                if (null == t) {
                  if (((t = n.keyIdentifier), null == t)) return "Unidentified";
                  t.startsWith("U+") &&
                    ((t = String.fromCharCode(parseInt(t.substring(2), 16))),
                    3 === n.location && Nx.hasOwnProperty(t) && (t = Nx[t]));
                }
                return pz[t] || t;
              })(e);
            return (
              (r = r.toLowerCase()),
              " " === r ? (r = "space") : "." === r && (r = "dot"),
              Fx.forEach((s) => {
                s != r && (0, mz[s])(e) && (i += s + ".");
              }),
              (i += r),
              i
            );
          }
          static eventCallback(e, i, r) {
            return (s) => {
              n.getEventFullKey(s) === e && r.runGuarded(() => i(s));
            };
          }
          static _normalizeKey(e) {
            return "esc" === e ? "escape" : e;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(ae));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Cz = LD(Dj, "browser", [
          { provide: cd, useValue: Mx },
          {
            provide: SD,
            useValue: function yz() {
              Gg.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: ae,
            useFactory: function bz() {
              return (
                (function AP(n) {
                  Lp = n;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        Bx = new R(""),
        Vx = [
          {
            provide: ud,
            useClass: class iz {
              addToWindow(t) {
                (Ge.getAngularTestability = (i, r = !0) => {
                  const s = t.findTestabilityInTree(i, r);
                  if (null == s)
                    throw new Error("Could not find testability for element.");
                  return s;
                }),
                  (Ge.getAllAngularTestabilities = () =>
                    t.getAllTestabilities()),
                  (Ge.getAllAngularRootElements = () => t.getAllRootElements()),
                  Ge.frameworkStabilizers || (Ge.frameworkStabilizers = []),
                  Ge.frameworkStabilizers.push((i) => {
                    const r = Ge.getAllAngularTestabilities();
                    let s = r.length,
                      o = !1;
                    const a = function (l) {
                      (o = o || l), s--, 0 == s && i(o);
                    };
                    r.forEach(function (l) {
                      l.whenStable(a);
                    });
                  });
              }
              findTestabilityInTree(t, e, i) {
                return null == e
                  ? null
                  : t.getTestability(e) ??
                      (i
                        ? Yi().isShadowRoot(e)
                          ? this.findTestabilityInTree(t, e.host, !0)
                          : this.findTestabilityInTree(t, e.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: RD, useClass: Mg, deps: [Q, Dg, ud] },
          { provide: Mg, useClass: Mg, deps: [Q, Dg, ud] },
        ],
        jx = [
          { provide: Yp, useValue: "root" },
          {
            provide: ns,
            useFactory: function vz() {
              return new ns();
            },
            deps: [],
          },
          { provide: Ed, useClass: hz, multi: !0, deps: [ae, Q, cd] },
          { provide: Ed, useClass: gz, multi: !0, deps: [ae] },
          { provide: Ad, useClass: Ad, deps: [Sd, Ul, _a] },
          { provide: pl, useExisting: Ad },
          { provide: Tx, useExisting: Ul },
          { provide: Ul, useClass: Ul, deps: [ae] },
          { provide: Sd, useClass: Sd, deps: [Ed, Q] },
          { provide: xx, useClass: rz, deps: [] },
          [],
        ];
      let Hx = (() => {
          class n {
            constructor(e) {}
            static withServerTransition(e) {
              return {
                ngModule: n,
                providers: [
                  { provide: _a, useValue: e.appId },
                  { provide: Ex, useExisting: _a },
                  nz,
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Bx, 12));
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ providers: [...jx, ...Vx], imports: [Ki, xj] })),
            n
          );
        })(),
        zx = (() => {
          class n {
            constructor(e) {
              this._doc = e;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(e) {
              this._doc.title = e || "";
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(ae));
            }),
            (n.ɵprov = F({
              token: n,
              factory: function (e) {
                let i = null;
                return (
                  (i = e
                    ? new e()
                    : (function Mz() {
                        return new zx(x(ae));
                      })()),
                  i
                );
              },
              providedIn: "root",
            })),
            n
          );
        })();
      typeof window < "u" && window;
      class Gx {}
      const Ar = "*";
      function kr(n, t) {
        return { type: 7, name: n, definitions: t, options: {} };
      }
      function Dn(n, t = null) {
        return { type: 4, styles: t, timings: n };
      }
      function Yx(n, t = null) {
        return { type: 3, steps: n, options: t };
      }
      function Kx(n, t = null) {
        return { type: 2, steps: n, options: t };
      }
      function Ke(n) {
        return { type: 6, styles: n, offset: null };
      }
      function xn(n, t, e) {
        return { type: 0, name: n, styles: t, options: e };
      }
      function pn(n, t, e = null) {
        return { type: 1, expr: n, animation: t, options: e };
      }
      function e_(n = null) {
        return { type: 9, options: n };
      }
      function t_(n, t, e = null) {
        return { type: 11, selector: n, animation: t, options: e };
      }
      function Xx(n) {
        Promise.resolve(null).then(n);
      }
      class $l {
        constructor(t = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = t + e);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        onStart(t) {
          this._originalOnStartFns.push(t), this._onStartFns.push(t);
        }
        onDone(t) {
          this._originalOnDoneFns.push(t), this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          Xx(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(t) {
          this._position = this.totalTime ? t * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class Zx {
        constructor(t) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = t);
          let e = 0,
            i = 0,
            r = 0;
          const s = this.players.length;
          0 == s
            ? Xx(() => this._onFinish())
            : this.players.forEach((o) => {
                o.onDone(() => {
                  ++e == s && this._onFinish();
                }),
                  o.onDestroy(() => {
                    ++i == s && this._onDestroy();
                  }),
                  o.onStart(() => {
                    ++r == s && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (o, a) => Math.max(o, a.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((t) => t.init());
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((t) => t()),
            (this._onStartFns = []));
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((t) => t.play());
        }
        pause() {
          this.players.forEach((t) => t.pause());
        }
        restart() {
          this.players.forEach((t) => t.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((t) => t.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((t) => t.destroy()),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((t) => t.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(t) {
          const e = t * this.totalTime;
          this.players.forEach((i) => {
            const r = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
            i.setPosition(r);
          });
        }
        getPosition() {
          const t = this.players.reduce(
            (e, i) => (null === e || i.totalTime > e.totalTime ? i : e),
            null
          );
          return null != t ? t.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((t) => {
            t.beforeDestroy && t.beforeDestroy();
          });
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      function Qx(n) {
        return new k(3e3, !1);
      }
      function m3() {
        return typeof window < "u" && typeof window.document < "u";
      }
      function i_() {
        return (
          typeof process < "u" &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function cs(n) {
        switch (n.length) {
          case 0:
            return new $l();
          case 1:
            return n[0];
          default:
            return new Zx(n);
        }
      }
      function Jx(n, t, e, i, r = new Map(), s = new Map()) {
        const o = [],
          a = [];
        let l = -1,
          c = null;
        if (
          (i.forEach((u) => {
            const d = u.get("offset"),
              h = d == l,
              f = (h && c) || new Map();
            u.forEach((p, m) => {
              let _ = m,
                v = p;
              if ("offset" !== m)
                switch (((_ = t.normalizePropertyName(_, o)), v)) {
                  case "!":
                    v = r.get(m);
                    break;
                  case Ar:
                    v = s.get(m);
                    break;
                  default:
                    v = t.normalizeStyleValue(m, _, v, o);
                }
              f.set(_, v);
            }),
              h || a.push(f),
              (c = f),
              (l = d);
          }),
          o.length)
        )
          throw (function n3(n) {
            return new k(3502, !1);
          })();
        return a;
      }
      function r_(n, t, e, i) {
        switch (t) {
          case "start":
            n.onStart(() => i(e && s_(e, "start", n)));
            break;
          case "done":
            n.onDone(() => i(e && s_(e, "done", n)));
            break;
          case "destroy":
            n.onDestroy(() => i(e && s_(e, "destroy", n)));
        }
      }
      function s_(n, t, e) {
        const s = o_(
            n.element,
            n.triggerName,
            n.fromState,
            n.toState,
            t || n.phaseName,
            e.totalTime ?? n.totalTime,
            !!e.disabled
          ),
          o = n._data;
        return null != o && (s._data = o), s;
      }
      function o_(n, t, e, i, r = "", s = 0, o) {
        return {
          element: n,
          triggerName: t,
          fromState: e,
          toState: i,
          phaseName: r,
          totalTime: s,
          disabled: !!o,
        };
      }
      function zn(n, t, e) {
        let i = n.get(t);
        return i || n.set(t, (i = e)), i;
      }
      function eE(n) {
        const t = n.indexOf(":");
        return [n.substring(1, t), n.slice(t + 1)];
      }
      let a_ = (n, t) => !1,
        tE = (n, t, e) => [],
        nE = null;
      function l_(n) {
        const t = n.parentNode || n.host;
        return t === nE ? null : t;
      }
      (i_() || typeof Element < "u") &&
        (m3()
          ? ((nE = (() => document.documentElement)()),
            (a_ = (n, t) => {
              for (; t; ) {
                if (t === n) return !0;
                t = l_(t);
              }
              return !1;
            }))
          : (a_ = (n, t) => n.contains(t)),
        (tE = (n, t, e) => {
          if (e) return Array.from(n.querySelectorAll(t));
          const i = n.querySelector(t);
          return i ? [i] : [];
        }));
      let Ks = null,
        iE = !1;
      const rE = a_,
        sE = tE;
      let oE = (() => {
          class n {
            validateStyleProperty(e) {
              return (function _3(n) {
                Ks ||
                  ((Ks =
                    (function y3() {
                      return typeof document < "u" ? document.body : null;
                    })() || {}),
                  (iE = !!Ks.style && "WebkitAppearance" in Ks.style));
                let t = !0;
                return (
                  Ks.style &&
                    !(function g3(n) {
                      return "ebkit" == n.substring(1, 6);
                    })(n) &&
                    ((t = n in Ks.style),
                    !t &&
                      iE &&
                      (t =
                        "Webkit" + n.charAt(0).toUpperCase() + n.slice(1) in
                        Ks.style)),
                  t
                );
              })(e);
            }
            matchesElement(e, i) {
              return !1;
            }
            containsElement(e, i) {
              return rE(e, i);
            }
            getParentElement(e) {
              return l_(e);
            }
            query(e, i, r) {
              return sE(e, i, r);
            }
            computeStyle(e, i, r) {
              return r || "";
            }
            animate(e, i, r, s, o, a = [], l) {
              return new $l(r, s);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        c_ = (() => {
          class n {}
          return (n.NOOP = new oE()), n;
        })();
      const u_ = "ng-enter",
        kd = "ng-leave",
        Id = "ng-trigger",
        Od = ".ng-trigger",
        lE = "ng-animating",
        d_ = ".ng-animating";
      function us(n) {
        if ("number" == typeof n) return n;
        const t = n.match(/^(-?[\.\d]+)(m?s)/);
        return !t || t.length < 2 ? 0 : h_(parseFloat(t[1]), t[2]);
      }
      function h_(n, t) {
        return "s" === t ? 1e3 * n : n;
      }
      function Rd(n, t, e) {
        return n.hasOwnProperty("duration")
          ? n
          : (function C3(n, t, e) {
              let r,
                s = 0,
                o = "";
              if ("string" == typeof n) {
                const a = n.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === a)
                  return t.push(Qx()), { duration: 0, delay: 0, easing: "" };
                r = h_(parseFloat(a[1]), a[2]);
                const l = a[3];
                null != l && (s = h_(parseFloat(l), a[4]));
                const c = a[5];
                c && (o = c);
              } else r = n;
              if (!e) {
                let a = !1,
                  l = t.length;
                r < 0 &&
                  (t.push(
                    (function Pz() {
                      return new k(3100, !1);
                    })()
                  ),
                  (a = !0)),
                  s < 0 &&
                    (t.push(
                      (function Fz() {
                        return new k(3101, !1);
                      })()
                    ),
                    (a = !0)),
                  a && t.splice(l, 0, Qx());
              }
              return { duration: r, delay: s, easing: o };
            })(n, t, e);
      }
      function ql(n, t = {}) {
        return (
          Object.keys(n).forEach((e) => {
            t[e] = n[e];
          }),
          t
        );
      }
      function cE(n) {
        const t = new Map();
        return (
          Object.keys(n).forEach((e) => {
            t.set(e, n[e]);
          }),
          t
        );
      }
      function ds(n, t = new Map(), e) {
        if (e) for (let [i, r] of e) t.set(i, r);
        for (let [i, r] of n) t.set(i, r);
        return t;
      }
      function dE(n, t, e) {
        return e ? t + ":" + e + ";" : "";
      }
      function hE(n) {
        let t = "";
        for (let e = 0; e < n.style.length; e++) {
          const i = n.style.item(e);
          t += dE(0, i, n.style.getPropertyValue(i));
        }
        for (const e in n.style)
          n.style.hasOwnProperty(e) &&
            !e.startsWith("_") &&
            (t += dE(0, x3(e), n.style[e]));
        n.setAttribute("style", t);
      }
      function Xi(n, t, e) {
        n.style &&
          (t.forEach((i, r) => {
            const s = p_(r);
            e && !e.has(r) && e.set(r, n.style[s]), (n.style[s] = i);
          }),
          i_() && hE(n));
      }
      function Xs(n, t) {
        n.style &&
          (t.forEach((e, i) => {
            const r = p_(i);
            n.style[r] = "";
          }),
          i_() && hE(n));
      }
      function Wl(n) {
        return Array.isArray(n) ? (1 == n.length ? n[0] : Kx(n)) : n;
      }
      const f_ = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function fE(n) {
        let t = [];
        if ("string" == typeof n) {
          let e;
          for (; (e = f_.exec(n)); ) t.push(e[1]);
          f_.lastIndex = 0;
        }
        return t;
      }
      function Pd(n, t, e) {
        const i = n.toString(),
          r = i.replace(f_, (s, o) => {
            let a = t[o];
            return (
              null == a &&
                (e.push(
                  (function Lz(n) {
                    return new k(3003, !1);
                  })()
                ),
                (a = "")),
              a.toString()
            );
          });
        return r == i ? n : r;
      }
      function Fd(n) {
        const t = [];
        let e = n.next();
        for (; !e.done; ) t.push(e.value), (e = n.next());
        return t;
      }
      const D3 = /-+([a-z0-9])/g;
      function p_(n) {
        return n.replace(D3, (...t) => t[1].toUpperCase());
      }
      function x3(n) {
        return n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
      }
      function Un(n, t, e) {
        switch (t.type) {
          case 7:
            return n.visitTrigger(t, e);
          case 0:
            return n.visitState(t, e);
          case 1:
            return n.visitTransition(t, e);
          case 2:
            return n.visitSequence(t, e);
          case 3:
            return n.visitGroup(t, e);
          case 4:
            return n.visitAnimate(t, e);
          case 5:
            return n.visitKeyframes(t, e);
          case 6:
            return n.visitStyle(t, e);
          case 8:
            return n.visitReference(t, e);
          case 9:
            return n.visitAnimateChild(t, e);
          case 10:
            return n.visitAnimateRef(t, e);
          case 11:
            return n.visitQuery(t, e);
          case 12:
            return n.visitStagger(t, e);
          default:
            throw (function Bz(n) {
              return new k(3004, !1);
            })();
        }
      }
      function pE(n, t) {
        return window.getComputedStyle(n)[t];
      }
      function I3(n, t) {
        const e = [];
        return (
          "string" == typeof n
            ? n.split(/\s*,\s*/).forEach((i) =>
                (function O3(n, t, e) {
                  if (":" == n[0]) {
                    const l = (function R3(n, t) {
                      switch (n) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, i) => parseFloat(i) > parseFloat(e);
                        case ":decrement":
                          return (e, i) => parseFloat(i) < parseFloat(e);
                        default:
                          return (
                            t.push(
                              (function Qz(n) {
                                return new k(3016, !1);
                              })()
                            ),
                            "* => *"
                          );
                      }
                    })(n, e);
                    if ("function" == typeof l) return void t.push(l);
                    n = l;
                  }
                  const i = n.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      e.push(
                        (function Zz(n) {
                          return new k(3015, !1);
                        })()
                      ),
                      t
                    );
                  const r = i[1],
                    s = i[2],
                    o = i[3];
                  t.push(mE(r, o));
                  "<" == s[0] && !("*" == r && "*" == o) && t.push(mE(o, r));
                })(i, e, t)
              )
            : e.push(n),
          e
        );
      }
      const Vd = new Set(["true", "1"]),
        jd = new Set(["false", "0"]);
      function mE(n, t) {
        const e = Vd.has(n) || jd.has(n),
          i = Vd.has(t) || jd.has(t);
        return (r, s) => {
          let o = "*" == n || n == r,
            a = "*" == t || t == s;
          return (
            !o && e && "boolean" == typeof r && (o = r ? Vd.has(n) : jd.has(n)),
            !a && i && "boolean" == typeof s && (a = s ? Vd.has(t) : jd.has(t)),
            o && a
          );
        };
      }
      const P3 = new RegExp("s*:selfs*,?", "g");
      function m_(n, t, e, i) {
        return new F3(n).build(t, e, i);
      }
      class F3 {
        constructor(t) {
          this._driver = t;
        }
        build(t, e, i) {
          const r = new B3(e);
          return this._resetContextStyleTimingState(r), Un(this, Wl(t), r);
        }
        _resetContextStyleTimingState(t) {
          (t.currentQuerySelector = ""),
            (t.collectedStyles = new Map()),
            t.collectedStyles.set("", new Map()),
            (t.currentTime = 0);
        }
        visitTrigger(t, e) {
          let i = (e.queryCount = 0),
            r = (e.depCount = 0);
          const s = [],
            o = [];
          return (
            "@" == t.name.charAt(0) &&
              e.errors.push(
                (function jz() {
                  return new k(3006, !1);
                })()
              ),
            t.definitions.forEach((a) => {
              if ((this._resetContextStyleTimingState(e), 0 == a.type)) {
                const l = a,
                  c = l.name;
                c
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((u) => {
                    (l.name = u), s.push(this.visitState(l, e));
                  }),
                  (l.name = c);
              } else if (1 == a.type) {
                const l = this.visitTransition(a, e);
                (i += l.queryCount), (r += l.depCount), o.push(l);
              } else
                e.errors.push(
                  (function Hz() {
                    return new k(3007, !1);
                  })()
                );
            }),
            {
              type: 7,
              name: t.name,
              states: s,
              transitions: o,
              queryCount: i,
              depCount: r,
              options: null,
            }
          );
        }
        visitState(t, e) {
          const i = this.visitStyle(t.styles, e),
            r = (t.options && t.options.params) || null;
          if (i.containsDynamicStyles) {
            const s = new Set(),
              o = r || {};
            i.styles.forEach((a) => {
              a instanceof Map &&
                a.forEach((l) => {
                  fE(l).forEach((c) => {
                    o.hasOwnProperty(c) || s.add(c);
                  });
                });
            }),
              s.size &&
                (Fd(s.values()),
                e.errors.push(
                  (function zz(n, t) {
                    return new k(3008, !1);
                  })()
                ));
          }
          return {
            type: 0,
            name: t.name,
            style: i,
            options: r ? { params: r } : null,
          };
        }
        visitTransition(t, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const i = Un(this, Wl(t.animation), e);
          return {
            type: 1,
            matchers: I3(t.expr, e.errors),
            animation: i,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: Zs(t.options),
          };
        }
        visitSequence(t, e) {
          return {
            type: 2,
            steps: t.steps.map((i) => Un(this, i, e)),
            options: Zs(t.options),
          };
        }
        visitGroup(t, e) {
          const i = e.currentTime;
          let r = 0;
          const s = t.steps.map((o) => {
            e.currentTime = i;
            const a = Un(this, o, e);
            return (r = Math.max(r, e.currentTime)), a;
          });
          return (
            (e.currentTime = r), { type: 3, steps: s, options: Zs(t.options) }
          );
        }
        visitAnimate(t, e) {
          const i = (function j3(n, t) {
            if (n.hasOwnProperty("duration")) return n;
            if ("number" == typeof n) return g_(Rd(n, t).duration, 0, "");
            const e = n;
            if (
              e
                .split(/\s+/)
                .some((s) => "{" == s.charAt(0) && "{" == s.charAt(1))
            ) {
              const s = g_(0, 0, "");
              return (s.dynamic = !0), (s.strValue = e), s;
            }
            const r = Rd(e, t);
            return g_(r.duration, r.delay, r.easing);
          })(t.timings, e.errors);
          e.currentAnimateTimings = i;
          let r,
            s = t.styles ? t.styles : Ke({});
          if (5 == s.type) r = this.visitKeyframes(s, e);
          else {
            let o = t.styles,
              a = !1;
            if (!o) {
              a = !0;
              const c = {};
              i.easing && (c.easing = i.easing), (o = Ke(c));
            }
            e.currentTime += i.duration + i.delay;
            const l = this.visitStyle(o, e);
            (l.isEmptyStep = a), (r = l);
          }
          return (
            (e.currentAnimateTimings = null),
            { type: 4, timings: i, style: r, options: null }
          );
        }
        visitStyle(t, e) {
          const i = this._makeStyleAst(t, e);
          return this._validateStyleAst(i, e), i;
        }
        _makeStyleAst(t, e) {
          const i = [],
            r = Array.isArray(t.styles) ? t.styles : [t.styles];
          for (let a of r)
            "string" == typeof a
              ? a === Ar
                ? i.push(a)
                : e.errors.push(new k(3002, !1))
              : i.push(cE(a));
          let s = !1,
            o = null;
          return (
            i.forEach((a) => {
              if (
                a instanceof Map &&
                (a.has("easing") && ((o = a.get("easing")), a.delete("easing")),
                !s)
              )
                for (let l of a.values())
                  if (l.toString().indexOf("{{") >= 0) {
                    s = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: i,
              easing: o,
              offset: t.offset,
              containsDynamicStyles: s,
              options: null,
            }
          );
        }
        _validateStyleAst(t, e) {
          const i = e.currentAnimateTimings;
          let r = e.currentTime,
            s = e.currentTime;
          i && s > 0 && (s -= i.duration + i.delay),
            t.styles.forEach((o) => {
              "string" != typeof o &&
                o.forEach((a, l) => {
                  const c = e.collectedStyles.get(e.currentQuerySelector),
                    u = c.get(l);
                  let d = !0;
                  u &&
                    (s != r &&
                      s >= u.startTime &&
                      r <= u.endTime &&
                      (e.errors.push(
                        (function $z(n, t, e, i, r) {
                          return new k(3010, !1);
                        })()
                      ),
                      (d = !1)),
                    (s = u.startTime)),
                    d && c.set(l, { startTime: s, endTime: r }),
                    e.options &&
                      (function M3(n, t, e) {
                        const i = t.params || {},
                          r = fE(n);
                        r.length &&
                          r.forEach((s) => {
                            i.hasOwnProperty(s) ||
                              e.push(
                                (function Nz(n) {
                                  return new k(3001, !1);
                                })()
                              );
                          });
                      })(a, e.options, e.errors);
                });
            });
        }
        visitKeyframes(t, e) {
          const i = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return (
              e.errors.push(
                (function qz() {
                  return new k(3011, !1);
                })()
              ),
              i
            );
          let s = 0;
          const o = [];
          let a = !1,
            l = !1,
            c = 0;
          const u = t.steps.map((v) => {
            const M = this._makeStyleAst(v, e);
            let C =
                null != M.offset
                  ? M.offset
                  : (function V3(n) {
                      if ("string" == typeof n) return null;
                      let t = null;
                      if (Array.isArray(n))
                        n.forEach((e) => {
                          if (e instanceof Map && e.has("offset")) {
                            const i = e;
                            (t = parseFloat(i.get("offset"))),
                              i.delete("offset");
                          }
                        });
                      else if (n instanceof Map && n.has("offset")) {
                        const e = n;
                        (t = parseFloat(e.get("offset"))), e.delete("offset");
                      }
                      return t;
                    })(M.styles),
              D = 0;
            return (
              null != C && (s++, (D = M.offset = C)),
              (l = l || D < 0 || D > 1),
              (a = a || D < c),
              (c = D),
              o.push(D),
              M
            );
          });
          l &&
            e.errors.push(
              (function Wz() {
                return new k(3012, !1);
              })()
            ),
            a &&
              e.errors.push(
                (function Gz() {
                  return new k(3200, !1);
                })()
              );
          const d = t.steps.length;
          let h = 0;
          s > 0 && s < d
            ? e.errors.push(
                (function Yz() {
                  return new k(3202, !1);
                })()
              )
            : 0 == s && (h = 1 / (d - 1));
          const f = d - 1,
            p = e.currentTime,
            m = e.currentAnimateTimings,
            _ = m.duration;
          return (
            u.forEach((v, M) => {
              const C = h > 0 ? (M == f ? 1 : h * M) : o[M],
                D = C * _;
              (e.currentTime = p + m.delay + D),
                (m.duration = D),
                this._validateStyleAst(v, e),
                (v.offset = C),
                i.styles.push(v);
            }),
            i
          );
        }
        visitReference(t, e) {
          return {
            type: 8,
            animation: Un(this, Wl(t.animation), e),
            options: Zs(t.options),
          };
        }
        visitAnimateChild(t, e) {
          return e.depCount++, { type: 9, options: Zs(t.options) };
        }
        visitAnimateRef(t, e) {
          return {
            type: 10,
            animation: this.visitReference(t.animation, e),
            options: Zs(t.options),
          };
        }
        visitQuery(t, e) {
          const i = e.currentQuerySelector,
            r = t.options || {};
          e.queryCount++, (e.currentQuery = t);
          const [s, o] = (function N3(n) {
            const t = !!n.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              t && (n = n.replace(P3, "")),
              (n = n
                .replace(/@\*/g, Od)
                .replace(/@\w+/g, (e) => Od + "-" + e.slice(1))
                .replace(/:animating/g, d_)),
              [n, t]
            );
          })(t.selector);
          (e.currentQuerySelector = i.length ? i + " " + s : s),
            zn(e.collectedStyles, e.currentQuerySelector, new Map());
          const a = Un(this, Wl(t.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = i),
            {
              type: 11,
              selector: s,
              limit: r.limit || 0,
              optional: !!r.optional,
              includeSelf: o,
              animation: a,
              originalSelector: t.selector,
              options: Zs(t.options),
            }
          );
        }
        visitStagger(t, e) {
          e.currentQuery ||
            e.errors.push(
              (function Kz() {
                return new k(3013, !1);
              })()
            );
          const i =
            "full" === t.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : Rd(t.timings, e.errors, !0);
          return {
            type: 12,
            animation: Un(this, Wl(t.animation), e),
            timings: i,
            options: null,
          };
        }
      }
      class B3 {
        constructor(t) {
          (this.errors = t),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function Zs(n) {
        return (
          n
            ? (n = ql(n)).params &&
              (n.params = (function L3(n) {
                return n ? ql(n) : null;
              })(n.params))
            : (n = {}),
          n
        );
      }
      function g_(n, t, e) {
        return { duration: n, delay: t, easing: e };
      }
      function __(n, t, e, i, r, s, o = null, a = !1) {
        return {
          type: 1,
          element: n,
          keyframes: t,
          preStyleProps: e,
          postStyleProps: i,
          duration: r,
          delay: s,
          totalTime: r + s,
          easing: o,
          subTimeline: a,
        };
      }
      class Hd {
        constructor() {
          this._map = new Map();
        }
        get(t) {
          return this._map.get(t) || [];
        }
        append(t, e) {
          let i = this._map.get(t);
          i || this._map.set(t, (i = [])), i.push(...e);
        }
        has(t) {
          return this._map.has(t);
        }
        clear() {
          this._map.clear();
        }
      }
      const U3 = new RegExp(":enter", "g"),
        q3 = new RegExp(":leave", "g");
      function y_(n, t, e, i, r, s = new Map(), o = new Map(), a, l, c = []) {
        return new W3().buildKeyframes(n, t, e, i, r, s, o, a, l, c);
      }
      class W3 {
        buildKeyframes(t, e, i, r, s, o, a, l, c, u = []) {
          c = c || new Hd();
          const d = new v_(t, e, c, r, s, u, []);
          d.options = l;
          const h = l.delay ? us(l.delay) : 0;
          d.currentTimeline.delayNextStep(h),
            d.currentTimeline.setStyles([o], null, d.errors, l),
            Un(this, i, d);
          const f = d.timelines.filter((p) => p.containsAnimation());
          if (f.length && a.size) {
            let p;
            for (let m = f.length - 1; m >= 0; m--) {
              const _ = f[m];
              if (_.element === e) {
                p = _;
                break;
              }
            }
            p &&
              !p.allowOnlyTimelineStyles() &&
              p.setStyles([a], null, d.errors, l);
          }
          return f.length
            ? f.map((p) => p.buildKeyframes())
            : [__(e, [], [], [], 0, h, "", !1)];
        }
        visitTrigger(t, e) {}
        visitState(t, e) {}
        visitTransition(t, e) {}
        visitAnimateChild(t, e) {
          const i = e.subInstructions.get(e.element);
          if (i) {
            const r = e.createSubContext(t.options),
              s = e.currentTimeline.currentTime,
              o = this._visitSubInstructions(i, r, r.options);
            s != o && e.transformIntoNewTimeline(o);
          }
          e.previousNode = t;
        }
        visitAnimateRef(t, e) {
          const i = e.createSubContext(t.options);
          i.transformIntoNewTimeline(),
            this.visitReference(t.animation, i),
            e.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (e.previousNode = t);
        }
        _visitSubInstructions(t, e, i) {
          let s = e.currentTimeline.currentTime;
          const o = null != i.duration ? us(i.duration) : null,
            a = null != i.delay ? us(i.delay) : null;
          return (
            0 !== o &&
              t.forEach((l) => {
                const c = e.appendInstructionToTimeline(l, o, a);
                s = Math.max(s, c.duration + c.delay);
              }),
            s
          );
        }
        visitReference(t, e) {
          e.updateOptions(t.options, !0),
            Un(this, t.animation, e),
            (e.previousNode = t);
        }
        visitSequence(t, e) {
          const i = e.subContextCount;
          let r = e;
          const s = t.options;
          if (
            s &&
            (s.params || s.delay) &&
            ((r = e.createSubContext(s)),
            r.transformIntoNewTimeline(),
            null != s.delay)
          ) {
            6 == r.previousNode.type &&
              (r.currentTimeline.snapshotCurrentStyles(),
              (r.previousNode = zd));
            const o = us(s.delay);
            r.delayNextStep(o);
          }
          t.steps.length &&
            (t.steps.forEach((o) => Un(this, o, r)),
            r.currentTimeline.applyStylesToKeyframe(),
            r.subContextCount > i && r.transformIntoNewTimeline()),
            (e.previousNode = t);
        }
        visitGroup(t, e) {
          const i = [];
          let r = e.currentTimeline.currentTime;
          const s = t.options && t.options.delay ? us(t.options.delay) : 0;
          t.steps.forEach((o) => {
            const a = e.createSubContext(t.options);
            s && a.delayNextStep(s),
              Un(this, o, a),
              (r = Math.max(r, a.currentTimeline.currentTime)),
              i.push(a.currentTimeline);
          }),
            i.forEach((o) => e.currentTimeline.mergeTimelineCollectedStyles(o)),
            e.transformIntoNewTimeline(r),
            (e.previousNode = t);
        }
        _visitTiming(t, e) {
          if (t.dynamic) {
            const i = t.strValue;
            return Rd(e.params ? Pd(i, e.params, e.errors) : i, e.errors);
          }
          return { duration: t.duration, delay: t.delay, easing: t.easing };
        }
        visitAnimate(t, e) {
          const i = (e.currentAnimateTimings = this._visitTiming(t.timings, e)),
            r = e.currentTimeline;
          i.delay && (e.incrementTime(i.delay), r.snapshotCurrentStyles());
          const s = t.style;
          5 == s.type
            ? this.visitKeyframes(s, e)
            : (e.incrementTime(i.duration),
              this.visitStyle(s, e),
              r.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = t);
        }
        visitStyle(t, e) {
          const i = e.currentTimeline,
            r = e.currentAnimateTimings;
          !r && i.hasCurrentStyleProperties() && i.forwardFrame();
          const s = (r && r.easing) || t.easing;
          t.isEmptyStep
            ? i.applyEmptyStep(s)
            : i.setStyles(t.styles, s, e.errors, e.options),
            (e.previousNode = t);
        }
        visitKeyframes(t, e) {
          const i = e.currentAnimateTimings,
            r = e.currentTimeline.duration,
            s = i.duration,
            a = e.createSubContext().currentTimeline;
          (a.easing = i.easing),
            t.styles.forEach((l) => {
              a.forwardTime((l.offset || 0) * s),
                a.setStyles(l.styles, l.easing, e.errors, e.options),
                a.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(a),
            e.transformIntoNewTimeline(r + s),
            (e.previousNode = t);
        }
        visitQuery(t, e) {
          const i = e.currentTimeline.currentTime,
            r = t.options || {},
            s = r.delay ? us(r.delay) : 0;
          s &&
            (6 === e.previousNode.type ||
              (0 == i && e.currentTimeline.hasCurrentStyleProperties())) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = zd));
          let o = i;
          const a = e.invokeQuery(
            t.selector,
            t.originalSelector,
            t.limit,
            t.includeSelf,
            !!r.optional,
            e.errors
          );
          e.currentQueryTotal = a.length;
          let l = null;
          a.forEach((c, u) => {
            e.currentQueryIndex = u;
            const d = e.createSubContext(t.options, c);
            s && d.delayNextStep(s),
              c === e.element && (l = d.currentTimeline),
              Un(this, t.animation, d),
              d.currentTimeline.applyStylesToKeyframe(),
              (o = Math.max(o, d.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(o),
            l &&
              (e.currentTimeline.mergeTimelineCollectedStyles(l),
              e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = t);
        }
        visitStagger(t, e) {
          const i = e.parentContext,
            r = e.currentTimeline,
            s = t.timings,
            o = Math.abs(s.duration),
            a = o * (e.currentQueryTotal - 1);
          let l = o * e.currentQueryIndex;
          switch (s.duration < 0 ? "reverse" : s.easing) {
            case "reverse":
              l = a - l;
              break;
            case "full":
              l = i.currentStaggerTime;
          }
          const u = e.currentTimeline;
          l && u.delayNextStep(l);
          const d = u.currentTime;
          Un(this, t.animation, e),
            (e.previousNode = t),
            (i.currentStaggerTime =
              r.currentTime - d + (r.startTime - i.currentTimeline.startTime));
        }
      }
      const zd = {};
      class v_ {
        constructor(t, e, i, r, s, o, a, l) {
          (this._driver = t),
            (this.element = e),
            (this.subInstructions = i),
            (this._enterClassName = r),
            (this._leaveClassName = s),
            (this.errors = o),
            (this.timelines = a),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = zd),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = l || new Ud(this._driver, e, 0)),
            a.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(t, e) {
          if (!t) return;
          const i = t;
          let r = this.options;
          null != i.duration && (r.duration = us(i.duration)),
            null != i.delay && (r.delay = us(i.delay));
          const s = i.params;
          if (s) {
            let o = r.params;
            o || (o = this.options.params = {}),
              Object.keys(s).forEach((a) => {
                (!e || !o.hasOwnProperty(a)) &&
                  (o[a] = Pd(s[a], o, this.errors));
              });
          }
        }
        _copyOptions() {
          const t = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const i = (t.params = {});
              Object.keys(e).forEach((r) => {
                i[r] = e[r];
              });
            }
          }
          return t;
        }
        createSubContext(t = null, e, i) {
          const r = e || this.element,
            s = new v_(
              this._driver,
              r,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(r, i || 0)
            );
          return (
            (s.previousNode = this.previousNode),
            (s.currentAnimateTimings = this.currentAnimateTimings),
            (s.options = this._copyOptions()),
            s.updateOptions(t),
            (s.currentQueryIndex = this.currentQueryIndex),
            (s.currentQueryTotal = this.currentQueryTotal),
            (s.parentContext = this),
            this.subContextCount++,
            s
          );
        }
        transformIntoNewTimeline(t) {
          return (
            (this.previousNode = zd),
            (this.currentTimeline = this.currentTimeline.fork(this.element, t)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(t, e, i) {
          const r = {
              duration: e ?? t.duration,
              delay: this.currentTimeline.currentTime + (i ?? 0) + t.delay,
              easing: "",
            },
            s = new G3(
              this._driver,
              t.element,
              t.keyframes,
              t.preStyleProps,
              t.postStyleProps,
              r,
              t.stretchStartingKeyframe
            );
          return this.timelines.push(s), r;
        }
        incrementTime(t) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + t);
        }
        delayNextStep(t) {
          t > 0 && this.currentTimeline.delayNextStep(t);
        }
        invokeQuery(t, e, i, r, s, o) {
          let a = [];
          if ((r && a.push(this.element), t.length > 0)) {
            t = (t = t.replace(U3, "." + this._enterClassName)).replace(
              q3,
              "." + this._leaveClassName
            );
            let c = this._driver.query(this.element, t, 1 != i);
            0 !== i &&
              (c = i < 0 ? c.slice(c.length + i, c.length) : c.slice(0, i)),
              a.push(...c);
          }
          return (
            !s &&
              0 == a.length &&
              o.push(
                (function Xz(n) {
                  return new k(3014, !1);
                })()
              ),
            a
          );
        }
      }
      class Ud {
        constructor(t, e, i, r) {
          (this._driver = t),
            (this.element = e),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = r),
            (this.duration = 0),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                e,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(t) {
          const e = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || e
            ? (this.forwardTime(this.currentTime + t),
              e && this.snapshotCurrentStyles())
            : (this.startTime += t);
        }
        fork(t, e) {
          return (
            this.applyStylesToKeyframe(),
            new Ud(
              this._driver,
              t,
              e || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(t) {
          this.applyStylesToKeyframe(),
            (this.duration = t),
            this._loadKeyframe();
        }
        _updateStyle(t, e) {
          this._localTimelineStyles.set(t, e),
            this._globalTimelineStyles.set(t, e),
            this._styleSummary.set(t, { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(t) {
          t && this._previousKeyframe.set("easing", t);
          for (let [e, i] of this._globalTimelineStyles)
            this._backFill.set(e, i || Ar), this._currentKeyframe.set(e, Ar);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(t, e, i, r) {
          e && this._previousKeyframe.set("easing", e);
          const s = (r && r.params) || {},
            o = (function Y3(n, t) {
              const e = new Map();
              let i;
              return (
                n.forEach((r) => {
                  if ("*" === r) {
                    i = i || t.keys();
                    for (let s of i) e.set(s, Ar);
                  } else ds(r, e);
                }),
                e
              );
            })(t, this._globalTimelineStyles);
          for (let [a, l] of o) {
            const c = Pd(l, s, i);
            this._pendingStyles.set(a, c),
              this._localTimelineStyles.has(a) ||
                this._backFill.set(a, this._globalTimelineStyles.get(a) ?? Ar),
              this._updateStyle(a, c);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((t, e) => {
              this._currentKeyframe.set(e, t);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((t, e) => {
              this._currentKeyframe.has(e) || this._currentKeyframe.set(e, t);
            }));
        }
        snapshotCurrentStyles() {
          for (let [t, e] of this._localTimelineStyles)
            this._pendingStyles.set(t, e), this._updateStyle(t, e);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const t = [];
          for (let e in this._currentKeyframe) t.push(e);
          return t;
        }
        mergeTimelineCollectedStyles(t) {
          t._styleSummary.forEach((e, i) => {
            const r = this._styleSummary.get(i);
            (!r || e.time > r.time) && this._updateStyle(i, e.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const t = new Set(),
            e = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let r = [];
          this._keyframes.forEach((a, l) => {
            const c = ds(a, new Map(), this._backFill);
            c.forEach((u, d) => {
              "!" === u ? t.add(d) : u === Ar && e.add(d);
            }),
              i || c.set("offset", l / this.duration),
              r.push(c);
          });
          const s = t.size ? Fd(t.values()) : [],
            o = e.size ? Fd(e.values()) : [];
          if (i) {
            const a = r[0],
              l = new Map(a);
            a.set("offset", 0), l.set("offset", 1), (r = [a, l]);
          }
          return __(
            this.element,
            r,
            s,
            o,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class G3 extends Ud {
        constructor(t, e, i, r, s, o, a = !1) {
          super(t, e, o.delay),
            (this.keyframes = i),
            (this.preStyleProps = r),
            (this.postStyleProps = s),
            (this._stretchStartingKeyframe = a),
            (this.timings = {
              duration: o.duration,
              delay: o.delay,
              easing: o.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let t = this.keyframes,
            { delay: e, duration: i, easing: r } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const s = [],
              o = i + e,
              a = e / o,
              l = ds(t[0]);
            l.set("offset", 0), s.push(l);
            const c = ds(t[0]);
            c.set("offset", yE(a)), s.push(c);
            const u = t.length - 1;
            for (let d = 1; d <= u; d++) {
              let h = ds(t[d]);
              const f = h.get("offset");
              h.set("offset", yE((e + f * i) / o)), s.push(h);
            }
            (i = o), (e = 0), (r = ""), (t = s);
          }
          return __(
            this.element,
            t,
            this.preStyleProps,
            this.postStyleProps,
            i,
            e,
            r,
            !0
          );
        }
      }
      function yE(n, t = 3) {
        const e = Math.pow(10, t - 1);
        return Math.round(n * e) / e;
      }
      class b_ {}
      const K3 = new Set([
        "width",
        "height",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "left",
        "top",
        "bottom",
        "right",
        "fontSize",
        "outlineWidth",
        "outlineOffset",
        "paddingTop",
        "paddingLeft",
        "paddingBottom",
        "paddingRight",
        "marginTop",
        "marginLeft",
        "marginBottom",
        "marginRight",
        "borderRadius",
        "borderWidth",
        "borderTopWidth",
        "borderLeftWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "textIndent",
        "perspective",
      ]);
      class X3 extends b_ {
        normalizePropertyName(t, e) {
          return p_(t);
        }
        normalizeStyleValue(t, e, i, r) {
          let s = "";
          const o = i.toString().trim();
          if (K3.has(e) && 0 !== i && "0" !== i)
            if ("number" == typeof i) s = "px";
            else {
              const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              a &&
                0 == a[1].length &&
                r.push(
                  (function Vz(n, t) {
                    return new k(3005, !1);
                  })()
                );
            }
          return o + s;
        }
      }
      function vE(n, t, e, i, r, s, o, a, l, c, u, d, h) {
        return {
          type: 0,
          element: n,
          triggerName: t,
          isRemovalTransition: r,
          fromState: e,
          fromStyles: s,
          toState: i,
          toStyles: o,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: u,
          totalTime: d,
          errors: h,
        };
      }
      const C_ = {};
      class bE {
        constructor(t, e, i) {
          (this._triggerName = t), (this.ast = e), (this._stateStyles = i);
        }
        match(t, e, i, r) {
          return (function Z3(n, t, e, i, r) {
            return n.some((s) => s(t, e, i, r));
          })(this.ast.matchers, t, e, i, r);
        }
        buildStyles(t, e, i) {
          let r = this._stateStyles.get("*");
          return (
            void 0 !== t && (r = this._stateStyles.get(t?.toString()) || r),
            r ? r.buildStyles(e, i) : new Map()
          );
        }
        build(t, e, i, r, s, o, a, l, c, u) {
          const d = [],
            h = (this.ast.options && this.ast.options.params) || C_,
            p = this.buildStyles(i, (a && a.params) || C_, d),
            m = (l && l.params) || C_,
            _ = this.buildStyles(r, m, d),
            v = new Set(),
            M = new Map(),
            C = new Map(),
            D = "void" === r,
            S = { params: Q3(m, h), delay: this.ast.options?.delay },
            A = u ? [] : y_(t, e, this.ast.animation, s, o, p, _, S, c, d);
          let O = 0;
          if (
            (A.forEach((j) => {
              O = Math.max(j.duration + j.delay, O);
            }),
            d.length)
          )
            return vE(e, this._triggerName, i, r, D, p, _, [], [], M, C, O, d);
          A.forEach((j) => {
            const ie = j.element,
              Ce = zn(M, ie, new Set());
            j.preStyleProps.forEach((Ne) => Ce.add(Ne));
            const ue = zn(C, ie, new Set());
            j.postStyleProps.forEach((Ne) => ue.add(Ne)), ie !== e && v.add(ie);
          });
          const V = Fd(v.values());
          return vE(e, this._triggerName, i, r, D, p, _, A, V, M, C, O);
        }
      }
      function Q3(n, t) {
        const e = ql(t);
        for (const i in n) n.hasOwnProperty(i) && null != n[i] && (e[i] = n[i]);
        return e;
      }
      class J3 {
        constructor(t, e, i) {
          (this.styles = t), (this.defaultParams = e), (this.normalizer = i);
        }
        buildStyles(t, e) {
          const i = new Map(),
            r = ql(this.defaultParams);
          return (
            Object.keys(t).forEach((s) => {
              const o = t[s];
              null !== o && (r[s] = o);
            }),
            this.styles.styles.forEach((s) => {
              "string" != typeof s &&
                s.forEach((o, a) => {
                  o && (o = Pd(o, r, e));
                  const l = this.normalizer.normalizePropertyName(a, e);
                  (o = this.normalizer.normalizeStyleValue(a, l, o, e)),
                    i.set(l, o);
                });
            }),
            i
          );
        }
      }
      class tU {
        constructor(t, e, i) {
          (this.name = t),
            (this.ast = e),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = new Map()),
            e.states.forEach((r) => {
              this.states.set(
                r.name,
                new J3(r.style, (r.options && r.options.params) || {}, i)
              );
            }),
            CE(this.states, "true", "1"),
            CE(this.states, "false", "0"),
            e.transitions.forEach((r) => {
              this.transitionFactories.push(new bE(t, r, this.states));
            }),
            (this.fallbackTransition = (function nU(n, t, e) {
              return new bE(
                n,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(o, a) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                t
              );
            })(t, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(t, e, i, r) {
          return (
            this.transitionFactories.find((o) => o.match(t, e, i, r)) || null
          );
        }
        matchStyles(t, e, i) {
          return this.fallbackTransition.buildStyles(t, e, i);
        }
      }
      function CE(n, t, e) {
        n.has(t)
          ? n.has(e) || n.set(e, n.get(t))
          : n.has(e) && n.set(t, n.get(e));
      }
      const iU = new Hd();
      class rU {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(t, e) {
          const i = [],
            s = m_(this._driver, e, i, []);
          if (i.length)
            throw (function r3(n) {
              return new k(3503, !1);
            })();
          this._animations.set(t, s);
        }
        _buildPlayer(t, e, i) {
          const r = t.element,
            s = Jx(0, this._normalizer, 0, t.keyframes, e, i);
          return this._driver.animate(
            r,
            s,
            t.duration,
            t.delay,
            t.easing,
            [],
            !0
          );
        }
        create(t, e, i = {}) {
          const r = [],
            s = this._animations.get(t);
          let o;
          const a = new Map();
          if (
            (s
              ? ((o = y_(
                  this._driver,
                  e,
                  s,
                  u_,
                  kd,
                  new Map(),
                  new Map(),
                  i,
                  iU,
                  r
                )),
                o.forEach((u) => {
                  const d = zn(a, u.element, new Map());
                  u.postStyleProps.forEach((h) => d.set(h, null));
                }))
              : (r.push(
                  (function s3() {
                    return new k(3300, !1);
                  })()
                ),
                (o = [])),
            r.length)
          )
            throw (function o3(n) {
              return new k(3504, !1);
            })();
          a.forEach((u, d) => {
            u.forEach((h, f) => {
              u.set(f, this._driver.computeStyle(d, f, Ar));
            });
          });
          const c = cs(
            o.map((u) => {
              const d = a.get(u.element);
              return this._buildPlayer(u, new Map(), d);
            })
          );
          return (
            this._playersById.set(t, c),
            c.onDestroy(() => this.destroy(t)),
            this.players.push(c),
            c
          );
        }
        destroy(t) {
          const e = this._getPlayer(t);
          e.destroy(), this._playersById.delete(t);
          const i = this.players.indexOf(e);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(t) {
          const e = this._playersById.get(t);
          if (!e)
            throw (function a3(n) {
              return new k(3301, !1);
            })();
          return e;
        }
        listen(t, e, i, r) {
          const s = o_(e, "", "", "");
          return r_(this._getPlayer(t), i, s, r), () => {};
        }
        command(t, e, i, r) {
          if ("register" == i) return void this.register(t, r[0]);
          if ("create" == i) return void this.create(t, e, r[0] || {});
          const s = this._getPlayer(t);
          switch (i) {
            case "play":
              s.play();
              break;
            case "pause":
              s.pause();
              break;
            case "reset":
              s.reset();
              break;
            case "restart":
              s.restart();
              break;
            case "finish":
              s.finish();
              break;
            case "init":
              s.init();
              break;
            case "setPosition":
              s.setPosition(parseFloat(r[0]));
              break;
            case "destroy":
              this.destroy(t);
          }
        }
      }
      const wE = "ng-animate-queued",
        w_ = "ng-animate-disabled",
        cU = [],
        ME = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        uU = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        ii = "__ng_removed";
      class M_ {
        constructor(t, e = "") {
          this.namespaceId = e;
          const i = t && t.hasOwnProperty("value");
          if (
            ((this.value = (function pU(n) {
              return n ?? null;
            })(i ? t.value : t)),
            i)
          ) {
            const s = ql(t);
            delete s.value, (this.options = s);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(t) {
          const e = t.params;
          if (e) {
            const i = this.options.params;
            Object.keys(e).forEach((r) => {
              null == i[r] && (i[r] = e[r]);
            });
          }
        }
      }
      const Gl = "void",
        D_ = new M_(Gl);
      class dU {
        constructor(t, e, i) {
          (this.id = t),
            (this.hostElement = e),
            (this._engine = i),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + t),
            ri(e, this._hostClassName);
        }
        listen(t, e, i, r) {
          if (!this._triggers.has(e))
            throw (function l3(n, t) {
              return new k(3302, !1);
            })();
          if (null == i || 0 == i.length)
            throw (function c3(n) {
              return new k(3303, !1);
            })();
          if (
            !(function mU(n) {
              return "start" == n || "done" == n;
            })(i)
          )
            throw (function u3(n, t) {
              return new k(3400, !1);
            })();
          const s = zn(this._elementListeners, t, []),
            o = { name: e, phase: i, callback: r };
          s.push(o);
          const a = zn(this._engine.statesByElement, t, new Map());
          return (
            a.has(e) || (ri(t, Id), ri(t, Id + "-" + e), a.set(e, D_)),
            () => {
              this._engine.afterFlush(() => {
                const l = s.indexOf(o);
                l >= 0 && s.splice(l, 1), this._triggers.has(e) || a.delete(e);
              });
            }
          );
        }
        register(t, e) {
          return !this._triggers.has(t) && (this._triggers.set(t, e), !0);
        }
        _getTrigger(t) {
          const e = this._triggers.get(t);
          if (!e)
            throw (function d3(n) {
              return new k(3401, !1);
            })();
          return e;
        }
        trigger(t, e, i, r = !0) {
          const s = this._getTrigger(e),
            o = new x_(this.id, e, t);
          let a = this._engine.statesByElement.get(t);
          a ||
            (ri(t, Id),
            ri(t, Id + "-" + e),
            this._engine.statesByElement.set(t, (a = new Map())));
          let l = a.get(e);
          const c = new M_(i, this.id);
          if (
            (!(i && i.hasOwnProperty("value")) &&
              l &&
              c.absorbOptions(l.options),
            a.set(e, c),
            l || (l = D_),
            c.value !== Gl && l.value === c.value)
          ) {
            if (
              !(function yU(n, t) {
                const e = Object.keys(n),
                  i = Object.keys(t);
                if (e.length != i.length) return !1;
                for (let r = 0; r < e.length; r++) {
                  const s = e[r];
                  if (!t.hasOwnProperty(s) || n[s] !== t[s]) return !1;
                }
                return !0;
              })(l.params, c.params)
            ) {
              const m = [],
                _ = s.matchStyles(l.value, l.params, m),
                v = s.matchStyles(c.value, c.params, m);
              m.length
                ? this._engine.reportError(m)
                : this._engine.afterFlush(() => {
                    Xs(t, _), Xi(t, v);
                  });
            }
            return;
          }
          const h = zn(this._engine.playersByElement, t, []);
          h.forEach((m) => {
            m.namespaceId == this.id &&
              m.triggerName == e &&
              m.queued &&
              m.destroy();
          });
          let f = s.matchTransition(l.value, c.value, t, c.params),
            p = !1;
          if (!f) {
            if (!r) return;
            (f = s.fallbackTransition), (p = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: t,
              triggerName: e,
              transition: f,
              fromState: l,
              toState: c,
              player: o,
              isFallbackTransition: p,
            }),
            p ||
              (ri(t, wE),
              o.onStart(() => {
                va(t, wE);
              })),
            o.onDone(() => {
              let m = this.players.indexOf(o);
              m >= 0 && this.players.splice(m, 1);
              const _ = this._engine.playersByElement.get(t);
              if (_) {
                let v = _.indexOf(o);
                v >= 0 && _.splice(v, 1);
              }
            }),
            this.players.push(o),
            h.push(o),
            o
          );
        }
        deregister(t) {
          this._triggers.delete(t),
            this._engine.statesByElement.forEach((e) => e.delete(t)),
            this._elementListeners.forEach((e, i) => {
              this._elementListeners.set(
                i,
                e.filter((r) => r.name != t)
              );
            });
        }
        clearElementCache(t) {
          this._engine.statesByElement.delete(t),
            this._elementListeners.delete(t);
          const e = this._engine.playersByElement.get(t);
          e &&
            (e.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(t));
        }
        _signalRemovalForInnerTriggers(t, e) {
          const i = this._engine.driver.query(t, Od, !0);
          i.forEach((r) => {
            if (r[ii]) return;
            const s = this._engine.fetchNamespacesByElement(r);
            s.size
              ? s.forEach((o) => o.triggerLeaveAnimation(r, e, !1, !0))
              : this.clearElementCache(r);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((r) => this.clearElementCache(r))
            );
        }
        triggerLeaveAnimation(t, e, i, r) {
          const s = this._engine.statesByElement.get(t),
            o = new Map();
          if (s) {
            const a = [];
            if (
              (s.forEach((l, c) => {
                if ((o.set(c, l.value), this._triggers.has(c))) {
                  const u = this.trigger(t, c, Gl, r);
                  u && a.push(u);
                }
              }),
              a.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, t, !0, e, o),
                i && cs(a).onDone(() => this._engine.processLeaveNode(t)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(t) {
          const e = this._elementListeners.get(t),
            i = this._engine.statesByElement.get(t);
          if (e && i) {
            const r = new Set();
            e.forEach((s) => {
              const o = s.name;
              if (r.has(o)) return;
              r.add(o);
              const l = this._triggers.get(o).fallbackTransition,
                c = i.get(o) || D_,
                u = new M_(Gl),
                d = new x_(this.id, o, t);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: t,
                  triggerName: o,
                  transition: l,
                  fromState: c,
                  toState: u,
                  player: d,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(t, e) {
          const i = this._engine;
          if (
            (t.childElementCount && this._signalRemovalForInnerTriggers(t, e),
            this.triggerLeaveAnimation(t, e, !0))
          )
            return;
          let r = !1;
          if (i.totalAnimations) {
            const s = i.players.length ? i.playersByQueriedElement.get(t) : [];
            if (s && s.length) r = !0;
            else {
              let o = t;
              for (; (o = o.parentNode); )
                if (i.statesByElement.get(o)) {
                  r = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(t), r))
            i.markElementAsRemoved(this.id, t, !1, e);
          else {
            const s = t[ii];
            (!s || s === ME) &&
              (i.afterFlush(() => this.clearElementCache(t)),
              i.destroyInnerAnimations(t),
              i._onRemovalComplete(t, e));
          }
        }
        insertNode(t, e) {
          ri(t, this._hostClassName);
        }
        drainQueuedTransitions(t) {
          const e = [];
          return (
            this._queue.forEach((i) => {
              const r = i.player;
              if (r.destroyed) return;
              const s = i.element,
                o = this._elementListeners.get(s);
              o &&
                o.forEach((a) => {
                  if (a.name == i.triggerName) {
                    const l = o_(
                      s,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (l._data = t), r_(i.player, a.phase, l, a.callback);
                  }
                }),
                r.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      r.destroy();
                    })
                  : e.push(i);
            }),
            (this._queue = []),
            e.sort((i, r) => {
              const s = i.transition.ast.depCount,
                o = r.transition.ast.depCount;
              return 0 == s || 0 == o
                ? s - o
                : this._engine.driver.containsElement(i.element, r.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(t) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, t);
        }
        elementContainsData(t) {
          let e = !1;
          return (
            this._elementListeners.has(t) && (e = !0),
            (e = !!this._queue.find((i) => i.element === t) || e),
            e
          );
        }
      }
      class hU {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this.driver = e),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (r, s) => {});
        }
        _onRemovalComplete(t, e) {
          this.onRemovalComplete(t, e);
        }
        get queuedPlayers() {
          const t = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((i) => {
                i.queued && t.push(i);
              });
            }),
            t
          );
        }
        createNamespace(t, e) {
          const i = new dU(t, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(i, e)
              : (this.newHostElements.set(e, i), this.collectEnterElement(e)),
            (this._namespaceLookup[t] = i)
          );
        }
        _balanceNamespaceList(t, e) {
          const i = this._namespaceList,
            r = this.namespacesByHostElement;
          if (i.length - 1 >= 0) {
            let o = !1,
              a = this.driver.getParentElement(e);
            for (; a; ) {
              const l = r.get(a);
              if (l) {
                const c = i.indexOf(l);
                i.splice(c + 1, 0, t), (o = !0);
                break;
              }
              a = this.driver.getParentElement(a);
            }
            o || i.unshift(t);
          } else i.push(t);
          return r.set(e, t), t;
        }
        register(t, e) {
          let i = this._namespaceLookup[t];
          return i || (i = this.createNamespace(t, e)), i;
        }
        registerTrigger(t, e, i) {
          let r = this._namespaceLookup[t];
          r && r.register(e, i) && this.totalAnimations++;
        }
        destroy(t, e) {
          if (!t) return;
          const i = this._fetchNamespace(t);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(i.hostElement),
              delete this._namespaceLookup[t];
            const r = this._namespaceList.indexOf(i);
            r >= 0 && this._namespaceList.splice(r, 1);
          }),
            this.afterFlushAnimationsDone(() => i.destroy(e));
        }
        _fetchNamespace(t) {
          return this._namespaceLookup[t];
        }
        fetchNamespacesByElement(t) {
          const e = new Set(),
            i = this.statesByElement.get(t);
          if (i)
            for (let r of i.values())
              if (r.namespaceId) {
                const s = this._fetchNamespace(r.namespaceId);
                s && e.add(s);
              }
          return e;
        }
        trigger(t, e, i, r) {
          if ($d(e)) {
            const s = this._fetchNamespace(t);
            if (s) return s.trigger(e, i, r), !0;
          }
          return !1;
        }
        insertNode(t, e, i, r) {
          if (!$d(e)) return;
          const s = e[ii];
          if (s && s.setForRemoval) {
            (s.setForRemoval = !1), (s.setForMove = !0);
            const o = this.collectedLeaveElements.indexOf(e);
            o >= 0 && this.collectedLeaveElements.splice(o, 1);
          }
          if (t) {
            const o = this._fetchNamespace(t);
            o && o.insertNode(e, i);
          }
          r && this.collectEnterElement(e);
        }
        collectEnterElement(t) {
          this.collectedEnterElements.push(t);
        }
        markElementAsDisabled(t, e) {
          e
            ? this.disabledNodes.has(t) ||
              (this.disabledNodes.add(t), ri(t, w_))
            : this.disabledNodes.has(t) &&
              (this.disabledNodes.delete(t), va(t, w_));
        }
        removeNode(t, e, i, r) {
          if ($d(e)) {
            const s = t ? this._fetchNamespace(t) : null;
            if (
              (s ? s.removeNode(e, r) : this.markElementAsRemoved(t, e, !1, r),
              i)
            ) {
              const o = this.namespacesByHostElement.get(e);
              o && o.id !== t && o.removeNode(e, r);
            }
          } else this._onRemovalComplete(e, r);
        }
        markElementAsRemoved(t, e, i, r, s) {
          this.collectedLeaveElements.push(e),
            (e[ii] = {
              namespaceId: t,
              setForRemoval: r,
              hasAnimation: i,
              removedBeforeQueried: !1,
              previousTriggersValues: s,
            });
        }
        listen(t, e, i, r, s) {
          return $d(e) ? this._fetchNamespace(t).listen(e, i, r, s) : () => {};
        }
        _buildInstruction(t, e, i, r, s) {
          return t.transition.build(
            this.driver,
            t.element,
            t.fromState.value,
            t.toState.value,
            i,
            r,
            t.fromState.options,
            t.toState.options,
            e,
            s
          );
        }
        destroyInnerAnimations(t) {
          let e = this.driver.query(t, Od, !0);
          e.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(t, d_, !0)),
              e.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(t) {
          const e = this.playersByElement.get(t);
          e &&
            e.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(t) {
          const e = this.playersByQueriedElement.get(t);
          e && e.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((t) => {
            if (this.players.length) return cs(this.players).onDone(() => t());
            t();
          });
        }
        processLeaveNode(t) {
          const e = t[ii];
          if (e && e.setForRemoval) {
            if (((t[ii] = ME), e.namespaceId)) {
              this.destroyInnerAnimations(t);
              const i = this._fetchNamespace(e.namespaceId);
              i && i.clearElementCache(t);
            }
            this._onRemovalComplete(t, e.setForRemoval);
          }
          t.classList?.contains(w_) && this.markElementAsDisabled(t, !1),
            this.driver.query(t, ".ng-animate-disabled", !0).forEach((i) => {
              this.markElementAsDisabled(i, !1);
            });
        }
        flush(t = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, r) =>
                this._balanceNamespaceList(i, r)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              ri(this.collectedEnterElements[i], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              e = this._flushAnimations(i, t);
            } finally {
              for (let r = 0; r < i.length; r++) i[r]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? cs(e).onDone(() => {
                    i.forEach((r) => r());
                  })
                : i.forEach((r) => r());
          }
        }
        reportError(t) {
          throw (function h3(n) {
            return new k(3402, !1);
          })();
        }
        _flushAnimations(t, e) {
          const i = new Hd(),
            r = [],
            s = new Map(),
            o = [],
            a = new Map(),
            l = new Map(),
            c = new Map(),
            u = new Set();
          this.disabledNodes.forEach((L) => {
            u.add(L);
            const H = this.driver.query(L, ".ng-animate-queued", !0);
            for (let Y = 0; Y < H.length; Y++) u.add(H[Y]);
          });
          const d = this.bodyNode,
            h = Array.from(this.statesByElement.keys()),
            f = EE(h, this.collectedEnterElements),
            p = new Map();
          let m = 0;
          f.forEach((L, H) => {
            const Y = u_ + m++;
            p.set(H, Y), L.forEach((Se) => ri(Se, Y));
          });
          const _ = [],
            v = new Set(),
            M = new Set();
          for (let L = 0; L < this.collectedLeaveElements.length; L++) {
            const H = this.collectedLeaveElements[L],
              Y = H[ii];
            Y &&
              Y.setForRemoval &&
              (_.push(H),
              v.add(H),
              Y.hasAnimation
                ? this.driver
                    .query(H, ".ng-star-inserted", !0)
                    .forEach((Se) => v.add(Se))
                : M.add(H));
          }
          const C = new Map(),
            D = EE(h, Array.from(v));
          D.forEach((L, H) => {
            const Y = kd + m++;
            C.set(H, Y), L.forEach((Se) => ri(Se, Y));
          }),
            t.push(() => {
              f.forEach((L, H) => {
                const Y = p.get(H);
                L.forEach((Se) => va(Se, Y));
              }),
                D.forEach((L, H) => {
                  const Y = C.get(H);
                  L.forEach((Se) => va(Se, Y));
                }),
                _.forEach((L) => {
                  this.processLeaveNode(L);
                });
            });
          const S = [],
            A = [];
          for (let L = this._namespaceList.length - 1; L >= 0; L--)
            this._namespaceList[L].drainQueuedTransitions(e).forEach((Y) => {
              const Se = Y.player,
                st = Y.element;
              if ((S.push(Se), this.collectedEnterElements.length)) {
                const on = st[ii];
                if (on && on.setForMove) {
                  if (
                    on.previousTriggersValues &&
                    on.previousTriggersValues.has(Y.triggerName)
                  ) {
                    const xo = on.previousTriggersValues.get(Y.triggerName),
                      fi = this.statesByElement.get(Y.element);
                    if (fi && fi.has(Y.triggerName)) {
                      const zf = fi.get(Y.triggerName);
                      (zf.value = xo), fi.set(Y.triggerName, zf);
                    }
                  }
                  return void Se.destroy();
                }
              }
              const gn = !d || !this.driver.containsElement(d, st),
                Rt = C.get(st),
                An = p.get(st),
                Je = this._buildInstruction(Y, i, An, Rt, gn);
              if (Je.errors && Je.errors.length) return void A.push(Je);
              if (gn)
                return (
                  Se.onStart(() => Xs(st, Je.fromStyles)),
                  Se.onDestroy(() => Xi(st, Je.toStyles)),
                  void r.push(Se)
                );
              if (Y.isFallbackTransition)
                return (
                  Se.onStart(() => Xs(st, Je.fromStyles)),
                  Se.onDestroy(() => Xi(st, Je.toStyles)),
                  void r.push(Se)
                );
              const $a = [];
              Je.timelines.forEach((on) => {
                (on.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(on.element) || $a.push(on);
              }),
                (Je.timelines = $a),
                i.append(st, Je.timelines),
                o.push({ instruction: Je, player: Se, element: st }),
                Je.queriedElements.forEach((on) => zn(a, on, []).push(Se)),
                Je.preStyleProps.forEach((on, xo) => {
                  if (on.size) {
                    let fi = l.get(xo);
                    fi || l.set(xo, (fi = new Set())),
                      on.forEach((zf, Gv) => fi.add(Gv));
                  }
                }),
                Je.postStyleProps.forEach((on, xo) => {
                  let fi = c.get(xo);
                  fi || c.set(xo, (fi = new Set())),
                    on.forEach((zf, Gv) => fi.add(Gv));
                });
            });
          if (A.length) {
            const L = [];
            A.forEach((H) => {
              L.push(
                (function f3(n, t) {
                  return new k(3505, !1);
                })()
              );
            }),
              S.forEach((H) => H.destroy()),
              this.reportError(L);
          }
          const O = new Map(),
            V = new Map();
          o.forEach((L) => {
            const H = L.element;
            i.has(H) &&
              (V.set(H, H),
              this._beforeAnimationBuild(
                L.player.namespaceId,
                L.instruction,
                O
              ));
          }),
            r.forEach((L) => {
              const H = L.element;
              this._getPreviousPlayers(
                H,
                !1,
                L.namespaceId,
                L.triggerName,
                null
              ).forEach((Se) => {
                zn(O, H, []).push(Se), Se.destroy();
              });
            });
          const j = _.filter((L) => TE(L, l, c)),
            ie = new Map();
          xE(ie, this.driver, M, c, Ar).forEach((L) => {
            TE(L, l, c) && j.push(L);
          });
          const ue = new Map();
          f.forEach((L, H) => {
            xE(ue, this.driver, new Set(L), l, "!");
          }),
            j.forEach((L) => {
              const H = ie.get(L),
                Y = ue.get(L);
              ie.set(
                L,
                new Map([
                  ...Array.from(H?.entries() ?? []),
                  ...Array.from(Y?.entries() ?? []),
                ])
              );
            });
          const Ne = [],
            vt = [],
            ee = {};
          o.forEach((L) => {
            const { element: H, player: Y, instruction: Se } = L;
            if (i.has(H)) {
              if (u.has(H))
                return (
                  Y.onDestroy(() => Xi(H, Se.toStyles)),
                  (Y.disabled = !0),
                  Y.overrideTotalTime(Se.totalTime),
                  void r.push(Y)
                );
              let st = ee;
              if (V.size > 1) {
                let Rt = H;
                const An = [];
                for (; (Rt = Rt.parentNode); ) {
                  const Je = V.get(Rt);
                  if (Je) {
                    st = Je;
                    break;
                  }
                  An.push(Rt);
                }
                An.forEach((Je) => V.set(Je, st));
              }
              const gn = this._buildAnimation(Y.namespaceId, Se, O, s, ue, ie);
              if ((Y.setRealPlayer(gn), st === ee)) Ne.push(Y);
              else {
                const Rt = this.playersByElement.get(st);
                Rt && Rt.length && (Y.parentPlayer = cs(Rt)), r.push(Y);
              }
            } else
              Xs(H, Se.fromStyles),
                Y.onDestroy(() => Xi(H, Se.toStyles)),
                vt.push(Y),
                u.has(H) && r.push(Y);
          }),
            vt.forEach((L) => {
              const H = s.get(L.element);
              if (H && H.length) {
                const Y = cs(H);
                L.setRealPlayer(Y);
              }
            }),
            r.forEach((L) => {
              L.parentPlayer ? L.syncPlayerEvents(L.parentPlayer) : L.destroy();
            });
          for (let L = 0; L < _.length; L++) {
            const H = _[L],
              Y = H[ii];
            if ((va(H, kd), Y && Y.hasAnimation)) continue;
            let Se = [];
            if (a.size) {
              let gn = a.get(H);
              gn && gn.length && Se.push(...gn);
              let Rt = this.driver.query(H, d_, !0);
              for (let An = 0; An < Rt.length; An++) {
                let Je = a.get(Rt[An]);
                Je && Je.length && Se.push(...Je);
              }
            }
            const st = Se.filter((gn) => !gn.destroyed);
            st.length ? gU(this, H, st) : this.processLeaveNode(H);
          }
          return (
            (_.length = 0),
            Ne.forEach((L) => {
              this.players.push(L),
                L.onDone(() => {
                  L.destroy();
                  const H = this.players.indexOf(L);
                  this.players.splice(H, 1);
                }),
                L.play();
            }),
            Ne
          );
        }
        elementContainsData(t, e) {
          let i = !1;
          const r = e[ii];
          return (
            r && r.setForRemoval && (i = !0),
            this.playersByElement.has(e) && (i = !0),
            this.playersByQueriedElement.has(e) && (i = !0),
            this.statesByElement.has(e) && (i = !0),
            this._fetchNamespace(t).elementContainsData(e) || i
          );
        }
        afterFlush(t) {
          this._flushFns.push(t);
        }
        afterFlushAnimationsDone(t) {
          this._whenQuietFns.push(t);
        }
        _getPreviousPlayers(t, e, i, r, s) {
          let o = [];
          if (e) {
            const a = this.playersByQueriedElement.get(t);
            a && (o = a);
          } else {
            const a = this.playersByElement.get(t);
            if (a) {
              const l = !s || s == Gl;
              a.forEach((c) => {
                c.queued || (!l && c.triggerName != r) || o.push(c);
              });
            }
          }
          return (
            (i || r) &&
              (o = o.filter(
                (a) => !((i && i != a.namespaceId) || (r && r != a.triggerName))
              )),
            o
          );
        }
        _beforeAnimationBuild(t, e, i) {
          const s = e.element,
            o = e.isRemovalTransition ? void 0 : t,
            a = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const l of e.timelines) {
            const c = l.element,
              u = c !== s,
              d = zn(i, c, []);
            this._getPreviousPlayers(c, u, o, a, e.toState).forEach((f) => {
              const p = f.getRealPlayer();
              p.beforeDestroy && p.beforeDestroy(), f.destroy(), d.push(f);
            });
          }
          Xs(s, e.fromStyles);
        }
        _buildAnimation(t, e, i, r, s, o) {
          const a = e.triggerName,
            l = e.element,
            c = [],
            u = new Set(),
            d = new Set(),
            h = e.timelines.map((p) => {
              const m = p.element;
              u.add(m);
              const _ = m[ii];
              if (_ && _.removedBeforeQueried)
                return new $l(p.duration, p.delay);
              const v = m !== l,
                M = (function _U(n) {
                  const t = [];
                  return SE(n, t), t;
                })((i.get(m) || cU).map((O) => O.getRealPlayer())).filter(
                  (O) => !!O.element && O.element === m
                ),
                C = s.get(m),
                D = o.get(m),
                S = Jx(0, this._normalizer, 0, p.keyframes, C, D),
                A = this._buildPlayer(p, S, M);
              if ((p.subTimeline && r && d.add(m), v)) {
                const O = new x_(t, a, m);
                O.setRealPlayer(A), c.push(O);
              }
              return A;
            });
          c.forEach((p) => {
            zn(this.playersByQueriedElement, p.element, []).push(p),
              p.onDone(() =>
                (function fU(n, t, e) {
                  let i = n.get(t);
                  if (i) {
                    if (i.length) {
                      const r = i.indexOf(e);
                      i.splice(r, 1);
                    }
                    0 == i.length && n.delete(t);
                  }
                  return i;
                })(this.playersByQueriedElement, p.element, p)
              );
          }),
            u.forEach((p) => ri(p, lE));
          const f = cs(h);
          return (
            f.onDestroy(() => {
              u.forEach((p) => va(p, lE)), Xi(l, e.toStyles);
            }),
            d.forEach((p) => {
              zn(r, p, []).push(f);
            }),
            f
          );
        }
        _buildPlayer(t, e, i) {
          return e.length > 0
            ? this.driver.animate(
                t.element,
                e,
                t.duration,
                t.delay,
                t.easing,
                i
              )
            : new $l(t.duration, t.delay);
        }
      }
      class x_ {
        constructor(t, e, i) {
          (this.namespaceId = t),
            (this.triggerName = e),
            (this.element = i),
            (this._player = new $l()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(t) {
          this._containsRealPlayer ||
            ((this._player = t),
            this._queuedCallbacks.forEach((e, i) => {
              e.forEach((r) => r_(t, i, void 0, r));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(t.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(t) {
          this.totalTime = t;
        }
        syncPlayerEvents(t) {
          const e = this._player;
          e.triggerCallback && t.onStart(() => e.triggerCallback("start")),
            t.onDone(() => this.finish()),
            t.onDestroy(() => this.destroy());
        }
        _queueEvent(t, e) {
          zn(this._queuedCallbacks, t, []).push(e);
        }
        onDone(t) {
          this.queued && this._queueEvent("done", t), this._player.onDone(t);
        }
        onStart(t) {
          this.queued && this._queueEvent("start", t), this._player.onStart(t);
        }
        onDestroy(t) {
          this.queued && this._queueEvent("destroy", t),
            this._player.onDestroy(t);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(t) {
          this.queued || this._player.setPosition(t);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(t) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(t);
        }
      }
      function $d(n) {
        return n && 1 === n.nodeType;
      }
      function DE(n, t) {
        const e = n.style.display;
        return (n.style.display = t ?? "none"), e;
      }
      function xE(n, t, e, i, r) {
        const s = [];
        e.forEach((l) => s.push(DE(l)));
        const o = [];
        i.forEach((l, c) => {
          const u = new Map();
          l.forEach((d) => {
            const h = t.computeStyle(c, d, r);
            u.set(d, h), (!h || 0 == h.length) && ((c[ii] = uU), o.push(c));
          }),
            n.set(c, u);
        });
        let a = 0;
        return e.forEach((l) => DE(l, s[a++])), o;
      }
      function EE(n, t) {
        const e = new Map();
        if ((n.forEach((a) => e.set(a, [])), 0 == t.length)) return e;
        const r = new Set(t),
          s = new Map();
        function o(a) {
          if (!a) return 1;
          let l = s.get(a);
          if (l) return l;
          const c = a.parentNode;
          return (l = e.has(c) ? c : r.has(c) ? 1 : o(c)), s.set(a, l), l;
        }
        return (
          t.forEach((a) => {
            const l = o(a);
            1 !== l && e.get(l).push(a);
          }),
          e
        );
      }
      function ri(n, t) {
        n.classList?.add(t);
      }
      function va(n, t) {
        n.classList?.remove(t);
      }
      function gU(n, t, e) {
        cs(e).onDone(() => n.processLeaveNode(t));
      }
      function SE(n, t) {
        for (let e = 0; e < n.length; e++) {
          const i = n[e];
          i instanceof Zx ? SE(i.players, t) : t.push(i);
        }
      }
      function TE(n, t, e) {
        const i = e.get(n);
        if (!i) return !1;
        let r = t.get(n);
        return r ? i.forEach((s) => r.add(s)) : t.set(n, i), e.delete(n), !0;
      }
      class qd {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (r, s) => {}),
            (this._transitionEngine = new hU(t, e, i)),
            (this._timelineEngine = new rU(t, e, i)),
            (this._transitionEngine.onRemovalComplete = (r, s) =>
              this.onRemovalComplete(r, s));
        }
        registerTrigger(t, e, i, r, s) {
          const o = t + "-" + r;
          let a = this._triggerCache[o];
          if (!a) {
            const l = [],
              u = m_(this._driver, s, l, []);
            if (l.length)
              throw (function t3(n, t) {
                return new k(3404, !1);
              })();
            (a = (function eU(n, t, e) {
              return new tU(n, t, e);
            })(r, u, this._normalizer)),
              (this._triggerCache[o] = a);
          }
          this._transitionEngine.registerTrigger(e, r, a);
        }
        register(t, e) {
          this._transitionEngine.register(t, e);
        }
        destroy(t, e) {
          this._transitionEngine.destroy(t, e);
        }
        onInsert(t, e, i, r) {
          this._transitionEngine.insertNode(t, e, i, r);
        }
        onRemove(t, e, i, r) {
          this._transitionEngine.removeNode(t, e, r || !1, i);
        }
        disableAnimations(t, e) {
          this._transitionEngine.markElementAsDisabled(t, e);
        }
        process(t, e, i, r) {
          if ("@" == i.charAt(0)) {
            const [s, o] = eE(i);
            this._timelineEngine.command(s, e, o, r);
          } else this._transitionEngine.trigger(t, e, i, r);
        }
        listen(t, e, i, r, s) {
          if ("@" == i.charAt(0)) {
            const [o, a] = eE(i);
            return this._timelineEngine.listen(o, e, a, s);
          }
          return this._transitionEngine.listen(t, e, i, r, s);
        }
        flush(t = -1) {
          this._transitionEngine.flush(t);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      let bU = (() => {
        class n {
          constructor(e, i, r) {
            (this._element = e),
              (this._startStyles = i),
              (this._endStyles = r),
              (this._state = 0);
            let s = n.initialStylesByElement.get(e);
            s || n.initialStylesByElement.set(e, (s = new Map())),
              (this._initialStyles = s);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Xi(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Xi(this._element, this._initialStyles),
                this._endStyles &&
                  (Xi(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (n.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (Xs(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (Xs(this._element, this._endStyles),
                  (this._endStyles = null)),
                Xi(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (n.initialStylesByElement = new WeakMap()), n;
      })();
      function E_(n) {
        let t = null;
        return (
          n.forEach((e, i) => {
            (function CU(n) {
              return "display" === n || "position" === n;
            })(i) && ((t = t || new Map()), t.set(i, e));
          }),
          t
        );
      }
      class AE {
        constructor(t, e, i, r) {
          (this.element = t),
            (this.keyframes = e),
            (this.options = i),
            (this._specialStyles = r),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const t = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            t,
            this.options
          )),
            (this._finalKeyframe = t.length ? t[t.length - 1] : new Map()),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(t) {
          const e = [];
          return (
            t.forEach((i) => {
              e.push(Object.fromEntries(i));
            }),
            e
          );
        }
        _triggerWebAnimation(t, e, i) {
          return t.animate(this._convertKeyframesToObject(e), i);
        }
        onStart(t) {
          this._originalOnStartFns.push(t), this._onStartFns.push(t);
        }
        onDone(t) {
          this._originalOnDoneFns.push(t), this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((t) => t()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        setPosition(t) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = t * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const t = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((i, r) => {
              "offset" !== r &&
                t.set(r, this._finished ? i : pE(this.element, r));
            }),
            (this.currentSnapshot = t);
        }
        triggerCallback(t) {
          const e = "start" === t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class wU {
        validateStyleProperty(t) {
          return !0;
        }
        validateAnimatableStyleProperty(t) {
          return !0;
        }
        matchesElement(t, e) {
          return !1;
        }
        containsElement(t, e) {
          return rE(t, e);
        }
        getParentElement(t) {
          return l_(t);
        }
        query(t, e, i) {
          return sE(t, e, i);
        }
        computeStyle(t, e, i) {
          return window.getComputedStyle(t)[e];
        }
        animate(t, e, i, r, s, o = []) {
          const l = {
            duration: i,
            delay: r,
            fill: 0 == r ? "both" : "forwards",
          };
          s && (l.easing = s);
          const c = new Map(),
            u = o.filter((f) => f instanceof AE);
          (function E3(n, t) {
            return 0 === n || 0 === t;
          })(i, r) &&
            u.forEach((f) => {
              f.currentSnapshot.forEach((p, m) => c.set(m, p));
            });
          let d = (function w3(n) {
            return n.length
              ? n[0] instanceof Map
                ? n
                : n.map((t) => cE(t))
              : [];
          })(e).map((f) => ds(f));
          d = (function S3(n, t, e) {
            if (e.size && t.length) {
              let i = t[0],
                r = [];
              if (
                (e.forEach((s, o) => {
                  i.has(o) || r.push(o), i.set(o, s);
                }),
                r.length)
              )
                for (let s = 1; s < t.length; s++) {
                  let o = t[s];
                  r.forEach((a) => o.set(a, pE(n, a)));
                }
            }
            return t;
          })(t, d, c);
          const h = (function vU(n, t) {
            let e = null,
              i = null;
            return (
              Array.isArray(t) && t.length
                ? ((e = E_(t[0])), t.length > 1 && (i = E_(t[t.length - 1])))
                : t instanceof Map && (e = E_(t)),
              e || i ? new bU(n, e, i) : null
            );
          })(t, d);
          return new AE(t, d, l, h);
        }
      }
      let MU = (() => {
        class n extends Gx {
          constructor(e, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(i.body, {
                id: "0",
                encapsulation: mi.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const r = Array.isArray(e) ? Kx(e) : e;
            return (
              kE(this._renderer, null, i, "register", [r]),
              new DU(i, this._renderer)
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(pl), x(ae));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class DU extends class Oz {} {
        constructor(t, e) {
          super(), (this._id = t), (this._renderer = e);
        }
        create(t, e) {
          return new xU(this._id, t, e || {}, this._renderer);
        }
      }
      class xU {
        constructor(t, e, i, r) {
          (this.id = t),
            (this.element = e),
            (this._renderer = r),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", i);
        }
        _listen(t, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${t}`, e);
        }
        _command(t, ...e) {
          return kE(this._renderer, this.element, this.id, t, e);
        }
        onDone(t) {
          this._listen("done", t);
        }
        onStart(t) {
          this._listen("start", t);
        }
        onDestroy(t) {
          this._listen("destroy", t);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(t) {
          this._command("setPosition", t);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function kE(n, t, e, i, r) {
        return n.setProperty(t, `@@${e}:${i}`, r);
      }
      const IE = "@.disabled";
      let EU = (() => {
        class n {
          constructor(e, i, r) {
            (this.delegate = e),
              (this.engine = i),
              (this._zone = r),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (i.onRemovalComplete = (s, o) => {
                const a = o?.parentNode(s);
                a && o.removeChild(a, s);
              });
          }
          createRenderer(e, i) {
            const s = this.delegate.createRenderer(e, i);
            if (!(e && i && i.data && i.data.animation)) {
              let u = this._rendererCache.get(s);
              return (
                u ||
                  ((u = new OE("", s, this.engine)),
                  this._rendererCache.set(s, u)),
                u
              );
            }
            const o = i.id,
              a = i.id + "-" + this._currentId;
            this._currentId++, this.engine.register(a, e);
            const l = (u) => {
              Array.isArray(u)
                ? u.forEach(l)
                : this.engine.registerTrigger(o, a, e, u.name, u);
            };
            return i.data.animation.forEach(l), new SU(this, a, s, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, i, r) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => i(r))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((s) => {
                        const [o, a] = s;
                        o(a);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, r]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(pl), x(qd), x(Q));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class OE {
        constructor(t, e, i) {
          (this.namespaceId = t),
            (this.delegate = e),
            (this.engine = i),
            (this.destroyNode = this.delegate.destroyNode
              ? (r) => e.destroyNode(r)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy();
        }
        createElement(t, e) {
          return this.delegate.createElement(t, e);
        }
        createComment(t) {
          return this.delegate.createComment(t);
        }
        createText(t) {
          return this.delegate.createText(t);
        }
        appendChild(t, e) {
          this.delegate.appendChild(t, e),
            this.engine.onInsert(this.namespaceId, e, t, !1);
        }
        insertBefore(t, e, i, r = !0) {
          this.delegate.insertBefore(t, e, i),
            this.engine.onInsert(this.namespaceId, e, t, r);
        }
        removeChild(t, e, i) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, i);
        }
        selectRootElement(t, e) {
          return this.delegate.selectRootElement(t, e);
        }
        parentNode(t) {
          return this.delegate.parentNode(t);
        }
        nextSibling(t) {
          return this.delegate.nextSibling(t);
        }
        setAttribute(t, e, i, r) {
          this.delegate.setAttribute(t, e, i, r);
        }
        removeAttribute(t, e, i) {
          this.delegate.removeAttribute(t, e, i);
        }
        addClass(t, e) {
          this.delegate.addClass(t, e);
        }
        removeClass(t, e) {
          this.delegate.removeClass(t, e);
        }
        setStyle(t, e, i, r) {
          this.delegate.setStyle(t, e, i, r);
        }
        removeStyle(t, e, i) {
          this.delegate.removeStyle(t, e, i);
        }
        setProperty(t, e, i) {
          "@" == e.charAt(0) && e == IE
            ? this.disableAnimations(t, !!i)
            : this.delegate.setProperty(t, e, i);
        }
        setValue(t, e) {
          this.delegate.setValue(t, e);
        }
        listen(t, e, i) {
          return this.delegate.listen(t, e, i);
        }
        disableAnimations(t, e) {
          this.engine.disableAnimations(t, e);
        }
      }
      class SU extends OE {
        constructor(t, e, i, r) {
          super(e, i, r), (this.factory = t), (this.namespaceId = e);
        }
        setProperty(t, e, i) {
          "@" == e.charAt(0)
            ? "." == e.charAt(1) && e == IE
              ? this.disableAnimations(t, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, t, e.slice(1), i)
            : this.delegate.setProperty(t, e, i);
        }
        listen(t, e, i) {
          if ("@" == e.charAt(0)) {
            const r = (function TU(n) {
              switch (n) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return n;
              }
            })(t);
            let s = e.slice(1),
              o = "";
            return (
              "@" != s.charAt(0) &&
                ([s, o] = (function AU(n) {
                  const t = n.indexOf(".");
                  return [n.substring(0, t), n.slice(t + 1)];
                })(s)),
              this.engine.listen(this.namespaceId, r, s, o, (a) => {
                this.factory.scheduleListenerCallback(a._data || -1, i, a);
              })
            );
          }
          return this.delegate.listen(t, e, i);
        }
      }
      const RE = [
          { provide: Gx, useClass: MU },
          {
            provide: b_,
            useFactory: function IU() {
              return new X3();
            },
          },
          {
            provide: qd,
            useClass: (() => {
              class n extends qd {
                constructor(e, i, r, s) {
                  super(e.body, i, r);
                }
                ngOnDestroy() {
                  this.flush();
                }
              }
              return (
                (n.ɵfac = function (e) {
                  return new (e || n)(x(ae), x(c_), x(b_), x(ya));
                }),
                (n.ɵprov = F({ token: n, factory: n.ɵfac })),
                n
              );
            })(),
          },
          {
            provide: pl,
            useFactory: function OU(n, t, e) {
              return new EU(n, t, e);
            },
            deps: [Ad, qd, Q],
          },
        ],
        S_ = [
          { provide: c_, useFactory: () => new wU() },
          { provide: Hn, useValue: "BrowserAnimations" },
          ...RE,
        ],
        PE = [
          { provide: c_, useClass: oE },
          { provide: Hn, useValue: "NoopAnimations" },
          ...RE,
        ];
      let RU = (() => {
        class n {
          static withConfig(e) {
            return { ngModule: n, providers: e.disableAnimations ? PE : S_ };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = re({ type: n })),
          (n.ɵinj = ne({ providers: S_, imports: [Hx] })),
          n
        );
      })();
      const { isArray: PU } = Array,
        { getPrototypeOf: FU, prototype: NU, keys: LU } = Object;
      function FE(n) {
        if (1 === n.length) {
          const t = n[0];
          if (PU(t)) return { args: t, keys: null };
          if (
            (function BU(n) {
              return n && "object" == typeof n && FU(n) === NU;
            })(t)
          ) {
            const e = LU(t);
            return { args: e.map((i) => t[i]), keys: e };
          }
        }
        return { args: n, keys: null };
      }
      const { isArray: VU } = Array;
      function T_(n) {
        return Z((t) =>
          (function jU(n, t) {
            return VU(t) ? n(...t) : n(t);
          })(n, t)
        );
      }
      function NE(n, t) {
        return n.reduce((e, i, r) => ((e[i] = t[r]), e), {});
      }
      let BE = (() => {
          class n {
            constructor(e, i) {
              (this._renderer = e),
                (this._elementRef = i),
                (this.onChange = (r) => {}),
                (this.onTouched = () => {});
            }
            setProperty(e, i) {
              this._renderer.setProperty(this._elementRef.nativeElement, e, i);
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            registerOnChange(e) {
              this.onChange = e;
            }
            setDisabledState(e) {
              this.setProperty("disabled", e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(br), g(ce));
            }),
            (n.ɵdir = N({ type: n })),
            n
          );
        })(),
        Qs = (() => {
          class n extends BE {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = tt(n)))(i || n);
              };
            })()),
            (n.ɵdir = N({ type: n, features: [q] })),
            n
          );
        })();
      const si = new R("NgValueAccessor"),
        zU = { provide: si, useExisting: Le(() => oi), multi: !0 },
        $U = new R("CompositionEventMode");
      let oi = (() => {
        class n extends BE {
          constructor(e, i, r) {
            super(e, i),
              (this._compositionMode = r),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function UU() {
                  const n = Yi() ? Yi().getUserAgent() : "";
                  return /android (\d+)/.test(n.toLowerCase());
                })());
          }
          writeValue(e) {
            this.setProperty("value", e ?? "");
          }
          _handleInput(e) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(e);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(e) {
            (this._composing = !1), this._compositionMode && this.onChange(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(br), g(ce), g($U, 8));
          }),
          (n.ɵdir = N({
            type: n,
            selectors: [
              ["input", "formControlName", "", 3, "type", "checkbox"],
              ["textarea", "formControlName", ""],
              ["input", "formControl", "", 3, "type", "checkbox"],
              ["textarea", "formControl", ""],
              ["input", "ngModel", "", 3, "type", "checkbox"],
              ["textarea", "ngModel", ""],
              ["", "ngDefaultControl", ""],
            ],
            hostBindings: function (e, i) {
              1 & e &&
                P("input", function (s) {
                  return i._handleInput(s.target.value);
                })("blur", function () {
                  return i.onTouched();
                })("compositionstart", function () {
                  return i._compositionStart();
                })("compositionend", function (s) {
                  return i._compositionEnd(s.target.value);
                });
            },
            features: [pe([zU]), q],
          })),
          n
        );
      })();
      function hs(n) {
        return (
          null == n ||
          (("string" == typeof n || Array.isArray(n)) && 0 === n.length)
        );
      }
      function jE(n) {
        return null != n && "number" == typeof n.length;
      }
      const tn = new R("NgValidators"),
        fs = new R("NgAsyncValidators"),
        WU =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class wt {
        static min(t) {
          return (function HE(n) {
            return (t) => {
              if (hs(t.value) || hs(n)) return null;
              const e = parseFloat(t.value);
              return !isNaN(e) && e < n
                ? { min: { min: n, actual: t.value } }
                : null;
            };
          })(t);
        }
        static max(t) {
          return (function zE(n) {
            return (t) => {
              if (hs(t.value) || hs(n)) return null;
              const e = parseFloat(t.value);
              return !isNaN(e) && e > n
                ? { max: { max: n, actual: t.value } }
                : null;
            };
          })(t);
        }
        static required(t) {
          return (function UE(n) {
            return hs(n.value) ? { required: !0 } : null;
          })(t);
        }
        static requiredTrue(t) {
          return (function $E(n) {
            return !0 === n.value ? null : { required: !0 };
          })(t);
        }
        static email(t) {
          return (function qE(n) {
            return hs(n.value) || WU.test(n.value) ? null : { email: !0 };
          })(t);
        }
        static minLength(t) {
          return (function WE(n) {
            return (t) =>
              hs(t.value) || !jE(t.value)
                ? null
                : t.value.length < n
                ? {
                    minlength: {
                      requiredLength: n,
                      actualLength: t.value.length,
                    },
                  }
                : null;
          })(t);
        }
        static maxLength(t) {
          return GE(t);
        }
        static pattern(t) {
          return (function YE(n) {
            if (!n) return Gd;
            let t, e;
            return (
              "string" == typeof n
                ? ((e = ""),
                  "^" !== n.charAt(0) && (e += "^"),
                  (e += n),
                  "$" !== n.charAt(n.length - 1) && (e += "$"),
                  (t = new RegExp(e)))
                : ((e = n.toString()), (t = n)),
              (i) => {
                if (hs(i.value)) return null;
                const r = i.value;
                return t.test(r)
                  ? null
                  : { pattern: { requiredPattern: e, actualValue: r } };
              }
            );
          })(t);
        }
        static nullValidator(t) {
          return null;
        }
        static compose(t) {
          return eS(t);
        }
        static composeAsync(t) {
          return tS(t);
        }
      }
      function GE(n) {
        return (t) =>
          jE(t.value) && t.value.length > n
            ? { maxlength: { requiredLength: n, actualLength: t.value.length } }
            : null;
      }
      function Gd(n) {
        return null;
      }
      function KE(n) {
        return null != n;
      }
      function XE(n) {
        return xl(n) ? Dt(n) : n;
      }
      function ZE(n) {
        let t = {};
        return (
          n.forEach((e) => {
            t = null != e ? { ...t, ...e } : t;
          }),
          0 === Object.keys(t).length ? null : t
        );
      }
      function QE(n, t) {
        return t.map((e) => e(n));
      }
      function JE(n) {
        return n.map((t) =>
          (function GU(n) {
            return !n.validate;
          })(t)
            ? t
            : (e) => t.validate(e)
        );
      }
      function eS(n) {
        if (!n) return null;
        const t = n.filter(KE);
        return 0 == t.length
          ? null
          : function (e) {
              return ZE(QE(e, t));
            };
      }
      function A_(n) {
        return null != n ? eS(JE(n)) : null;
      }
      function tS(n) {
        if (!n) return null;
        const t = n.filter(KE);
        return 0 == t.length
          ? null
          : function (e) {
              return (function LE(...n) {
                const t = mb(n),
                  { args: e, keys: i } = FE(n),
                  r = new We((s) => {
                    const { length: o } = e;
                    if (!o) return void s.complete();
                    const a = new Array(o);
                    let l = o,
                      c = o;
                    for (let u = 0; u < o; u++) {
                      let d = !1;
                      _n(e[u]).subscribe(
                        ot(
                          s,
                          (h) => {
                            d || ((d = !0), c--), (a[u] = h);
                          },
                          () => l--,
                          void 0,
                          () => {
                            (!l || !d) &&
                              (c || s.next(i ? NE(i, a) : a), s.complete());
                          }
                        )
                      );
                    }
                  });
                return t ? r.pipe(T_(t)) : r;
              })(QE(e, t).map(XE)).pipe(Z(ZE));
            };
      }
      function k_(n) {
        return null != n ? tS(JE(n)) : null;
      }
      function nS(n, t) {
        return null === n ? [t] : Array.isArray(n) ? [...n, t] : [n, t];
      }
      function iS(n) {
        return n._rawValidators;
      }
      function rS(n) {
        return n._rawAsyncValidators;
      }
      function I_(n) {
        return n ? (Array.isArray(n) ? n : [n]) : [];
      }
      function Yd(n, t) {
        return Array.isArray(n) ? n.includes(t) : n === t;
      }
      function sS(n, t) {
        const e = I_(t);
        return (
          I_(n).forEach((r) => {
            Yd(e, r) || e.push(r);
          }),
          e
        );
      }
      function oS(n, t) {
        return I_(t).filter((e) => !Yd(n, e));
      }
      class aS {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(t) {
          (this._rawValidators = t || []),
            (this._composedValidatorFn = A_(this._rawValidators));
        }
        _setAsyncValidators(t) {
          (this._rawAsyncValidators = t || []),
            (this._composedAsyncValidatorFn = k_(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(t) {
          this._onDestroyCallbacks.push(t);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((t) => t()),
            (this._onDestroyCallbacks = []);
        }
        reset(t) {
          this.control && this.control.reset(t);
        }
        hasError(t, e) {
          return !!this.control && this.control.hasError(t, e);
        }
        getError(t, e) {
          return this.control ? this.control.getError(t, e) : null;
        }
      }
      class mn extends aS {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Zi extends aS {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class lS {
        constructor(t) {
          this._cd = t;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let Qi = (() => {
          class n extends lS {
            constructor(e) {
              super(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Zi, 2));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["", "formControlName", ""],
                ["", "ngModel", ""],
                ["", "formControl", ""],
              ],
              hostVars: 14,
              hostBindings: function (e, i) {
                2 & e &&
                  Ye("ng-untouched", i.isUntouched)("ng-touched", i.isTouched)(
                    "ng-pristine",
                    i.isPristine
                  )("ng-dirty", i.isDirty)("ng-valid", i.isValid)(
                    "ng-invalid",
                    i.isInvalid
                  )("ng-pending", i.isPending);
              },
              features: [q],
            })),
            n
          );
        })(),
        Ji = (() => {
          class n extends lS {
            constructor(e) {
              super(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(mn, 10));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["", "formGroupName", ""],
                ["", "formArrayName", ""],
                ["", "ngModelGroup", ""],
                ["", "formGroup", ""],
                ["form", 3, "ngNoForm", ""],
                ["", "ngForm", ""],
              ],
              hostVars: 16,
              hostBindings: function (e, i) {
                2 & e &&
                  Ye("ng-untouched", i.isUntouched)("ng-touched", i.isTouched)(
                    "ng-pristine",
                    i.isPristine
                  )("ng-dirty", i.isDirty)("ng-valid", i.isValid)(
                    "ng-invalid",
                    i.isInvalid
                  )("ng-pending", i.isPending)("ng-submitted", i.isSubmitted);
              },
              features: [q],
            })),
            n
          );
        })();
      const Yl = "VALID",
        Xd = "INVALID",
        ba = "PENDING",
        Kl = "DISABLED";
      function F_(n) {
        return (Zd(n) ? n.validators : n) || null;
      }
      function uS(n) {
        return Array.isArray(n) ? A_(n) : n || null;
      }
      function N_(n, t) {
        return (Zd(t) ? t.asyncValidators : n) || null;
      }
      function dS(n) {
        return Array.isArray(n) ? k_(n) : n || null;
      }
      function Zd(n) {
        return null != n && !Array.isArray(n) && "object" == typeof n;
      }
      function hS(n, t, e) {
        const i = n.controls;
        if (!(t ? Object.keys(i) : i).length) throw new k(1e3, "");
        if (!i[e]) throw new k(1001, "");
      }
      function fS(n, t, e) {
        n._forEachChild((i, r) => {
          if (void 0 === e[r]) throw new k(1002, "");
        });
      }
      class Qd {
        constructor(t, e) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            (this._rawValidators = t),
            (this._rawAsyncValidators = e),
            (this._composedValidatorFn = uS(this._rawValidators)),
            (this._composedAsyncValidatorFn = dS(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(t) {
          this._rawValidators = this._composedValidatorFn = t;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(t) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = t;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === Yl;
        }
        get invalid() {
          return this.status === Xd;
        }
        get pending() {
          return this.status == ba;
        }
        get disabled() {
          return this.status === Kl;
        }
        get enabled() {
          return this.status !== Kl;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(t) {
          (this._rawValidators = t), (this._composedValidatorFn = uS(t));
        }
        setAsyncValidators(t) {
          (this._rawAsyncValidators = t),
            (this._composedAsyncValidatorFn = dS(t));
        }
        addValidators(t) {
          this.setValidators(sS(t, this._rawValidators));
        }
        addAsyncValidators(t) {
          this.setAsyncValidators(sS(t, this._rawAsyncValidators));
        }
        removeValidators(t) {
          this.setValidators(oS(t, this._rawValidators));
        }
        removeAsyncValidators(t) {
          this.setAsyncValidators(oS(t, this._rawAsyncValidators));
        }
        hasValidator(t) {
          return Yd(this._rawValidators, t);
        }
        hasAsyncValidator(t) {
          return Yd(this._rawAsyncValidators, t);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(t = {}) {
          (this.touched = !0),
            this._parent && !t.onlySelf && this._parent.markAsTouched(t);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((t) => t.markAllAsTouched());
        }
        markAsUntouched(t = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        markAsDirty(t = {}) {
          (this.pristine = !1),
            this._parent && !t.onlySelf && this._parent.markAsDirty(t);
        }
        markAsPristine(t = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        markAsPending(t = {}) {
          (this.status = ba),
            !1 !== t.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !t.onlySelf && this._parent.markAsPending(t);
        }
        disable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = Kl),
            (this.errors = null),
            this._forEachChild((i) => {
              i.disable({ ...t, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...t, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!0));
        }
        enable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = Yl),
            this._forEachChild((i) => {
              i.enable({ ...t, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            }),
            this._updateAncestors({ ...t, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!1));
        }
        _updateAncestors(t) {
          this._parent &&
            !t.onlySelf &&
            (this._parent.updateValueAndValidity(t),
            t.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(t) {
          this._parent = t;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(t = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === Yl || this.status === ba) &&
                this._runAsyncValidator(t.emitEvent)),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !t.onlySelf &&
              this._parent.updateValueAndValidity(t);
        }
        _updateTreeValidity(t = { emitEvent: !0 }) {
          this._forEachChild((e) => e._updateTreeValidity(t)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? Kl : Yl;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(t) {
          if (this.asyncValidator) {
            (this.status = ba), (this._hasOwnPendingAsyncValidator = !0);
            const e = XE(this.asyncValidator(this));
            this._asyncValidationSubscription = e.subscribe((i) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(i, { emitEvent: t });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(t, e = {}) {
          (this.errors = t), this._updateControlsErrors(!1 !== e.emitEvent);
        }
        get(t) {
          let e = t;
          return null == e ||
            (Array.isArray(e) || (e = e.split(".")), 0 === e.length)
            ? null
            : e.reduce((i, r) => i && i._find(r), this);
        }
        getError(t, e) {
          const i = e ? this.get(e) : this;
          return i && i.errors ? i.errors[t] : null;
        }
        hasError(t, e) {
          return !!this.getError(t, e);
        }
        get root() {
          let t = this;
          for (; t._parent; ) t = t._parent;
          return t;
        }
        _updateControlsErrors(t) {
          (this.status = this._calculateStatus()),
            t && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(t);
        }
        _initObservables() {
          (this.valueChanges = new fe()), (this.statusChanges = new fe());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? Kl
            : this.errors
            ? Xd
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(ba)
            ? ba
            : this._anyControlsHaveStatus(Xd)
            ? Xd
            : Yl;
        }
        _anyControlsHaveStatus(t) {
          return this._anyControls((e) => e.status === t);
        }
        _anyControlsDirty() {
          return this._anyControls((t) => t.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((t) => t.touched);
        }
        _updatePristine(t = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        _updateTouched(t = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        _registerOnCollectionChange(t) {
          this._onCollectionChange = t;
        }
        _setUpdateStrategy(t) {
          Zd(t) && null != t.updateOn && (this._updateOn = t.updateOn);
        }
        _parentMarkedDirty(t) {
          return (
            !t &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(t) {
          return null;
        }
      }
      class Jd extends Qd {
        constructor(t, e, i) {
          super(F_(e), N_(i, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(t, e) {
          return this.controls[t]
            ? this.controls[t]
            : ((this.controls[t] = e),
              e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange),
              e);
        }
        addControl(t, e, i = {}) {
          this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(t, e = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        setControl(t, e, i = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            e && this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        contains(t) {
          return this.controls.hasOwnProperty(t) && this.controls[t].enabled;
        }
        setValue(t, e = {}) {
          fS(this, 0, t),
            Object.keys(t).forEach((i) => {
              hS(this, !0, i),
                this.controls[i].setValue(t[i], {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (Object.keys(t).forEach((i) => {
              const r = this.controls[i];
              r && r.patchValue(t[i], { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = {}, e = {}) {
          this._forEachChild((i, r) => {
            i.reset(t[r], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (t, e, i) => ((t[i] = e.getRawValue()), t)
          );
        }
        _syncPendingControls() {
          let t = this._reduceChildren(
            !1,
            (e, i) => !!i._syncPendingControls() || e
          );
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _forEachChild(t) {
          Object.keys(this.controls).forEach((e) => {
            const i = this.controls[e];
            i && t(i, e);
          });
        }
        _setUpControls() {
          this._forEachChild((t) => {
            t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(t) {
          for (const [e, i] of Object.entries(this.controls))
            if (this.contains(e) && t(i)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (e, i, r) => ((i.enabled || this.disabled) && (e[r] = i.value), e)
          );
        }
        _reduceChildren(t, e) {
          let i = t;
          return (
            this._forEachChild((r, s) => {
              i = e(i, r, s);
            }),
            i
          );
        }
        _allControlsDisabled() {
          for (const t of Object.keys(this.controls))
            if (this.controls[t].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(t) {
          return this.controls.hasOwnProperty(t) ? this.controls[t] : null;
        }
      }
      function Xl(n, t) {
        L_(n, t),
          t.valueAccessor.writeValue(n.value),
          n.disabled && t.valueAccessor.setDisabledState?.(!0),
          (function n$(n, t) {
            t.valueAccessor.registerOnChange((e) => {
              (n._pendingValue = e),
                (n._pendingChange = !0),
                (n._pendingDirty = !0),
                "change" === n.updateOn && pS(n, t);
            });
          })(n, t),
          (function r$(n, t) {
            const e = (i, r) => {
              t.valueAccessor.writeValue(i), r && t.viewToModelUpdate(i);
            };
            n.registerOnChange(e),
              t._registerOnDestroy(() => {
                n._unregisterOnChange(e);
              });
          })(n, t),
          (function i$(n, t) {
            t.valueAccessor.registerOnTouched(() => {
              (n._pendingTouched = !0),
                "blur" === n.updateOn && n._pendingChange && pS(n, t),
                "submit" !== n.updateOn && n.markAsTouched();
            });
          })(n, t),
          (function t$(n, t) {
            if (t.valueAccessor.setDisabledState) {
              const e = (i) => {
                t.valueAccessor.setDisabledState(i);
              };
              n.registerOnDisabledChange(e),
                t._registerOnDestroy(() => {
                  n._unregisterOnDisabledChange(e);
                });
            }
          })(n, t);
      }
      function th(n, t, e = !0) {
        const i = () => {};
        t.valueAccessor &&
          (t.valueAccessor.registerOnChange(i),
          t.valueAccessor.registerOnTouched(i)),
          ih(n, t),
          n &&
            (t._invokeOnDestroyCallbacks(),
            n._registerOnCollectionChange(() => {}));
      }
      function nh(n, t) {
        n.forEach((e) => {
          e.registerOnValidatorChange && e.registerOnValidatorChange(t);
        });
      }
      function L_(n, t) {
        const e = iS(n);
        null !== t.validator
          ? n.setValidators(nS(e, t.validator))
          : "function" == typeof e && n.setValidators([e]);
        const i = rS(n);
        null !== t.asyncValidator
          ? n.setAsyncValidators(nS(i, t.asyncValidator))
          : "function" == typeof i && n.setAsyncValidators([i]);
        const r = () => n.updateValueAndValidity();
        nh(t._rawValidators, r), nh(t._rawAsyncValidators, r);
      }
      function ih(n, t) {
        let e = !1;
        if (null !== n) {
          if (null !== t.validator) {
            const r = iS(n);
            if (Array.isArray(r) && r.length > 0) {
              const s = r.filter((o) => o !== t.validator);
              s.length !== r.length && ((e = !0), n.setValidators(s));
            }
          }
          if (null !== t.asyncValidator) {
            const r = rS(n);
            if (Array.isArray(r) && r.length > 0) {
              const s = r.filter((o) => o !== t.asyncValidator);
              s.length !== r.length && ((e = !0), n.setAsyncValidators(s));
            }
          }
        }
        const i = () => {};
        return nh(t._rawValidators, i), nh(t._rawAsyncValidators, i), e;
      }
      function pS(n, t) {
        n._pendingDirty && n.markAsDirty(),
          n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
          t.viewToModelUpdate(n._pendingValue),
          (n._pendingChange = !1);
      }
      function mS(n, t) {
        L_(n, t);
      }
      function _S(n, t) {
        n._syncPendingControls(),
          t.forEach((e) => {
            const i = e.control;
            "submit" === i.updateOn &&
              i._pendingChange &&
              (e.viewToModelUpdate(i._pendingValue), (i._pendingChange = !1));
          });
      }
      const c$ = { provide: mn, useExisting: Le(() => Ql) },
        Zl = (() => Promise.resolve(null))();
      let Ql = (() => {
        class n extends mn {
          constructor(e, i) {
            super(),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new fe()),
              (this.form = new Jd({}, A_(e), k_(i)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(e) {
            Zl.then(() => {
              const i = this._findContainer(e.path);
              (e.control = i.registerControl(e.name, e.control)),
                Xl(e.control, e),
                e.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(e);
            });
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            Zl.then(() => {
              const i = this._findContainer(e.path);
              i && i.removeControl(e.name), this._directives.delete(e);
            });
          }
          addFormGroup(e) {
            Zl.then(() => {
              const i = this._findContainer(e.path),
                r = new Jd({});
              mS(r, e),
                i.registerControl(e.name, r),
                r.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(e) {
            Zl.then(() => {
              const i = this._findContainer(e.path);
              i && i.removeControl(e.name);
            });
          }
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          updateModel(e, i) {
            Zl.then(() => {
              this.form.get(e.path).setValue(i);
            });
          }
          setValue(e) {
            this.control.setValue(e);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              _S(this.form, this._directives),
              this.ngSubmit.emit(e),
              !1
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e) {
            this.form.reset(e), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(e) {
            return e.pop(), e.length ? this.form.get(e) : this.form;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(tn, 10), g(fs, 10));
          }),
          (n.ɵdir = N({
            type: n,
            selectors: [
              ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
              ["ng-form"],
              ["", "ngForm", ""],
            ],
            hostBindings: function (e, i) {
              1 & e &&
                P("submit", function (s) {
                  return i.onSubmit(s);
                })("reset", function () {
                  return i.onReset();
                });
            },
            inputs: { options: ["ngFormOptions", "options"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [pe([c$]), q],
          })),
          n
        );
      })();
      function yS(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      function vS(n) {
        return (
          "object" == typeof n &&
          null !== n &&
          2 === Object.keys(n).length &&
          "value" in n &&
          "disabled" in n
        );
      }
      const Jl = class extends Qd {
        constructor(t = null, e, i) {
          super(F_(e), N_(i, e)),
            (this.defaultValue = null),
            (this._onChange = []),
            (this._pendingChange = !1),
            this._applyFormState(t),
            this._setUpdateStrategy(e),
            this._initObservables(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            }),
            Zd(e) &&
              (e.nonNullable || e.initialValueIsDefault) &&
              (this.defaultValue = vS(t) ? t.value : t);
        }
        setValue(t, e = {}) {
          (this.value = this._pendingValue = t),
            this._onChange.length &&
              !1 !== e.emitModelToViewChange &&
              this._onChange.forEach((i) =>
                i(this.value, !1 !== e.emitViewToModelChange)
              ),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          this.setValue(t, e);
        }
        reset(t = this.defaultValue, e = {}) {
          this._applyFormState(t),
            this.markAsPristine(e),
            this.markAsUntouched(e),
            this.setValue(this.value, e),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(t) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(t) {
          this._onChange.push(t);
        }
        _unregisterOnChange(t) {
          yS(this._onChange, t);
        }
        registerOnDisabledChange(t) {
          this._onDisabledChange.push(t);
        }
        _unregisterOnDisabledChange(t) {
          yS(this._onDisabledChange, t);
        }
        _forEachChild(t) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(t) {
          vS(t)
            ? ((this.value = this._pendingValue = t.value),
              t.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = t);
        }
      };
      let er = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""],
              ],
              hostAttrs: ["novalidate", ""],
            })),
            n
          );
        })(),
        xS = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({})),
            n
          );
        })();
      const j_ = new R("NgModelWithFormControlWarning"),
        y$ = { provide: mn, useExisting: Le(() => En) };
      let En = (() => {
        class n extends mn {
          constructor(e, i) {
            super(),
              (this.validators = e),
              (this.asyncValidators = i),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new fe()),
              this._setValidators(e),
              this._setAsyncValidators(i);
          }
          ngOnChanges(e) {
            this._checkFormPresent(),
              e.hasOwnProperty("form") &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (ih(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(e) {
            const i = this.form.get(e.path);
            return (
              Xl(i, e),
              i.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(e),
              i
            );
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            th(e.control || null, e, !1),
              (function l$(n, t) {
                const e = n.indexOf(t);
                e > -1 && n.splice(e, 1);
              })(this.directives, e);
          }
          addFormGroup(e) {
            this._setUpFormContainer(e);
          }
          removeFormGroup(e) {
            this._cleanUpFormContainer(e);
          }
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          addFormArray(e) {
            this._setUpFormContainer(e);
          }
          removeFormArray(e) {
            this._cleanUpFormContainer(e);
          }
          getFormArray(e) {
            return this.form.get(e.path);
          }
          updateModel(e, i) {
            this.form.get(e.path).setValue(i);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              _S(this.form, this.directives),
              this.ngSubmit.emit(e),
              !1
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e) {
            this.form.reset(e), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((e) => {
              const i = e.control,
                r = this.form.get(e.path);
              i !== r &&
                (th(i || null, e),
                ((n) => n instanceof Jl)(r) && (Xl(r, e), (e.control = r)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(e) {
            const i = this.form.get(e.path);
            mS(i, e), i.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(e) {
            if (this.form) {
              const i = this.form.get(e.path);
              i &&
                (function s$(n, t) {
                  return ih(n, t);
                })(i, e) &&
                i.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            L_(this.form, this), this._oldForm && ih(this._oldForm, this);
          }
          _checkFormPresent() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(tn, 10), g(fs, 10));
          }),
          (n.ɵdir = N({
            type: n,
            selectors: [["", "formGroup", ""]],
            hostBindings: function (e, i) {
              1 & e &&
                P("submit", function (s) {
                  return i.onSubmit(s);
                })("reset", function () {
                  return i.onReset();
                });
            },
            inputs: { form: ["formGroup", "form"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [pe([y$]), q, Gt],
          })),
          n
        );
      })();
      const C$ = { provide: Zi, useExisting: Le(() => Ei) };
      let Ei = (() => {
        class n extends Zi {
          constructor(e, i, r, s, o) {
            super(),
              (this._ngModelWarningConfig = o),
              (this._added = !1),
              (this.update = new fe()),
              (this._ngModelWarningSent = !1),
              (this._parent = e),
              this._setValidators(i),
              this._setAsyncValidators(r),
              (this.valueAccessor = (function V_(n, t) {
                if (!t) return null;
                let e, i, r;
                return (
                  Array.isArray(t),
                  t.forEach((s) => {
                    s.constructor === oi
                      ? (e = s)
                      : (function a$(n) {
                          return Object.getPrototypeOf(n.constructor) === Qs;
                        })(s)
                      ? (i = s)
                      : (r = s);
                  }),
                  r || i || e || null
                );
              })(0, s));
          }
          set isDisabled(e) {}
          ngOnChanges(e) {
            this._added || this._setUpControl(),
              (function B_(n, t) {
                if (!n.hasOwnProperty("model")) return !1;
                const e = n.model;
                return !!e.isFirstChange() || !Object.is(t, e.currentValue);
              })(e, this.viewModel) &&
                ((this.viewModel = this.model),
                this.formDirective.updateModel(this, this.model));
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          viewToModelUpdate(e) {
            (this.viewModel = e), this.update.emit(e);
          }
          get path() {
            return (function eh(n, t) {
              return [...t.path, n];
            })(
              null == this.name ? this.name : this.name.toString(),
              this._parent
            );
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          _checkParentType() {}
          _setUpControl() {
            this._checkParentType(),
              (this.control = this.formDirective.addControl(this)),
              (this._added = !0);
          }
        }
        return (
          (n._ngModelWarningSentOnce = !1),
          (n.ɵfac = function (e) {
            return new (e || n)(
              g(mn, 13),
              g(tn, 10),
              g(fs, 10),
              g(si, 10),
              g(j_, 8)
            );
          }),
          (n.ɵdir = N({
            type: n,
            selectors: [["", "formControlName", ""]],
            inputs: {
              name: ["formControlName", "name"],
              isDisabled: ["disabled", "isDisabled"],
              model: ["ngModel", "model"],
            },
            outputs: { update: "ngModelChange" },
            features: [pe([C$]), q, Gt],
          })),
          n
        );
      })();
      let Js = (() => {
        class n {
          constructor() {
            this._validator = Gd;
          }
          ngOnChanges(e) {
            if (this.inputName in e) {
              const i = this.normalizeInput(e[this.inputName].currentValue);
              (this._enabled = this.enabled(i)),
                (this._validator = this._enabled
                  ? this.createValidator(i)
                  : Gd),
                this._onChange && this._onChange();
            }
          }
          validate(e) {
            return this._validator(e);
          }
          registerOnValidatorChange(e) {
            this._onChange = e;
          }
          enabled(e) {
            return null != e;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = N({ type: n, features: [Gt] })),
          n
        );
      })();
      const P$ = { provide: tn, useExisting: Le(() => ps), multi: !0 };
      let ps = (() => {
          class n extends Js {
            constructor() {
              super(...arguments),
                (this.inputName = "maxlength"),
                (this.normalizeInput = (e) =>
                  (function OS(n) {
                    return "number" == typeof n ? n : parseInt(n, 10);
                  })(e)),
                (this.createValidator = (e) => GE(e));
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = tt(n)))(i || n);
              };
            })()),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["", "maxlength", "", "formControlName", ""],
                ["", "maxlength", "", "formControl", ""],
                ["", "maxlength", "", "ngModel", ""],
              ],
              hostVars: 1,
              hostBindings: function (e, i) {
                2 & e && ze("maxlength", i._enabled ? i.maxlength : null);
              },
              inputs: { maxlength: "maxlength" },
              features: [pe([P$]), q],
            })),
            n
          );
        })(),
        jS = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [xS] })),
            n
          );
        })(),
        N$ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [jS] })),
            n
          );
        })(),
        HS = (() => {
          class n {
            static withConfig(e) {
              return {
                ngModule: n,
                providers: [
                  { provide: j_, useValue: e.warnOnNgModelWithFormControl },
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [jS] })),
            n
          );
        })();
      class zS extends Qd {
        constructor(t, e, i) {
          super(F_(e), N_(i, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(t) {
          return this.controls[this._adjustIndex(t)];
        }
        push(t, e = {}) {
          this.controls.push(t),
            this._registerControl(t),
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        insert(t, e, i = {}) {
          this.controls.splice(t, 0, e),
            this._registerControl(e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent });
        }
        removeAt(t, e = {}) {
          let i = this._adjustIndex(t);
          i < 0 && (i = 0),
            this.controls[i] &&
              this.controls[i]._registerOnCollectionChange(() => {}),
            this.controls.splice(i, 1),
            this.updateValueAndValidity({ emitEvent: e.emitEvent });
        }
        setControl(t, e, i = {}) {
          let r = this._adjustIndex(t);
          r < 0 && (r = 0),
            this.controls[r] &&
              this.controls[r]._registerOnCollectionChange(() => {}),
            this.controls.splice(r, 1),
            e && (this.controls.splice(r, 0, e), this._registerControl(e)),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(t, e = {}) {
          fS(this, 0, t),
            t.forEach((i, r) => {
              hS(this, !1, r),
                this.at(r).setValue(i, {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (t.forEach((i, r) => {
              this.at(r) &&
                this.at(r).patchValue(i, {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = [], e = {}) {
          this._forEachChild((i, r) => {
            i.reset(t[r], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this.controls.map((t) => t.getRawValue());
        }
        clear(t = {}) {
          this.controls.length < 1 ||
            (this._forEachChild((e) => e._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: t.emitEvent }));
        }
        _adjustIndex(t) {
          return t < 0 ? t + this.length : t;
        }
        _syncPendingControls() {
          let t = this.controls.reduce(
            (e, i) => !!i._syncPendingControls() || e,
            !1
          );
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _forEachChild(t) {
          this.controls.forEach((e, i) => {
            t(e, i);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((t) => t.enabled || this.disabled)
            .map((t) => t.value);
        }
        _anyControls(t) {
          return this.controls.some((e) => e.enabled && t(e));
        }
        _setUpControls() {
          this._forEachChild((t) => this._registerControl(t));
        }
        _allControlsDisabled() {
          for (const t of this.controls) if (t.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(t) {
          t.setParent(this),
            t._registerOnCollectionChange(this._onCollectionChange);
        }
        _find(t) {
          return this.at(t) ?? null;
        }
      }
      function US(n) {
        return (
          !!n &&
          (void 0 !== n.asyncValidators ||
            void 0 !== n.validators ||
            void 0 !== n.updateOn)
        );
      }
      let Ir = (() => {
        class n {
          constructor() {
            this.useNonNullable = !1;
          }
          get nonNullable() {
            const e = new n();
            return (e.useNonNullable = !0), e;
          }
          group(e, i = null) {
            const r = this._reduceControls(e);
            let s = {};
            return (
              US(i)
                ? (s = i)
                : null !== i &&
                  ((s.validators = i.validator),
                  (s.asyncValidators = i.asyncValidator)),
              new Jd(r, s)
            );
          }
          control(e, i, r) {
            let s = {};
            return this.useNonNullable
              ? (US(i)
                  ? (s = i)
                  : ((s.validators = i), (s.asyncValidators = r)),
                new Jl(e, { ...s, nonNullable: !0 }))
              : new Jl(e, i, r);
          }
          array(e, i, r) {
            const s = e.map((o) => this._createControl(o));
            return new zS(s, i, r);
          }
          _reduceControls(e) {
            const i = {};
            return (
              Object.keys(e).forEach((r) => {
                i[r] = this._createControl(e[r]);
              }),
              i
            );
          }
          _createControl(e) {
            return e instanceof Jl || e instanceof Qd
              ? e
              : Array.isArray(e)
              ? this.control(
                  e[0],
                  e.length > 1 ? e[1] : null,
                  e.length > 2 ? e[2] : null
                )
              : this.control(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: HS })),
          n
        );
      })();
      function W(...n) {
        return Dt(n, Ga(n));
      }
      class $n extends $ {
        constructor(t) {
          super(), (this._value = t);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(t) {
          const e = super._subscribe(t);
          return !e.closed && t.next(this._value), e;
        }
        getValue() {
          const { hasError: t, thrownError: e, _value: i } = this;
          if (t) throw e;
          return this._throwIfClosed(), i;
        }
        next(t) {
          super.next((this._value = t));
        }
      }
      function W_(...n) {
        const t = Ga(n),
          e = mb(n),
          { args: i, keys: r } = FE(n);
        if (0 === i.length) return Dt([], t);
        const s = new We(
          (function L$(n, t, e = Kr) {
            return (i) => {
              $S(
                t,
                () => {
                  const { length: r } = n,
                    s = new Array(r);
                  let o = r,
                    a = r;
                  for (let l = 0; l < r; l++)
                    $S(
                      t,
                      () => {
                        const c = Dt(n[l], t);
                        let u = !1;
                        c.subscribe(
                          ot(
                            i,
                            (d) => {
                              (s[l] = d),
                                u || ((u = !0), a--),
                                a || i.next(e(s.slice()));
                            },
                            () => {
                              --o || i.complete();
                            }
                          )
                        );
                      },
                      i
                    );
                },
                i
              );
            };
          })(i, t, r ? (o) => NE(r, o) : Kr)
        );
        return e ? s.pipe(T_(e)) : s;
      }
      function $S(n, t, e) {
        n ? pr(e, n, t) : t();
      }
      function rh(...n) {
        return (function B$() {
          return So(1);
        })()(Dt(n, Ga(n)));
      }
      function ec(n) {
        return new We((t) => {
          _n(n()).subscribe(t);
        });
      }
      function eo(n, t) {
        const e = Ae(n) ? n : () => n,
          i = (r) => r.error(e());
        return new We(t ? (r) => t.schedule(i, 0, r) : i);
      }
      const Ca = qa(
        (n) =>
          function () {
            n(this),
              (this.name = "EmptyError"),
              (this.message = "no elements in sequence");
          }
      );
      function G_() {
        return ft((n, t) => {
          let e = null;
          n._refCount++;
          const i = ot(t, void 0, void 0, void 0, () => {
            if (!n || n._refCount <= 0 || 0 < --n._refCount)
              return void (e = null);
            const r = n._connection,
              s = e;
            (e = null),
              r && (!s || r === s) && r.unsubscribe(),
              t.unsubscribe();
          });
          n.subscribe(i), i.closed || (e = n.connect());
        });
      }
      class qS extends We {
        constructor(t, e) {
          super(),
            (this.source = t),
            (this.subjectFactory = e),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            tb(t) && (this.lift = t.lift);
        }
        _subscribe(t) {
          return this.getSubject().subscribe(t);
        }
        getSubject() {
          const t = this._subject;
          return (
            (!t || t.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: t } = this;
          (this._subject = this._connection = null), t?.unsubscribe();
        }
        connect() {
          let t = this._connection;
          if (!t) {
            t = this._connection = new bt();
            const e = this.getSubject();
            t.add(
              this.source.subscribe(
                ot(
                  e,
                  void 0,
                  () => {
                    this._teardown(), e.complete();
                  },
                  (i) => {
                    this._teardown(), e.error(i);
                  },
                  () => this._teardown()
                )
              )
            ),
              t.closed && ((this._connection = null), (t = bt.EMPTY));
          }
          return t;
        }
        refCount() {
          return G_()(this);
        }
      }
      function ai(n, t) {
        return ft((e, i) => {
          let r = null,
            s = 0,
            o = !1;
          const a = () => o && !r && i.complete();
          e.subscribe(
            ot(
              i,
              (l) => {
                r?.unsubscribe();
                let c = 0;
                const u = s++;
                _n(n(l, u)).subscribe(
                  (r = ot(
                    i,
                    (d) => i.next(t ? t(l, d, u, c++) : d),
                    () => {
                      (r = null), a();
                    }
                  ))
                );
              },
              () => {
                (o = !0), a();
              }
            )
          );
        });
      }
      function Vt(n) {
        return n <= 0
          ? () => Oi
          : ft((t, e) => {
              let i = 0;
              t.subscribe(
                ot(e, (r) => {
                  ++i <= n && (e.next(r), n <= i && e.complete());
                })
              );
            });
      }
      function qn(...n) {
        const t = Ga(n);
        return ft((e, i) => {
          (t ? rh(n, e, t) : rh(n, e)).subscribe(i);
        });
      }
      function ct(n, t) {
        return ft((e, i) => {
          let r = 0;
          e.subscribe(ot(i, (s) => n.call(t, s, r++) && i.next(s)));
        });
      }
      function sh(n) {
        return ft((t, e) => {
          let i = !1;
          t.subscribe(
            ot(
              e,
              (r) => {
                (i = !0), e.next(r);
              },
              () => {
                i || e.next(n), e.complete();
              }
            )
          );
        });
      }
      function WS(n = V$) {
        return ft((t, e) => {
          let i = !1;
          t.subscribe(
            ot(
              e,
              (r) => {
                (i = !0), e.next(r);
              },
              () => (i ? e.complete() : e.error(n()))
            )
          );
        });
      }
      function V$() {
        return new Ca();
      }
      function ms(n, t) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            n ? ct((r, s) => n(r, s, i)) : Kr,
            Vt(1),
            e ? sh(t) : WS(() => new Ca())
          );
      }
      function gs(n, t) {
        return Ae(t) ? zt(n, t, 1) : zt(n, 1);
      }
      function kt(n, t, e) {
        const i = Ae(n) || t || e ? { next: n, error: t, complete: e } : n;
        return i
          ? ft((r, s) => {
              var o;
              null === (o = i.subscribe) || void 0 === o || o.call(i);
              let a = !0;
              r.subscribe(
                ot(
                  s,
                  (l) => {
                    var c;
                    null === (c = i.next) || void 0 === c || c.call(i, l),
                      s.next(l);
                  },
                  () => {
                    var l;
                    (a = !1),
                      null === (l = i.complete) || void 0 === l || l.call(i),
                      s.complete();
                  },
                  (l) => {
                    var c;
                    (a = !1),
                      null === (c = i.error) || void 0 === c || c.call(i, l),
                      s.error(l);
                  },
                  () => {
                    var l, c;
                    a &&
                      (null === (l = i.unsubscribe) ||
                        void 0 === l ||
                        l.call(i)),
                      null === (c = i.finalize) || void 0 === c || c.call(i);
                  }
                )
              );
            })
          : Kr;
      }
      function tr(n) {
        return ft((t, e) => {
          let s,
            i = null,
            r = !1;
          (i = t.subscribe(
            ot(e, void 0, void 0, (o) => {
              (s = _n(n(o, tr(n)(t)))),
                i ? (i.unsubscribe(), (i = null), s.subscribe(e)) : (r = !0);
            })
          )),
            r && (i.unsubscribe(), (i = null), s.subscribe(e));
        });
      }
      function j$(n, t, e, i, r) {
        return (s, o) => {
          let a = e,
            l = t,
            c = 0;
          s.subscribe(
            ot(
              o,
              (u) => {
                const d = c++;
                (l = a ? n(l, u, d) : ((a = !0), u)), i && o.next(l);
              },
              r &&
                (() => {
                  a && o.next(l), o.complete();
                })
            )
          );
        };
      }
      function GS(n, t) {
        return ft(j$(n, t, arguments.length >= 2, !0));
      }
      function Y_(n) {
        return n <= 0
          ? () => Oi
          : ft((t, e) => {
              let i = [];
              t.subscribe(
                ot(
                  e,
                  (r) => {
                    i.push(r), n < i.length && i.shift();
                  },
                  () => {
                    for (const r of i) e.next(r);
                    e.complete();
                  },
                  void 0,
                  () => {
                    i = null;
                  }
                )
              );
            });
      }
      function YS(n, t) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            n ? ct((r, s) => n(r, s, i)) : Kr,
            Y_(1),
            e ? sh(t) : WS(() => new Ca())
          );
      }
      function KS(n, t = !1) {
        return ft((e, i) => {
          let r = 0;
          e.subscribe(
            ot(i, (s) => {
              const o = n(s, r++);
              (o || t) && i.next(s), !o && i.complete();
            })
          );
        });
      }
      function K_(n) {
        return Z(() => n);
      }
      function oh(n) {
        return ft((t, e) => {
          try {
            t.subscribe(e);
          } finally {
            e.add(n);
          }
        });
      }
      const we = "primary";
      class H$ {
        constructor(t) {
          this.params = t || {};
        }
        has(t) {
          return Object.prototype.hasOwnProperty.call(this.params, t);
        }
        get(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function wa(n) {
        return new H$(n);
      }
      function z$(n, t, e) {
        const i = e.path.split("/");
        if (
          i.length > n.length ||
          ("full" === e.pathMatch && (t.hasChildren() || i.length < n.length))
        )
          return null;
        const r = {};
        for (let s = 0; s < i.length; s++) {
          const o = i[s],
            a = n[s];
          if (o.startsWith(":")) r[o.substring(1)] = a;
          else if (o !== a.path) return null;
        }
        return { consumed: n.slice(0, i.length), posParams: r };
      }
      function nr(n, t) {
        const e = n ? Object.keys(n) : void 0,
          i = t ? Object.keys(t) : void 0;
        if (!e || !i || e.length != i.length) return !1;
        let r;
        for (let s = 0; s < e.length; s++)
          if (((r = e[s]), !XS(n[r], t[r]))) return !1;
        return !0;
      }
      function XS(n, t) {
        if (Array.isArray(n) && Array.isArray(t)) {
          if (n.length !== t.length) return !1;
          const e = [...n].sort(),
            i = [...t].sort();
          return e.every((r, s) => i[s] === r);
        }
        return n === t;
      }
      function ZS(n) {
        return Array.prototype.concat.apply([], n);
      }
      function QS(n) {
        return n.length > 0 ? n[n.length - 1] : null;
      }
      function Yt(n, t) {
        for (const e in n) n.hasOwnProperty(e) && t(n[e], e);
      }
      function Or(n) {
        return Zm(n) ? n : xl(n) ? Dt(Promise.resolve(n)) : W(n);
      }
      const q$ = {
          exact: function tT(n, t, e) {
            if (
              !no(n.segments, t.segments) ||
              !ah(n.segments, t.segments, e) ||
              n.numberOfChildren !== t.numberOfChildren
            )
              return !1;
            for (const i in t.children)
              if (!n.children[i] || !tT(n.children[i], t.children[i], e))
                return !1;
            return !0;
          },
          subset: nT,
        },
        JS = {
          exact: function W$(n, t) {
            return nr(n, t);
          },
          subset: function G$(n, t) {
            return (
              Object.keys(t).length <= Object.keys(n).length &&
              Object.keys(t).every((e) => XS(n[e], t[e]))
            );
          },
          ignored: () => !0,
        };
      function eT(n, t, e) {
        return (
          q$[e.paths](n.root, t.root, e.matrixParams) &&
          JS[e.queryParams](n.queryParams, t.queryParams) &&
          !("exact" === e.fragment && n.fragment !== t.fragment)
        );
      }
      function nT(n, t, e) {
        return iT(n, t, t.segments, e);
      }
      function iT(n, t, e, i) {
        if (n.segments.length > e.length) {
          const r = n.segments.slice(0, e.length);
          return !(!no(r, e) || t.hasChildren() || !ah(r, e, i));
        }
        if (n.segments.length === e.length) {
          if (!no(n.segments, e) || !ah(n.segments, e, i)) return !1;
          for (const r in t.children)
            if (!n.children[r] || !nT(n.children[r], t.children[r], i))
              return !1;
          return !0;
        }
        {
          const r = e.slice(0, n.segments.length),
            s = e.slice(n.segments.length);
          return (
            !!(no(n.segments, r) && ah(n.segments, r, i) && n.children[we]) &&
            iT(n.children[we], t, s, i)
          );
        }
      }
      function ah(n, t, e) {
        return t.every((i, r) => JS[e](n[r].parameters, i.parameters));
      }
      class to {
        constructor(t, e, i) {
          (this.root = t), (this.queryParams = e), (this.fragment = i);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = wa(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return X$.serialize(this);
        }
      }
      class xe {
        constructor(t, e) {
          (this.segments = t),
            (this.children = e),
            (this.parent = null),
            Yt(e, (i, r) => (i.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return lh(this);
        }
      }
      class tc {
        constructor(t, e) {
          (this.path = t), (this.parameters = e);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = wa(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return lT(this);
        }
      }
      function no(n, t) {
        return n.length === t.length && n.every((e, i) => e.path === t[i].path);
      }
      class rT {}
      class sT {
        parse(t) {
          const e = new s5(t);
          return new to(
            e.parseRootSegment(),
            e.parseQueryParams(),
            e.parseFragment()
          );
        }
        serialize(t) {
          const e = `/${nc(t.root, !0)}`,
            i = (function J$(n) {
              const t = Object.keys(n)
                .map((e) => {
                  const i = n[e];
                  return Array.isArray(i)
                    ? i.map((r) => `${ch(e)}=${ch(r)}`).join("&")
                    : `${ch(e)}=${ch(i)}`;
                })
                .filter((e) => !!e);
              return t.length ? `?${t.join("&")}` : "";
            })(t.queryParams);
          return `${e}${i}${
            "string" == typeof t.fragment
              ? `#${(function Z$(n) {
                  return encodeURI(n);
                })(t.fragment)}`
              : ""
          }`;
        }
      }
      const X$ = new sT();
      function lh(n) {
        return n.segments.map((t) => lT(t)).join("/");
      }
      function nc(n, t) {
        if (!n.hasChildren()) return lh(n);
        if (t) {
          const e = n.children[we] ? nc(n.children[we], !1) : "",
            i = [];
          return (
            Yt(n.children, (r, s) => {
              s !== we && i.push(`${s}:${nc(r, !1)}`);
            }),
            i.length > 0 ? `${e}(${i.join("//")})` : e
          );
        }
        {
          const e = (function K$(n, t) {
            let e = [];
            return (
              Yt(n.children, (i, r) => {
                r === we && (e = e.concat(t(i, r)));
              }),
              Yt(n.children, (i, r) => {
                r !== we && (e = e.concat(t(i, r)));
              }),
              e
            );
          })(n, (i, r) =>
            r === we ? [nc(n.children[we], !1)] : [`${r}:${nc(i, !1)}`]
          );
          return 1 === Object.keys(n.children).length && null != n.children[we]
            ? `${lh(n)}/${e[0]}`
            : `${lh(n)}/(${e.join("//")})`;
        }
      }
      function oT(n) {
        return encodeURIComponent(n)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function ch(n) {
        return oT(n).replace(/%3B/gi, ";");
      }
      function Z_(n) {
        return oT(n)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function uh(n) {
        return decodeURIComponent(n);
      }
      function aT(n) {
        return uh(n.replace(/\+/g, "%20"));
      }
      function lT(n) {
        return `${Z_(n.path)}${(function Q$(n) {
          return Object.keys(n)
            .map((t) => `;${Z_(t)}=${Z_(n[t])}`)
            .join("");
        })(n.parameters)}`;
      }
      const e5 = /^[^\/()?;=#]+/;
      function dh(n) {
        const t = n.match(e5);
        return t ? t[0] : "";
      }
      const t5 = /^[^=?&#]+/,
        i5 = /^[^&#]+/;
      class s5 {
        constructor(t) {
          (this.url = t), (this.remaining = t);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new xe([], {})
              : new xe([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const t = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(t);
            } while (this.consumeOptional("&"));
          return t;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const t = [];
          for (
            this.peekStartsWith("(") || t.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), t.push(this.parseSegment());
          let e = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (e = this.parseParens(!0)));
          let i = {};
          return (
            this.peekStartsWith("(") && (i = this.parseParens(!1)),
            (t.length > 0 || Object.keys(e).length > 0) &&
              (i[we] = new xe(t, e)),
            i
          );
        }
        parseSegment() {
          const t = dh(this.remaining);
          if ("" === t && this.peekStartsWith(";")) throw new k(4009, !1);
          return this.capture(t), new tc(uh(t), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const t = {};
          for (; this.consumeOptional(";"); ) this.parseParam(t);
          return t;
        }
        parseParam(t) {
          const e = dh(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const r = dh(this.remaining);
            r && ((i = r), this.capture(i));
          }
          t[uh(e)] = uh(i);
        }
        parseQueryParam(t) {
          const e = (function n5(n) {
            const t = n.match(t5);
            return t ? t[0] : "";
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const o = (function r5(n) {
              const t = n.match(i5);
              return t ? t[0] : "";
            })(this.remaining);
            o && ((i = o), this.capture(i));
          }
          const r = aT(e),
            s = aT(i);
          if (t.hasOwnProperty(r)) {
            let o = t[r];
            Array.isArray(o) || ((o = [o]), (t[r] = o)), o.push(s);
          } else t[r] = s;
        }
        parseParens(t) {
          const e = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const i = dh(this.remaining),
              r = this.remaining[i.length];
            if ("/" !== r && ")" !== r && ";" !== r) throw new k(4010, !1);
            let s;
            i.indexOf(":") > -1
              ? ((s = i.slice(0, i.indexOf(":"))),
                this.capture(s),
                this.capture(":"))
              : t && (s = we);
            const o = this.parseChildren();
            (e[s] = 1 === Object.keys(o).length ? o[we] : new xe([], o)),
              this.consumeOptional("//");
          }
          return e;
        }
        peekStartsWith(t) {
          return this.remaining.startsWith(t);
        }
        consumeOptional(t) {
          return (
            !!this.peekStartsWith(t) &&
            ((this.remaining = this.remaining.substring(t.length)), !0)
          );
        }
        capture(t) {
          if (!this.consumeOptional(t)) throw new k(4011, !1);
        }
      }
      function Q_(n) {
        return n.segments.length > 0 ? new xe([], { [we]: n }) : n;
      }
      function hh(n) {
        const t = {};
        for (const i of Object.keys(n.children)) {
          const s = hh(n.children[i]);
          (s.segments.length > 0 || s.hasChildren()) && (t[i] = s);
        }
        return (function o5(n) {
          if (1 === n.numberOfChildren && n.children[we]) {
            const t = n.children[we];
            return new xe(n.segments.concat(t.segments), t.children);
          }
          return n;
        })(new xe(n.segments, t));
      }
      function io(n) {
        return n instanceof to;
      }
      function c5(n, t, e, i, r) {
        if (0 === e.length) return Ma(t.root, t.root, t.root, i, r);
        const s = (function dT(n) {
          if ("string" == typeof n[0] && 1 === n.length && "/" === n[0])
            return new uT(!0, 0, n);
          let t = 0,
            e = !1;
          const i = n.reduce((r, s, o) => {
            if ("object" == typeof s && null != s) {
              if (s.outlets) {
                const a = {};
                return (
                  Yt(s.outlets, (l, c) => {
                    a[c] = "string" == typeof l ? l.split("/") : l;
                  }),
                  [...r, { outlets: a }]
                );
              }
              if (s.segmentPath) return [...r, s.segmentPath];
            }
            return "string" != typeof s
              ? [...r, s]
              : 0 === o
              ? (s.split("/").forEach((a, l) => {
                  (0 == l && "." === a) ||
                    (0 == l && "" === a
                      ? (e = !0)
                      : ".." === a
                      ? t++
                      : "" != a && r.push(a));
                }),
                r)
              : [...r, s];
          }, []);
          return new uT(e, t, i);
        })(e);
        return s.toRoot()
          ? Ma(t.root, t.root, new xe([], {}), i, r)
          : (function o(l) {
              const c = (function d5(n, t, e, i) {
                  if (n.isAbsolute) return new Da(t.root, !0, 0);
                  if (-1 === i) return new Da(e, e === t.root, 0);
                  return (function hT(n, t, e) {
                    let i = n,
                      r = t,
                      s = e;
                    for (; s > r; ) {
                      if (((s -= r), (i = i.parent), !i)) throw new k(4005, !1);
                      r = i.segments.length;
                    }
                    return new Da(i, !1, r - s);
                  })(e, i + (ic(n.commands[0]) ? 0 : 1), n.numberOfDoubleDots);
                })(s, t, n.snapshot?._urlSegment, l),
                u = c.processChildren
                  ? sc(c.segmentGroup, c.index, s.commands)
                  : ey(c.segmentGroup, c.index, s.commands);
              return Ma(t.root, c.segmentGroup, u, i, r);
            })(n.snapshot?._lastPathIndex);
      }
      function ic(n) {
        return (
          "object" == typeof n && null != n && !n.outlets && !n.segmentPath
        );
      }
      function rc(n) {
        return "object" == typeof n && null != n && n.outlets;
      }
      function Ma(n, t, e, i, r) {
        let o,
          s = {};
        i &&
          Yt(i, (l, c) => {
            s[c] = Array.isArray(l) ? l.map((u) => `${u}`) : `${l}`;
          }),
          (o = n === t ? e : cT(n, t, e));
        const a = Q_(hh(o));
        return new to(a, s, r);
      }
      function cT(n, t, e) {
        const i = {};
        return (
          Yt(n.children, (r, s) => {
            i[s] = r === t ? e : cT(r, t, e);
          }),
          new xe(n.segments, i)
        );
      }
      class uT {
        constructor(t, e, i) {
          if (
            ((this.isAbsolute = t),
            (this.numberOfDoubleDots = e),
            (this.commands = i),
            t && i.length > 0 && ic(i[0]))
          )
            throw new k(4003, !1);
          const r = i.find(rc);
          if (r && r !== QS(i)) throw new k(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class Da {
        constructor(t, e, i) {
          (this.segmentGroup = t), (this.processChildren = e), (this.index = i);
        }
      }
      function ey(n, t, e) {
        if (
          (n || (n = new xe([], {})),
          0 === n.segments.length && n.hasChildren())
        )
          return sc(n, t, e);
        const i = (function f5(n, t, e) {
            let i = 0,
              r = t;
            const s = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; r < n.segments.length; ) {
              if (i >= e.length) return s;
              const o = n.segments[r],
                a = e[i];
              if (rc(a)) break;
              const l = `${a}`,
                c = i < e.length - 1 ? e[i + 1] : null;
              if (r > 0 && void 0 === l) break;
              if (l && c && "object" == typeof c && void 0 === c.outlets) {
                if (!pT(l, c, o)) return s;
                i += 2;
              } else {
                if (!pT(l, {}, o)) return s;
                i++;
              }
              r++;
            }
            return { match: !0, pathIndex: r, commandIndex: i };
          })(n, t, e),
          r = e.slice(i.commandIndex);
        if (i.match && i.pathIndex < n.segments.length) {
          const s = new xe(n.segments.slice(0, i.pathIndex), {});
          return (
            (s.children[we] = new xe(
              n.segments.slice(i.pathIndex),
              n.children
            )),
            sc(s, 0, r)
          );
        }
        return i.match && 0 === r.length
          ? new xe(n.segments, {})
          : i.match && !n.hasChildren()
          ? ty(n, t, e)
          : i.match
          ? sc(n, 0, r)
          : ty(n, t, e);
      }
      function sc(n, t, e) {
        if (0 === e.length) return new xe(n.segments, {});
        {
          const i = (function h5(n) {
              return rc(n[0]) ? n[0].outlets : { [we]: n };
            })(e),
            r = {};
          return (
            Yt(i, (s, o) => {
              "string" == typeof s && (s = [s]),
                null !== s && (r[o] = ey(n.children[o], t, s));
            }),
            Yt(n.children, (s, o) => {
              void 0 === i[o] && (r[o] = s);
            }),
            new xe(n.segments, r)
          );
        }
      }
      function ty(n, t, e) {
        const i = n.segments.slice(0, t);
        let r = 0;
        for (; r < e.length; ) {
          const s = e[r];
          if (rc(s)) {
            const l = p5(s.outlets);
            return new xe(i, l);
          }
          if (0 === r && ic(e[0])) {
            i.push(new tc(n.segments[t].path, fT(e[0]))), r++;
            continue;
          }
          const o = rc(s) ? s.outlets[we] : `${s}`,
            a = r < e.length - 1 ? e[r + 1] : null;
          o && a && ic(a)
            ? (i.push(new tc(o, fT(a))), (r += 2))
            : (i.push(new tc(o, {})), r++);
        }
        return new xe(i, {});
      }
      function p5(n) {
        const t = {};
        return (
          Yt(n, (e, i) => {
            "string" == typeof e && (e = [e]),
              null !== e && (t[i] = ty(new xe([], {}), 0, e));
          }),
          t
        );
      }
      function fT(n) {
        const t = {};
        return Yt(n, (e, i) => (t[i] = `${e}`)), t;
      }
      function pT(n, t, e) {
        return n == e.path && nr(t, e.parameters);
      }
      class Rr {
        constructor(t, e) {
          (this.id = t), (this.url = e);
        }
      }
      class ny extends Rr {
        constructor(t, e, i = "imperative", r = null) {
          super(t, e),
            (this.type = 0),
            (this.navigationTrigger = i),
            (this.restoredState = r);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class ro extends Rr {
        constructor(t, e, i) {
          super(t, e), (this.urlAfterRedirects = i), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class fh extends Rr {
        constructor(t, e, i, r) {
          super(t, e), (this.reason = i), (this.code = r), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class mT extends Rr {
        constructor(t, e, i, r) {
          super(t, e), (this.error = i), (this.target = r), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class m5 extends Rr {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class g5 extends Rr {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class _5 extends Rr {
        constructor(t, e, i, r, s) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.shouldActivate = s),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class y5 extends Rr {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class v5 extends Rr {
        constructor(t, e, i, r) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class b5 {
        constructor(t) {
          (this.route = t), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class C5 {
        constructor(t) {
          (this.route = t), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class w5 {
        constructor(t) {
          (this.snapshot = t), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class M5 {
        constructor(t) {
          (this.snapshot = t), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class D5 {
        constructor(t) {
          (this.snapshot = t), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class x5 {
        constructor(t) {
          (this.snapshot = t), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class gT {
        constructor(t, e, i) {
          (this.routerEvent = t),
            (this.position = e),
            (this.anchor = i),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      class _T {
        constructor(t) {
          this._root = t;
        }
        get root() {
          return this._root.value;
        }
        parent(t) {
          const e = this.pathFromRoot(t);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(t) {
          const e = iy(t, this._root);
          return e ? e.children.map((i) => i.value) : [];
        }
        firstChild(t) {
          const e = iy(t, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(t) {
          const e = ry(t, this._root);
          return e.length < 2
            ? []
            : e[e.length - 2].children
                .map((r) => r.value)
                .filter((r) => r !== t);
        }
        pathFromRoot(t) {
          return ry(t, this._root).map((e) => e.value);
        }
      }
      function iy(n, t) {
        if (n === t.value) return t;
        for (const e of t.children) {
          const i = iy(n, e);
          if (i) return i;
        }
        return null;
      }
      function ry(n, t) {
        if (n === t.value) return [t];
        for (const e of t.children) {
          const i = ry(n, e);
          if (i.length) return i.unshift(t), i;
        }
        return [];
      }
      class Pr {
        constructor(t, e) {
          (this.value = t), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function xa(n) {
        const t = {};
        return n && n.children.forEach((e) => (t[e.value.outlet] = e)), t;
      }
      class yT extends _T {
        constructor(t, e) {
          super(t), (this.snapshot = e), sy(this, t);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function vT(n, t) {
        const e = (function S5(n, t) {
            const o = new ph([], {}, {}, "", {}, we, t, null, n.root, -1, {});
            return new CT("", new Pr(o, []));
          })(n, t),
          i = new $n([new tc("", {})]),
          r = new $n({}),
          s = new $n({}),
          o = new $n({}),
          a = new $n(""),
          l = new Wn(i, r, o, a, s, we, t, e.root);
        return (l.snapshot = e.root), new yT(new Pr(l, []), e);
      }
      class Wn {
        constructor(t, e, i, r, s, o, a, l) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = s),
            (this.outlet = o),
            (this.component = a),
            (this._futureSnapshot = l);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(Z((t) => wa(t)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(Z((t) => wa(t)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function bT(n, t = "emptyOnly") {
        const e = n.pathFromRoot;
        let i = 0;
        if ("always" !== t)
          for (i = e.length - 1; i >= 1; ) {
            const r = e[i],
              s = e[i - 1];
            if (r.routeConfig && "" === r.routeConfig.path) i--;
            else {
              if (s.component) break;
              i--;
            }
          }
        return (function T5(n) {
          return n.reduce(
            (t, e) => ({
              params: { ...t.params, ...e.params },
              data: { ...t.data, ...e.data },
              resolve: {
                ...e.data,
                ...t.resolve,
                ...e.routeConfig?.data,
                ...e._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(e.slice(i));
      }
      class ph {
        constructor(t, e, i, r, s, o, a, l, c, u, d, h) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = s),
            (this.outlet = o),
            (this.component = a),
            (this.routeConfig = l),
            (this._urlSegment = c),
            (this._lastPathIndex = u),
            (this._correctedLastPathIndex = h ?? u),
            (this._resolve = d);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = wa(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = wa(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((i) => i.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class CT extends _T {
        constructor(t, e) {
          super(e), (this.url = t), sy(this, e);
        }
        toString() {
          return wT(this._root);
        }
      }
      function sy(n, t) {
        (t.value._routerState = n), t.children.forEach((e) => sy(n, e));
      }
      function wT(n) {
        const t =
          n.children.length > 0 ? ` { ${n.children.map(wT).join(", ")} } ` : "";
        return `${n.value}${t}`;
      }
      function oy(n) {
        if (n.snapshot) {
          const t = n.snapshot,
            e = n._futureSnapshot;
          (n.snapshot = e),
            nr(t.queryParams, e.queryParams) ||
              n.queryParams.next(e.queryParams),
            t.fragment !== e.fragment && n.fragment.next(e.fragment),
            nr(t.params, e.params) || n.params.next(e.params),
            (function U$(n, t) {
              if (n.length !== t.length) return !1;
              for (let e = 0; e < n.length; ++e) if (!nr(n[e], t[e])) return !1;
              return !0;
            })(t.url, e.url) || n.url.next(e.url),
            nr(t.data, e.data) || n.data.next(e.data);
        } else
          (n.snapshot = n._futureSnapshot), n.data.next(n._futureSnapshot.data);
      }
      function ay(n, t) {
        const e =
          nr(n.params, t.params) &&
          (function Y$(n, t) {
            return (
              no(n, t) && n.every((e, i) => nr(e.parameters, t[i].parameters))
            );
          })(n.url, t.url);
        return (
          e &&
          !(!n.parent != !t.parent) &&
          (!n.parent || ay(n.parent, t.parent))
        );
      }
      function oc(n, t, e) {
        if (e && n.shouldReuseRoute(t.value, e.value.snapshot)) {
          const i = e.value;
          i._futureSnapshot = t.value;
          const r = (function k5(n, t, e) {
            return t.children.map((i) => {
              for (const r of e.children)
                if (n.shouldReuseRoute(i.value, r.value.snapshot))
                  return oc(n, i, r);
              return oc(n, i);
            });
          })(n, t, e);
          return new Pr(i, r);
        }
        {
          if (n.shouldAttach(t.value)) {
            const s = n.retrieve(t.value);
            if (null !== s) {
              const o = s.route;
              return (
                (o.value._futureSnapshot = t.value),
                (o.children = t.children.map((a) => oc(n, a))),
                o
              );
            }
          }
          const i = (function I5(n) {
              return new Wn(
                new $n(n.url),
                new $n(n.params),
                new $n(n.queryParams),
                new $n(n.fragment),
                new $n(n.data),
                n.outlet,
                n.component,
                n
              );
            })(t.value),
            r = t.children.map((s) => oc(n, s));
          return new Pr(i, r);
        }
      }
      const ly = "ngNavigationCancelingError";
      function MT(n, t) {
        const { redirectTo: e, navigationBehaviorOptions: i } = io(t)
            ? { redirectTo: t, navigationBehaviorOptions: void 0 }
            : t,
          r = DT(!1, 0, t);
        return (r.url = e), (r.navigationBehaviorOptions = i), r;
      }
      function DT(n, t, e) {
        const i = new Error("NavigationCancelingError: " + (n || ""));
        return (i[ly] = !0), (i.cancellationCode = t), e && (i.url = e), i;
      }
      function xT(n) {
        return ET(n) && io(n.url);
      }
      function ET(n) {
        return n && n[ly];
      }
      class O5 {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.injector = null),
            (this.children = new ac()),
            (this.attachRef = null);
        }
      }
      class ac {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(t, e) {
          const i = this.getOrCreateContext(t);
          (i.outlet = e), this.contexts.set(t, i);
        }
        onChildOutletDestroyed(t) {
          const e = this.getContext(t);
          e && ((e.outlet = null), (e.attachRef = null));
        }
        onOutletDeactivated() {
          const t = this.contexts;
          return (this.contexts = new Map()), t;
        }
        onOutletReAttached(t) {
          this.contexts = t;
        }
        getOrCreateContext(t) {
          let e = this.getContext(t);
          return e || ((e = new O5()), this.contexts.set(t, e)), e;
        }
        getContext(t) {
          return this.contexts.get(t) || null;
        }
      }
      const mh = !1;
      let cy = (() => {
        class n {
          constructor(e, i, r, s, o) {
            (this.parentContexts = e),
              (this.location = i),
              (this.changeDetector = s),
              (this.environmentInjector = o),
              (this.activated = null),
              (this._activatedRoute = null),
              (this.activateEvents = new fe()),
              (this.deactivateEvents = new fe()),
              (this.attachEvents = new fe()),
              (this.detachEvents = new fe()),
              (this.name = r || we),
              e.onChildOutletCreated(this.name, this);
          }
          ngOnDestroy() {
            this.parentContexts.getContext(this.name)?.outlet === this &&
              this.parentContexts.onChildOutletDestroyed(this.name);
          }
          ngOnInit() {
            if (!this.activated) {
              const e = this.parentContexts.getContext(this.name);
              e &&
                e.route &&
                (e.attachRef
                  ? this.attach(e.attachRef, e.route)
                  : this.activateWith(e.route, e.injector));
            }
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new k(4012, mh);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new k(4012, mh);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new k(4012, mh);
            this.location.detach();
            const e = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(e.instance),
              e
            );
          }
          attach(e, i) {
            (this.activated = e),
              (this._activatedRoute = i),
              this.location.insert(e.hostView),
              this.attachEvents.emit(e.instance);
          }
          deactivate() {
            if (this.activated) {
              const e = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(e);
            }
          }
          activateWith(e, i) {
            if (this.isActivated) throw new k(4013, mh);
            this._activatedRoute = e;
            const r = this.location,
              o = e._futureSnapshot.component,
              a = this.parentContexts.getOrCreateContext(this.name).children,
              l = new R5(e, a, r.injector);
            if (
              i &&
              (function P5(n) {
                return !!n.resolveComponentFactory;
              })(i)
            ) {
              const c = i.resolveComponentFactory(o);
              this.activated = r.createComponent(c, r.length, l);
            } else
              this.activated = r.createComponent(o, {
                index: r.length,
                injector: l,
                environmentInjector: i ?? this.environmentInjector,
              });
            this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(ac), g(en), Li("name"), g(Et), g(ts));
          }),
          (n.ɵdir = N({
            type: n,
            selectors: [["router-outlet"]],
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
          })),
          n
        );
      })();
      class R5 {
        constructor(t, e, i) {
          (this.route = t), (this.childContexts = e), (this.parent = i);
        }
        get(t, e) {
          return t === Wn
            ? this.route
            : t === ac
            ? this.childContexts
            : this.parent.get(t, e);
        }
      }
      let ST = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["ng-component"]],
            decls: 1,
            vars: 0,
            template: function (e, i) {
              1 & e && ge(0, "router-outlet");
            },
            dependencies: [cy],
            encapsulation: 2,
          })),
          n
        );
      })();
      function TT(n, t) {
        return (
          n.providers &&
            !n._injector &&
            (n._injector = id(n.providers, t, `Route: ${n.path}`)),
          n._injector ?? t
        );
      }
      function dy(n) {
        const t = n.children && n.children.map(dy),
          e = t ? { ...n, children: t } : { ...n };
        return (
          !e.component &&
            !e.loadComponent &&
            (t || e.loadChildren) &&
            e.outlet &&
            e.outlet !== we &&
            (e.component = ST),
          e
        );
      }
      function li(n) {
        return n.outlet || we;
      }
      function AT(n, t) {
        const e = n.filter((i) => li(i) === t);
        return e.push(...n.filter((i) => li(i) !== t)), e;
      }
      function kT(n) {
        if (!n) return null;
        if (n.routeConfig?._injector) return n.routeConfig._injector;
        for (let t = n.parent; t; t = t.parent) {
          const e = t.routeConfig;
          if (e?._loadedInjector) return e._loadedInjector;
          if (e?._injector) return e._injector;
        }
        return null;
      }
      class V5 {
        constructor(t, e, i, r) {
          (this.routeReuseStrategy = t),
            (this.futureState = e),
            (this.currState = i),
            (this.forwardEvent = r);
        }
        activate(t) {
          const e = this.futureState._root,
            i = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, i, t),
            oy(this.futureState.root),
            this.activateChildRoutes(e, i, t);
        }
        deactivateChildRoutes(t, e, i) {
          const r = xa(e);
          t.children.forEach((s) => {
            const o = s.value.outlet;
            this.deactivateRoutes(s, r[o], i), delete r[o];
          }),
            Yt(r, (s, o) => {
              this.deactivateRouteAndItsChildren(s, i);
            });
        }
        deactivateRoutes(t, e, i) {
          const r = t.value,
            s = e ? e.value : null;
          if (r === s)
            if (r.component) {
              const o = i.getContext(r.outlet);
              o && this.deactivateChildRoutes(t, e, o.children);
            } else this.deactivateChildRoutes(t, e, i);
          else s && this.deactivateRouteAndItsChildren(e, i);
        }
        deactivateRouteAndItsChildren(t, e) {
          t.value.component &&
          this.routeReuseStrategy.shouldDetach(t.value.snapshot)
            ? this.detachAndStoreRouteSubtree(t, e)
            : this.deactivateRouteAndOutlet(t, e);
        }
        detachAndStoreRouteSubtree(t, e) {
          const i = e.getContext(t.value.outlet),
            r = i && t.value.component ? i.children : e,
            s = xa(t);
          for (const o of Object.keys(s))
            this.deactivateRouteAndItsChildren(s[o], r);
          if (i && i.outlet) {
            const o = i.outlet.detach(),
              a = i.children.onOutletDeactivated();
            this.routeReuseStrategy.store(t.value.snapshot, {
              componentRef: o,
              route: t,
              contexts: a,
            });
          }
        }
        deactivateRouteAndOutlet(t, e) {
          const i = e.getContext(t.value.outlet),
            r = i && t.value.component ? i.children : e,
            s = xa(t);
          for (const o of Object.keys(s))
            this.deactivateRouteAndItsChildren(s[o], r);
          i &&
            i.outlet &&
            (i.outlet.deactivate(),
            i.children.onOutletDeactivated(),
            (i.attachRef = null),
            (i.resolver = null),
            (i.route = null));
        }
        activateChildRoutes(t, e, i) {
          const r = xa(e);
          t.children.forEach((s) => {
            this.activateRoutes(s, r[s.value.outlet], i),
              this.forwardEvent(new x5(s.value.snapshot));
          }),
            t.children.length && this.forwardEvent(new M5(t.value.snapshot));
        }
        activateRoutes(t, e, i) {
          const r = t.value,
            s = e ? e.value : null;
          if ((oy(r), r === s))
            if (r.component) {
              const o = i.getOrCreateContext(r.outlet);
              this.activateChildRoutes(t, e, o.children);
            } else this.activateChildRoutes(t, e, i);
          else if (r.component) {
            const o = i.getOrCreateContext(r.outlet);
            if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
              const a = this.routeReuseStrategy.retrieve(r.snapshot);
              this.routeReuseStrategy.store(r.snapshot, null),
                o.children.onOutletReAttached(a.contexts),
                (o.attachRef = a.componentRef),
                (o.route = a.route.value),
                o.outlet && o.outlet.attach(a.componentRef, a.route.value),
                oy(a.route.value),
                this.activateChildRoutes(t, null, o.children);
            } else {
              const a = kT(r.snapshot),
                l = a?.get(Ls) ?? null;
              (o.attachRef = null),
                (o.route = r),
                (o.resolver = l),
                (o.injector = a),
                o.outlet && o.outlet.activateWith(r, o.injector),
                this.activateChildRoutes(t, null, o.children);
            }
          } else this.activateChildRoutes(t, null, i);
        }
      }
      class IT {
        constructor(t) {
          (this.path = t), (this.route = this.path[this.path.length - 1]);
        }
      }
      class gh {
        constructor(t, e) {
          (this.component = t), (this.route = e);
        }
      }
      function j5(n, t, e) {
        const i = n._root;
        return lc(i, t ? t._root : null, e, [i.value]);
      }
      function _h(n, t, e) {
        return (kT(t) ?? e).get(n);
      }
      function lc(
        n,
        t,
        e,
        i,
        r = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const s = xa(t);
        return (
          n.children.forEach((o) => {
            (function z5(
              n,
              t,
              e,
              i,
              r = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const s = n.value,
                o = t ? t.value : null,
                a = e ? e.getContext(n.value.outlet) : null;
              if (o && s.routeConfig === o.routeConfig) {
                const l = (function U5(n, t, e) {
                  if ("function" == typeof e) return e(n, t);
                  switch (e) {
                    case "pathParamsChange":
                      return !no(n.url, t.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !no(n.url, t.url) || !nr(n.queryParams, t.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !ay(n, t) || !nr(n.queryParams, t.queryParams);
                    default:
                      return !ay(n, t);
                  }
                })(o, s, s.routeConfig.runGuardsAndResolvers);
                l
                  ? r.canActivateChecks.push(new IT(i))
                  : ((s.data = o.data), (s._resolvedData = o._resolvedData)),
                  lc(n, t, s.component ? (a ? a.children : null) : e, i, r),
                  l &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    r.canDeactivateChecks.push(new gh(a.outlet.component, o));
              } else
                o && cc(t, a, r),
                  r.canActivateChecks.push(new IT(i)),
                  lc(n, null, s.component ? (a ? a.children : null) : e, i, r);
            })(o, s[o.value.outlet], e, i.concat([o.value]), r),
              delete s[o.value.outlet];
          }),
          Yt(s, (o, a) => cc(o, e.getContext(a), r)),
          r
        );
      }
      function cc(n, t, e) {
        const i = xa(n),
          r = n.value;
        Yt(i, (s, o) => {
          cc(s, r.component ? (t ? t.children.getContext(o) : null) : t, e);
        }),
          e.canDeactivateChecks.push(
            new gh(
              r.component && t && t.outlet && t.outlet.isActivated
                ? t.outlet.component
                : null,
              r
            )
          );
      }
      function uc(n) {
        return "function" == typeof n;
      }
      const yh = Symbol("INITIAL_VALUE");
      function Ea() {
        return ai((n) =>
          W_(n.map((t) => t.pipe(Vt(1), qn(yh)))).pipe(
            Z((t) => {
              for (const e of t)
                if (!0 !== e) {
                  if (e === yh) return yh;
                  if (!1 === e || e instanceof to) return e;
                }
              return !0;
            }),
            ct((t) => t !== yh),
            Vt(1)
          )
        );
      }
      function OT(n) {
        return (function MO(...n) {
          return Qv(n);
        })(
          kt((t) => {
            if (io(t)) throw MT(0, t);
          }),
          Z((t) => !0 === t)
        );
      }
      const hy = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function RT(n, t, e, i, r) {
        const s = fy(n, t, e);
        return s.matched
          ? (function o4(n, t, e, i) {
              const r = t.canMatch;
              return r && 0 !== r.length
                ? W(
                    r.map((o) => {
                      const a = n.get(o),
                        l = (function K5(n) {
                          return n && uc(n.canMatch);
                        })(a)
                          ? a.canMatch(t, e)
                          : a(t, e);
                      return Or(l);
                    })
                  ).pipe(Ea(), OT())
                : W(!0);
            })((i = TT(t, i)), t, e).pipe(Z((o) => (!0 === o ? s : { ...hy })))
          : W(s);
      }
      function fy(n, t, e) {
        if ("" === t.path)
          return "full" === t.pathMatch && (n.hasChildren() || e.length > 0)
            ? { ...hy }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: e,
                parameters: {},
                positionalParamSegments: {},
              };
        const r = (t.matcher || z$)(e, n, t);
        if (!r) return { ...hy };
        const s = {};
        Yt(r.posParams, (a, l) => {
          s[l] = a.path;
        });
        const o =
          r.consumed.length > 0
            ? { ...s, ...r.consumed[r.consumed.length - 1].parameters }
            : s;
        return {
          matched: !0,
          consumedSegments: r.consumed,
          remainingSegments: e.slice(r.consumed.length),
          parameters: o,
          positionalParamSegments: r.posParams ?? {},
        };
      }
      function vh(n, t, e, i, r = "corrected") {
        if (
          e.length > 0 &&
          (function c4(n, t, e) {
            return e.some((i) => bh(n, t, i) && li(i) !== we);
          })(n, e, i)
        ) {
          const o = new xe(
            t,
            (function l4(n, t, e, i) {
              const r = {};
              (r[we] = i),
                (i._sourceSegment = n),
                (i._segmentIndexShift = t.length);
              for (const s of e)
                if ("" === s.path && li(s) !== we) {
                  const o = new xe([], {});
                  (o._sourceSegment = n),
                    (o._segmentIndexShift = t.length),
                    (r[li(s)] = o);
                }
              return r;
            })(n, t, i, new xe(e, n.children))
          );
          return (
            (o._sourceSegment = n),
            (o._segmentIndexShift = t.length),
            { segmentGroup: o, slicedSegments: [] }
          );
        }
        if (
          0 === e.length &&
          (function u4(n, t, e) {
            return e.some((i) => bh(n, t, i));
          })(n, e, i)
        ) {
          const o = new xe(
            n.segments,
            (function a4(n, t, e, i, r, s) {
              const o = {};
              for (const a of i)
                if (bh(n, e, a) && !r[li(a)]) {
                  const l = new xe([], {});
                  (l._sourceSegment = n),
                    (l._segmentIndexShift =
                      "legacy" === s ? n.segments.length : t.length),
                    (o[li(a)] = l);
                }
              return { ...r, ...o };
            })(n, t, e, i, n.children, r)
          );
          return (
            (o._sourceSegment = n),
            (o._segmentIndexShift = t.length),
            { segmentGroup: o, slicedSegments: e }
          );
        }
        const s = new xe(n.segments, n.children);
        return (
          (s._sourceSegment = n),
          (s._segmentIndexShift = t.length),
          { segmentGroup: s, slicedSegments: e }
        );
      }
      function bh(n, t, e) {
        return (
          (!(n.hasChildren() || t.length > 0) || "full" !== e.pathMatch) &&
          "" === e.path
        );
      }
      function PT(n, t, e, i) {
        return (
          !!(li(n) === i || (i !== we && bh(t, e, n))) &&
          ("**" === n.path || fy(t, n, e).matched)
        );
      }
      function FT(n, t, e) {
        return 0 === t.length && !n.children[e];
      }
      const Ch = !1;
      class wh {
        constructor(t) {
          this.segmentGroup = t || null;
        }
      }
      class NT {
        constructor(t) {
          this.urlTree = t;
        }
      }
      function dc(n) {
        return eo(new wh(n));
      }
      function LT(n) {
        return eo(new NT(n));
      }
      class p4 {
        constructor(t, e, i, r, s) {
          (this.injector = t),
            (this.configLoader = e),
            (this.urlSerializer = i),
            (this.urlTree = r),
            (this.config = s),
            (this.allowRedirects = !0);
        }
        apply() {
          const t = vh(this.urlTree.root, [], [], this.config).segmentGroup,
            e = new xe(t.segments, t.children);
          return this.expandSegmentGroup(this.injector, this.config, e, we)
            .pipe(
              Z((s) =>
                this.createUrlTree(
                  hh(s),
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              tr((s) => {
                if (s instanceof NT)
                  return (this.allowRedirects = !1), this.match(s.urlTree);
                throw s instanceof wh ? this.noMatchError(s) : s;
              })
            );
        }
        match(t) {
          return this.expandSegmentGroup(this.injector, this.config, t.root, we)
            .pipe(
              Z((r) => this.createUrlTree(hh(r), t.queryParams, t.fragment))
            )
            .pipe(
              tr((r) => {
                throw r instanceof wh ? this.noMatchError(r) : r;
              })
            );
        }
        noMatchError(t) {
          return new k(4002, Ch);
        }
        createUrlTree(t, e, i) {
          const r = Q_(t);
          return new to(r, e, i);
        }
        expandSegmentGroup(t, e, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.expandChildren(t, e, i).pipe(Z((s) => new xe([], s)))
            : this.expandSegment(t, i, e, i.segments, r, !0);
        }
        expandChildren(t, e, i) {
          const r = [];
          for (const s of Object.keys(i.children))
            "primary" === s ? r.unshift(s) : r.push(s);
          return Dt(r).pipe(
            gs((s) => {
              const o = i.children[s],
                a = AT(e, s);
              return this.expandSegmentGroup(t, a, o, s).pipe(
                Z((l) => ({ segment: l, outlet: s }))
              );
            }),
            GS((s, o) => ((s[o.outlet] = o.segment), s), {}),
            YS()
          );
        }
        expandSegment(t, e, i, r, s, o) {
          return Dt(i).pipe(
            gs((a) =>
              this.expandSegmentAgainstRoute(t, e, i, a, r, s, o).pipe(
                tr((c) => {
                  if (c instanceof wh) return W(null);
                  throw c;
                })
              )
            ),
            ms((a) => !!a),
            tr((a, l) => {
              if (a instanceof Ca || "EmptyError" === a.name)
                return FT(e, r, s) ? W(new xe([], {})) : dc(e);
              throw a;
            })
          );
        }
        expandSegmentAgainstRoute(t, e, i, r, s, o, a) {
          return PT(r, e, s, o)
            ? void 0 === r.redirectTo
              ? this.matchSegmentAgainstRoute(t, e, r, s, o)
              : a && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(t, e, i, r, s, o)
              : dc(e)
            : dc(e);
        }
        expandSegmentAgainstRouteUsingRedirect(t, e, i, r, s, o) {
          return "**" === r.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, i, r, o)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                t,
                e,
                i,
                r,
                s,
                o
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(t, e, i, r) {
          const s = this.applyRedirectCommands([], i.redirectTo, {});
          return i.redirectTo.startsWith("/")
            ? LT(s)
            : this.lineralizeSegments(i, s).pipe(
                zt((o) => {
                  const a = new xe(o, {});
                  return this.expandSegment(t, a, e, o, r, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(t, e, i, r, s, o) {
          const {
            matched: a,
            consumedSegments: l,
            remainingSegments: c,
            positionalParamSegments: u,
          } = fy(e, r, s);
          if (!a) return dc(e);
          const d = this.applyRedirectCommands(l, r.redirectTo, u);
          return r.redirectTo.startsWith("/")
            ? LT(d)
            : this.lineralizeSegments(r, d).pipe(
                zt((h) => this.expandSegment(t, e, i, h.concat(c), o, !1))
              );
        }
        matchSegmentAgainstRoute(t, e, i, r, s) {
          return "**" === i.path
            ? ((t = TT(i, t)),
              i.loadChildren
                ? (i._loadedRoutes
                    ? W({
                        routes: i._loadedRoutes,
                        injector: i._loadedInjector,
                      })
                    : this.configLoader.loadChildren(t, i)
                  ).pipe(
                    Z(
                      (a) => (
                        (i._loadedRoutes = a.routes),
                        (i._loadedInjector = a.injector),
                        new xe(r, {})
                      )
                    )
                  )
                : W(new xe(r, {})))
            : RT(e, i, r, t).pipe(
                ai(
                  ({ matched: o, consumedSegments: a, remainingSegments: l }) =>
                    o
                      ? this.getChildConfig((t = i._injector ?? t), i, r).pipe(
                          zt((u) => {
                            const d = u.injector ?? t,
                              h = u.routes,
                              { segmentGroup: f, slicedSegments: p } = vh(
                                e,
                                a,
                                l,
                                h
                              ),
                              m = new xe(f.segments, f.children);
                            if (0 === p.length && m.hasChildren())
                              return this.expandChildren(d, h, m).pipe(
                                Z((C) => new xe(a, C))
                              );
                            if (0 === h.length && 0 === p.length)
                              return W(new xe(a, {}));
                            const _ = li(i) === s;
                            return this.expandSegment(
                              d,
                              m,
                              h,
                              p,
                              _ ? we : s,
                              !0
                            ).pipe(
                              Z((M) => new xe(a.concat(M.segments), M.children))
                            );
                          })
                        )
                      : dc(e)
                )
              );
        }
        getChildConfig(t, e, i) {
          return e.children
            ? W({ routes: e.children, injector: t })
            : e.loadChildren
            ? void 0 !== e._loadedRoutes
              ? W({ routes: e._loadedRoutes, injector: e._loadedInjector })
              : (function s4(n, t, e, i) {
                  const r = t.canLoad;
                  return void 0 === r || 0 === r.length
                    ? W(!0)
                    : W(
                        r.map((o) => {
                          const a = n.get(o),
                            l = (function q5(n) {
                              return n && uc(n.canLoad);
                            })(a)
                              ? a.canLoad(t, e)
                              : a(t, e);
                          return Or(l);
                        })
                      ).pipe(Ea(), OT());
                })(t, e, i).pipe(
                  zt((r) =>
                    r
                      ? this.configLoader.loadChildren(t, e).pipe(
                          kt((s) => {
                            (e._loadedRoutes = s.routes),
                              (e._loadedInjector = s.injector);
                          })
                        )
                      : (function h4(n) {
                          return eo(DT(Ch, 3));
                        })()
                  )
                )
            : W({ routes: [], injector: t });
        }
        lineralizeSegments(t, e) {
          let i = [],
            r = e.root;
          for (;;) {
            if (((i = i.concat(r.segments)), 0 === r.numberOfChildren))
              return W(i);
            if (r.numberOfChildren > 1 || !r.children[we])
              return eo(new k(4e3, Ch));
            r = r.children[we];
          }
        }
        applyRedirectCommands(t, e, i) {
          return this.applyRedirectCreateUrlTree(
            e,
            this.urlSerializer.parse(e),
            t,
            i
          );
        }
        applyRedirectCreateUrlTree(t, e, i, r) {
          const s = this.createSegmentGroup(t, e.root, i, r);
          return new to(
            s,
            this.createQueryParams(e.queryParams, this.urlTree.queryParams),
            e.fragment
          );
        }
        createQueryParams(t, e) {
          const i = {};
          return (
            Yt(t, (r, s) => {
              if ("string" == typeof r && r.startsWith(":")) {
                const a = r.substring(1);
                i[s] = e[a];
              } else i[s] = r;
            }),
            i
          );
        }
        createSegmentGroup(t, e, i, r) {
          const s = this.createSegments(t, e.segments, i, r);
          let o = {};
          return (
            Yt(e.children, (a, l) => {
              o[l] = this.createSegmentGroup(t, a, i, r);
            }),
            new xe(s, o)
          );
        }
        createSegments(t, e, i, r) {
          return e.map((s) =>
            s.path.startsWith(":")
              ? this.findPosParam(t, s, r)
              : this.findOrReturn(s, i)
          );
        }
        findPosParam(t, e, i) {
          const r = i[e.path.substring(1)];
          if (!r) throw new k(4001, Ch);
          return r;
        }
        findOrReturn(t, e) {
          let i = 0;
          for (const r of e) {
            if (r.path === t.path) return e.splice(i), r;
            i++;
          }
          return t;
        }
      }
      class g4 {}
      class v4 {
        constructor(t, e, i, r, s, o, a, l) {
          (this.injector = t),
            (this.rootComponentType = e),
            (this.config = i),
            (this.urlTree = r),
            (this.url = s),
            (this.paramsInheritanceStrategy = o),
            (this.relativeLinkResolution = a),
            (this.urlSerializer = l);
        }
        recognize() {
          const t = vh(
            this.urlTree.root,
            [],
            [],
            this.config.filter((e) => void 0 === e.redirectTo),
            this.relativeLinkResolution
          ).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            t,
            we
          ).pipe(
            Z((e) => {
              if (null === e) return null;
              const i = new ph(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  we,
                  this.rootComponentType,
                  null,
                  this.urlTree.root,
                  -1,
                  {}
                ),
                r = new Pr(i, e),
                s = new CT(this.url, r);
              return this.inheritParamsAndData(s._root), s;
            })
          );
        }
        inheritParamsAndData(t) {
          const e = t.value,
            i = bT(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(i.params)),
            (e.data = Object.freeze(i.data)),
            t.children.forEach((r) => this.inheritParamsAndData(r));
        }
        processSegmentGroup(t, e, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.processChildren(t, e, i)
            : this.processSegment(t, e, i, i.segments, r);
        }
        processChildren(t, e, i) {
          return Dt(Object.keys(i.children)).pipe(
            gs((r) => {
              const s = i.children[r],
                o = AT(e, r);
              return this.processSegmentGroup(t, o, s, r);
            }),
            GS((r, s) => (r && s ? (r.push(...s), r) : null)),
            KS((r) => null !== r),
            sh(null),
            YS(),
            Z((r) => {
              if (null === r) return null;
              const s = BT(r);
              return (
                (function b4(n) {
                  n.sort((t, e) =>
                    t.value.outlet === we
                      ? -1
                      : e.value.outlet === we
                      ? 1
                      : t.value.outlet.localeCompare(e.value.outlet)
                  );
                })(s),
                s
              );
            })
          );
        }
        processSegment(t, e, i, r, s) {
          return Dt(e).pipe(
            gs((o) =>
              this.processSegmentAgainstRoute(o._injector ?? t, o, i, r, s)
            ),
            ms((o) => !!o),
            tr((o) => {
              if (o instanceof Ca) return FT(i, r, s) ? W([]) : W(null);
              throw o;
            })
          );
        }
        processSegmentAgainstRoute(t, e, i, r, s) {
          if (e.redirectTo || !PT(e, i, r, s)) return W(null);
          let o;
          if ("**" === e.path) {
            const a = r.length > 0 ? QS(r).parameters : {},
              l = jT(i) + r.length;
            o = W({
              snapshot: new ph(
                r,
                a,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                zT(e),
                li(e),
                e.component ?? e._loadedComponent ?? null,
                e,
                VT(i),
                l,
                UT(e),
                l
              ),
              consumedSegments: [],
              remainingSegments: [],
            });
          } else
            o = RT(i, e, r, t).pipe(
              Z(
                ({
                  matched: a,
                  consumedSegments: l,
                  remainingSegments: c,
                  parameters: u,
                }) => {
                  if (!a) return null;
                  const d = jT(i) + l.length;
                  return {
                    snapshot: new ph(
                      l,
                      u,
                      Object.freeze({ ...this.urlTree.queryParams }),
                      this.urlTree.fragment,
                      zT(e),
                      li(e),
                      e.component ?? e._loadedComponent ?? null,
                      e,
                      VT(i),
                      d,
                      UT(e),
                      d
                    ),
                    consumedSegments: l,
                    remainingSegments: c,
                  };
                }
              )
            );
          return o.pipe(
            ai((a) => {
              if (null === a) return W(null);
              const {
                snapshot: l,
                consumedSegments: c,
                remainingSegments: u,
              } = a;
              t = e._injector ?? t;
              const d = e._loadedInjector ?? t,
                h = (function C4(n) {
                  return n.children
                    ? n.children
                    : n.loadChildren
                    ? n._loadedRoutes
                    : [];
                })(e),
                { segmentGroup: f, slicedSegments: p } = vh(
                  i,
                  c,
                  u,
                  h.filter((_) => void 0 === _.redirectTo),
                  this.relativeLinkResolution
                );
              if (0 === p.length && f.hasChildren())
                return this.processChildren(d, h, f).pipe(
                  Z((_) => (null === _ ? null : [new Pr(l, _)]))
                );
              if (0 === h.length && 0 === p.length) return W([new Pr(l, [])]);
              const m = li(e) === s;
              return this.processSegment(d, h, f, p, m ? we : s).pipe(
                Z((_) => (null === _ ? null : [new Pr(l, _)]))
              );
            })
          );
        }
      }
      function w4(n) {
        const t = n.value.routeConfig;
        return t && "" === t.path && void 0 === t.redirectTo;
      }
      function BT(n) {
        const t = [],
          e = new Set();
        for (const i of n) {
          if (!w4(i)) {
            t.push(i);
            continue;
          }
          const r = t.find((s) => i.value.routeConfig === s.value.routeConfig);
          void 0 !== r ? (r.children.push(...i.children), e.add(r)) : t.push(i);
        }
        for (const i of e) {
          const r = BT(i.children);
          t.push(new Pr(i.value, r));
        }
        return t.filter((i) => !e.has(i));
      }
      function VT(n) {
        let t = n;
        for (; t._sourceSegment; ) t = t._sourceSegment;
        return t;
      }
      function jT(n) {
        let t = n,
          e = t._segmentIndexShift ?? 0;
        for (; t._sourceSegment; )
          (t = t._sourceSegment), (e += t._segmentIndexShift ?? 0);
        return e - 1;
      }
      function zT(n) {
        return n.data || {};
      }
      function UT(n) {
        return n.resolve || {};
      }
      const py = Symbol("RouteTitle");
      function $T(n) {
        return "string" == typeof n.title || null === n.title;
      }
      function my(n) {
        return ai((t) => {
          const e = n(t);
          return e ? Dt(e).pipe(Z(() => t)) : W(t);
        });
      }
      class O4 extends class I4 {
        shouldDetach(t) {
          return !1;
        }
        store(t, e) {}
        shouldAttach(t) {
          return !1;
        }
        retrieve(t) {
          return null;
        }
        shouldReuseRoute(t, e) {
          return t.routeConfig === e.routeConfig;
        }
      } {}
      const gy = new R("ROUTES");
      let _y = (() => {
        class n {
          constructor(e, i) {
            (this.injector = e),
              (this.compiler = i),
              (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap());
          }
          loadComponent(e) {
            if (this.componentLoaders.get(e))
              return this.componentLoaders.get(e);
            if (e._loadedComponent) return W(e._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(e);
            const i = Or(e.loadComponent()).pipe(
                kt((s) => {
                  this.onLoadEndListener && this.onLoadEndListener(e),
                    (e._loadedComponent = s);
                }),
                oh(() => {
                  this.componentLoaders.delete(e);
                })
              ),
              r = new qS(i, () => new $()).pipe(G_());
            return this.componentLoaders.set(e, r), r;
          }
          loadChildren(e, i) {
            if (this.childrenLoaders.get(i)) return this.childrenLoaders.get(i);
            if (i._loadedRoutes)
              return W({
                routes: i._loadedRoutes,
                injector: i._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(i);
            const s = this.loadModuleFactoryOrRoutes(i.loadChildren).pipe(
                Z((a) => {
                  this.onLoadEndListener && this.onLoadEndListener(i);
                  let l,
                    c,
                    u = !1;
                  Array.isArray(a)
                    ? (c = a)
                    : ((l = a.create(e).injector),
                      (c = ZS(l.get(gy, [], K.Self | K.Optional))));
                  return { routes: c.map(dy), injector: l };
                }),
                oh(() => {
                  this.childrenLoaders.delete(i);
                })
              ),
              o = new qS(s, () => new $()).pipe(G_());
            return this.childrenLoaders.set(i, o), o;
          }
          loadModuleFactoryOrRoutes(e) {
            return Or(e()).pipe(
              zt((i) =>
                i instanceof jM || Array.isArray(i)
                  ? W(i)
                  : Dt(this.compiler.compileModuleAsync(i))
              )
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(lt), x(vg));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class P4 {
        shouldProcessUrl(t) {
          return !0;
        }
        extract(t) {
          return t;
        }
        merge(t, e) {
          return t;
        }
      }
      function F4(n) {
        throw n;
      }
      function N4(n, t, e) {
        return t.parse("/");
      }
      const L4 = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        B4 = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let Pe = (() => {
        class n {
          constructor(e, i, r, s, o, a, l) {
            (this.rootComponentType = e),
              (this.urlSerializer = i),
              (this.rootContexts = r),
              (this.location = s),
              (this.config = l),
              (this.lastSuccessfulNavigation = null),
              (this.currentNavigation = null),
              (this.disposed = !1),
              (this.navigationId = 0),
              (this.currentPageId = 0),
              (this.isNgZoneEnabled = !1),
              (this.events = new $()),
              (this.errorHandler = F4),
              (this.malformedUriErrorHandler = N4),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.afterPreactivation = () => W(void 0)),
              (this.urlHandlingStrategy = new P4()),
              (this.routeReuseStrategy = new O4()),
              (this.onSameUrlNavigation = "ignore"),
              (this.paramsInheritanceStrategy = "emptyOnly"),
              (this.urlUpdateStrategy = "deferred"),
              (this.relativeLinkResolution = "corrected"),
              (this.canceledNavigationResolution = "replace"),
              (this.configLoader = o.get(_y)),
              (this.configLoader.onLoadEndListener = (h) =>
                this.triggerEvent(new C5(h))),
              (this.configLoader.onLoadStartListener = (h) =>
                this.triggerEvent(new b5(h))),
              (this.ngModule = o.get(qs)),
              (this.console = o.get(UV));
            const d = o.get(Q);
            (this.isNgZoneEnabled = d instanceof Q && Q.isInAngularZone()),
              this.resetConfig(l),
              (this.currentUrlTree = (function $$() {
                return new to(new xe([], {}), {}, null);
              })()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.routerState = vT(
                this.currentUrlTree,
                this.rootComponentType
              )),
              (this.transitions = new $n({
                id: 0,
                targetPageId: 0,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                extractedUrl: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                urlAfterRedirects: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                rawUrl: this.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: "imperative",
                restoredState: null,
                currentSnapshot: this.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: this.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              (this.navigations = this.setupNavigations(this.transitions)),
              this.processNavigations();
          }
          get browserPageId() {
            return this.location.getState()?.ɵrouterPageId;
          }
          setupNavigations(e) {
            const i = this.events;
            return e.pipe(
              ct((r) => 0 !== r.id),
              Z((r) => ({
                ...r,
                extractedUrl: this.urlHandlingStrategy.extract(r.rawUrl),
              })),
              ai((r) => {
                let s = !1,
                  o = !1;
                return W(r).pipe(
                  kt((a) => {
                    this.currentNavigation = {
                      id: a.id,
                      initialUrl: a.rawUrl,
                      extractedUrl: a.extractedUrl,
                      trigger: a.source,
                      extras: a.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? {
                            ...this.lastSuccessfulNavigation,
                            previousNavigation: null,
                          }
                        : null,
                    };
                  }),
                  ai((a) => {
                    const l = this.browserUrlTree.toString(),
                      c =
                        !this.navigated ||
                        a.extractedUrl.toString() !== l ||
                        l !== this.currentUrlTree.toString();
                    if (
                      ("reload" === this.onSameUrlNavigation || c) &&
                      this.urlHandlingStrategy.shouldProcessUrl(a.rawUrl)
                    )
                      return (
                        WT(a.source) && (this.browserUrlTree = a.extractedUrl),
                        W(a).pipe(
                          ai((d) => {
                            const h = this.transitions.getValue();
                            return (
                              i.next(
                                new ny(
                                  d.id,
                                  this.serializeUrl(d.extractedUrl),
                                  d.source,
                                  d.restoredState
                                )
                              ),
                              h !== this.transitions.getValue()
                                ? Oi
                                : Promise.resolve(d)
                            );
                          }),
                          (function m4(n, t, e, i) {
                            return ai((r) =>
                              (function f4(n, t, e, i, r) {
                                return new p4(n, t, e, i, r).apply();
                              })(n, t, e, r.extractedUrl, i).pipe(
                                Z((s) => ({ ...r, urlAfterRedirects: s }))
                              )
                            );
                          })(
                            this.ngModule.injector,
                            this.configLoader,
                            this.urlSerializer,
                            this.config
                          ),
                          kt((d) => {
                            (this.currentNavigation = {
                              ...this.currentNavigation,
                              finalUrl: d.urlAfterRedirects,
                            }),
                              (r.urlAfterRedirects = d.urlAfterRedirects);
                          }),
                          (function D4(n, t, e, i, r, s) {
                            return zt((o) =>
                              (function y4(
                                n,
                                t,
                                e,
                                i,
                                r,
                                s,
                                o = "emptyOnly",
                                a = "legacy"
                              ) {
                                return new v4(n, t, e, i, r, o, a, s)
                                  .recognize()
                                  .pipe(
                                    ai((l) =>
                                      null === l
                                        ? (function _4(n) {
                                            return new We((t) => t.error(n));
                                          })(new g4())
                                        : W(l)
                                    )
                                  );
                              })(
                                n,
                                t,
                                e,
                                o.urlAfterRedirects,
                                i.serialize(o.urlAfterRedirects),
                                i,
                                r,
                                s
                              ).pipe(Z((a) => ({ ...o, targetSnapshot: a })))
                            );
                          })(
                            this.ngModule.injector,
                            this.rootComponentType,
                            this.config,
                            this.urlSerializer,
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          kt((d) => {
                            if (
                              ((r.targetSnapshot = d.targetSnapshot),
                              "eager" === this.urlUpdateStrategy)
                            ) {
                              if (!d.extras.skipLocationChange) {
                                const f = this.urlHandlingStrategy.merge(
                                  d.urlAfterRedirects,
                                  d.rawUrl
                                );
                                this.setBrowserUrl(f, d);
                              }
                              this.browserUrlTree = d.urlAfterRedirects;
                            }
                            const h = new m5(
                              d.id,
                              this.serializeUrl(d.extractedUrl),
                              this.serializeUrl(d.urlAfterRedirects),
                              d.targetSnapshot
                            );
                            i.next(h);
                          })
                        )
                      );
                    if (
                      c &&
                      this.rawUrlTree &&
                      this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)
                    ) {
                      const {
                          id: h,
                          extractedUrl: f,
                          source: p,
                          restoredState: m,
                          extras: _,
                        } = a,
                        v = new ny(h, this.serializeUrl(f), p, m);
                      i.next(v);
                      const M = vT(f, this.rootComponentType).snapshot;
                      return W(
                        (r = {
                          ...a,
                          targetSnapshot: M,
                          urlAfterRedirects: f,
                          extras: {
                            ..._,
                            skipLocationChange: !1,
                            replaceUrl: !1,
                          },
                        })
                      );
                    }
                    return (this.rawUrlTree = a.rawUrl), a.resolve(null), Oi;
                  }),
                  kt((a) => {
                    const l = new g5(
                      a.id,
                      this.serializeUrl(a.extractedUrl),
                      this.serializeUrl(a.urlAfterRedirects),
                      a.targetSnapshot
                    );
                    this.triggerEvent(l);
                  }),
                  Z(
                    (a) =>
                      (r = {
                        ...a,
                        guards: j5(
                          a.targetSnapshot,
                          a.currentSnapshot,
                          this.rootContexts
                        ),
                      })
                  ),
                  (function Z5(n, t) {
                    return zt((e) => {
                      const {
                        targetSnapshot: i,
                        currentSnapshot: r,
                        guards: {
                          canActivateChecks: s,
                          canDeactivateChecks: o,
                        },
                      } = e;
                      return 0 === o.length && 0 === s.length
                        ? W({ ...e, guardsResult: !0 })
                        : (function Q5(n, t, e, i) {
                            return Dt(n).pipe(
                              zt((r) =>
                                (function r4(n, t, e, i, r) {
                                  const s =
                                    t && t.routeConfig
                                      ? t.routeConfig.canDeactivate
                                      : null;
                                  return s && 0 !== s.length
                                    ? W(
                                        s.map((a) => {
                                          const l = _h(a, t, r);
                                          return Or(
                                            (function Y5(n) {
                                              return n && uc(n.canDeactivate);
                                            })(l)
                                              ? l.canDeactivate(n, t, e, i)
                                              : l(n, t, e, i)
                                          ).pipe(ms());
                                        })
                                      ).pipe(Ea())
                                    : W(!0);
                                })(r.component, r.route, e, t, i)
                              ),
                              ms((r) => !0 !== r, !0)
                            );
                          })(o, i, r, n).pipe(
                            zt((a) =>
                              a &&
                              (function $5(n) {
                                return "boolean" == typeof n;
                              })(a)
                                ? (function J5(n, t, e, i) {
                                    return Dt(t).pipe(
                                      gs((r) =>
                                        rh(
                                          (function t4(n, t) {
                                            return (
                                              null !== n && t && t(new w5(n)),
                                              W(!0)
                                            );
                                          })(r.route.parent, i),
                                          (function e4(n, t) {
                                            return (
                                              null !== n && t && t(new D5(n)),
                                              W(!0)
                                            );
                                          })(r.route, i),
                                          (function i4(n, t, e) {
                                            const i = t[t.length - 1],
                                              s = t
                                                .slice(0, t.length - 1)
                                                .reverse()
                                                .map((o) =>
                                                  (function H5(n) {
                                                    const t = n.routeConfig
                                                      ? n.routeConfig
                                                          .canActivateChild
                                                      : null;
                                                    return t && 0 !== t.length
                                                      ? { node: n, guards: t }
                                                      : null;
                                                  })(o)
                                                )
                                                .filter((o) => null !== o)
                                                .map((o) =>
                                                  ec(() =>
                                                    W(
                                                      o.guards.map((l) => {
                                                        const c = _h(
                                                          l,
                                                          o.node,
                                                          e
                                                        );
                                                        return Or(
                                                          (function G5(n) {
                                                            return (
                                                              n &&
                                                              uc(
                                                                n.canActivateChild
                                                              )
                                                            );
                                                          })(c)
                                                            ? c.canActivateChild(
                                                                i,
                                                                n
                                                              )
                                                            : c(i, n)
                                                        ).pipe(ms());
                                                      })
                                                    ).pipe(Ea())
                                                  )
                                                );
                                            return W(s).pipe(Ea());
                                          })(n, r.path, e),
                                          (function n4(n, t, e) {
                                            const i = t.routeConfig
                                              ? t.routeConfig.canActivate
                                              : null;
                                            if (!i || 0 === i.length)
                                              return W(!0);
                                            const r = i.map((s) =>
                                              ec(() => {
                                                const o = _h(s, t, e);
                                                return Or(
                                                  (function W5(n) {
                                                    return (
                                                      n && uc(n.canActivate)
                                                    );
                                                  })(o)
                                                    ? o.canActivate(t, n)
                                                    : o(t, n)
                                                ).pipe(ms());
                                              })
                                            );
                                            return W(r).pipe(Ea());
                                          })(n, r.route, e)
                                        )
                                      ),
                                      ms((r) => !0 !== r, !0)
                                    );
                                  })(i, s, n, t)
                                : W(a)
                            ),
                            Z((a) => ({ ...e, guardsResult: a }))
                          );
                    });
                  })(this.ngModule.injector, (a) => this.triggerEvent(a)),
                  kt((a) => {
                    if (((r.guardsResult = a.guardsResult), io(a.guardsResult)))
                      throw MT(0, a.guardsResult);
                    const l = new _5(
                      a.id,
                      this.serializeUrl(a.extractedUrl),
                      this.serializeUrl(a.urlAfterRedirects),
                      a.targetSnapshot,
                      !!a.guardsResult
                    );
                    this.triggerEvent(l);
                  }),
                  ct(
                    (a) =>
                      !!a.guardsResult ||
                      (this.restoreHistory(a),
                      this.cancelNavigationTransition(a, "", 3),
                      !1)
                  ),
                  my((a) => {
                    if (a.guards.canActivateChecks.length)
                      return W(a).pipe(
                        kt((l) => {
                          const c = new y5(
                            l.id,
                            this.serializeUrl(l.extractedUrl),
                            this.serializeUrl(l.urlAfterRedirects),
                            l.targetSnapshot
                          );
                          this.triggerEvent(c);
                        }),
                        ai((l) => {
                          let c = !1;
                          return W(l).pipe(
                            (function x4(n, t) {
                              return zt((e) => {
                                const {
                                  targetSnapshot: i,
                                  guards: { canActivateChecks: r },
                                } = e;
                                if (!r.length) return W(e);
                                let s = 0;
                                return Dt(r).pipe(
                                  gs((o) =>
                                    (function E4(n, t, e, i) {
                                      const r = n.routeConfig,
                                        s = n._resolve;
                                      return (
                                        void 0 !== r?.title &&
                                          !$T(r) &&
                                          (s[py] = r.title),
                                        (function S4(n, t, e, i) {
                                          const r = (function T4(n) {
                                            return [
                                              ...Object.keys(n),
                                              ...Object.getOwnPropertySymbols(
                                                n
                                              ),
                                            ];
                                          })(n);
                                          if (0 === r.length) return W({});
                                          const s = {};
                                          return Dt(r).pipe(
                                            zt((o) =>
                                              (function A4(n, t, e, i) {
                                                const r = _h(n, t, i);
                                                return Or(
                                                  r.resolve
                                                    ? r.resolve(t, e)
                                                    : r(t, e)
                                                );
                                              })(n[o], t, e, i).pipe(
                                                ms(),
                                                kt((a) => {
                                                  s[o] = a;
                                                })
                                              )
                                            ),
                                            Y_(1),
                                            K_(s),
                                            tr((o) =>
                                              o instanceof Ca ? Oi : eo(o)
                                            )
                                          );
                                        })(s, n, t, i).pipe(
                                          Z(
                                            (o) => (
                                              (n._resolvedData = o),
                                              (n.data = bT(n, e).resolve),
                                              r &&
                                                $T(r) &&
                                                (n.data[py] = r.title),
                                              null
                                            )
                                          )
                                        )
                                      );
                                    })(o.route, i, n, t)
                                  ),
                                  kt(() => s++),
                                  Y_(1),
                                  zt((o) => (s === r.length ? W(e) : Oi))
                                );
                              });
                            })(
                              this.paramsInheritanceStrategy,
                              this.ngModule.injector
                            ),
                            kt({
                              next: () => (c = !0),
                              complete: () => {
                                c ||
                                  (this.restoreHistory(l),
                                  this.cancelNavigationTransition(l, "", 2));
                              },
                            })
                          );
                        }),
                        kt((l) => {
                          const c = new v5(
                            l.id,
                            this.serializeUrl(l.extractedUrl),
                            this.serializeUrl(l.urlAfterRedirects),
                            l.targetSnapshot
                          );
                          this.triggerEvent(c);
                        })
                      );
                  }),
                  my((a) => {
                    const l = (c) => {
                      const u = [];
                      c.routeConfig?.loadComponent &&
                        !c.routeConfig._loadedComponent &&
                        u.push(
                          this.configLoader.loadComponent(c.routeConfig).pipe(
                            kt((d) => {
                              c.component = d;
                            }),
                            Z(() => {})
                          )
                        );
                      for (const d of c.children) u.push(...l(d));
                      return u;
                    };
                    return W_(l(a.targetSnapshot.root)).pipe(sh(), Vt(1));
                  }),
                  my(() => this.afterPreactivation()),
                  Z((a) => {
                    const l = (function A5(n, t, e) {
                      const i = oc(n, t._root, e ? e._root : void 0);
                      return new yT(i, t);
                    })(
                      this.routeReuseStrategy,
                      a.targetSnapshot,
                      a.currentRouterState
                    );
                    return (r = { ...a, targetRouterState: l });
                  }),
                  kt((a) => {
                    (this.currentUrlTree = a.urlAfterRedirects),
                      (this.rawUrlTree = this.urlHandlingStrategy.merge(
                        a.urlAfterRedirects,
                        a.rawUrl
                      )),
                      (this.routerState = a.targetRouterState),
                      "deferred" === this.urlUpdateStrategy &&
                        (a.extras.skipLocationChange ||
                          this.setBrowserUrl(this.rawUrlTree, a),
                        (this.browserUrlTree = a.urlAfterRedirects));
                  }),
                  ((n, t, e) =>
                    Z(
                      (i) => (
                        new V5(
                          t,
                          i.targetRouterState,
                          i.currentRouterState,
                          e
                        ).activate(n),
                        i
                      )
                    ))(this.rootContexts, this.routeReuseStrategy, (a) =>
                    this.triggerEvent(a)
                  ),
                  kt({
                    next() {
                      s = !0;
                    },
                    complete() {
                      s = !0;
                    },
                  }),
                  oh(() => {
                    s || o || this.cancelNavigationTransition(r, "", 1),
                      this.currentNavigation?.id === r.id &&
                        (this.currentNavigation = null);
                  }),
                  tr((a) => {
                    if (((o = !0), ET(a))) {
                      xT(a) ||
                        ((this.navigated = !0), this.restoreHistory(r, !0));
                      const l = new fh(
                        r.id,
                        this.serializeUrl(r.extractedUrl),
                        a.message,
                        a.cancellationCode
                      );
                      if ((i.next(l), xT(a))) {
                        const c = this.urlHandlingStrategy.merge(
                            a.url,
                            this.rawUrlTree
                          ),
                          u = {
                            skipLocationChange: r.extras.skipLocationChange,
                            replaceUrl:
                              "eager" === this.urlUpdateStrategy ||
                              WT(r.source),
                          };
                        this.scheduleNavigation(c, "imperative", null, u, {
                          resolve: r.resolve,
                          reject: r.reject,
                          promise: r.promise,
                        });
                      } else r.resolve(!1);
                    } else {
                      this.restoreHistory(r, !0);
                      const l = new mT(
                        r.id,
                        this.serializeUrl(r.extractedUrl),
                        a,
                        r.targetSnapshot ?? void 0
                      );
                      i.next(l);
                      try {
                        r.resolve(this.errorHandler(a));
                      } catch (c) {
                        r.reject(c);
                      }
                    }
                    return Oi;
                  })
                );
              })
            );
          }
          resetRootComponentType(e) {
            (this.rootComponentType = e),
              (this.routerState.root.component = this.rootComponentType);
          }
          setTransition(e) {
            this.transitions.next({ ...this.transitions.value, ...e });
          }
          initialNavigation() {
            this.setUpLocationChangeListener(),
              0 === this.navigationId &&
                this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((e) => {
                const i = "popstate" === e.type ? "popstate" : "hashchange";
                "popstate" === i &&
                  setTimeout(() => {
                    const r = { replaceUrl: !0 },
                      s = e.state?.navigationId ? e.state : null;
                    if (s) {
                      const a = { ...s };
                      delete a.navigationId,
                        delete a.ɵrouterPageId,
                        0 !== Object.keys(a).length && (r.state = a);
                    }
                    const o = this.parseUrl(e.url);
                    this.scheduleNavigation(o, i, s, r);
                  }, 0);
              }));
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.currentNavigation;
          }
          triggerEvent(e) {
            this.events.next(e);
          }
          resetConfig(e) {
            (this.config = e.map(dy)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.transitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0);
          }
          createUrlTree(e, i = {}) {
            const {
                relativeTo: r,
                queryParams: s,
                fragment: o,
                queryParamsHandling: a,
                preserveFragment: l,
              } = i,
              c = r || this.routerState.root,
              u = l ? this.currentUrlTree.fragment : o;
            let d = null;
            switch (a) {
              case "merge":
                d = { ...this.currentUrlTree.queryParams, ...s };
                break;
              case "preserve":
                d = this.currentUrlTree.queryParams;
                break;
              default:
                d = s || null;
            }
            return (
              null !== d && (d = this.removeEmptyProps(d)),
              c5(c, this.currentUrlTree, e, d, u ?? null)
            );
          }
          navigateByUrl(e, i = { skipLocationChange: !1 }) {
            const r = io(e) ? e : this.parseUrl(e),
              s = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
            return this.scheduleNavigation(s, "imperative", null, i);
          }
          navigate(e, i = { skipLocationChange: !1 }) {
            return (
              (function V4(n) {
                for (let t = 0; t < n.length; t++) {
                  if (null == n[t]) throw new k(4008, false);
                }
              })(e),
              this.navigateByUrl(this.createUrlTree(e, i), i)
            );
          }
          serializeUrl(e) {
            return this.urlSerializer.serialize(e);
          }
          parseUrl(e) {
            let i;
            try {
              i = this.urlSerializer.parse(e);
            } catch (r) {
              i = this.malformedUriErrorHandler(r, this.urlSerializer, e);
            }
            return i;
          }
          isActive(e, i) {
            let r;
            if (((r = !0 === i ? { ...L4 } : !1 === i ? { ...B4 } : i), io(e)))
              return eT(this.currentUrlTree, e, r);
            const s = this.parseUrl(e);
            return eT(this.currentUrlTree, s, r);
          }
          removeEmptyProps(e) {
            return Object.keys(e).reduce((i, r) => {
              const s = e[r];
              return null != s && (i[r] = s), i;
            }, {});
          }
          processNavigations() {
            this.navigations.subscribe(
              (e) => {
                (this.navigated = !0),
                  (this.lastSuccessfulId = e.id),
                  (this.currentPageId = e.targetPageId),
                  this.events.next(
                    new ro(
                      e.id,
                      this.serializeUrl(e.extractedUrl),
                      this.serializeUrl(this.currentUrlTree)
                    )
                  ),
                  (this.lastSuccessfulNavigation = this.currentNavigation),
                  this.titleStrategy?.updateTitle(this.routerState.snapshot),
                  e.resolve(!0);
              },
              (e) => {
                this.console.warn(`Unhandled Navigation Error: ${e}`);
              }
            );
          }
          scheduleNavigation(e, i, r, s, o) {
            if (this.disposed) return Promise.resolve(!1);
            let a, l, c;
            o
              ? ((a = o.resolve), (l = o.reject), (c = o.promise))
              : (c = new Promise((h, f) => {
                  (a = h), (l = f);
                }));
            const u = ++this.navigationId;
            let d;
            return (
              "computed" === this.canceledNavigationResolution
                ? (0 === this.currentPageId && (r = this.location.getState()),
                  (d =
                    r && r.ɵrouterPageId
                      ? r.ɵrouterPageId
                      : s.replaceUrl || s.skipLocationChange
                      ? this.browserPageId ?? 0
                      : (this.browserPageId ?? 0) + 1))
                : (d = 0),
              this.setTransition({
                id: u,
                targetPageId: d,
                source: i,
                restoredState: r,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.rawUrlTree,
                rawUrl: e,
                extras: s,
                resolve: a,
                reject: l,
                promise: c,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              c.catch((h) => Promise.reject(h))
            );
          }
          setBrowserUrl(e, i) {
            const r = this.urlSerializer.serialize(e),
              s = {
                ...i.extras.state,
                ...this.generateNgRouterState(i.id, i.targetPageId),
              };
            this.location.isCurrentPathEqualTo(r) || i.extras.replaceUrl
              ? this.location.replaceState(r, "", s)
              : this.location.go(r, "", s);
          }
          restoreHistory(e, i = !1) {
            if ("computed" === this.canceledNavigationResolution) {
              const r = this.currentPageId - e.targetPageId;
              ("popstate" !== e.source &&
                "eager" !== this.urlUpdateStrategy &&
                this.currentUrlTree !== this.currentNavigation?.finalUrl) ||
              0 === r
                ? this.currentUrlTree === this.currentNavigation?.finalUrl &&
                  0 === r &&
                  (this.resetState(e),
                  (this.browserUrlTree = e.currentUrlTree),
                  this.resetUrlToCurrentUrlTree())
                : this.location.historyGo(r);
            } else
              "replace" === this.canceledNavigationResolution &&
                (i && this.resetState(e), this.resetUrlToCurrentUrlTree());
          }
          resetState(e) {
            (this.routerState = e.currentRouterState),
              (this.currentUrlTree = e.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                e.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          cancelNavigationTransition(e, i, r) {
            const s = new fh(e.id, this.serializeUrl(e.extractedUrl), i, r);
            this.triggerEvent(s), e.resolve(!1);
          }
          generateNgRouterState(e, i) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: e, ɵrouterPageId: i }
              : { navigationId: e };
          }
        }
        return (
          (n.ɵfac = function (e) {
            js();
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function WT(n) {
        return "imperative" !== n;
      }
      let ir = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this.router = e),
                (this.route = i),
                (this.tabIndexAttribute = r),
                (this.renderer = s),
                (this.el = o),
                (this.commands = null),
                (this.onChanges = new $()),
                this.setTabIndexIfNotOnNativeEl("0");
            }
            setTabIndexIfNotOnNativeEl(e) {
              if (null != this.tabIndexAttribute) return;
              const i = this.renderer,
                r = this.el.nativeElement;
              null !== e
                ? i.setAttribute(r, "tabindex", e)
                : i.removeAttribute(r, "tabindex");
            }
            ngOnChanges(e) {
              this.onChanges.next(this);
            }
            set routerLink(e) {
              null != e
                ? ((this.commands = Array.isArray(e) ? e : [e]),
                  this.setTabIndexIfNotOnNativeEl("0"))
                : ((this.commands = null),
                  this.setTabIndexIfNotOnNativeEl(null));
            }
            onClick() {
              if (null === this.urlTree) return !0;
              const e = {
                skipLocationChange: Er(this.skipLocationChange),
                replaceUrl: Er(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, e), !0;
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: Er(this.preserveFragment),
                  });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Pe), g(Wn), Li("tabindex"), g(br), g(ce));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [["", "routerLink", "", 5, "a", 5, "area"]],
              hostBindings: function (e, i) {
                1 & e &&
                  P("click", function () {
                    return i.onClick();
                  });
              },
              inputs: {
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
                routerLink: "routerLink",
              },
              features: [Gt],
            })),
            n
          );
        })(),
        xh = (() => {
          class n {
            constructor(e, i, r) {
              (this.router = e),
                (this.route = i),
                (this.locationStrategy = r),
                (this.commands = null),
                (this.href = null),
                (this.onChanges = new $()),
                (this.subscription = e.events.subscribe((s) => {
                  s instanceof ro && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(e) {
              this.commands = null != e ? (Array.isArray(e) ? e : [e]) : null;
            }
            ngOnChanges(e) {
              this.updateTargetUrlAndHref(), this.onChanges.next(this);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(e, i, r, s, o) {
              if (
                0 !== e ||
                i ||
                r ||
                s ||
                o ||
                ("string" == typeof this.target && "_self" != this.target) ||
                null === this.urlTree
              )
                return !0;
              const a = {
                skipLocationChange: Er(this.skipLocationChange),
                replaceUrl: Er(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, a), !1;
            }
            updateTargetUrlAndHref() {
              this.href =
                null !== this.urlTree
                  ? this.locationStrategy.prepareExternalUrl(
                      this.router.serializeUrl(this.urlTree)
                    )
                  : null;
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: Er(this.preserveFragment),
                  });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Pe), g(Wn), g(Ys));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["a", "routerLink", ""],
                ["area", "routerLink", ""],
              ],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  P("click", function (s) {
                    return i.onClick(
                      s.button,
                      s.ctrlKey,
                      s.shiftKey,
                      s.altKey,
                      s.metaKey
                    );
                  }),
                  2 & e && ze("target", i.target)("href", i.href, $p);
              },
              inputs: {
                target: "target",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
                routerLink: "routerLink",
              },
              features: [Gt],
            })),
            n
          );
        })(),
        GT = (() => {
          class n {
            buildTitle(e) {
              let i,
                r = e.root;
              for (; void 0 !== r; )
                (i = this.getResolvedTitleForRoute(r) ?? i),
                  (r = r.children.find((s) => s.outlet === we));
              return i;
            }
            getResolvedTitleForRoute(e) {
              return e.data[py];
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = F({
              token: n,
              factory: function () {
                return Ln(z4);
              },
              providedIn: "root",
            })),
            n
          );
        })(),
        z4 = (() => {
          class n extends GT {
            constructor(e) {
              super(), (this.title = e);
            }
            updateTitle(e) {
              const i = this.buildTitle(e);
              void 0 !== i && this.title.setTitle(i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(zx));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      class YT {}
      let KT = (() => {
        class n {
          constructor(e, i, r, s, o) {
            (this.router = e),
              (this.injector = r),
              (this.preloadingStrategy = s),
              (this.loader = o);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                ct((e) => e instanceof ro),
                gs(() => this.preload())
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(e, i) {
            const r = [];
            for (const s of i) {
              s.providers &&
                !s._injector &&
                (s._injector = id(s.providers, e, `Route: ${s.path}`));
              const o = s._injector ?? e,
                a = s._loadedInjector ?? o;
              (s.loadChildren && !s._loadedRoutes) ||
              (s.loadComponent && !s._loadedComponent)
                ? r.push(this.preloadConfig(o, s))
                : (s.children || s._loadedRoutes) &&
                  r.push(this.processRoutes(a, s.children ?? s._loadedRoutes));
            }
            return Dt(r).pipe(So());
          }
          preloadConfig(e, i) {
            return this.preloadingStrategy.preload(i, () => {
              let r;
              r =
                i.loadChildren && void 0 === i.canLoad
                  ? this.loader.loadChildren(e, i)
                  : W(null);
              const s = r.pipe(
                zt((o) =>
                  null === o
                    ? W(void 0)
                    : ((i._loadedRoutes = o.routes),
                      (i._loadedInjector = o.injector),
                      this.processRoutes(o.injector ?? e, o.routes))
                )
              );
              return i.loadComponent && !i._loadedComponent
                ? Dt([s, this.loader.loadComponent(i)]).pipe(So())
                : s;
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(Pe), x(vg), x(ts), x(YT), x(_y));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const XT = new R("");
      let U4 = (() => {
        class n {
          constructor(e, i, r = {}) {
            (this.router = e),
              (this.viewportScroller = i),
              (this.options = r),
              (this.lastId = 0),
              (this.lastSource = "imperative"),
              (this.restoredId = 0),
              (this.store = {}),
              (r.scrollPositionRestoration =
                r.scrollPositionRestoration || "disabled"),
              (r.anchorScrolling = r.anchorScrolling || "disabled");
          }
          init() {
            "disabled" !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration("manual"),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.router.events.subscribe((e) => {
              e instanceof ny
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = e.navigationTrigger),
                  (this.restoredId = e.restoredState
                    ? e.restoredState.navigationId
                    : 0))
                : e instanceof ro &&
                  ((this.lastId = e.id),
                  this.scheduleScrollEvent(
                    e,
                    this.router.parseUrl(e.urlAfterRedirects).fragment
                  ));
            });
          }
          consumeScrollEvents() {
            return this.router.events.subscribe((e) => {
              e instanceof gT &&
                (e.position
                  ? "top" === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : "enabled" === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(e.position)
                  : e.anchor && "enabled" === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(e.anchor)
                  : "disabled" !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(e, i) {
            this.router.triggerEvent(
              new gT(
                e,
                "popstate" === this.lastSource
                  ? this.store[this.restoredId]
                  : null,
                i
              )
            );
          }
          ngOnDestroy() {
            this.routerEventsSubscription &&
              this.routerEventsSubscription.unsubscribe(),
              this.scrollEventsSubscription &&
                this.scrollEventsSubscription.unsubscribe();
          }
        }
        return (
          (n.ɵfac = function (e) {
            js();
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const yy = new R("ROUTER_CONFIGURATION", {
          providedIn: "root",
          factory: () => ({}),
        }),
        ZT = new R("ROUTER_FORROOT_GUARD"),
        QT = new R(""),
        $4 = [
          Bl,
          { provide: rT, useClass: sT },
          {
            provide: Pe,
            useFactory: function X4(n, t, e, i, r, s, o, a = {}, l, c) {
              const u = new Pe(null, n, t, e, i, r, ZS(s));
              return (
                l && (u.urlHandlingStrategy = l),
                c && (u.routeReuseStrategy = c),
                (u.titleStrategy = o),
                (function Z4(n, t) {
                  n.errorHandler && (t.errorHandler = n.errorHandler),
                    n.malformedUriErrorHandler &&
                      (t.malformedUriErrorHandler = n.malformedUriErrorHandler),
                    n.onSameUrlNavigation &&
                      (t.onSameUrlNavigation = n.onSameUrlNavigation),
                    n.paramsInheritanceStrategy &&
                      (t.paramsInheritanceStrategy =
                        n.paramsInheritanceStrategy),
                    n.relativeLinkResolution &&
                      (t.relativeLinkResolution = n.relativeLinkResolution),
                    n.urlUpdateStrategy &&
                      (t.urlUpdateStrategy = n.urlUpdateStrategy),
                    n.canceledNavigationResolution &&
                      (t.canceledNavigationResolution =
                        n.canceledNavigationResolution);
                })(a, u),
                u
              );
            },
            deps: [
              rT,
              ac,
              Bl,
              lt,
              vg,
              gy,
              GT,
              yy,
              [class R4 {}, new Bi()],
              [class k4 {}, new Bi()],
            ],
          },
          ac,
          {
            provide: Wn,
            useFactory: function Q4(n) {
              return n.routerState.root;
            },
            deps: [Pe],
          },
          _y,
        ];
      function q4() {
        return new FD("Router", Pe);
      }
      let JT = (() => {
        class n {
          constructor(e, i) {}
          static forRoot(e, i) {
            return {
              ngModule: n,
              providers: [
                $4,
                [],
                eA(e),
                {
                  provide: ZT,
                  useFactory: K4,
                  deps: [[Pe, new Bi(), new $o()]],
                },
                { provide: yy, useValue: i || {} },
                i?.useHash
                  ? { provide: Ys, useClass: Rj }
                  : { provide: Ys, useClass: sx },
                {
                  provide: XT,
                  useFactory: () => {
                    const n = Ln(Pe),
                      t = Ln(KH),
                      e = Ln(yy);
                    return (
                      e.scrollOffset && t.setOffset(e.scrollOffset),
                      new U4(n, t, e)
                    );
                  },
                },
                i?.preloadingStrategy ? s8(i.preloadingStrategy) : [],
                { provide: FD, multi: !0, useFactory: q4 },
                i?.initialNavigation ? e8(i) : [],
                [
                  { provide: tA, useFactory: J4 },
                  { provide: TD, multi: !0, useExisting: tA },
                ],
              ],
            };
          }
          static forChild(e) {
            return { ngModule: n, providers: [eA(e)] };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(ZT, 8), x(Pe, 8));
          }),
          (n.ɵmod = re({ type: n })),
          (n.ɵinj = ne({})),
          n
        );
      })();
      function K4(n) {
        return "guarded";
      }
      function eA(n) {
        return [
          { provide: iP, multi: !0, useValue: n },
          { provide: gy, multi: !0, useValue: n },
        ];
      }
      function J4() {
        const n = Ln(lt);
        return (t) => {
          const e = n.get(ya);
          if (t !== e.components[0]) return;
          const i = n.get(Pe),
            r = n.get(nA);
          null === n.get(vy, null, K.Optional) && i.initialNavigation(),
            n.get(QT, null, K.Optional)?.setUpPreloading(),
            n.get(XT, null, K.Optional)?.init(),
            i.resetRootComponentType(e.componentTypes[0]),
            r.next(),
            r.complete();
        };
      }
      const tA = new R("");
      function e8(n) {
        return [
          "disabled" === n.initialNavigation
            ? [
                {
                  provide: ad,
                  multi: !0,
                  useFactory: () => {
                    const n = Ln(Pe);
                    return () => {
                      n.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: vy, useValue: "disabled" },
              ]
            : [],
          "enabledBlocking" === n.initialNavigation
            ? [
                { provide: vy, useValue: "enabledBlocking" },
                {
                  provide: ad,
                  multi: !0,
                  deps: [lt],
                  useFactory: (n) => {
                    const t = n.get(kj, Promise.resolve(null));
                    let e = !1;
                    return () =>
                      t.then(
                        () =>
                          new Promise((r) => {
                            const s = n.get(Pe),
                              o = n.get(nA);
                            (function i(r) {
                              n.get(Pe)
                                .events.pipe(
                                  ct(
                                    (o) =>
                                      o instanceof ro ||
                                      o instanceof fh ||
                                      o instanceof mT
                                  ),
                                  Z(
                                    (o) =>
                                      o instanceof ro ||
                                      (o instanceof fh &&
                                        (0 === o.code || 1 === o.code) &&
                                        null)
                                  ),
                                  ct((o) => null !== o),
                                  Vt(1)
                                )
                                .subscribe(() => {
                                  r();
                                });
                            })(() => {
                              r(!0), (e = !0);
                            }),
                              (s.afterPreactivation = () => (
                                r(!0), e || o.closed ? W(void 0) : o
                              )),
                              s.initialNavigation();
                          })
                      );
                  },
                },
              ]
            : [],
        ];
      }
      const nA = new R("", { factory: () => new $() }),
        vy = new R("");
      function s8(n) {
        return [
          KT,
          { provide: QT, useExisting: KT },
          { provide: YT, useExisting: n },
        ];
      }
      let o8 = (() => {
        class n {
          constructor(e) {
            this.router = e;
          }
          ngOnInit() {}
          retorna() {
            this.router.navigate([""]);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(Pe));
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["app-notfound"]],
            decls: 7,
            vars: 0,
            consts: [
              [1, "notfound"],
              [1, "codigo"],
              [1, "mensagem"],
              [1, "botaoretorno", 3, "click"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "div", 0)(1, "span", 1),
                w(2, "404"),
                y(),
                b(3, "span", 2),
                w(4, "Not Found"),
                y(),
                b(5, "button", 3),
                P("click", function () {
                  return i.retorna();
                }),
                w(6, "Tela inicial"),
                y()());
            },
            styles: [
              ".notfound[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;text-align:center;height:90vh;font-weight:200}.codigo[_ngcontent-%COMP%]{font-size:10rem;line-height:11rem}.mensagem[_ngcontent-%COMP%]{font-size:3.5em;line-height:3rem}.botaoretorno[_ngcontent-%COMP%]{margin-top:20px;font-size:1.5rem;width:25%;height:3rem;border-radius:10px}",
            ],
          })),
          n
        );
      })();
      const Nr_apiUrl = "https://api-go-projects.herokuapp.com/";
      class iA {}
      class rA {}
      class Lr {
        constructor(t) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            t
              ? (this.lazyInit =
                  "string" == typeof t
                    ? () => {
                        (this.headers = new Map()),
                          t.split("\n").forEach((e) => {
                            const i = e.indexOf(":");
                            if (i > 0) {
                              const r = e.slice(0, i),
                                s = r.toLowerCase(),
                                o = e.slice(i + 1).trim();
                              this.maybeSetNormalizedName(r, s),
                                this.headers.has(s)
                                  ? this.headers.get(s).push(o)
                                  : this.headers.set(s, [o]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(t).forEach((e) => {
                            let i = t[e];
                            const r = e.toLowerCase();
                            "string" == typeof i && (i = [i]),
                              i.length > 0 &&
                                (this.headers.set(r, i),
                                this.maybeSetNormalizedName(e, r));
                          });
                      })
              : (this.headers = new Map());
        }
        has(t) {
          return this.init(), this.headers.has(t.toLowerCase());
        }
        get(t) {
          this.init();
          const e = this.headers.get(t.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(t) {
          return this.init(), this.headers.get(t.toLowerCase()) || null;
        }
        append(t, e) {
          return this.clone({ name: t, value: e, op: "a" });
        }
        set(t, e) {
          return this.clone({ name: t, value: e, op: "s" });
        }
        delete(t, e) {
          return this.clone({ name: t, value: e, op: "d" });
        }
        maybeSetNormalizedName(t, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, t);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof Lr
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((t) => this.applyUpdate(t)),
              (this.lazyUpdate = null)));
        }
        copyFrom(t) {
          t.init(),
            Array.from(t.headers.keys()).forEach((e) => {
              this.headers.set(e, t.headers.get(e)),
                this.normalizedNames.set(e, t.normalizedNames.get(e));
            });
        }
        clone(t) {
          const e = new Lr();
          return (
            (e.lazyInit =
              this.lazyInit && this.lazyInit instanceof Lr
                ? this.lazyInit
                : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([t])),
            e
          );
        }
        applyUpdate(t) {
          const e = t.name.toLowerCase();
          switch (t.op) {
            case "a":
            case "s":
              let i = t.value;
              if (("string" == typeof i && (i = [i]), 0 === i.length)) return;
              this.maybeSetNormalizedName(t.name, e);
              const r = ("a" === t.op ? this.headers.get(e) : void 0) || [];
              r.push(...i), this.headers.set(e, r);
              break;
            case "d":
              const s = t.value;
              if (s) {
                let o = this.headers.get(e);
                if (!o) return;
                (o = o.filter((a) => -1 === s.indexOf(a))),
                  0 === o.length
                    ? (this.headers.delete(e), this.normalizedNames.delete(e))
                    : this.headers.set(e, o);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        forEach(t) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) =>
              t(this.normalizedNames.get(e), this.headers.get(e))
            );
        }
      }
      class a8 {
        encodeKey(t) {
          return sA(t);
        }
        encodeValue(t) {
          return sA(t);
        }
        decodeKey(t) {
          return decodeURIComponent(t);
        }
        decodeValue(t) {
          return decodeURIComponent(t);
        }
      }
      const c8 = /%(\d[a-f0-9])/gi,
        u8 = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function sA(n) {
        return encodeURIComponent(n).replace(c8, (t, e) => u8[e] ?? t);
      }
      function Eh(n) {
        return `${n}`;
      }
      class _s {
        constructor(t = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = t.encoder || new a8()),
            t.fromString)
          ) {
            if (t.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function l8(n, t) {
              const e = new Map();
              return (
                n.length > 0 &&
                  n
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((r) => {
                      const s = r.indexOf("="),
                        [o, a] =
                          -1 == s
                            ? [t.decodeKey(r), ""]
                            : [
                                t.decodeKey(r.slice(0, s)),
                                t.decodeValue(r.slice(s + 1)),
                              ],
                        l = e.get(o) || [];
                      l.push(a), e.set(o, l);
                    }),
                e
              );
            })(t.fromString, this.encoder);
          } else
            t.fromObject
              ? ((this.map = new Map()),
                Object.keys(t.fromObject).forEach((e) => {
                  const i = t.fromObject[e],
                    r = Array.isArray(i) ? i.map(Eh) : [Eh(i)];
                  this.map.set(e, r);
                }))
              : (this.map = null);
        }
        has(t) {
          return this.init(), this.map.has(t);
        }
        get(t) {
          this.init();
          const e = this.map.get(t);
          return e ? e[0] : null;
        }
        getAll(t) {
          return this.init(), this.map.get(t) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(t, e) {
          return this.clone({ param: t, value: e, op: "a" });
        }
        appendAll(t) {
          const e = [];
          return (
            Object.keys(t).forEach((i) => {
              const r = t[i];
              Array.isArray(r)
                ? r.forEach((s) => {
                    e.push({ param: i, value: s, op: "a" });
                  })
                : e.push({ param: i, value: r, op: "a" });
            }),
            this.clone(e)
          );
        }
        set(t, e) {
          return this.clone({ param: t, value: e, op: "s" });
        }
        delete(t, e) {
          return this.clone({ param: t, value: e, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((t) => {
                const e = this.encoder.encodeKey(t);
                return this.map
                  .get(t)
                  .map((i) => e + "=" + this.encoder.encodeValue(i))
                  .join("&");
              })
              .filter((t) => "" !== t)
              .join("&")
          );
        }
        clone(t) {
          const e = new _s({ encoder: this.encoder });
          return (
            (e.cloneFrom = this.cloneFrom || this),
            (e.updates = (this.updates || []).concat(t)),
            e
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((t) => this.map.set(t, this.cloneFrom.map.get(t))),
              this.updates.forEach((t) => {
                switch (t.op) {
                  case "a":
                  case "s":
                    const e =
                      ("a" === t.op ? this.map.get(t.param) : void 0) || [];
                    e.push(Eh(t.value)), this.map.set(t.param, e);
                    break;
                  case "d":
                    if (void 0 === t.value) {
                      this.map.delete(t.param);
                      break;
                    }
                    {
                      let i = this.map.get(t.param) || [];
                      const r = i.indexOf(Eh(t.value));
                      -1 !== r && i.splice(r, 1),
                        i.length > 0
                          ? this.map.set(t.param, i)
                          : this.map.delete(t.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class d8 {
        constructor() {
          this.map = new Map();
        }
        set(t, e) {
          return this.map.set(t, e), this;
        }
        get(t) {
          return (
            this.map.has(t) || this.map.set(t, t.defaultValue()),
            this.map.get(t)
          );
        }
        delete(t) {
          return this.map.delete(t), this;
        }
        has(t) {
          return this.map.has(t);
        }
        keys() {
          return this.map.keys();
        }
      }
      function oA(n) {
        return typeof ArrayBuffer < "u" && n instanceof ArrayBuffer;
      }
      function aA(n) {
        return typeof Blob < "u" && n instanceof Blob;
      }
      function lA(n) {
        return typeof FormData < "u" && n instanceof FormData;
      }
      class hc {
        constructor(t, e, i, r) {
          let s;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = t.toUpperCase()),
            (function h8(n) {
              switch (n) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || r
              ? ((this.body = void 0 !== i ? i : null), (s = r))
              : (s = i),
            s &&
              ((this.reportProgress = !!s.reportProgress),
              (this.withCredentials = !!s.withCredentials),
              s.responseType && (this.responseType = s.responseType),
              s.headers && (this.headers = s.headers),
              s.context && (this.context = s.context),
              s.params && (this.params = s.params)),
            this.headers || (this.headers = new Lr()),
            this.context || (this.context = new d8()),
            this.params)
          ) {
            const o = this.params.toString();
            if (0 === o.length) this.urlWithParams = e;
            else {
              const a = e.indexOf("?");
              this.urlWithParams =
                e + (-1 === a ? "?" : a < e.length - 1 ? "&" : "") + o;
            }
          } else (this.params = new _s()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : oA(this.body) ||
              aA(this.body) ||
              lA(this.body) ||
              (function f8(n) {
                return (
                  typeof URLSearchParams < "u" && n instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof _s
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || lA(this.body)
            ? null
            : aA(this.body)
            ? this.body.type || null
            : oA(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof _s
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(t = {}) {
          const e = t.method || this.method,
            i = t.url || this.url,
            r = t.responseType || this.responseType,
            s = void 0 !== t.body ? t.body : this.body,
            o =
              void 0 !== t.withCredentials
                ? t.withCredentials
                : this.withCredentials,
            a =
              void 0 !== t.reportProgress
                ? t.reportProgress
                : this.reportProgress;
          let l = t.headers || this.headers,
            c = t.params || this.params;
          const u = t.context ?? this.context;
          return (
            void 0 !== t.setHeaders &&
              (l = Object.keys(t.setHeaders).reduce(
                (d, h) => d.set(h, t.setHeaders[h]),
                l
              )),
            t.setParams &&
              (c = Object.keys(t.setParams).reduce(
                (d, h) => d.set(h, t.setParams[h]),
                c
              )),
            new hc(e, i, s, {
              params: c,
              headers: l,
              context: u,
              reportProgress: a,
              responseType: r,
              withCredentials: o,
            })
          );
        }
      }
      var It = (() => (
        ((It = It || {})[(It.Sent = 0)] = "Sent"),
        (It[(It.UploadProgress = 1)] = "UploadProgress"),
        (It[(It.ResponseHeader = 2)] = "ResponseHeader"),
        (It[(It.DownloadProgress = 3)] = "DownloadProgress"),
        (It[(It.Response = 4)] = "Response"),
        (It[(It.User = 5)] = "User"),
        It
      ))();
      class by {
        constructor(t, e = 200, i = "OK") {
          (this.headers = t.headers || new Lr()),
            (this.status = void 0 !== t.status ? t.status : e),
            (this.statusText = t.statusText || i),
            (this.url = t.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class Cy extends by {
        constructor(t = {}) {
          super(t), (this.type = It.ResponseHeader);
        }
        clone(t = {}) {
          return new Cy({
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class Sh extends by {
        constructor(t = {}) {
          super(t),
            (this.type = It.Response),
            (this.body = void 0 !== t.body ? t.body : null);
        }
        clone(t = {}) {
          return new Sh({
            body: void 0 !== t.body ? t.body : this.body,
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class cA extends by {
        constructor(t) {
          super(t, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${t.url || "(unknown url)"}`
                : `Http failure response for ${t.url || "(unknown url)"}: ${
                    t.status
                  } ${t.statusText}`),
            (this.error = t.error || null);
        }
      }
      function wy(n, t) {
        return {
          body: t,
          headers: n.headers,
          context: n.context,
          observe: n.observe,
          params: n.params,
          reportProgress: n.reportProgress,
          responseType: n.responseType,
          withCredentials: n.withCredentials,
        };
      }
      let Gn = (() => {
        class n {
          constructor(e) {
            this.handler = e;
          }
          request(e, i, r = {}) {
            let s;
            if (e instanceof hc) s = e;
            else {
              let l, c;
              (l = r.headers instanceof Lr ? r.headers : new Lr(r.headers)),
                r.params &&
                  (c =
                    r.params instanceof _s
                      ? r.params
                      : new _s({ fromObject: r.params })),
                (s = new hc(e, i, void 0 !== r.body ? r.body : null, {
                  headers: l,
                  context: r.context,
                  params: c,
                  reportProgress: r.reportProgress,
                  responseType: r.responseType || "json",
                  withCredentials: r.withCredentials,
                }));
            }
            const o = W(s).pipe(gs((l) => this.handler.handle(l)));
            if (e instanceof hc || "events" === r.observe) return o;
            const a = o.pipe(ct((l) => l instanceof Sh));
            switch (r.observe || "body") {
              case "body":
                switch (s.responseType) {
                  case "arraybuffer":
                    return a.pipe(
                      Z((l) => {
                        if (null !== l.body && !(l.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return l.body;
                      })
                    );
                  case "blob":
                    return a.pipe(
                      Z((l) => {
                        if (null !== l.body && !(l.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return l.body;
                      })
                    );
                  case "text":
                    return a.pipe(
                      Z((l) => {
                        if (null !== l.body && "string" != typeof l.body)
                          throw new Error("Response is not a string.");
                        return l.body;
                      })
                    );
                  default:
                    return a.pipe(Z((l) => l.body));
                }
              case "response":
                return a;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${r.observe}}`
                );
            }
          }
          delete(e, i = {}) {
            return this.request("DELETE", e, i);
          }
          get(e, i = {}) {
            return this.request("GET", e, i);
          }
          head(e, i = {}) {
            return this.request("HEAD", e, i);
          }
          jsonp(e, i) {
            return this.request("JSONP", e, {
              params: new _s().append(i, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(e, i = {}) {
            return this.request("OPTIONS", e, i);
          }
          patch(e, i, r = {}) {
            return this.request("PATCH", e, wy(r, i));
          }
          post(e, i, r = {}) {
            return this.request("POST", e, wy(r, i));
          }
          put(e, i, r = {}) {
            return this.request("PUT", e, wy(r, i));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(iA));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class uA {
        constructor(t, e) {
          (this.next = t), (this.interceptor = e);
        }
        handle(t) {
          return this.interceptor.intercept(t, this.next);
        }
      }
      const My = new R("HTTP_INTERCEPTORS");
      let p8 = (() => {
        class n {
          intercept(e, i) {
            return i.handle(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const m8 = /^\)\]\}',?\n/;
      let dA = (() => {
        class n {
          constructor(e) {
            this.xhrFactory = e;
          }
          handle(e) {
            if ("JSONP" === e.method)
              throw new Error(
                "Attempted to construct Jsonp request without HttpClientJsonpModule installed."
              );
            return new We((i) => {
              const r = this.xhrFactory.build();
              if (
                (r.open(e.method, e.urlWithParams),
                e.withCredentials && (r.withCredentials = !0),
                e.headers.forEach((f, p) => r.setRequestHeader(f, p.join(","))),
                e.headers.has("Accept") ||
                  r.setRequestHeader(
                    "Accept",
                    "application/json, text/plain, */*"
                  ),
                !e.headers.has("Content-Type"))
              ) {
                const f = e.detectContentTypeHeader();
                null !== f && r.setRequestHeader("Content-Type", f);
              }
              if (e.responseType) {
                const f = e.responseType.toLowerCase();
                r.responseType = "json" !== f ? f : "text";
              }
              const s = e.serializeBody();
              let o = null;
              const a = () => {
                  if (null !== o) return o;
                  const f = r.statusText || "OK",
                    p = new Lr(r.getAllResponseHeaders()),
                    m =
                      (function g8(n) {
                        return "responseURL" in n && n.responseURL
                          ? n.responseURL
                          : /^X-Request-URL:/m.test(n.getAllResponseHeaders())
                          ? n.getResponseHeader("X-Request-URL")
                          : null;
                      })(r) || e.url;
                  return (
                    (o = new Cy({
                      headers: p,
                      status: r.status,
                      statusText: f,
                      url: m,
                    })),
                    o
                  );
                },
                l = () => {
                  let { headers: f, status: p, statusText: m, url: _ } = a(),
                    v = null;
                  204 !== p &&
                    (v = typeof r.response > "u" ? r.responseText : r.response),
                    0 === p && (p = v ? 200 : 0);
                  let M = p >= 200 && p < 300;
                  if ("json" === e.responseType && "string" == typeof v) {
                    const C = v;
                    v = v.replace(m8, "");
                    try {
                      v = "" !== v ? JSON.parse(v) : null;
                    } catch (D) {
                      (v = C), M && ((M = !1), (v = { error: D, text: v }));
                    }
                  }
                  M
                    ? (i.next(
                        new Sh({
                          body: v,
                          headers: f,
                          status: p,
                          statusText: m,
                          url: _ || void 0,
                        })
                      ),
                      i.complete())
                    : i.error(
                        new cA({
                          error: v,
                          headers: f,
                          status: p,
                          statusText: m,
                          url: _ || void 0,
                        })
                      );
                },
                c = (f) => {
                  const { url: p } = a(),
                    m = new cA({
                      error: f,
                      status: r.status || 0,
                      statusText: r.statusText || "Unknown Error",
                      url: p || void 0,
                    });
                  i.error(m);
                };
              let u = !1;
              const d = (f) => {
                  u || (i.next(a()), (u = !0));
                  let p = { type: It.DownloadProgress, loaded: f.loaded };
                  f.lengthComputable && (p.total = f.total),
                    "text" === e.responseType &&
                      !!r.responseText &&
                      (p.partialText = r.responseText),
                    i.next(p);
                },
                h = (f) => {
                  let p = { type: It.UploadProgress, loaded: f.loaded };
                  f.lengthComputable && (p.total = f.total), i.next(p);
                };
              return (
                r.addEventListener("load", l),
                r.addEventListener("error", c),
                r.addEventListener("timeout", c),
                r.addEventListener("abort", c),
                e.reportProgress &&
                  (r.addEventListener("progress", d),
                  null !== s &&
                    r.upload &&
                    r.upload.addEventListener("progress", h)),
                r.send(s),
                i.next({ type: It.Sent }),
                () => {
                  r.removeEventListener("error", c),
                    r.removeEventListener("abort", c),
                    r.removeEventListener("load", l),
                    r.removeEventListener("timeout", c),
                    e.reportProgress &&
                      (r.removeEventListener("progress", d),
                      null !== s &&
                        r.upload &&
                        r.upload.removeEventListener("progress", h)),
                    r.readyState !== r.DONE && r.abort();
                }
              );
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(xx));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Dy = new R("XSRF_COOKIE_NAME"),
        xy = new R("XSRF_HEADER_NAME");
      class hA {}
      let Sy,
        _8 = (() => {
          class n {
            constructor(e, i, r) {
              (this.doc = e),
                (this.platform = i),
                (this.cookieName = r),
                (this.lastCookieString = ""),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ("server" === this.platform) return null;
              const e = this.doc.cookie || "";
              return (
                e !== this.lastCookieString &&
                  (this.parseCount++,
                  (this.lastToken = mx(e, this.cookieName)),
                  (this.lastCookieString = e)),
                this.lastToken
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(ae), x(cd), x(Dy));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Ey = (() => {
          class n {
            constructor(e, i) {
              (this.tokenService = e), (this.headerName = i);
            }
            intercept(e, i) {
              const r = e.url.toLowerCase();
              if (
                "GET" === e.method ||
                "HEAD" === e.method ||
                r.startsWith("http://") ||
                r.startsWith("https://")
              )
                return i.handle(e);
              const s = this.tokenService.getToken();
              return (
                null !== s &&
                  !e.headers.has(this.headerName) &&
                  (e = e.clone({ headers: e.headers.set(this.headerName, s) })),
                i.handle(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(hA), x(xy));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        y8 = (() => {
          class n {
            constructor(e, i) {
              (this.backend = e), (this.injector = i), (this.chain = null);
            }
            handle(e) {
              if (null === this.chain) {
                const i = this.injector.get(My, []);
                this.chain = i.reduceRight(
                  (r, s) => new uA(r, s),
                  this.backend
                );
              }
              return this.chain.handle(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(rA), x(lt));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        v8 = (() => {
          class n {
            static disable() {
              return {
                ngModule: n,
                providers: [{ provide: Ey, useClass: p8 }],
              };
            }
            static withOptions(e = {}) {
              return {
                ngModule: n,
                providers: [
                  e.cookieName ? { provide: Dy, useValue: e.cookieName } : [],
                  e.headerName ? { provide: xy, useValue: e.headerName } : [],
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({
              providers: [
                Ey,
                { provide: My, useExisting: Ey, multi: !0 },
                { provide: hA, useClass: _8 },
                { provide: Dy, useValue: "XSRF-TOKEN" },
                { provide: xy, useValue: "X-XSRF-TOKEN" },
              ],
            })),
            n
          );
        })(),
        b8 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({
              providers: [
                Gn,
                { provide: iA, useClass: y8 },
                dA,
                { provide: rA, useExisting: dA },
              ],
              imports: [
                v8.withOptions({
                  cookieName: "XSRF-TOKEN",
                  headerName: "X-XSRF-TOKEN",
                }),
              ],
            })),
            n
          );
        })(),
        fc = (() => {
          class n {
            constructor(e, i) {
              (this.router = e),
                (this.http = i),
                (this.usuarioAutenticado = !1),
                (this.tokenSerie = ""),
                (this.loginUrl = `${Nr_apiUrl}login`);
            }
            fazerLogin({ usuario: e }) {
              this.http.post(this.loginUrl, e).subscribe(
                (i) => {
                  (this.usuarioAutenticado = !0),
                    this.router.navigate(["dashboard"]),
                    window.localStorage.setItem("token", i.token),
                    (this.tokenSerie = i.token);
                },
                (i) => {
                  console.log("Error: " + i.message);
                }
              );
            }
            usuarioEstaAutenticado() {
              return this.usuarioAutenticado;
            }
            serieToken() {
              return this.tokenSerie;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Pe), x(Gn));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        qt = (() => {
          class n {
            constructor(e, i) {
              (this.authService = e),
                (this.router = i),
                (this.mostrarMenuEmmiter = new fe());
            }
            canActivate() {
              return "" != window.localStorage.getItem("token")
                ? (this.mostrarMenuEmmiter.emit(!0), !0)
                : (this.router.navigate(["/login"]), !1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(fc), x(Pe));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      try {
        Sy = typeof Intl < "u" && Intl.v8BreakIterator;
      } catch {
        Sy = !1;
      }
      let Sa,
        jt = (() => {
          class n {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? (function YH(n) {
                      return n === Mx;
                    })(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !Sy) &&
                  typeof CSS < "u" &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(cd));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      const fA = [
        "color",
        "button",
        "checkbox",
        "date",
        "datetime-local",
        "email",
        "file",
        "hidden",
        "image",
        "month",
        "number",
        "password",
        "radio",
        "range",
        "reset",
        "search",
        "submit",
        "tel",
        "text",
        "time",
        "url",
        "week",
      ];
      function pA() {
        if (Sa) return Sa;
        if ("object" != typeof document || !document)
          return (Sa = new Set(fA)), Sa;
        let n = document.createElement("input");
        return (
          (Sa = new Set(
            fA.filter((t) => (n.setAttribute("type", t), n.type === t))
          )),
          Sa
        );
      }
      let pc, Th, so, Ty;
      function Ta(n) {
        return (function C8() {
          if (null == pc && typeof window < "u")
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (pc = !0) })
              );
            } finally {
              pc = pc || !1;
            }
          return pc;
        })()
          ? n
          : !!n.capture;
      }
      function mA() {
        if (null == so) {
          if (
            "object" != typeof document ||
            !document ||
            "function" != typeof Element ||
            !Element
          )
            return (so = !1), so;
          if ("scrollBehavior" in document.documentElement.style) so = !0;
          else {
            const n = Element.prototype.scrollTo;
            so = !!n && !/\{\s*\[native code\]\s*\}/.test(n.toString());
          }
        }
        return so;
      }
      function mc() {
        if ("object" != typeof document || !document) return 0;
        if (null == Th) {
          const n = document.createElement("div"),
            t = n.style;
          (n.dir = "rtl"),
            (t.width = "1px"),
            (t.overflow = "auto"),
            (t.visibility = "hidden"),
            (t.pointerEvents = "none"),
            (t.position = "absolute");
          const e = document.createElement("div"),
            i = e.style;
          (i.width = "2px"),
            (i.height = "1px"),
            n.appendChild(e),
            document.body.appendChild(n),
            (Th = 0),
            0 === n.scrollLeft &&
              ((n.scrollLeft = 1), (Th = 0 === n.scrollLeft ? 1 : 2)),
            n.remove();
        }
        return Th;
      }
      function Ay() {
        let n =
          typeof document < "u" && document ? document.activeElement : null;
        for (; n && n.shadowRoot; ) {
          const t = n.shadowRoot.activeElement;
          if (t === n) break;
          n = t;
        }
        return n;
      }
      function oo(n) {
        return n.composedPath ? n.composedPath()[0] : n.target;
      }
      function ky() {
        return (
          (typeof __karma__ < "u" && !!__karma__) ||
          (typeof jasmine < "u" && !!jasmine) ||
          (typeof jest < "u" && !!jest) ||
          (typeof Mocha < "u" && !!Mocha)
        );
      }
      function Si(n, ...t) {
        return t.length
          ? t.some((e) => n[e])
          : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
      }
      class F8 extends bt {
        constructor(t, e) {
          super();
        }
        schedule(t, e = 0) {
          return this;
        }
      }
      const Rh = {
        setInterval(n, t, ...e) {
          const { delegate: i } = Rh;
          return i?.setInterval
            ? i.setInterval(n, t, ...e)
            : setInterval(n, t, ...e);
        },
        clearInterval(n) {
          const { delegate: t } = Rh;
          return (t?.clearInterval || clearInterval)(n);
        },
        delegate: void 0,
      };
      class Oy extends F8 {
        constructor(t, e) {
          super(t, e),
            (this.scheduler = t),
            (this.work = e),
            (this.pending = !1);
        }
        schedule(t, e = 0) {
          if (this.closed) return this;
          this.state = t;
          const i = this.id,
            r = this.scheduler;
          return (
            null != i && (this.id = this.recycleAsyncId(r, i, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id = this.id || this.requestAsyncId(r, this.id, e)),
            this
          );
        }
        requestAsyncId(t, e, i = 0) {
          return Rh.setInterval(t.flush.bind(t, this), i);
        }
        recycleAsyncId(t, e, i = 0) {
          if (null != i && this.delay === i && !1 === this.pending) return e;
          Rh.clearInterval(e);
        }
        execute(t, e) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const i = this._execute(t, e);
          if (i) return i;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(t, e) {
          let r,
            i = !1;
          try {
            this.work(t);
          } catch (s) {
            (i = !0),
              (r = s || new Error("Scheduled action threw falsy error"));
          }
          if (i) return this.unsubscribe(), r;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: t, scheduler: e } = this,
              { actions: i } = e;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              Eo(i, this),
              null != t && (this.id = this.recycleAsyncId(e, t, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
      const yA = { now: () => (yA.delegate || Date).now(), delegate: void 0 };
      class _c {
        constructor(t, e = _c.now) {
          (this.schedulerActionCtor = t), (this.now = e);
        }
        schedule(t, e = 0, i) {
          return new this.schedulerActionCtor(this, t).schedule(i, e);
        }
      }
      _c.now = yA.now;
      class Ry extends _c {
        constructor(t, e = _c.now) {
          super(t, e),
            (this.actions = []),
            (this._active = !1),
            (this._scheduled = void 0);
        }
        flush(t) {
          const { actions: e } = this;
          if (this._active) return void e.push(t);
          let i;
          this._active = !0;
          do {
            if ((i = t.execute(t.state, t.delay))) break;
          } while ((t = e.shift()));
          if (((this._active = !1), i)) {
            for (; (t = e.shift()); ) t.unsubscribe();
            throw i;
          }
        }
      }
      const Py = new Ry(Oy),
        N8 = Py;
      function Ph(n, t = Py) {
        return ft((e, i) => {
          let r = null,
            s = null,
            o = null;
          const a = () => {
            if (r) {
              r.unsubscribe(), (r = null);
              const c = s;
              (s = null), i.next(c);
            }
          };
          function l() {
            const c = o + n,
              u = t.now();
            if (u < c) return (r = this.schedule(void 0, c - u)), void i.add(r);
            a();
          }
          e.subscribe(
            ot(
              i,
              (c) => {
                (s = c), (o = t.now()), r || ((r = t.schedule(l, n)), i.add(r));
              },
              () => {
                a(), i.complete();
              },
              void 0,
              () => {
                s = r = null;
              }
            )
          );
        });
      }
      function vA(n) {
        return ct((t, e) => n <= e);
      }
      function Fy(n, t = Kr) {
        return (
          (n = n ?? L8),
          ft((e, i) => {
            let r,
              s = !0;
            e.subscribe(
              ot(i, (o) => {
                const a = t(o);
                (s || !n(r, a)) && ((s = !1), (r = a), i.next(o));
              })
            );
          })
        );
      }
      function L8(n, t) {
        return n === t;
      }
      function _e(n) {
        return ft((t, e) => {
          _n(n).subscribe(ot(e, () => e.complete(), Uf)),
            !e.closed && t.subscribe(e);
        });
      }
      function ke(n) {
        return null != n && "false" != `${n}`;
      }
      function Ti(n, t = 0) {
        return (function B8(n) {
          return !isNaN(parseFloat(n)) && !isNaN(Number(n));
        })(n)
          ? Number(n)
          : t;
      }
      function Fh(n) {
        return Array.isArray(n) ? n : [n];
      }
      function Ot(n) {
        return null == n ? "" : "string" == typeof n ? n : `${n}px`;
      }
      function Br(n) {
        return n instanceof ce ? n.nativeElement : n;
      }
      let bA = (() => {
          class n {
            create(e) {
              return typeof MutationObserver > "u"
                ? null
                : new MutationObserver(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        V8 = (() => {
          class n {
            constructor(e) {
              (this._mutationObserverFactory = e),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((e, i) =>
                this._cleanupObserver(i)
              );
            }
            observe(e) {
              const i = Br(e);
              return new We((r) => {
                const o = this._observeElement(i).subscribe(r);
                return () => {
                  o.unsubscribe(), this._unobserveElement(i);
                };
              });
            }
            _observeElement(e) {
              if (this._observedElements.has(e))
                this._observedElements.get(e).count++;
              else {
                const i = new $(),
                  r = this._mutationObserverFactory.create((s) => i.next(s));
                r &&
                  r.observe(e, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(e, {
                    observer: r,
                    stream: i,
                    count: 1,
                  });
              }
              return this._observedElements.get(e).stream;
            }
            _unobserveElement(e) {
              this._observedElements.has(e) &&
                (this._observedElements.get(e).count--,
                this._observedElements.get(e).count ||
                  this._cleanupObserver(e));
            }
            _cleanupObserver(e) {
              if (this._observedElements.has(e)) {
                const { observer: i, stream: r } =
                  this._observedElements.get(e);
                i && i.disconnect(),
                  r.complete(),
                  this._observedElements.delete(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(bA));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        j8 = (() => {
          class n {
            constructor(e, i, r) {
              (this._contentObserver = e),
                (this._elementRef = i),
                (this._ngZone = r),
                (this.event = new fe()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = ke(e)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(e) {
              (this._debounce = Ti(e)), this._subscribe();
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const e = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? e.pipe(Ph(this.debounce)) : e
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              this._currentSubscription?.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(V8), g(ce), g(Q));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [["", "cdkObserveContent", ""]],
              inputs: {
                disabled: ["cdkObserveContentDisabled", "disabled"],
                debounce: "debounce",
              },
              outputs: { event: "cdkObserveContent" },
              exportAs: ["cdkObserveContent"],
            })),
            n
          );
        })(),
        CA = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ providers: [bA] })),
            n
          );
        })(),
        H8 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({})),
            n
          );
        })();
      const wA = new Set();
      let Aa,
        z8 = (() => {
          class n {
            constructor(e) {
              (this._platform = e),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : $8);
            }
            matchMedia(e) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function U8(n) {
                    if (!wA.has(n))
                      try {
                        Aa ||
                          ((Aa = document.createElement("style")),
                          Aa.setAttribute("type", "text/css"),
                          document.head.appendChild(Aa)),
                          Aa.sheet &&
                            (Aa.sheet.insertRule(`@media ${n} {body{ }}`, 0),
                            wA.add(n));
                      } catch (t) {
                        console.error(t);
                      }
                  })(e),
                this._matchMedia(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(jt));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      function $8(n) {
        return {
          matches: "all" === n || "" === n,
          media: n,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let Nh = (() => {
        class n {
          constructor(e, i) {
            (this._mediaMatcher = e),
              (this._zone = i),
              (this._queries = new Map()),
              (this._destroySubject = new $());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(e) {
            return MA(Fh(e)).some((r) => this._registerQuery(r).mql.matches);
          }
          observe(e) {
            let s = W_(MA(Fh(e)).map((o) => this._registerQuery(o).observable));
            return (
              (s = rh(s.pipe(Vt(1)), s.pipe(vA(1), Ph(0)))),
              s.pipe(
                Z((o) => {
                  const a = { matches: !1, breakpoints: {} };
                  return (
                    o.forEach(({ matches: l, query: c }) => {
                      (a.matches = a.matches || l), (a.breakpoints[c] = l);
                    }),
                    a
                  );
                })
              )
            );
          }
          _registerQuery(e) {
            if (this._queries.has(e)) return this._queries.get(e);
            const i = this._mediaMatcher.matchMedia(e),
              s = {
                observable: new We((o) => {
                  const a = (l) => this._zone.run(() => o.next(l));
                  return (
                    i.addListener(a),
                    () => {
                      i.removeListener(a);
                    }
                  );
                }).pipe(
                  qn(i),
                  Z(({ matches: o }) => ({ query: e, matches: o })),
                  _e(this._destroySubject)
                ),
                mql: i,
              };
            return this._queries.set(e, s), s;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(z8), x(Q));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function MA(n) {
        return n
          .map((t) => t.split(","))
          .reduce((t, e) => t.concat(e))
          .map((t) => t.trim());
      }
      function Lh(n, t) {
        return (n.getAttribute(t) || "").match(/\S+/g) || [];
      }
      const EA = "cdk-describedby-message",
        Bh = "cdk-describedby-host";
      let Ny = 0,
        G8 = (() => {
          class n {
            constructor(e, i) {
              (this._platform = i),
                (this._messageRegistry = new Map()),
                (this._messagesContainer = null),
                (this._id = "" + Ny++),
                (this._document = e),
                (this._id = Ln(_a) + "-" + Ny++);
            }
            describe(e, i, r) {
              if (!this._canBeDescribed(e, i)) return;
              const s = Ly(i, r);
              "string" != typeof i
                ? (SA(i, this._id),
                  this._messageRegistry.set(s, {
                    messageElement: i,
                    referenceCount: 0,
                  }))
                : this._messageRegistry.has(s) ||
                  this._createMessageElement(i, r),
                this._isElementDescribedByMessage(e, s) ||
                  this._addMessageReference(e, s);
            }
            removeDescription(e, i, r) {
              if (!i || !this._isElementNode(e)) return;
              const s = Ly(i, r);
              if (
                (this._isElementDescribedByMessage(e, s) &&
                  this._removeMessageReference(e, s),
                "string" == typeof i)
              ) {
                const o = this._messageRegistry.get(s);
                o && 0 === o.referenceCount && this._deleteMessageElement(s);
              }
              0 === this._messagesContainer?.childNodes.length &&
                (this._messagesContainer.remove(),
                (this._messagesContainer = null));
            }
            ngOnDestroy() {
              const e = this._document.querySelectorAll(
                `[${Bh}="${this._id}"]`
              );
              for (let i = 0; i < e.length; i++)
                this._removeCdkDescribedByReferenceIds(e[i]),
                  e[i].removeAttribute(Bh);
              this._messagesContainer?.remove(),
                (this._messagesContainer = null),
                this._messageRegistry.clear();
            }
            _createMessageElement(e, i) {
              const r = this._document.createElement("div");
              SA(r, this._id),
                (r.textContent = e),
                i && r.setAttribute("role", i),
                this._createMessagesContainer(),
                this._messagesContainer.appendChild(r),
                this._messageRegistry.set(Ly(e, i), {
                  messageElement: r,
                  referenceCount: 0,
                });
            }
            _deleteMessageElement(e) {
              this._messageRegistry.get(e)?.messageElement?.remove(),
                this._messageRegistry.delete(e);
            }
            _createMessagesContainer() {
              if (this._messagesContainer) return;
              const e = "cdk-describedby-message-container",
                i = this._document.querySelectorAll(`.${e}[platform="server"]`);
              for (let s = 0; s < i.length; s++) i[s].remove();
              const r = this._document.createElement("div");
              (r.style.visibility = "hidden"),
                r.classList.add(e),
                r.classList.add("cdk-visually-hidden"),
                this._platform &&
                  !this._platform.isBrowser &&
                  r.setAttribute("platform", "server"),
                this._document.body.appendChild(r),
                (this._messagesContainer = r);
            }
            _removeCdkDescribedByReferenceIds(e) {
              const i = Lh(e, "aria-describedby").filter(
                (r) => 0 != r.indexOf(EA)
              );
              e.setAttribute("aria-describedby", i.join(" "));
            }
            _addMessageReference(e, i) {
              const r = this._messageRegistry.get(i);
              (function q8(n, t, e) {
                const i = Lh(n, t);
                i.some((r) => r.trim() == e.trim()) ||
                  (i.push(e.trim()), n.setAttribute(t, i.join(" ")));
              })(e, "aria-describedby", r.messageElement.id),
                e.setAttribute(Bh, this._id),
                r.referenceCount++;
            }
            _removeMessageReference(e, i) {
              const r = this._messageRegistry.get(i);
              r.referenceCount--,
                (function W8(n, t, e) {
                  const r = Lh(n, t).filter((s) => s != e.trim());
                  r.length
                    ? n.setAttribute(t, r.join(" "))
                    : n.removeAttribute(t);
                })(e, "aria-describedby", r.messageElement.id),
                e.removeAttribute(Bh);
            }
            _isElementDescribedByMessage(e, i) {
              const r = Lh(e, "aria-describedby"),
                s = this._messageRegistry.get(i),
                o = s && s.messageElement.id;
              return !!o && -1 != r.indexOf(o);
            }
            _canBeDescribed(e, i) {
              if (!this._isElementNode(e)) return !1;
              if (i && "object" == typeof i) return !0;
              const r = null == i ? "" : `${i}`.trim(),
                s = e.getAttribute("aria-label");
              return !(!r || (s && s.trim() === r));
            }
            _isElementNode(e) {
              return e.nodeType === this._document.ELEMENT_NODE;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(ae), x(jt));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      function Ly(n, t) {
        return "string" == typeof n ? `${t || ""}/${n}` : n;
      }
      function SA(n, t) {
        n.id || (n.id = `${EA}-${t}-${Ny++}`);
      }
      class Y8 extends class TA {
        constructor(t) {
          (this._items = t),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new $()),
            (this._typeaheadSubscription = bt.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._skipPredicateFn = (e) => e.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new $()),
            (this.change = new $()),
            t instanceof fa &&
              t.changes.subscribe((e) => {
                if (this._activeItem) {
                  const r = e.toArray().indexOf(this._activeItem);
                  r > -1 &&
                    r !== this._activeItemIndex &&
                    (this._activeItemIndex = r);
                }
              });
        }
        skipPredicate(t) {
          return (this._skipPredicateFn = t), this;
        }
        withWrap(t = !0) {
          return (this._wrap = t), this;
        }
        withVerticalOrientation(t = !0) {
          return (this._vertical = t), this;
        }
        withHorizontalOrientation(t) {
          return (this._horizontal = t), this;
        }
        withAllowedModifierKeys(t) {
          return (this._allowedModifierKeys = t), this;
        }
        withTypeAhead(t = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                kt((e) => this._pressedLetters.push(e)),
                Ph(t),
                ct(() => this._pressedLetters.length > 0),
                Z(() => this._pressedLetters.join(""))
              )
              .subscribe((e) => {
                const i = this._getItemsArray();
                for (let r = 1; r < i.length + 1; r++) {
                  const s = (this._activeItemIndex + r) % i.length,
                    o = i[s];
                  if (
                    !this._skipPredicateFn(o) &&
                    0 === o.getLabel().toUpperCase().trim().indexOf(e)
                  ) {
                    this.setActiveItem(s);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        withHomeAndEnd(t = !0) {
          return (this._homeAndEnd = t), this;
        }
        setActiveItem(t) {
          const e = this._activeItem;
          this.updateActiveItem(t),
            this._activeItem !== e && this.change.next(this._activeItemIndex);
        }
        onKeydown(t) {
          const e = t.keyCode,
            r = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(
              (s) => !t[s] || this._allowedModifierKeys.indexOf(s) > -1
            );
          switch (e) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && r) {
                this.setNextItemActive();
                break;
              }
              return;
            case 38:
              if (this._vertical && r) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case 36:
              if (this._homeAndEnd && r) {
                this.setFirstItemActive();
                break;
              }
              return;
            case 35:
              if (this._homeAndEnd && r) {
                this.setLastItemActive();
                break;
              }
              return;
            default:
              return void (
                (r || Si(t, "shiftKey")) &&
                (t.key && 1 === t.key.length
                  ? this._letterKeyStream.next(t.key.toLocaleUpperCase())
                  : ((e >= 65 && e <= 90) || (e >= 48 && e <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(e)))
              );
          }
          (this._pressedLetters = []), t.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(t) {
          const e = this._getItemsArray(),
            i = "number" == typeof t ? t : e.indexOf(t);
          (this._activeItem = e[i] ?? null), (this._activeItemIndex = i);
        }
        _setActiveItemByDelta(t) {
          this._wrap
            ? this._setActiveInWrapMode(t)
            : this._setActiveInDefaultMode(t);
        }
        _setActiveInWrapMode(t) {
          const e = this._getItemsArray();
          for (let i = 1; i <= e.length; i++) {
            const r = (this._activeItemIndex + t * i + e.length) % e.length;
            if (!this._skipPredicateFn(e[r])) return void this.setActiveItem(r);
          }
        }
        _setActiveInDefaultMode(t) {
          this._setActiveItemByIndex(this._activeItemIndex + t, t);
        }
        _setActiveItemByIndex(t, e) {
          const i = this._getItemsArray();
          if (i[t]) {
            for (; this._skipPredicateFn(i[t]); ) if (!i[(t += e)]) return;
            this.setActiveItem(t);
          }
        }
        _getItemsArray() {
          return this._items instanceof fa
            ? this._items.toArray()
            : this._items;
        }
      } {
        setActiveItem(t) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(t),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      let yc = (() => {
        class n {
          constructor(e) {
            this._platform = e;
          }
          isDisabled(e) {
            return e.hasAttribute("disabled");
          }
          isVisible(e) {
            return (
              (function Z8(n) {
                return !!(
                  n.offsetWidth ||
                  n.offsetHeight ||
                  ("function" == typeof n.getClientRects &&
                    n.getClientRects().length)
                );
              })(e) && "visible" === getComputedStyle(e).visibility
            );
          }
          isTabbable(e) {
            if (!this._platform.isBrowser) return !1;
            const i = (function X8(n) {
              try {
                return n.frameElement;
              } catch {
                return null;
              }
            })(
              (function sq(n) {
                return (
                  (n.ownerDocument && n.ownerDocument.defaultView) || window
                );
              })(e)
            );
            if (i && (-1 === kA(i) || !this.isVisible(i))) return !1;
            let r = e.nodeName.toLowerCase(),
              s = kA(e);
            return e.hasAttribute("contenteditable")
              ? -1 !== s
              : !(
                  "iframe" === r ||
                  "object" === r ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function iq(n) {
                      let t = n.nodeName.toLowerCase(),
                        e = "input" === t && n.type;
                      return (
                        "text" === e ||
                        "password" === e ||
                        "select" === t ||
                        "textarea" === t
                      );
                    })(e))
                ) &&
                  ("audio" === r
                    ? !!e.hasAttribute("controls") && -1 !== s
                    : "video" === r
                    ? -1 !== s &&
                      (null !== s ||
                        this._platform.FIREFOX ||
                        e.hasAttribute("controls"))
                    : e.tabIndex >= 0);
          }
          isFocusable(e, i) {
            return (
              (function rq(n) {
                return (
                  !(function J8(n) {
                    return (
                      (function tq(n) {
                        return "input" == n.nodeName.toLowerCase();
                      })(n) && "hidden" == n.type
                    );
                  })(n) &&
                  ((function Q8(n) {
                    let t = n.nodeName.toLowerCase();
                    return (
                      "input" === t ||
                      "select" === t ||
                      "button" === t ||
                      "textarea" === t
                    );
                  })(n) ||
                    (function eq(n) {
                      return (
                        (function nq(n) {
                          return "a" == n.nodeName.toLowerCase();
                        })(n) && n.hasAttribute("href")
                      );
                    })(n) ||
                    n.hasAttribute("contenteditable") ||
                    AA(n))
                );
              })(e) &&
              !this.isDisabled(e) &&
              (i?.ignoreVisibility || this.isVisible(e))
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(jt));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function AA(n) {
        if (!n.hasAttribute("tabindex") || void 0 === n.tabIndex) return !1;
        let t = n.getAttribute("tabindex");
        return !(!t || isNaN(parseInt(t, 10)));
      }
      function kA(n) {
        if (!AA(n)) return null;
        const t = parseInt(n.getAttribute("tabindex") || "", 10);
        return isNaN(t) ? -1 : t;
      }
      class oq {
        constructor(t, e, i, r, s = !1) {
          (this._element = t),
            (this._checker = e),
            (this._ngZone = i),
            (this._document = r),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            s || this.attachAnchors();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(t) {
          (this._enabled = t),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(t, this._startAnchor),
              this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        destroy() {
          const t = this._startAnchor,
            e = this._endAnchor;
          t &&
            (t.removeEventListener("focus", this.startAnchorListener),
            t.remove()),
            e &&
              (e.removeEventListener("focus", this.endAnchorListener),
              e.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  "focus",
                  this.startAnchorListener
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    "focus",
                    this.endAnchorListener
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusInitialElement(t)));
          });
        }
        focusFirstTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusFirstTabbableElement(t)));
          });
        }
        focusLastTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusLastTabbableElement(t)));
          });
        }
        _getRegionBoundary(t) {
          const e = this._element.querySelectorAll(
            `[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`
          );
          return "start" == t
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(t) {
          const e = this._element.querySelector(
            "[cdk-focus-initial], [cdkFocusInitial]"
          );
          if (e) {
            if (!this._checker.isFocusable(e)) {
              const i = this._getFirstTabbableElement(e);
              return i?.focus(t), !!i;
            }
            return e.focus(t), !0;
          }
          return this.focusFirstTabbableElement(t);
        }
        focusFirstTabbableElement(t) {
          const e = this._getRegionBoundary("start");
          return e && e.focus(t), !!e;
        }
        focusLastTabbableElement(t) {
          const e = this._getRegionBoundary("end");
          return e && e.focus(t), !!e;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          const e = t.children;
          for (let i = 0; i < e.length; i++) {
            const r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _getLastTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          const e = t.children;
          for (let i = e.length - 1; i >= 0; i--) {
            const r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _createAnchor() {
          const t = this._document.createElement("div");
          return (
            this._toggleAnchorTabIndex(this._enabled, t),
            t.classList.add("cdk-visually-hidden"),
            t.classList.add("cdk-focus-trap-anchor"),
            t.setAttribute("aria-hidden", "true"),
            t
          );
        }
        _toggleAnchorTabIndex(t, e) {
          t ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
        }
        toggleAnchors(t) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(t, this._startAnchor),
            this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        _executeOnStable(t) {
          this._ngZone.isStable
            ? t()
            : this._ngZone.onStable.pipe(Vt(1)).subscribe(t);
        }
      }
      let Vh = (() => {
        class n {
          constructor(e, i, r) {
            (this._checker = e), (this._ngZone = i), (this._document = r);
          }
          create(e, i = !1) {
            return new oq(e, this._checker, this._ngZone, this._document, i);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(yc), x(Q), x(ae));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function IA(n) {
        return 0 === n.buttons || (0 === n.offsetX && 0 === n.offsetY);
      }
      function OA(n) {
        const t =
          (n.touches && n.touches[0]) ||
          (n.changedTouches && n.changedTouches[0]);
        return !(
          !t ||
          -1 !== t.identifier ||
          (null != t.radiusX && 1 !== t.radiusX) ||
          (null != t.radiusY && 1 !== t.radiusY)
        );
      }
      const aq = new R("cdk-input-modality-detector-options"),
        lq = { ignoreKeys: [18, 17, 224, 91, 16] },
        ka = Ta({ passive: !0, capture: !0 });
      let cq = (() => {
        class n {
          constructor(e, i, r, s) {
            (this._platform = e),
              (this._mostRecentTarget = null),
              (this._modality = new $n(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (o) => {
                this._options?.ignoreKeys?.some((a) => a === o.keyCode) ||
                  (this._modality.next("keyboard"),
                  (this._mostRecentTarget = oo(o)));
              }),
              (this._onMousedown = (o) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(IA(o) ? "keyboard" : "mouse"),
                  (this._mostRecentTarget = oo(o)));
              }),
              (this._onTouchstart = (o) => {
                OA(o)
                  ? this._modality.next("keyboard")
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next("touch"),
                    (this._mostRecentTarget = oo(o)));
              }),
              (this._options = { ...lq, ...s }),
              (this.modalityDetected = this._modality.pipe(vA(1))),
              (this.modalityChanged = this.modalityDetected.pipe(Fy())),
              e.isBrowser &&
                i.runOutsideAngular(() => {
                  r.addEventListener("keydown", this._onKeydown, ka),
                    r.addEventListener("mousedown", this._onMousedown, ka),
                    r.addEventListener("touchstart", this._onTouchstart, ka);
                });
          }
          get mostRecentModality() {
            return this._modality.value;
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener("keydown", this._onKeydown, ka),
                document.removeEventListener(
                  "mousedown",
                  this._onMousedown,
                  ka
                ),
                document.removeEventListener(
                  "touchstart",
                  this._onTouchstart,
                  ka
                ));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(jt), x(Q), x(ae), x(aq, 8));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const uq = new R("liveAnnouncerElement", {
          providedIn: "root",
          factory: function dq() {
            return null;
          },
        }),
        hq = new R("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
      let By = (() => {
        class n {
          constructor(e, i, r, s) {
            (this._ngZone = i),
              (this._defaultOptions = s),
              (this._document = r),
              (this._liveElement = e || this._createLiveElement());
          }
          announce(e, ...i) {
            const r = this._defaultOptions;
            let s, o;
            return (
              1 === i.length && "number" == typeof i[0]
                ? (o = i[0])
                : ([s, o] = i),
              this.clear(),
              clearTimeout(this._previousTimeout),
              s || (s = r && r.politeness ? r.politeness : "polite"),
              null == o && r && (o = r.duration),
              this._liveElement.setAttribute("aria-live", s),
              this._ngZone.runOutsideAngular(
                () => (
                  this._currentPromise ||
                    (this._currentPromise = new Promise(
                      (a) => (this._currentResolve = a)
                    )),
                  clearTimeout(this._previousTimeout),
                  (this._previousTimeout = setTimeout(() => {
                    (this._liveElement.textContent = e),
                      "number" == typeof o &&
                        (this._previousTimeout = setTimeout(
                          () => this.clear(),
                          o
                        )),
                      this._currentResolve(),
                      (this._currentPromise = this._currentResolve = void 0);
                  }, 100)),
                  this._currentPromise
                )
              )
            );
          }
          clear() {
            this._liveElement && (this._liveElement.textContent = "");
          }
          ngOnDestroy() {
            clearTimeout(this._previousTimeout),
              this._liveElement?.remove(),
              (this._liveElement = null),
              this._currentResolve?.(),
              (this._currentPromise = this._currentResolve = void 0);
          }
          _createLiveElement() {
            const e = "cdk-live-announcer-element",
              i = this._document.getElementsByClassName(e),
              r = this._document.createElement("div");
            for (let s = 0; s < i.length; s++) i[s].remove();
            return (
              r.classList.add(e),
              r.classList.add("cdk-visually-hidden"),
              r.setAttribute("aria-atomic", "true"),
              r.setAttribute("aria-live", "polite"),
              this._document.body.appendChild(r),
              r
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(uq, 8), x(Q), x(ae), x(hq, 8));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const fq = new R("cdk-focus-monitor-default-options"),
        jh = Ta({ passive: !0, capture: !0 });
      let ys = (() => {
        class n {
          constructor(e, i, r, s, o) {
            (this._ngZone = e),
              (this._platform = i),
              (this._inputModalityDetector = r),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = window.setTimeout(
                    () => (this._windowFocused = !1)
                  ));
              }),
              (this._stopInputModalityDetector = new $()),
              (this._rootNodeFocusAndBlurListener = (a) => {
                for (let c = oo(a); c; c = c.parentElement)
                  "focus" === a.type ? this._onFocus(a, c) : this._onBlur(a, c);
              }),
              (this._document = s),
              (this._detectionMode = o?.detectionMode || 0);
          }
          monitor(e, i = !1) {
            const r = Br(e);
            if (!this._platform.isBrowser || 1 !== r.nodeType) return W(null);
            const s =
                (function M8(n) {
                  if (
                    (function w8() {
                      if (null == Ty) {
                        const n = typeof document < "u" ? document.head : null;
                        Ty = !(!n || (!n.createShadowRoot && !n.attachShadow));
                      }
                      return Ty;
                    })()
                  ) {
                    const t = n.getRootNode ? n.getRootNode() : null;
                    if (
                      typeof ShadowRoot < "u" &&
                      ShadowRoot &&
                      t instanceof ShadowRoot
                    )
                      return t;
                  }
                  return null;
                })(r) || this._getDocument(),
              o = this._elementInfo.get(r);
            if (o) return i && (o.checkChildren = !0), o.subject;
            const a = { checkChildren: i, subject: new $(), rootNode: s };
            return (
              this._elementInfo.set(r, a),
              this._registerGlobalListeners(a),
              a.subject
            );
          }
          stopMonitoring(e) {
            const i = Br(e),
              r = this._elementInfo.get(i);
            r &&
              (r.subject.complete(),
              this._setClasses(i),
              this._elementInfo.delete(i),
              this._removeGlobalListeners(r));
          }
          focusVia(e, i, r) {
            const s = Br(e);
            s === this._getDocument().activeElement
              ? this._getClosestElementsInfo(s).forEach(([a, l]) =>
                  this._originChanged(a, i, l)
                )
              : (this._setOrigin(i),
                "function" == typeof s.focus && s.focus(r));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((e, i) => this.stopMonitoring(i));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _getFocusOrigin(e) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(e)
                  ? "touch"
                  : "program"
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : e && this._isLastInteractionFromInputLabel(e)
              ? "mouse"
              : "program";
          }
          _shouldBeAttributedToTouch(e) {
            return (
              1 === this._detectionMode ||
              !!e?.contains(this._inputModalityDetector._mostRecentTarget)
            );
          }
          _setClasses(e, i) {
            e.classList.toggle("cdk-focused", !!i),
              e.classList.toggle("cdk-touch-focused", "touch" === i),
              e.classList.toggle("cdk-keyboard-focused", "keyboard" === i),
              e.classList.toggle("cdk-mouse-focused", "mouse" === i),
              e.classList.toggle("cdk-program-focused", "program" === i);
          }
          _setOrigin(e, i = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = e),
                (this._originFromTouchInteraction = "touch" === e && i),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1
                  )));
            });
          }
          _onFocus(e, i) {
            const r = this._elementInfo.get(i),
              s = oo(e);
            !r ||
              (!r.checkChildren && i !== s) ||
              this._originChanged(i, this._getFocusOrigin(s), r);
          }
          _onBlur(e, i) {
            const r = this._elementInfo.get(i);
            !r ||
              (r.checkChildren &&
                e.relatedTarget instanceof Node &&
                i.contains(e.relatedTarget)) ||
              (this._setClasses(i), this._emitOrigin(r, null));
          }
          _emitOrigin(e, i) {
            e.subject.observers.length &&
              this._ngZone.run(() => e.subject.next(i));
          }
          _registerGlobalListeners(e) {
            if (!this._platform.isBrowser) return;
            const i = e.rootNode,
              r = this._rootNodeFocusListenerCount.get(i) || 0;
            r ||
              this._ngZone.runOutsideAngular(() => {
                i.addEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  jh
                ),
                  i.addEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    jh
                  );
              }),
              this._rootNodeFocusListenerCount.set(i, r + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener(
                    "focus",
                    this._windowFocusListener
                  );
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe(_e(this._stopInputModalityDetector))
                  .subscribe((s) => {
                    this._setOrigin(s, !0);
                  }));
          }
          _removeGlobalListeners(e) {
            const i = e.rootNode;
            if (this._rootNodeFocusListenerCount.has(i)) {
              const r = this._rootNodeFocusListenerCount.get(i);
              r > 1
                ? this._rootNodeFocusListenerCount.set(i, r - 1)
                : (i.removeEventListener(
                    "focus",
                    this._rootNodeFocusAndBlurListener,
                    jh
                  ),
                  i.removeEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    jh
                  ),
                  this._rootNodeFocusListenerCount.delete(i));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener(
                "focus",
                this._windowFocusListener
              ),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(e, i, r) {
            this._setClasses(e, i),
              this._emitOrigin(r, i),
              (this._lastFocusOrigin = i);
          }
          _getClosestElementsInfo(e) {
            const i = [];
            return (
              this._elementInfo.forEach((r, s) => {
                (s === e || (r.checkChildren && s.contains(e))) &&
                  i.push([s, r]);
              }),
              i
            );
          }
          _isLastInteractionFromInputLabel(e) {
            const { _mostRecentTarget: i, mostRecentModality: r } =
              this._inputModalityDetector;
            if (
              "mouse" !== r ||
              !i ||
              i === e ||
              ("INPUT" !== e.nodeName && "TEXTAREA" !== e.nodeName) ||
              e.disabled
            )
              return !1;
            const s = e.labels;
            if (s)
              for (let o = 0; o < s.length; o++)
                if (s[o].contains(i)) return !0;
            return !1;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(Q), x(jt), x(cq), x(ae, 8), x(fq, 8));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const PA = "cdk-high-contrast-black-on-white",
        FA = "cdk-high-contrast-white-on-black",
        Vy = "cdk-high-contrast-active";
      let NA = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e),
                (this._document = i),
                (this._breakpointSubscription = Ln(Nh)
                  .observe("(forced-colors: active)")
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const e = this._document.createElement("div");
              (e.style.backgroundColor = "rgb(1,2,3)"),
                (e.style.position = "absolute"),
                this._document.body.appendChild(e);
              const i = this._document.defaultView || window,
                r = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
                s = ((r && r.backgroundColor) || "").replace(/ /g, "");
              switch ((e.remove(), s)) {
                case "rgb(0,0,0)":
                  return 2;
                case "rgb(255,255,255)":
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const e = this._document.body.classList;
                e.remove(Vy, PA, FA), (this._hasCheckedHighContrastMode = !0);
                const i = this.getHighContrastMode();
                1 === i ? e.add(Vy, PA) : 2 === i && e.add(Vy, FA);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(jt), x(ae));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        LA = (() => {
          class n {
            constructor(e) {
              e._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(NA));
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [CA] })),
            n
          );
        })();
      const pq = new R("cdk-dir-doc", {
          providedIn: "root",
          factory: function mq() {
            return Ln(ae);
          },
        }),
        gq =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let rr = (() => {
          class n {
            constructor(e) {
              if (((this.value = "ltr"), (this.change = new fe()), e)) {
                const r = e.documentElement ? e.documentElement.dir : null;
                this.value = (function _q(n) {
                  const t = n?.toLowerCase() || "";
                  return "auto" === t &&
                    typeof navigator < "u" &&
                    navigator?.language
                    ? gq.test(navigator.language)
                      ? "rtl"
                      : "ltr"
                    : "rtl" === t
                    ? "rtl"
                    : "ltr";
                })((e.body ? e.body.dir : null) || r || "ltr");
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(pq, 8));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        vc = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({})),
            n
          );
        })();
      function yq(n, t) {
        if ((1 & n && ge(0, "mat-pseudo-checkbox", 4), 2 & n)) {
          const e = Re();
          T("state", e.selected ? "checked" : "unchecked")(
            "disabled",
            e.disabled
          );
        }
      }
      function vq(n, t) {
        if ((1 & n && (b(0, "span", 5), w(1), y()), 2 & n)) {
          const e = Re();
          E(1), dt("(", e.group.label, ")");
        }
      }
      const bq = ["*"],
        wq = new R("mat-sanity-checks", {
          providedIn: "root",
          factory: function Cq() {
            return !0;
          },
        });
      let Me = (() => {
        class n {
          constructor(e, i, r) {
            (this._sanityChecks = i),
              (this._document = r),
              (this._hasDoneGlobalChecks = !1),
              e._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(e) {
            return (
              !ky() &&
              ("boolean" == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[e])
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(NA), x(wq, 8), x(ae));
          }),
          (n.ɵmod = re({ type: n })),
          (n.ɵinj = ne({ imports: [vc, vc] })),
          n
        );
      })();
      function Hh(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            this._disabled = ke(t);
          }
        };
      }
      function jy(n, t) {
        return class extends n {
          constructor(...e) {
            super(...e), (this.defaultColor = t), (this.color = t);
          }
          get color() {
            return this._color;
          }
          set color(e) {
            const i = e || this.defaultColor;
            i !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`
                ),
              i && this._elementRef.nativeElement.classList.add(`mat-${i}`),
              (this._color = i));
          }
        };
      }
      function ao(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(t) {
            this._disableRipple = ke(t);
          }
        };
      }
      function Hy(n, t = 0) {
        return class extends n {
          constructor(...e) {
            super(...e), (this._tabIndex = t), (this.defaultTabIndex = t);
          }
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(e) {
            this._tabIndex = null != e ? Ti(e) : this.defaultTabIndex;
          }
        };
      }
      function jA(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this.errorState = !1);
          }
          updateErrorState() {
            const t = this.errorState,
              s = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            s !== t && ((this.errorState = s), this.stateChanges.next());
          }
        };
      }
      let zy = (() => {
          class n {
            isErrorState(e, i) {
              return !!(e && e.invalid && (e.touched || (i && i.submitted)));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        HA = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["", "mat-line", ""],
                ["", "matLine", ""],
              ],
              hostAttrs: [1, "mat-line"],
            })),
            n
          );
        })();
      function bc(n, t, e) {
        n.nativeElement.classList.toggle(t, e);
      }
      let zh = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = re({ type: n })),
          (n.ɵinj = ne({ imports: [Me, Me] })),
          n
        );
      })();
      class Dq {
        constructor(t, e, i, r = !1) {
          (this._renderer = t),
            (this.element = e),
            (this.config = i),
            (this._animationForciblyDisabledThroughCss = r),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const UA = { enterDuration: 225, exitDuration: 150 },
        Uy = Ta({ passive: !0 }),
        $A = ["mousedown", "touchstart"],
        qA = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class Eq {
        constructor(t, e, i, r) {
          (this._target = t),
            (this._ngZone = e),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            r.isBrowser && (this._containerElement = Br(i));
        }
        fadeInRipple(t, e, i = {}) {
          const r = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            s = { ...UA, ...i.animation };
          i.centered &&
            ((t = r.left + r.width / 2), (e = r.top + r.height / 2));
          const o =
              i.radius ||
              (function Sq(n, t, e) {
                const i = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
                  r = Math.max(Math.abs(t - e.top), Math.abs(t - e.bottom));
                return Math.sqrt(i * i + r * r);
              })(t, e, r),
            a = t - r.left,
            l = e - r.top,
            c = s.enterDuration,
            u = document.createElement("div");
          u.classList.add("mat-ripple-element"),
            (u.style.left = a - o + "px"),
            (u.style.top = l - o + "px"),
            (u.style.height = 2 * o + "px"),
            (u.style.width = 2 * o + "px"),
            null != i.color && (u.style.backgroundColor = i.color),
            (u.style.transitionDuration = `${c}ms`),
            this._containerElement.appendChild(u);
          const d = window.getComputedStyle(u),
            f = d.transitionDuration,
            p = "none" === d.transitionProperty || "0s" === f || "0s, 0s" === f,
            m = new Dq(this, u, i, p);
          (u.style.transform = "scale3d(1, 1, 1)"),
            (m.state = 0),
            i.persistent || (this._mostRecentTransientRipple = m);
          let _ = null;
          return (
            !p &&
              (c || s.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const v = () => this._finishRippleTransition(m),
                  M = () => this._destroyRipple(m);
                u.addEventListener("transitionend", v),
                  u.addEventListener("transitioncancel", M),
                  (_ = { onTransitionEnd: v, onTransitionCancel: M });
              }),
            this._activeRipples.set(m, _),
            (p || !c) && this._finishRippleTransition(m),
            m
          );
        }
        fadeOutRipple(t) {
          if (2 === t.state || 3 === t.state) return;
          const e = t.element,
            i = { ...UA, ...t.config.animation };
          (e.style.transitionDuration = `${i.exitDuration}ms`),
            (e.style.opacity = "0"),
            (t.state = 2),
            (t._animationForciblyDisabledThroughCss || !i.exitDuration) &&
              this._finishRippleTransition(t);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach((t) => t.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach((t) => {
            t.config.persistent || t.fadeOut();
          });
        }
        setupTriggerEvents(t) {
          const e = Br(t);
          !e ||
            e === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = e),
            this._registerEvents($A));
        }
        handleEvent(t) {
          "mousedown" === t.type
            ? this._onMousedown(t)
            : "touchstart" === t.type
            ? this._onTouchStart(t)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._registerEvents(qA),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(t) {
          0 === t.state
            ? this._startFadeOutTransition(t)
            : 2 === t.state && this._destroyRipple(t);
        }
        _startFadeOutTransition(t) {
          const e = t === this._mostRecentTransientRipple,
            { persistent: i } = t.config;
          (t.state = 1), !i && (!e || !this._isPointerDown) && t.fadeOut();
        }
        _destroyRipple(t) {
          const e = this._activeRipples.get(t) ?? null;
          this._activeRipples.delete(t),
            this._activeRipples.size || (this._containerRect = null),
            t === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (t.state = 3),
            null !== e &&
              (t.element.removeEventListener(
                "transitionend",
                e.onTransitionEnd
              ),
              t.element.removeEventListener(
                "transitioncancel",
                e.onTransitionCancel
              )),
            t.element.remove();
        }
        _onMousedown(t) {
          const e = IA(t),
            i =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !e &&
            !i &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
        }
        _onTouchStart(t) {
          if (!this._target.rippleDisabled && !OA(t)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const e = t.changedTouches;
            for (let i = 0; i < e.length; i++)
              this.fadeInRipple(
                e[i].clientX,
                e[i].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          !this._isPointerDown ||
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach((t) => {
              !t.config.persistent &&
                (1 === t.state ||
                  (t.config.terminateOnPointerUp && 0 === t.state)) &&
                t.fadeOut();
            }));
        }
        _registerEvents(t) {
          this._ngZone.runOutsideAngular(() => {
            t.forEach((e) => {
              this._triggerElement.addEventListener(e, this, Uy);
            });
          });
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            ($A.forEach((t) => {
              this._triggerElement.removeEventListener(t, this, Uy);
            }),
            this._pointerUpEventsRegistered &&
              qA.forEach((t) => {
                this._triggerElement.removeEventListener(t, this, Uy);
              }));
        }
      }
      const Tq = new R("mat-ripple-global-options");
      let Ia = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this._elementRef = e),
                (this._animationMode = o),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = s || {}),
                (this._rippleRenderer = new Eq(this, i, e, r));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && this.fadeOutAllNonPersistent(),
                (this._disabled = e),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(e) {
              (this._trigger = e), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...("NoopAnimations" === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(e, i = 0, r) {
              return "number" == typeof e
                ? this._rippleRenderer.fadeInRipple(e, i, {
                    ...this.rippleConfig,
                    ...r,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...e,
                  });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(ce), g(Q), g(jt), g(Tq, 8), g(Hn, 8));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["", "mat-ripple", ""],
                ["", "matRipple", ""],
              ],
              hostAttrs: [1, "mat-ripple"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && Ye("mat-ripple-unbounded", i.unbounded);
              },
              inputs: {
                color: ["matRippleColor", "color"],
                unbounded: ["matRippleUnbounded", "unbounded"],
                centered: ["matRippleCentered", "centered"],
                radius: ["matRippleRadius", "radius"],
                animation: ["matRippleAnimation", "animation"],
                disabled: ["matRippleDisabled", "disabled"],
                trigger: ["matRippleTrigger", "trigger"],
              },
              exportAs: ["matRipple"],
            })),
            n
          );
        })(),
        Cc = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [Me, Me] })),
            n
          );
        })(),
        WA = (() => {
          class n {
            constructor(e) {
              (this._animationMode = e),
                (this.state = "unchecked"),
                (this.disabled = !1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Hn, 8));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-pseudo-checkbox"]],
              hostAttrs: [1, "mat-pseudo-checkbox"],
              hostVars: 8,
              hostBindings: function (e, i) {
                2 & e &&
                  Ye(
                    "mat-pseudo-checkbox-indeterminate",
                    "indeterminate" === i.state
                  )("mat-pseudo-checkbox-checked", "checked" === i.state)(
                    "mat-pseudo-checkbox-disabled",
                    i.disabled
                  )(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  );
              },
              inputs: { state: "state", disabled: "disabled" },
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              styles: [
                '.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        $y = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [Me] })),
            n
          );
        })();
      const GA = new R("MAT_OPTION_PARENT_COMPONENT"),
        YA = new R("MatOptgroup");
      let Aq = 0;
      class kq {
        constructor(t, e = !1) {
          (this.source = t), (this.isUserInput = e);
        }
      }
      let Iq = (() => {
          class n {
            constructor(e, i, r, s) {
              (this._element = e),
                (this._changeDetectorRef = i),
                (this._parent = r),
                (this.group = s),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ""),
                (this.id = "mat-option-" + Aq++),
                (this.onSelectionChange = new fe()),
                (this._stateChanges = new $());
            }
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(e) {
              this._disabled = ke(e);
            }
            get disableRipple() {
              return !(!this._parent || !this._parent.disableRipple);
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._getHostElement().textContent || "").trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(e, i) {
              const r = this._getHostElement();
              "function" == typeof r.focus && r.focus(i);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(e) {
              (13 === e.keyCode || 32 === e.keyCode) &&
                !Si(e) &&
                (this._selectViaInteraction(), e.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getAriaSelected() {
              return this.selected || (!this.multiple && null);
            }
            _getTabIndex() {
              return this.disabled ? "-1" : "0";
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const e = this.viewValue;
                e !== this._mostRecentViewValue &&
                  ((this._mostRecentViewValue = e), this._stateChanges.next());
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(e = !1) {
              this.onSelectionChange.emit(new kq(this, e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              js();
            }),
            (n.ɵdir = N({
              type: n,
              inputs: { value: "value", id: "id", disabled: "disabled" },
              outputs: { onSelectionChange: "onSelectionChange" },
            })),
            n
          );
        })(),
        lo = (() => {
          class n extends Iq {
            constructor(e, i, r, s) {
              super(e, i, r, s);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(ce), g(Et), g(GA, 8), g(YA, 8));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-option"]],
              hostAttrs: [
                "role",
                "option",
                1,
                "mat-option",
                "mat-focus-indicator",
              ],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  P("click", function () {
                    return i._selectViaInteraction();
                  })("keydown", function (s) {
                    return i._handleKeydown(s);
                  }),
                  2 & e &&
                    (Tl("id", i.id),
                    ze("tabindex", i._getTabIndex())(
                      "aria-selected",
                      i._getAriaSelected()
                    )("aria-disabled", i.disabled.toString()),
                    Ye("mat-selected", i.selected)(
                      "mat-option-multiple",
                      i.multiple
                    )("mat-active", i.active)(
                      "mat-option-disabled",
                      i.disabled
                    ));
              },
              exportAs: ["matOption"],
              features: [q],
              ngContentSelectors: bq,
              decls: 5,
              vars: 4,
              consts: [
                [
                  "class",
                  "mat-option-pseudo-checkbox",
                  3,
                  "state",
                  "disabled",
                  4,
                  "ngIf",
                ],
                [1, "mat-option-text"],
                ["class", "cdk-visually-hidden", 4, "ngIf"],
                [
                  "mat-ripple",
                  "",
                  1,
                  "mat-option-ripple",
                  3,
                  "matRippleTrigger",
                  "matRippleDisabled",
                ],
                [1, "mat-option-pseudo-checkbox", 3, "state", "disabled"],
                [1, "cdk-visually-hidden"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Nt(),
                  B(0, yq, 1, 2, "mat-pseudo-checkbox", 0),
                  b(1, "span", 1),
                  De(2),
                  y(),
                  B(3, vq, 2, 1, "span", 2),
                  ge(4, "div", 3)),
                  2 & e &&
                    (T("ngIf", i.multiple),
                    E(3),
                    T("ngIf", i.group && i.group._inert),
                    E(1),
                    T("matRippleTrigger", i._getHostElement())(
                      "matRippleDisabled",
                      i.disabled || i.disableRipple
                    ));
              },
              dependencies: [Ia, At, WA],
              styles: [
                '.mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:""}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })();
      function KA(n, t, e) {
        if (e.length) {
          let i = t.toArray(),
            r = e.toArray(),
            s = 0;
          for (let o = 0; o < n + 1; o++)
            i[o].group && i[o].group === r[s] && s++;
          return s;
        }
        return 0;
      }
      let XA = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = re({ type: n })),
          (n.ɵinj = ne({ imports: [Cc, Ki, Me, $y] })),
          n
        );
      })();
      const Rq = ["mat-button", ""],
        Pq = ["*"],
        Nq = [
          "mat-button",
          "mat-flat-button",
          "mat-icon-button",
          "mat-raised-button",
          "mat-stroked-button",
          "mat-mini-fab",
          "mat-fab",
        ],
        Lq = jy(
          Hh(
            ao(
              class {
                constructor(n) {
                  this._elementRef = n;
                }
              }
            )
          )
        );
      let Kt = (() => {
          class n extends Lq {
            constructor(e, i, r) {
              super(e),
                (this._focusMonitor = i),
                (this._animationMode = r),
                (this.isRoundButton = this._hasHostAttributes(
                  "mat-fab",
                  "mat-mini-fab"
                )),
                (this.isIconButton =
                  this._hasHostAttributes("mat-icon-button"));
              for (const s of Nq)
                this._hasHostAttributes(s) &&
                  this._getHostElement().classList.add(s);
              e.nativeElement.classList.add("mat-button-base"),
                this.isRoundButton && (this.color = "accent");
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(e, i) {
              e
                ? this._focusMonitor.focusVia(this._getHostElement(), e, i)
                : this._getHostElement().focus(i);
            }
            _getHostElement() {
              return this._elementRef.nativeElement;
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _hasHostAttributes(...e) {
              return e.some((i) => this._getHostElement().hasAttribute(i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(ce), g(ys), g(Hn, 8));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [
                ["button", "mat-button", ""],
                ["button", "mat-raised-button", ""],
                ["button", "mat-icon-button", ""],
                ["button", "mat-fab", ""],
                ["button", "mat-mini-fab", ""],
                ["button", "mat-stroked-button", ""],
                ["button", "mat-flat-button", ""],
              ],
              viewQuery: function (e, i) {
                if ((1 & e && $t(Ia, 5), 2 & e)) {
                  let r;
                  se((r = oe())) && (i.ripple = r.first);
                }
              },
              hostAttrs: [1, "mat-focus-indicator"],
              hostVars: 5,
              hostBindings: function (e, i) {
                2 & e &&
                  (ze("disabled", i.disabled || null),
                  Ye(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  )("mat-button-disabled", i.disabled));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
              },
              exportAs: ["matButton"],
              features: [q],
              attrs: Rq,
              ngContentSelectors: Pq,
              decls: 4,
              vars: 5,
              consts: [
                [1, "mat-button-wrapper"],
                [
                  "matRipple",
                  "",
                  1,
                  "mat-button-ripple",
                  3,
                  "matRippleDisabled",
                  "matRippleCentered",
                  "matRippleTrigger",
                ],
                [1, "mat-button-focus-overlay"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Nt(),
                  b(0, "span", 0),
                  De(1),
                  y(),
                  ge(2, "span", 1)(3, "span", 2)),
                  2 & e &&
                    (E(2),
                    Ye(
                      "mat-button-ripple-round",
                      i.isRoundButton || i.isIconButton
                    ),
                    T("matRippleDisabled", i._isRippleDisabled())(
                      "matRippleCentered",
                      i.isIconButton
                    )("matRippleTrigger", i._getHostElement()));
              },
              dependencies: [Ia],
              styles: [
                ".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}.mat-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.mat-flat-button::before,.mat-raised-button::before,.mat-fab::before,.mat-mini-fab::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-stroked-button::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        ZA = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [Cc, Me, Me] })),
            n
          );
        })();
      const Bq = ["addListener", "removeListener"],
        Vq = ["addEventListener", "removeEventListener"],
        jq = ["on", "off"];
      function Oa(n, t, e, i) {
        if ((Ae(e) && ((i = e), (e = void 0)), i))
          return Oa(n, t, e).pipe(T_(i));
        const [r, s] = (function Uq(n) {
          return Ae(n.addEventListener) && Ae(n.removeEventListener);
        })(n)
          ? Vq.map((o) => (a) => n[o](t, a, e))
          : (function Hq(n) {
              return Ae(n.addListener) && Ae(n.removeListener);
            })(n)
          ? Bq.map(QA(n, t))
          : (function zq(n) {
              return Ae(n.on) && Ae(n.off);
            })(n)
          ? jq.map(QA(n, t))
          : [];
        if (!r && Xf(n)) return zt((o) => Oa(o, t, e))(_n(n));
        if (!r) throw new TypeError("Invalid event target");
        return new We((o) => {
          const a = (...l) => o.next(1 < l.length ? l : l[0]);
          return r(a), () => s(a);
        });
      }
      function QA(n, t) {
        return (e) => (i) => n[e](t, i);
      }
      const $q = ["connectionContainer"],
        qq = ["inputContainer"],
        Wq = ["label"];
      function Gq(n, t) {
        1 & n &&
          (Ml(0),
          b(1, "div", 14),
          ge(2, "div", 15)(3, "div", 16)(4, "div", 17),
          y(),
          b(5, "div", 18),
          ge(6, "div", 15)(7, "div", 16)(8, "div", 17),
          y(),
          Dl());
      }
      function Yq(n, t) {
        if (1 & n) {
          const e = Dr();
          b(0, "div", 19),
            P("cdkObserveContent", function () {
              return Ri(e), Pi(Re().updateOutlineGap());
            }),
            De(1, 1),
            y();
        }
        2 & n && T("cdkObserveContentDisabled", "outline" != Re().appearance);
      }
      function Kq(n, t) {
        if (
          (1 & n && (Ml(0), De(1, 2), b(2, "span"), w(3), y(), Dl()), 2 & n)
        ) {
          const e = Re(2);
          E(3), gt(e._control.placeholder);
        }
      }
      function Xq(n, t) {
        1 & n && De(0, 3, ["*ngSwitchCase", "true"]);
      }
      function Zq(n, t) {
        1 & n && (b(0, "span", 23), w(1, " *"), y());
      }
      function Qq(n, t) {
        if (1 & n) {
          const e = Dr();
          b(0, "label", 20, 21),
            P("cdkObserveContent", function () {
              return Ri(e), Pi(Re().updateOutlineGap());
            }),
            B(2, Kq, 4, 1, "ng-container", 12),
            B(3, Xq, 1, 0, "ng-content", 12),
            B(4, Zq, 2, 0, "span", 22),
            y();
        }
        if (2 & n) {
          const e = Re();
          Ye("mat-empty", e._control.empty && !e._shouldAlwaysFloat())(
            "mat-form-field-empty",
            e._control.empty && !e._shouldAlwaysFloat()
          )("mat-accent", "accent" == e.color)("mat-warn", "warn" == e.color),
            T("cdkObserveContentDisabled", "outline" != e.appearance)(
              "id",
              e._labelId
            )("ngSwitch", e._hasLabel()),
            ze("for", e._control.id)("aria-owns", e._control.id),
            E(2),
            T("ngSwitchCase", !1),
            E(1),
            T("ngSwitchCase", !0),
            E(1),
            T(
              "ngIf",
              !e.hideRequiredMarker &&
                e._control.required &&
                !e._control.disabled
            );
        }
      }
      function Jq(n, t) {
        1 & n && (b(0, "div", 24), De(1, 4), y());
      }
      function eW(n, t) {
        if ((1 & n && (b(0, "div", 25), ge(1, "span", 26), y()), 2 & n)) {
          const e = Re();
          E(1),
            Ye("mat-accent", "accent" == e.color)(
              "mat-warn",
              "warn" == e.color
            );
        }
      }
      function tW(n, t) {
        1 & n && (b(0, "div"), De(1, 5), y()),
          2 & n && T("@transitionMessages", Re()._subscriptAnimationState);
      }
      function nW(n, t) {
        if ((1 & n && (b(0, "div", 30), w(1), y()), 2 & n)) {
          const e = Re(2);
          T("id", e._hintLabelId), E(1), gt(e.hintLabel);
        }
      }
      function iW(n, t) {
        if (
          (1 & n &&
            (b(0, "div", 27),
            B(1, nW, 2, 2, "div", 28),
            De(2, 6),
            ge(3, "div", 29),
            De(4, 7),
            y()),
          2 & n)
        ) {
          const e = Re();
          T("@transitionMessages", e._subscriptAnimationState),
            E(1),
            T("ngIf", e.hintLabel);
        }
      }
      const rW = [
          "*",
          [["", "matPrefix", ""]],
          [["mat-placeholder"]],
          [["mat-label"]],
          [["", "matSuffix", ""]],
          [["mat-error"]],
          [["mat-hint", 3, "align", "end"]],
          [["mat-hint", "align", "end"]],
        ],
        sW = [
          "*",
          "[matPrefix]",
          "mat-placeholder",
          "mat-label",
          "[matSuffix]",
          "mat-error",
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let oW = 0;
      const JA = new R("MatError");
      let Vr = (() => {
        class n {
          constructor(e, i) {
            (this.id = "mat-error-" + oW++),
              e || i.nativeElement.setAttribute("aria-live", "polite");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(Li("aria-live"), g(ce));
          }),
          (n.ɵdir = N({
            type: n,
            selectors: [["mat-error"]],
            hostAttrs: ["aria-atomic", "true", 1, "mat-error"],
            hostVars: 1,
            hostBindings: function (e, i) {
              2 & e && ze("id", i.id);
            },
            inputs: { id: "id" },
            features: [pe([{ provide: JA, useExisting: n }])],
          })),
          n
        );
      })();
      const aW = {
        transitionMessages: kr("transitionMessages", [
          xn("enter", Ke({ opacity: 1, transform: "translateY(0%)" })),
          pn("void => enter", [
            Ke({ opacity: 0, transform: "translateY(-5px)" }),
            Dn("300ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
          ]),
        ]),
      };
      let Uh = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = N({ type: n })),
          n
        );
      })();
      const lW = new R("MatHint");
      let Ai = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({ type: n, selectors: [["mat-label"]] })),
            n
          );
        })(),
        cW = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({ type: n, selectors: [["mat-placeholder"]] })),
            n
          );
        })();
      const uW = new R("MatPrefix"),
        dW = new R("MatSuffix");
      let ek = 0;
      const fW = jy(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          },
          "primary"
        ),
        pW = new R("MAT_FORM_FIELD_DEFAULT_OPTIONS"),
        qy = new R("MatFormField");
      let jr = (() => {
          class n extends fW {
            constructor(e, i, r, s, o, a, l) {
              super(e),
                (this._changeDetectorRef = i),
                (this._dir = r),
                (this._defaults = s),
                (this._platform = o),
                (this._ngZone = a),
                (this._outlineGapCalculationNeededImmediately = !1),
                (this._outlineGapCalculationNeededOnStable = !1),
                (this._destroyed = new $()),
                (this._hideRequiredMarker = !1),
                (this._showAlwaysAnimate = !1),
                (this._subscriptAnimationState = ""),
                (this._hintLabel = ""),
                (this._hintLabelId = "mat-hint-" + ek++),
                (this._labelId = "mat-form-field-label-" + ek++),
                (this.floatLabel = this._getDefaultFloatLabelState()),
                (this._animationsEnabled = "NoopAnimations" !== l),
                (this.appearance = s?.appearance || "legacy"),
                s &&
                  ((this._hideRequiredMarker = Boolean(s.hideRequiredMarker)),
                  s.color && (this.color = this.defaultColor = s.color));
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(e) {
              const i = this._appearance;
              (this._appearance = e || this._defaults?.appearance || "legacy"),
                "outline" === this._appearance &&
                  i !== e &&
                  (this._outlineGapCalculationNeededOnStable = !0);
            }
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(e) {
              this._hideRequiredMarker = ke(e);
            }
            _shouldAlwaysFloat() {
              return "always" === this.floatLabel && !this._showAlwaysAnimate;
            }
            _canLabelFloat() {
              return "never" !== this.floatLabel;
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(e) {
              (this._hintLabel = e), this._processHints();
            }
            get floatLabel() {
              return "legacy" !== this.appearance &&
                "never" === this._floatLabel
                ? "auto"
                : this._floatLabel;
            }
            set floatLabel(e) {
              e !== this._floatLabel &&
                ((this._floatLabel = e || this._getDefaultFloatLabelState()),
                this._changeDetectorRef.markForCheck());
            }
            get _control() {
              return (
                this._explicitFormFieldControl ||
                this._controlNonStatic ||
                this._controlStatic
              );
            }
            set _control(e) {
              this._explicitFormFieldControl = e;
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._connectionContainerRef || this._elementRef;
            }
            ngAfterContentInit() {
              this._validateControlChild();
              const e = this._control;
              e.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-form-field-type-${e.controlType}`
                ),
                e.stateChanges.pipe(qn(null)).subscribe(() => {
                  this._validatePlaceholders(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                e.ngControl &&
                  e.ngControl.valueChanges &&
                  e.ngControl.valueChanges
                    .pipe(_e(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck()),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe(_e(this._destroyed))
                    .subscribe(() => {
                      this._outlineGapCalculationNeededOnStable &&
                        this.updateOutlineGap();
                    });
                }),
                Xr(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes
                ).subscribe(() => {
                  (this._outlineGapCalculationNeededOnStable = !0),
                    this._changeDetectorRef.markForCheck();
                }),
                this._hintChildren.changes.pipe(qn(null)).subscribe(() => {
                  this._processHints(), this._changeDetectorRef.markForCheck();
                }),
                this._errorChildren.changes.pipe(qn(null)).subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._dir &&
                  this._dir.change.pipe(_e(this._destroyed)).subscribe(() => {
                    "function" == typeof requestAnimationFrame
                      ? this._ngZone.runOutsideAngular(() => {
                          requestAnimationFrame(() => this.updateOutlineGap());
                        })
                      : this.updateOutlineGap();
                  });
            }
            ngAfterContentChecked() {
              this._validateControlChild(),
                this._outlineGapCalculationNeededImmediately &&
                  this.updateOutlineGap();
            }
            ngAfterViewInit() {
              (this._subscriptAnimationState = "enter"),
                this._changeDetectorRef.detectChanges();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _shouldForward(e) {
              const i = this._control ? this._control.ngControl : null;
              return i && i[e];
            }
            _hasPlaceholder() {
              return !!(
                (this._control && this._control.placeholder) ||
                this._placeholderChild
              );
            }
            _hasLabel() {
              return !(!this._labelChildNonStatic && !this._labelChildStatic);
            }
            _shouldLabelFloat() {
              return (
                this._canLabelFloat() &&
                ((this._control && this._control.shouldLabelFloat) ||
                  this._shouldAlwaysFloat())
              );
            }
            _hideControlPlaceholder() {
              return (
                ("legacy" === this.appearance && !this._hasLabel()) ||
                (this._hasLabel() && !this._shouldLabelFloat())
              );
            }
            _hasFloatingLabel() {
              return (
                this._hasLabel() ||
                ("legacy" === this.appearance && this._hasPlaceholder())
              );
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? "error"
                : "hint";
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() &&
                this._canLabelFloat() &&
                (this._animationsEnabled &&
                  this._label &&
                  ((this._showAlwaysAnimate = !0),
                  Oa(this._label.nativeElement, "transitionend")
                    .pipe(Vt(1))
                    .subscribe(() => {
                      this._showAlwaysAnimate = !1;
                    })),
                (this.floatLabel = "always"),
                this._changeDetectorRef.markForCheck());
            }
            _validatePlaceholders() {}
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _getDefaultFloatLabelState() {
              return (this._defaults && this._defaults.floatLabel) || "auto";
            }
            _syncDescribedByIds() {
              if (this._control) {
                let e = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    "string" == typeof this._control.userAriaDescribedBy &&
                    e.push(...this._control.userAriaDescribedBy.split(" ")),
                  "hint" === this._getDisplayedMessages())
                ) {
                  const i = this._hintChildren
                      ? this._hintChildren.find((s) => "start" === s.align)
                      : null,
                    r = this._hintChildren
                      ? this._hintChildren.find((s) => "end" === s.align)
                      : null;
                  i
                    ? e.push(i.id)
                    : this._hintLabel && e.push(this._hintLabelId),
                    r && e.push(r.id);
                } else
                  this._errorChildren &&
                    e.push(...this._errorChildren.map((i) => i.id));
                this._control.setDescribedByIds(e);
              }
            }
            _validateControlChild() {}
            updateOutlineGap() {
              const e = this._label ? this._label.nativeElement : null,
                i = this._connectionContainerRef.nativeElement,
                r = ".mat-form-field-outline-start",
                s = ".mat-form-field-outline-gap";
              if ("outline" !== this.appearance || !this._platform.isBrowser)
                return;
              if (!e || !e.children.length || !e.textContent.trim()) {
                const u = i.querySelectorAll(`${r}, ${s}`);
                for (let d = 0; d < u.length; d++) u[d].style.width = "0";
                return;
              }
              if (!this._isAttachedToDOM())
                return void (this._outlineGapCalculationNeededImmediately = !0);
              let o = 0,
                a = 0;
              const l = i.querySelectorAll(r),
                c = i.querySelectorAll(s);
              if (this._label && this._label.nativeElement.children.length) {
                const u = i.getBoundingClientRect();
                if (0 === u.width && 0 === u.height)
                  return (
                    (this._outlineGapCalculationNeededOnStable = !0),
                    void (this._outlineGapCalculationNeededImmediately = !1)
                  );
                const d = this._getStartEnd(u),
                  h = e.children,
                  f = this._getStartEnd(h[0].getBoundingClientRect());
                let p = 0;
                for (let m = 0; m < h.length; m++) p += h[m].offsetWidth;
                (o = Math.abs(f - d) - 5), (a = p > 0 ? 0.75 * p + 10 : 0);
              }
              for (let u = 0; u < l.length; u++) l[u].style.width = `${o}px`;
              for (let u = 0; u < c.length; u++) c[u].style.width = `${a}px`;
              this._outlineGapCalculationNeededOnStable =
                this._outlineGapCalculationNeededImmediately = !1;
            }
            _getStartEnd(e) {
              return this._dir && "rtl" === this._dir.value ? e.right : e.left;
            }
            _isAttachedToDOM() {
              const e = this._elementRef.nativeElement;
              if (e.getRootNode) {
                const i = e.getRootNode();
                return i && i !== e;
              }
              return document.documentElement.contains(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                g(ce),
                g(Et),
                g(rr, 8),
                g(pW, 8),
                g(jt),
                g(Q),
                g(Hn, 8)
              );
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-form-field"]],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e &&
                    (Ue(r, Uh, 5),
                    Ue(r, Uh, 7),
                    Ue(r, Ai, 5),
                    Ue(r, Ai, 7),
                    Ue(r, cW, 5),
                    Ue(r, JA, 5),
                    Ue(r, lW, 5),
                    Ue(r, uW, 5),
                    Ue(r, dW, 5)),
                  2 & e)
                ) {
                  let s;
                  se((s = oe())) && (i._controlNonStatic = s.first),
                    se((s = oe())) && (i._controlStatic = s.first),
                    se((s = oe())) && (i._labelChildNonStatic = s.first),
                    se((s = oe())) && (i._labelChildStatic = s.first),
                    se((s = oe())) && (i._placeholderChild = s.first),
                    se((s = oe())) && (i._errorChildren = s),
                    se((s = oe())) && (i._hintChildren = s),
                    se((s = oe())) && (i._prefixChildren = s),
                    se((s = oe())) && (i._suffixChildren = s);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && ($t($q, 7), $t(qq, 5), $t(Wq, 5)), 2 & e)) {
                  let r;
                  se((r = oe())) && (i._connectionContainerRef = r.first),
                    se((r = oe())) && (i._inputContainerRef = r.first),
                    se((r = oe())) && (i._label = r.first);
                }
              },
              hostAttrs: [1, "mat-form-field"],
              hostVars: 40,
              hostBindings: function (e, i) {
                2 & e &&
                  Ye(
                    "mat-form-field-appearance-standard",
                    "standard" == i.appearance
                  )("mat-form-field-appearance-fill", "fill" == i.appearance)(
                    "mat-form-field-appearance-outline",
                    "outline" == i.appearance
                  )(
                    "mat-form-field-appearance-legacy",
                    "legacy" == i.appearance
                  )("mat-form-field-invalid", i._control.errorState)(
                    "mat-form-field-can-float",
                    i._canLabelFloat()
                  )("mat-form-field-should-float", i._shouldLabelFloat())(
                    "mat-form-field-has-label",
                    i._hasFloatingLabel()
                  )(
                    "mat-form-field-hide-placeholder",
                    i._hideControlPlaceholder()
                  )("mat-form-field-disabled", i._control.disabled)(
                    "mat-form-field-autofilled",
                    i._control.autofilled
                  )("mat-focused", i._control.focused)(
                    "ng-untouched",
                    i._shouldForward("untouched")
                  )("ng-touched", i._shouldForward("touched"))(
                    "ng-pristine",
                    i._shouldForward("pristine")
                  )("ng-dirty", i._shouldForward("dirty"))(
                    "ng-valid",
                    i._shouldForward("valid")
                  )("ng-invalid", i._shouldForward("invalid"))(
                    "ng-pending",
                    i._shouldForward("pending")
                  )("_mat-animation-noopable", !i._animationsEnabled);
              },
              inputs: {
                color: "color",
                appearance: "appearance",
                hideRequiredMarker: "hideRequiredMarker",
                hintLabel: "hintLabel",
                floatLabel: "floatLabel",
              },
              exportAs: ["matFormField"],
              features: [pe([{ provide: qy, useExisting: n }]), q],
              ngContentSelectors: sW,
              decls: 15,
              vars: 8,
              consts: [
                [1, "mat-form-field-wrapper"],
                [1, "mat-form-field-flex", 3, "click"],
                ["connectionContainer", ""],
                [4, "ngIf"],
                [
                  "class",
                  "mat-form-field-prefix",
                  3,
                  "cdkObserveContentDisabled",
                  "cdkObserveContent",
                  4,
                  "ngIf",
                ],
                [1, "mat-form-field-infix"],
                ["inputContainer", ""],
                [1, "mat-form-field-label-wrapper"],
                [
                  "class",
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "mat-empty",
                  "mat-form-field-empty",
                  "mat-accent",
                  "mat-warn",
                  "ngSwitch",
                  "cdkObserveContent",
                  4,
                  "ngIf",
                ],
                ["class", "mat-form-field-suffix", 4, "ngIf"],
                ["class", "mat-form-field-underline", 4, "ngIf"],
                [1, "mat-form-field-subscript-wrapper", 3, "ngSwitch"],
                [4, "ngSwitchCase"],
                ["class", "mat-form-field-hint-wrapper", 4, "ngSwitchCase"],
                [1, "mat-form-field-outline"],
                [1, "mat-form-field-outline-start"],
                [1, "mat-form-field-outline-gap"],
                [1, "mat-form-field-outline-end"],
                [1, "mat-form-field-outline", "mat-form-field-outline-thick"],
                [
                  1,
                  "mat-form-field-prefix",
                  3,
                  "cdkObserveContentDisabled",
                  "cdkObserveContent",
                ],
                [
                  1,
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "ngSwitch",
                  "cdkObserveContent",
                ],
                ["label", ""],
                [
                  "class",
                  "mat-placeholder-required mat-form-field-required-marker",
                  "aria-hidden",
                  "true",
                  4,
                  "ngIf",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "mat-placeholder-required",
                  "mat-form-field-required-marker",
                ],
                [1, "mat-form-field-suffix"],
                [1, "mat-form-field-underline"],
                [1, "mat-form-field-ripple"],
                [1, "mat-form-field-hint-wrapper"],
                ["class", "mat-hint", 3, "id", 4, "ngIf"],
                [1, "mat-form-field-hint-spacer"],
                [1, "mat-hint", 3, "id"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Nt(rW),
                  b(0, "div", 0)(1, "div", 1, 2),
                  P("click", function (s) {
                    return (
                      i._control.onContainerClick &&
                      i._control.onContainerClick(s)
                    );
                  }),
                  B(3, Gq, 9, 0, "ng-container", 3),
                  B(4, Yq, 2, 1, "div", 4),
                  b(5, "div", 5, 6),
                  De(7),
                  b(8, "span", 7),
                  B(9, Qq, 5, 16, "label", 8),
                  y()(),
                  B(10, Jq, 2, 0, "div", 9),
                  y(),
                  B(11, eW, 2, 4, "div", 10),
                  b(12, "div", 11),
                  B(13, tW, 2, 1, "div", 12),
                  B(14, iW, 5, 2, "div", 13),
                  y()()),
                  2 & e &&
                    (E(3),
                    T("ngIf", "outline" == i.appearance),
                    E(1),
                    T("ngIf", i._prefixChildren.length),
                    E(5),
                    T("ngIf", i._hasFloatingLabel()),
                    E(1),
                    T("ngIf", i._suffixChildren.length),
                    E(1),
                    T("ngIf", "outline" != i.appearance),
                    E(1),
                    T("ngSwitch", i._getDisplayedMessages()),
                    E(1),
                    T("ngSwitchCase", "error"),
                    E(1),
                    T("ngSwitchCase", "hint"));
              },
              dependencies: [At, Hl, $g, j8],
              styles: [
                ".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}",
                '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}',
                '.mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}',
                ".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}",
                ".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}",
                ".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}",
              ],
              encapsulation: 2,
              data: { animation: [aW.transitionMessages] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        Wy = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [Ki, Me, CA, Me] })),
            n
          );
        })();
      const nk = Ta({ passive: !0 });
      let mW = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e),
                (this._ngZone = i),
                (this._monitoredElements = new Map());
            }
            monitor(e) {
              if (!this._platform.isBrowser) return Oi;
              const i = Br(e),
                r = this._monitoredElements.get(i);
              if (r) return r.subject;
              const s = new $(),
                o = "cdk-text-field-autofilled",
                a = (l) => {
                  "cdk-text-field-autofill-start" !== l.animationName ||
                  i.classList.contains(o)
                    ? "cdk-text-field-autofill-end" === l.animationName &&
                      i.classList.contains(o) &&
                      (i.classList.remove(o),
                      this._ngZone.run(() =>
                        s.next({ target: l.target, isAutofilled: !1 })
                      ))
                    : (i.classList.add(o),
                      this._ngZone.run(() =>
                        s.next({ target: l.target, isAutofilled: !0 })
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  i.addEventListener("animationstart", a, nk),
                    i.classList.add("cdk-text-field-autofill-monitored");
                }),
                this._monitoredElements.set(i, {
                  subject: s,
                  unlisten: () => {
                    i.removeEventListener("animationstart", a, nk);
                  },
                }),
                s
              );
            }
            stopMonitoring(e) {
              const i = Br(e),
                r = this._monitoredElements.get(i);
              r &&
                (r.unlisten(),
                r.subject.complete(),
                i.classList.remove("cdk-text-field-autofill-monitored"),
                i.classList.remove("cdk-text-field-autofilled"),
                this._monitoredElements.delete(i));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((e, i) => this.stopMonitoring(i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(jt), x(Q));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        ik = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({})),
            n
          );
        })();
      const gW = new R("MAT_INPUT_VALUE_ACCESSOR"),
        _W = [
          "button",
          "checkbox",
          "file",
          "hidden",
          "image",
          "radio",
          "range",
          "reset",
          "submit",
        ];
      let yW = 0;
      const vW = jA(
        class {
          constructor(n, t, e, i) {
            (this._defaultErrorStateMatcher = n),
              (this._parentForm = t),
              (this._parentFormGroup = e),
              (this.ngControl = i),
              (this.stateChanges = new $());
          }
        }
      );
      let Hr = (() => {
          class n extends vW {
            constructor(e, i, r, s, o, a, l, c, u, d) {
              super(a, s, o, r),
                (this._elementRef = e),
                (this._platform = i),
                (this._autofillMonitor = c),
                (this._formField = d),
                (this._uid = "mat-input-" + yW++),
                (this.focused = !1),
                (this.stateChanges = new $()),
                (this.controlType = "mat-input"),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._type = "text"),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  "date",
                  "datetime",
                  "datetime-local",
                  "month",
                  "time",
                  "week",
                ].filter((p) => pA().has(p))),
                (this._iOSKeyupListener = (p) => {
                  const m = p.target;
                  !m.value &&
                    0 === m.selectionStart &&
                    0 === m.selectionEnd &&
                    (m.setSelectionRange(1, 1), m.setSelectionRange(0, 0));
                });
              const h = this._elementRef.nativeElement,
                f = h.nodeName.toLowerCase();
              (this._inputValueAccessor = l || h),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                i.IOS &&
                  u.runOutsideAngular(() => {
                    e.nativeElement.addEventListener(
                      "keyup",
                      this._iOSKeyupListener
                    );
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = "select" === f),
                (this._isTextarea = "textarea" === f),
                (this._isInFormField = !!d),
                this._isNativeSelect &&
                  (this.controlType = h.multiple
                    ? "mat-native-select-multiple"
                    : "mat-native-select");
            }
            get disabled() {
              return this.ngControl && null !== this.ngControl.disabled
                ? this.ngControl.disabled
                : this._disabled;
            }
            set disabled(e) {
              (this._disabled = ke(e)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(e) {
              this._id = e || this._uid;
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(wt.required) ??
                !1
              );
            }
            set required(e) {
              this._required = ke(e);
            }
            get type() {
              return this._type;
            }
            set type(e) {
              (this._type = e || "text"),
                this._validateType(),
                !this._isTextarea &&
                  pA().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(e) {
              e !== this.value &&
                ((this._inputValueAccessor.value = e),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(e) {
              this._readonly = ke(e);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe((e) => {
                    (this.autofilled = e.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement
                  ),
                this._platform.IOS &&
                  this._elementRef.nativeElement.removeEventListener(
                    "keyup",
                    this._iOSKeyupListener
                  );
            }
            ngDoCheck() {
              this.ngControl && this.updateErrorState(),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _focusChanged(e) {
              e !== this.focused &&
                ((this.focused = e), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckPlaceholder() {
              const e = this._formField,
                i =
                  e && "legacy" === e.appearance && !e._hasLabel?.()
                    ? null
                    : this.placeholder;
              if (i !== this._previousPlaceholder) {
                const r = this._elementRef.nativeElement;
                (this._previousPlaceholder = i),
                  i
                    ? r.setAttribute("placeholder", i)
                    : r.removeAttribute("placeholder");
              }
            }
            _dirtyCheckNativeValue() {
              const e = this._elementRef.nativeElement.value;
              this._previousNativeValue !== e &&
                ((this._previousNativeValue = e), this.stateChanges.next());
            }
            _validateType() {
              _W.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let e = this._elementRef.nativeElement.validity;
              return e && e.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const e = this._elementRef.nativeElement,
                  i = e.options[0];
                return (
                  this.focused ||
                  e.multiple ||
                  !this.empty ||
                  !!(e.selectedIndex > -1 && i && i.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(e) {
              e.length
                ? this._elementRef.nativeElement.setAttribute(
                    "aria-describedby",
                    e.join(" ")
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    "aria-describedby"
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
            _isInlineSelect() {
              const e = this._elementRef.nativeElement;
              return this._isNativeSelect && (e.multiple || e.size > 1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                g(ce),
                g(jt),
                g(Zi, 10),
                g(Ql, 8),
                g(En, 8),
                g(zy),
                g(gW, 10),
                g(mW),
                g(Q),
                g(qy, 8)
              );
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["input", "matInput", ""],
                ["textarea", "matInput", ""],
                ["select", "matNativeControl", ""],
                ["input", "matNativeControl", ""],
                ["textarea", "matNativeControl", ""],
              ],
              hostAttrs: [
                1,
                "mat-input-element",
                "mat-form-field-autofill-control",
              ],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  P("focus", function () {
                    return i._focusChanged(!0);
                  })("blur", function () {
                    return i._focusChanged(!1);
                  })("input", function () {
                    return i._onInput();
                  }),
                  2 & e &&
                    (Tl("disabled", i.disabled)("required", i.required),
                    ze("id", i.id)("data-placeholder", i.placeholder)(
                      "name",
                      i.name || null
                    )("readonly", (i.readonly && !i._isNativeSelect) || null)(
                      "aria-invalid",
                      i.empty && i.required ? null : i.errorState
                    )("aria-required", i.required),
                    Ye("mat-input-server", i._isServer)(
                      "mat-native-select-inline",
                      i._isInlineSelect()
                    ));
              },
              inputs: {
                disabled: "disabled",
                id: "id",
                placeholder: "placeholder",
                name: "name",
                required: "required",
                type: "type",
                errorStateMatcher: "errorStateMatcher",
                userAriaDescribedBy: [
                  "aria-describedby",
                  "userAriaDescribedBy",
                ],
                value: "value",
                readonly: "readonly",
              },
              exportAs: ["matInput"],
              features: [pe([{ provide: Uh, useExisting: n }]), q, Gt],
            })),
            n
          );
        })(),
        bW = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ providers: [zy], imports: [ik, Wy, Me, ik, Wy] })),
            n
          );
        })();
      function CW(n, t) {
        1 & n && (b(0, "mat-error"), w(1, " Email \xe9 requerido "), y());
      }
      function wW(n, t) {
        1 & n &&
          (b(0, "mat-error"), w(1, " Favor digitar um email valido "), y());
      }
      function MW(n, t) {
        1 & n && (b(0, "mat-error"), w(1, " Senha \xe9 requerida "), y());
      }
      let DW = (() => {
          class n {
            constructor(e, i) {
              (this.formBuilder = e),
                (this.authService = i),
                (this.user = { email: "", password: "" }),
                (this.formLogin = this.formBuilder.group({
                  email: ["", [wt.required, wt.email]],
                  senha: ["", [wt.required]],
                }));
            }
            ngOnInit() {}
            onSubmit() {
              this.authService.fazerLogin({ usuario: this.user }),
                this.formLogin.reset();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Ir), g(fc));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-login"]],
              decls: 16,
              vars: 7,
              consts: [
                [1, "title-view"],
                [1, "form", 3, "formGroup", "ngSubmit"],
                ["appearance", "fill", 1, "email"],
                [
                  "matInput",
                  "",
                  "placeholder",
                  "Ex. nome@dominio.com",
                  "name",
                  "email",
                  "formControlName",
                  "email",
                  1,
                  "inputEmail",
                  3,
                  "ngModel",
                  "ngModelChange",
                ],
                [4, "ngIf"],
                ["appearance", "fill", 1, "senha"],
                [
                  "matInput",
                  "",
                  "type",
                  "password",
                  "name",
                  "senha",
                  "formControlName",
                  "senha",
                  1,
                  "inputSenha",
                  3,
                  "ngModel",
                  "ngModelChange",
                ],
                ["mat-raised-button", "", 1, "login", 3, "disabled"],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "span", 0),
                  w(1, " Login "),
                  y(),
                  b(2, "form", 1),
                  P("ngSubmit", function () {
                    return i.onSubmit();
                  }),
                  b(3, "mat-form-field", 2)(4, "mat-label"),
                  w(5, "Email"),
                  y(),
                  b(6, "input", 3),
                  P("ngModelChange", function (s) {
                    return (i.user.email = s);
                  }),
                  y(),
                  B(7, CW, 2, 0, "mat-error", 4),
                  B(8, wW, 2, 0, "mat-error", 4),
                  y(),
                  b(9, "mat-form-field", 5)(10, "mat-label"),
                  w(11, "Senha"),
                  y(),
                  b(12, "input", 6),
                  P("ngModelChange", function (s) {
                    return (i.user.password = s);
                  }),
                  y(),
                  B(13, MW, 2, 0, "mat-error", 4),
                  y(),
                  b(14, "button", 7),
                  w(15, " Login "),
                  y()()),
                  2 & e &&
                    (E(2),
                    T("formGroup", i.formLogin),
                    E(4),
                    T("ngModel", i.user.email),
                    E(1),
                    T("ngIf", i.formLogin.controls.email.hasError("required")),
                    E(1),
                    T("ngIf", i.formLogin.controls.email.hasError("email")),
                    E(4),
                    T("ngModel", i.user.password),
                    E(1),
                    T("ngIf", i.formLogin.controls.senha.hasError("required")),
                    E(1),
                    T("disabled", !i.formLogin.valid));
              },
              dependencies: [At, er, oi, Qi, Ji, Kt, Vr, jr, Ai, Hr, En, Ei],
              styles: [
                "form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px 40px}.email[_ngcontent-%COMP%], .senha[_ngcontent-%COMP%]{width:40%;min-width:35rem}.login[_ngcontent-%COMP%]{width:20%;max-width:10rem;margin-top:10px}.login[_ngcontent-%COMP%]:hover{background-color:#60e160}",
              ],
            })),
            n
          );
        })(),
        sr = (() => {
          class n {
            constructor(e) {
              (this.http = e), (this.equipeUrl = `${Nr_apiUrl}equipes/`);
            }
            create({ equipe: e }) {
              return this.http.post(this.equipeUrl, e);
            }
            read() {
              return this.http.get(this.equipeUrl);
            }
            getById({ id: e }) {
              return this.http.get(`${this.equipeUrl}${e}`);
            }
            update({ equipe: e }) {
              return this.http.put(`${this.equipeUrl}${e.id_equipe}`, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Gn));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        co = (() => {
          class n {
            constructor(e) {
              (this.http = e), (this.membroUrl = `${Nr_apiUrl}membros/`);
            }
            create({ membro: e }) {
              return this.http.post(this.membroUrl, e);
            }
            read() {
              return this.http.get(this.membroUrl);
            }
            getById({ id: e }) {
              return this.http.get(`${this.membroUrl}${e}`);
            }
            update({ membro: e }) {
              return this.http.put(`${this.membroUrl}${e.id_membro}`, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Gn));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        uo = (() => {
          class n {
            constructor(e) {
              (this.http = e), (this.projetoUrl = `${Nr_apiUrl}projetos/`);
            }
            create(e) {
              return this.http.post(this.projetoUrl, e);
            }
            read() {
              return this.http.get(this.projetoUrl);
            }
            getById(e) {
              return this.http.get(`${this.projetoUrl}${e}`);
            }
            update(e) {
              return this.http.put(`${this.projetoUrl}${e.id_projeto}`, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Gn));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        $h = (() => {
          class n {
            constructor(e) {
              (this.http = e), (this.tarefaUrl = `${Nr_apiUrl}tarefas/`);
            }
            create(e) {
              return this.http.post(this.tarefaUrl, e);
            }
            read() {
              return this.http.get(this.tarefaUrl);
            }
            getById(e) {
              return this.http.get(`${this.tarefaUrl}${e}`);
            }
            update(e) {
              return this.http.put(`${this.tarefaUrl}${e.id_tarefa}`, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Gn));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      const xW = ["*", [["mat-card-footer"]]],
        EW = ["*", "mat-card-footer"],
        SW = [
          [
            ["", "mat-card-avatar", ""],
            ["", "matCardAvatar", ""],
          ],
          [
            ["mat-card-title"],
            ["mat-card-subtitle"],
            ["", "mat-card-title", ""],
            ["", "mat-card-subtitle", ""],
            ["", "matCardTitle", ""],
            ["", "matCardSubtitle", ""],
          ],
          "*",
        ],
        TW = [
          "[mat-card-avatar], [matCardAvatar]",
          "mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]",
          "*",
        ];
      let rk = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["mat-card-content"],
                ["", "mat-card-content", ""],
                ["", "matCardContent", ""],
              ],
              hostAttrs: [1, "mat-card-content"],
            })),
            n
          );
        })(),
        or = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["mat-card-title"],
                ["", "mat-card-title", ""],
                ["", "matCardTitle", ""],
              ],
              hostAttrs: [1, "mat-card-title"],
            })),
            n
          );
        })(),
        ar = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["mat-card-subtitle"],
                ["", "mat-card-subtitle", ""],
                ["", "matCardSubtitle", ""],
              ],
              hostAttrs: [1, "mat-card-subtitle"],
            })),
            n
          );
        })(),
        lr = (() => {
          class n {
            constructor(e) {
              this._animationMode = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Hn, 8));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-card"]],
              hostAttrs: [1, "mat-card", "mat-focus-indicator"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  Ye(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  );
              },
              exportAs: ["matCard"],
              ngContentSelectors: EW,
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && (Nt(xW), De(0), De(1, 1));
              },
              styles: [
                ".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card._mat-animation-noopable{transition:none !important;animation:none !important}.mat-card>.mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card>.mat-divider-horizontal{left:auto;right:0}.mat-card>.mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card>.mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px;display:block;overflow:hidden}.mat-card-image img{width:100%}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        AW = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-card-header"]],
              hostAttrs: [1, "mat-card-header"],
              ngContentSelectors: TW,
              decls: 4,
              vars: 0,
              consts: [[1, "mat-card-header-text"]],
              template: function (e, i) {
                1 & e &&
                  (Nt(SW), De(0), b(1, "div", 0), De(2, 1), y(), De(3, 2));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        kW = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [Me, Me] })),
            n
          );
        })();
      function zr() {}
      const IW = (function () {
        let n = 0;
        return function () {
          return n++;
        };
      })();
      function Fe(n) {
        return null === n || typeof n > "u";
      }
      function it(n) {
        if (Array.isArray && Array.isArray(n)) return !0;
        const t = Object.prototype.toString.call(n);
        return "[object" === t.slice(0, 7) && "Array]" === t.slice(-6);
      }
      function Te(n) {
        return (
          null !== n && "[object Object]" === Object.prototype.toString.call(n)
        );
      }
      const Mt = (n) =>
        ("number" == typeof n || n instanceof Number) && isFinite(+n);
      function ci(n, t) {
        return Mt(n) ? n : t;
      }
      function ve(n, t) {
        return typeof n > "u" ? t : n;
      }
      const sk = (n, t) =>
        "string" == typeof n && n.endsWith("%")
          ? (parseFloat(n) / 100) * t
          : +n;
      function rt(n, t, e) {
        if (n && "function" == typeof n.call) return n.apply(e, t);
      }
      function qe(n, t, e, i) {
        let r, s, o;
        if (it(n))
          if (((s = n.length), i))
            for (r = s - 1; r >= 0; r--) t.call(e, n[r], r);
          else for (r = 0; r < s; r++) t.call(e, n[r], r);
        else if (Te(n))
          for (o = Object.keys(n), s = o.length, r = 0; r < s; r++)
            t.call(e, n[o[r]], o[r]);
      }
      function qh(n, t) {
        let e, i, r, s;
        if (!n || !t || n.length !== t.length) return !1;
        for (e = 0, i = n.length; e < i; ++e)
          if (
            ((r = n[e]),
            (s = t[e]),
            r.datasetIndex !== s.datasetIndex || r.index !== s.index)
          )
            return !1;
        return !0;
      }
      function Wh(n) {
        if (it(n)) return n.map(Wh);
        if (Te(n)) {
          const t = Object.create(null),
            e = Object.keys(n),
            i = e.length;
          let r = 0;
          for (; r < i; ++r) t[e[r]] = Wh(n[e[r]]);
          return t;
        }
        return n;
      }
      function ok(n) {
        return -1 === ["__proto__", "prototype", "constructor"].indexOf(n);
      }
      function RW(n, t, e, i) {
        if (!ok(n)) return;
        const r = t[n],
          s = e[n];
        Te(r) && Te(s) ? wc(r, s, i) : (t[n] = Wh(s));
      }
      function wc(n, t, e) {
        const i = it(t) ? t : [t],
          r = i.length;
        if (!Te(n)) return n;
        const s = (e = e || {}).merger || RW;
        for (let o = 0; o < r; ++o) {
          if (!Te((t = i[o]))) continue;
          const a = Object.keys(t);
          for (let l = 0, c = a.length; l < c; ++l) s(a[l], n, t, e);
        }
        return n;
      }
      function Mc(n, t) {
        return wc(n, t, { merger: PW });
      }
      function PW(n, t, e) {
        if (!ok(n)) return;
        const i = t[n],
          r = e[n];
        Te(i) && Te(r)
          ? Mc(i, r)
          : Object.prototype.hasOwnProperty.call(t, n) || (t[n] = Wh(r));
      }
      const ak = { "": (n) => n, x: (n) => n.x, y: (n) => n.y };
      function vs(n, t) {
        return (
          ak[t] ||
          (ak[t] = (function FW(n) {
            const t = (function NW(n) {
              const t = n.split("."),
                e = [];
              let i = "";
              for (const r of t)
                (i += r),
                  i.endsWith("\\")
                    ? (i = i.slice(0, -1) + ".")
                    : (e.push(i), (i = ""));
              return e;
            })(n);
            return (e) => {
              for (const i of t) {
                if ("" === i) break;
                e = e && e[i];
              }
              return e;
            };
          })(t))
        )(n);
      }
      function Gy(n) {
        return n.charAt(0).toUpperCase() + n.slice(1);
      }
      const ui = (n) => typeof n < "u",
        bs = (n) => "function" == typeof n,
        lk = (n, t) => {
          if (n.size !== t.size) return !1;
          for (const e of n) if (!t.has(e)) return !1;
          return !0;
        },
        ut = Math.PI,
        Xe = 2 * ut,
        BW = Xe + ut,
        Gh = Number.POSITIVE_INFINITY,
        VW = ut / 180,
        yt = ut / 2,
        Dc = ut / 4,
        ck = (2 * ut) / 3,
        di = Math.log10,
        cr = Math.sign;
      function uk(n) {
        const t = Math.round(n);
        n = xc(n, t, n / 1e3) ? t : n;
        const e = Math.pow(10, Math.floor(di(n))),
          i = n / e;
        return (i <= 1 ? 1 : i <= 2 ? 2 : i <= 5 ? 5 : 10) * e;
      }
      function Ra(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
      }
      function xc(n, t, e) {
        return Math.abs(n - t) < e;
      }
      function dk(n, t, e) {
        let i, r, s;
        for (i = 0, r = n.length; i < r; i++)
          (s = n[i][e]),
            isNaN(s) ||
              ((t.min = Math.min(t.min, s)), (t.max = Math.max(t.max, s)));
      }
      function ki(n) {
        return n * (ut / 180);
      }
      function Yy(n) {
        return n * (180 / ut);
      }
      function hk(n) {
        if (!Mt(n)) return;
        let t = 1,
          e = 0;
        for (; Math.round(n * t) / t !== n; ) (t *= 10), e++;
        return e;
      }
      function fk(n, t) {
        const e = t.x - n.x,
          i = t.y - n.y,
          r = Math.sqrt(e * e + i * i);
        let s = Math.atan2(i, e);
        return s < -0.5 * ut && (s += Xe), { angle: s, distance: r };
      }
      function Ky(n, t) {
        return Math.sqrt(Math.pow(t.x - n.x, 2) + Math.pow(t.y - n.y, 2));
      }
      function zW(n, t) {
        return ((n - t + BW) % Xe) - ut;
      }
      function Yn(n) {
        return ((n % Xe) + Xe) % Xe;
      }
      function Ec(n, t, e, i) {
        const r = Yn(n),
          s = Yn(t),
          o = Yn(e),
          a = Yn(s - r),
          l = Yn(o - r),
          c = Yn(r - s),
          u = Yn(r - o);
        return r === s || r === o || (i && s === o) || (a > l && c < u);
      }
      function Wt(n, t, e) {
        return Math.max(t, Math.min(e, n));
      }
      function Ur(n, t, e, i = 1e-6) {
        return n >= Math.min(t, e) - i && n <= Math.max(t, e) + i;
      }
      function Xy(n, t, e) {
        e = e || ((o) => n[o] < t);
        let s,
          i = n.length - 1,
          r = 0;
        for (; i - r > 1; ) (s = (r + i) >> 1), e(s) ? (r = s) : (i = s);
        return { lo: r, hi: i };
      }
      const $r = (n, t, e, i) =>
          Xy(n, e, i ? (r) => n[r][t] <= e : (r) => n[r][t] < e),
        $W = (n, t, e) => Xy(n, e, (i) => n[i][t] >= e),
        pk = ["push", "pop", "shift", "splice", "unshift"];
      function mk(n, t) {
        const e = n._chartjs;
        if (!e) return;
        const i = e.listeners,
          r = i.indexOf(t);
        -1 !== r && i.splice(r, 1),
          !(i.length > 0) &&
            (pk.forEach((s) => {
              delete n[s];
            }),
            delete n._chartjs);
      }
      function gk(n) {
        const t = new Set();
        let e, i;
        for (e = 0, i = n.length; e < i; ++e) t.add(n[e]);
        return t.size === i ? n : Array.from(t);
      }
      const _k =
        typeof window > "u"
          ? function (n) {
              return n();
            }
          : window.requestAnimationFrame;
      function yk(n, t, e) {
        const i = e || ((o) => Array.prototype.slice.call(o));
        let r = !1,
          s = [];
        return function (...o) {
          (s = i(o)),
            r ||
              ((r = !0),
              _k.call(window, () => {
                (r = !1), n.apply(t, s);
              }));
        };
      }
      const Zy = (n) =>
          "start" === n ? "left" : "end" === n ? "right" : "center",
        nn = (n, t, e) => ("start" === n ? t : "end" === n ? e : (t + e) / 2);
      function vk(n, t, e) {
        const i = t.length;
        let r = 0,
          s = i;
        if (n._sorted) {
          const { iScale: o, _parsed: a } = n,
            l = o.axis,
            {
              min: c,
              max: u,
              minDefined: d,
              maxDefined: h,
            } = o.getUserBounds();
          d &&
            (r = Wt(
              Math.min(
                $r(a, o.axis, c).lo,
                e ? i : $r(t, l, o.getPixelForValue(c)).lo
              ),
              0,
              i - 1
            )),
            (s = h
              ? Wt(
                  Math.max(
                    $r(a, o.axis, u, !0).hi + 1,
                    e ? 0 : $r(t, l, o.getPixelForValue(u), !0).hi + 1
                  ),
                  r,
                  i
                ) - r
              : i - r);
        }
        return { start: r, count: s };
      }
      function bk(n) {
        const { xScale: t, yScale: e, _scaleRanges: i } = n,
          r = { xmin: t.min, xmax: t.max, ymin: e.min, ymax: e.max };
        if (!i) return (n._scaleRanges = r), !0;
        const s =
          i.xmin !== t.min ||
          i.xmax !== t.max ||
          i.ymin !== e.min ||
          i.ymax !== e.max;
        return Object.assign(i, r), s;
      }
      const Yh = (n) => 0 === n || 1 === n,
        Ck = (n, t, e) =>
          -Math.pow(2, 10 * (n -= 1)) * Math.sin(((n - t) * Xe) / e),
        wk = (n, t, e) =>
          Math.pow(2, -10 * n) * Math.sin(((n - t) * Xe) / e) + 1,
        Sc = {
          linear: (n) => n,
          easeInQuad: (n) => n * n,
          easeOutQuad: (n) => -n * (n - 2),
          easeInOutQuad: (n) =>
            (n /= 0.5) < 1 ? 0.5 * n * n : -0.5 * (--n * (n - 2) - 1),
          easeInCubic: (n) => n * n * n,
          easeOutCubic: (n) => (n -= 1) * n * n + 1,
          easeInOutCubic: (n) =>
            (n /= 0.5) < 1 ? 0.5 * n * n * n : 0.5 * ((n -= 2) * n * n + 2),
          easeInQuart: (n) => n * n * n * n,
          easeOutQuart: (n) => -((n -= 1) * n * n * n - 1),
          easeInOutQuart: (n) =>
            (n /= 0.5) < 1
              ? 0.5 * n * n * n * n
              : -0.5 * ((n -= 2) * n * n * n - 2),
          easeInQuint: (n) => n * n * n * n * n,
          easeOutQuint: (n) => (n -= 1) * n * n * n * n + 1,
          easeInOutQuint: (n) =>
            (n /= 0.5) < 1
              ? 0.5 * n * n * n * n * n
              : 0.5 * ((n -= 2) * n * n * n * n + 2),
          easeInSine: (n) => 1 - Math.cos(n * yt),
          easeOutSine: (n) => Math.sin(n * yt),
          easeInOutSine: (n) => -0.5 * (Math.cos(ut * n) - 1),
          easeInExpo: (n) => (0 === n ? 0 : Math.pow(2, 10 * (n - 1))),
          easeOutExpo: (n) => (1 === n ? 1 : 1 - Math.pow(2, -10 * n)),
          easeInOutExpo: (n) =>
            Yh(n)
              ? n
              : n < 0.5
              ? 0.5 * Math.pow(2, 10 * (2 * n - 1))
              : 0.5 * (2 - Math.pow(2, -10 * (2 * n - 1))),
          easeInCirc: (n) => (n >= 1 ? n : -(Math.sqrt(1 - n * n) - 1)),
          easeOutCirc: (n) => Math.sqrt(1 - (n -= 1) * n),
          easeInOutCirc: (n) =>
            (n /= 0.5) < 1
              ? -0.5 * (Math.sqrt(1 - n * n) - 1)
              : 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1),
          easeInElastic: (n) => (Yh(n) ? n : Ck(n, 0.075, 0.3)),
          easeOutElastic: (n) => (Yh(n) ? n : wk(n, 0.075, 0.3)),
          easeInOutElastic: (n) =>
            Yh(n)
              ? n
              : n < 0.5
              ? 0.5 * Ck(2 * n, 0.1125, 0.45)
              : 0.5 + 0.5 * wk(2 * n - 1, 0.1125, 0.45),
          easeInBack: (n) => n * n * (2.70158 * n - 1.70158),
          easeOutBack: (n) => (n -= 1) * n * (2.70158 * n + 1.70158) + 1,
          easeInOutBack(n) {
            let t = 1.70158;
            return (n /= 0.5) < 1
              ? n * n * ((1 + (t *= 1.525)) * n - t) * 0.5
              : 0.5 * ((n -= 2) * n * ((1 + (t *= 1.525)) * n + t) + 2);
          },
          easeInBounce: (n) => 1 - Sc.easeOutBounce(1 - n),
          easeOutBounce: (n) =>
            n < 1 / 2.75
              ? 7.5625 * n * n
              : n < 2 / 2.75
              ? 7.5625 * (n -= 1.5 / 2.75) * n + 0.75
              : n < 2.5 / 2.75
              ? 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375
              : 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375,
          easeInOutBounce: (n) =>
            n < 0.5
              ? 0.5 * Sc.easeInBounce(2 * n)
              : 0.5 * Sc.easeOutBounce(2 * n - 1) + 0.5,
        };
      function Tc(n) {
        return (n + 0.5) | 0;
      }
      const Cs = (n, t, e) => Math.max(Math.min(n, e), t);
      function Ac(n) {
        return Cs(Tc(2.55 * n), 0, 255);
      }
      function ws(n) {
        return Cs(Tc(255 * n), 0, 255);
      }
      function qr(n) {
        return Cs(Tc(n / 2.55) / 100, 0, 1);
      }
      function Mk(n) {
        return Cs(Tc(100 * n), 0, 100);
      }
      const hi = {
          0: 0,
          1: 1,
          2: 2,
          3: 3,
          4: 4,
          5: 5,
          6: 6,
          7: 7,
          8: 8,
          9: 9,
          A: 10,
          B: 11,
          C: 12,
          D: 13,
          E: 14,
          F: 15,
          a: 10,
          b: 11,
          c: 12,
          d: 13,
          e: 14,
          f: 15,
        },
        Qy = [..."0123456789ABCDEF"],
        KW = (n) => Qy[15 & n],
        XW = (n) => Qy[(240 & n) >> 4] + Qy[15 & n],
        Kh = (n) => (240 & n) >> 4 == (15 & n);
      const tG =
        /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
      function Dk(n, t, e) {
        const i = t * Math.min(e, 1 - e),
          r = (s, o = (s + n / 30) % 12) =>
            e - i * Math.max(Math.min(o - 3, 9 - o, 1), -1);
        return [r(0), r(8), r(4)];
      }
      function nG(n, t, e) {
        const i = (r, s = (r + n / 60) % 6) =>
          e - e * t * Math.max(Math.min(s, 4 - s, 1), 0);
        return [i(5), i(3), i(1)];
      }
      function iG(n, t, e) {
        const i = Dk(n, 1, 0.5);
        let r;
        for (
          t + e > 1 && ((r = 1 / (t + e)), (t *= r), (e *= r)), r = 0;
          r < 3;
          r++
        )
          (i[r] *= 1 - t - e), (i[r] += t);
        return i;
      }
      function Jy(n) {
        const e = n.r / 255,
          i = n.g / 255,
          r = n.b / 255,
          s = Math.max(e, i, r),
          o = Math.min(e, i, r),
          a = (s + o) / 2;
        let l, c, u;
        return (
          s !== o &&
            ((u = s - o),
            (c = a > 0.5 ? u / (2 - s - o) : u / (s + o)),
            (l = (function rG(n, t, e, i, r) {
              return n === r
                ? (t - e) / i + (t < e ? 6 : 0)
                : t === r
                ? (e - n) / i + 2
                : (n - t) / i + 4;
            })(e, i, r, u, s)),
            (l = 60 * l + 0.5)),
          [0 | l, c || 0, a]
        );
      }
      function ev(n, t, e, i) {
        return (Array.isArray(t) ? n(t[0], t[1], t[2]) : n(t, e, i)).map(ws);
      }
      function tv(n, t, e) {
        return ev(Dk, n, t, e);
      }
      function xk(n) {
        return ((n % 360) + 360) % 360;
      }
      const Ek = {
          x: "dark",
          Z: "light",
          Y: "re",
          X: "blu",
          W: "gr",
          V: "medium",
          U: "slate",
          A: "ee",
          T: "ol",
          S: "or",
          B: "ra",
          C: "lateg",
          D: "ights",
          R: "in",
          Q: "turquois",
          E: "hi",
          P: "ro",
          O: "al",
          N: "le",
          M: "de",
          L: "yello",
          F: "en",
          K: "ch",
          G: "arks",
          H: "ea",
          I: "ightg",
          J: "wh",
        },
        Sk = {
          OiceXe: "f0f8ff",
          antiquewEte: "faebd7",
          aqua: "ffff",
          aquamarRe: "7fffd4",
          azuY: "f0ffff",
          beige: "f5f5dc",
          bisque: "ffe4c4",
          black: "0",
          blanKedOmond: "ffebcd",
          Xe: "ff",
          XeviTet: "8a2be2",
          bPwn: "a52a2a",
          burlywood: "deb887",
          caMtXe: "5f9ea0",
          KartYuse: "7fff00",
          KocTate: "d2691e",
          cSO: "ff7f50",
          cSnflowerXe: "6495ed",
          cSnsilk: "fff8dc",
          crimson: "dc143c",
          cyan: "ffff",
          xXe: "8b",
          xcyan: "8b8b",
          xgTMnPd: "b8860b",
          xWay: "a9a9a9",
          xgYF: "6400",
          xgYy: "a9a9a9",
          xkhaki: "bdb76b",
          xmagFta: "8b008b",
          xTivegYF: "556b2f",
          xSange: "ff8c00",
          xScEd: "9932cc",
          xYd: "8b0000",
          xsOmon: "e9967a",
          xsHgYF: "8fbc8f",
          xUXe: "483d8b",
          xUWay: "2f4f4f",
          xUgYy: "2f4f4f",
          xQe: "ced1",
          xviTet: "9400d3",
          dAppRk: "ff1493",
          dApskyXe: "bfff",
          dimWay: "696969",
          dimgYy: "696969",
          dodgerXe: "1e90ff",
          fiYbrick: "b22222",
          flSOwEte: "fffaf0",
          foYstWAn: "228b22",
          fuKsia: "ff00ff",
          gaRsbSo: "dcdcdc",
          ghostwEte: "f8f8ff",
          gTd: "ffd700",
          gTMnPd: "daa520",
          Way: "808080",
          gYF: "8000",
          gYFLw: "adff2f",
          gYy: "808080",
          honeyMw: "f0fff0",
          hotpRk: "ff69b4",
          RdianYd: "cd5c5c",
          Rdigo: "4b0082",
          ivSy: "fffff0",
          khaki: "f0e68c",
          lavFMr: "e6e6fa",
          lavFMrXsh: "fff0f5",
          lawngYF: "7cfc00",
          NmoncEffon: "fffacd",
          ZXe: "add8e6",
          ZcSO: "f08080",
          Zcyan: "e0ffff",
          ZgTMnPdLw: "fafad2",
          ZWay: "d3d3d3",
          ZgYF: "90ee90",
          ZgYy: "d3d3d3",
          ZpRk: "ffb6c1",
          ZsOmon: "ffa07a",
          ZsHgYF: "20b2aa",
          ZskyXe: "87cefa",
          ZUWay: "778899",
          ZUgYy: "778899",
          ZstAlXe: "b0c4de",
          ZLw: "ffffe0",
          lime: "ff00",
          limegYF: "32cd32",
          lRF: "faf0e6",
          magFta: "ff00ff",
          maPon: "800000",
          VaquamarRe: "66cdaa",
          VXe: "cd",
          VScEd: "ba55d3",
          VpurpN: "9370db",
          VsHgYF: "3cb371",
          VUXe: "7b68ee",
          VsprRggYF: "fa9a",
          VQe: "48d1cc",
          VviTetYd: "c71585",
          midnightXe: "191970",
          mRtcYam: "f5fffa",
          mistyPse: "ffe4e1",
          moccasR: "ffe4b5",
          navajowEte: "ffdead",
          navy: "80",
          Tdlace: "fdf5e6",
          Tive: "808000",
          TivedBb: "6b8e23",
          Sange: "ffa500",
          SangeYd: "ff4500",
          ScEd: "da70d6",
          pOegTMnPd: "eee8aa",
          pOegYF: "98fb98",
          pOeQe: "afeeee",
          pOeviTetYd: "db7093",
          papayawEp: "ffefd5",
          pHKpuff: "ffdab9",
          peru: "cd853f",
          pRk: "ffc0cb",
          plum: "dda0dd",
          powMrXe: "b0e0e6",
          purpN: "800080",
          YbeccapurpN: "663399",
          Yd: "ff0000",
          Psybrown: "bc8f8f",
          PyOXe: "4169e1",
          saddNbPwn: "8b4513",
          sOmon: "fa8072",
          sandybPwn: "f4a460",
          sHgYF: "2e8b57",
          sHshell: "fff5ee",
          siFna: "a0522d",
          silver: "c0c0c0",
          skyXe: "87ceeb",
          UXe: "6a5acd",
          UWay: "708090",
          UgYy: "708090",
          snow: "fffafa",
          sprRggYF: "ff7f",
          stAlXe: "4682b4",
          tan: "d2b48c",
          teO: "8080",
          tEstN: "d8bfd8",
          tomato: "ff6347",
          Qe: "40e0d0",
          viTet: "ee82ee",
          JHt: "f5deb3",
          wEte: "ffffff",
          wEtesmoke: "f5f5f5",
          Lw: "ffff00",
          LwgYF: "9acd32",
        };
      let Xh;
      const hG =
          /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/,
        nv = (n) =>
          n <= 0.0031308 ? 12.92 * n : 1.055 * Math.pow(n, 1 / 2.4) - 0.055,
        Pa = (n) =>
          n <= 0.04045 ? n / 12.92 : Math.pow((n + 0.055) / 1.055, 2.4);
      function Zh(n, t, e) {
        if (n) {
          let i = Jy(n);
          (i[t] = Math.max(0, Math.min(i[t] + i[t] * e, 0 === t ? 360 : 1))),
            (i = tv(i)),
            (n.r = i[0]),
            (n.g = i[1]),
            (n.b = i[2]);
        }
      }
      function Tk(n, t) {
        return n && Object.assign(t || {}, n);
      }
      function Ak(n) {
        var t = { r: 0, g: 0, b: 0, a: 255 };
        return (
          Array.isArray(n)
            ? n.length >= 3 &&
              ((t = { r: n[0], g: n[1], b: n[2], a: 255 }),
              n.length > 3 && (t.a = ws(n[3])))
            : ((t = Tk(n, { r: 0, g: 0, b: 0, a: 1 })).a = ws(t.a)),
          t
        );
      }
      function gG(n) {
        return "r" === n.charAt(0)
          ? (function fG(n) {
              const t = hG.exec(n);
              let i,
                r,
                s,
                e = 255;
              if (t) {
                if (t[7] !== i) {
                  const o = +t[7];
                  e = t[8] ? Ac(o) : Cs(255 * o, 0, 255);
                }
                return (
                  (i = +t[1]),
                  (r = +t[3]),
                  (s = +t[5]),
                  (i = 255 & (t[2] ? Ac(i) : Cs(i, 0, 255))),
                  (r = 255 & (t[4] ? Ac(r) : Cs(r, 0, 255))),
                  (s = 255 & (t[6] ? Ac(s) : Cs(s, 0, 255))),
                  { r: i, g: r, b: s, a: e }
                );
              }
            })(n)
          : (function aG(n) {
              const t = tG.exec(n);
              let i,
                e = 255;
              if (!t) return;
              t[5] !== i && (e = t[6] ? Ac(+t[5]) : ws(+t[5]));
              const r = xk(+t[2]),
                s = +t[3] / 100,
                o = +t[4] / 100;
              return (
                (i =
                  "hwb" === t[1]
                    ? (function sG(n, t, e) {
                        return ev(iG, n, t, e);
                      })(r, s, o)
                    : "hsv" === t[1]
                    ? (function oG(n, t, e) {
                        return ev(nG, n, t, e);
                      })(r, s, o)
                    : tv(r, s, o)),
                { r: i[0], g: i[1], b: i[2], a: e }
              );
            })(n);
      }
      class Qh {
        constructor(t) {
          if (t instanceof Qh) return t;
          const e = typeof t;
          let i;
          "object" === e
            ? (i = Ak(t))
            : "string" === e &&
              (i =
                (function QW(n) {
                  var e,
                    t = n.length;
                  return (
                    "#" === n[0] &&
                      (4 === t || 5 === t
                        ? (e = {
                            r: 255 & (17 * hi[n[1]]),
                            g: 255 & (17 * hi[n[2]]),
                            b: 255 & (17 * hi[n[3]]),
                            a: 5 === t ? 17 * hi[n[4]] : 255,
                          })
                        : (7 === t || 9 === t) &&
                          (e = {
                            r: (hi[n[1]] << 4) | hi[n[2]],
                            g: (hi[n[3]] << 4) | hi[n[4]],
                            b: (hi[n[5]] << 4) | hi[n[6]],
                            a: 9 === t ? (hi[n[7]] << 4) | hi[n[8]] : 255,
                          })),
                    e
                  );
                })(t) ||
                (function dG(n) {
                  Xh ||
                    ((Xh = (function uG() {
                      const n = {},
                        t = Object.keys(Sk),
                        e = Object.keys(Ek);
                      let i, r, s, o, a;
                      for (i = 0; i < t.length; i++) {
                        for (o = a = t[i], r = 0; r < e.length; r++)
                          (s = e[r]), (a = a.replace(s, Ek[s]));
                        (s = parseInt(Sk[o], 16)),
                          (n[a] = [(s >> 16) & 255, (s >> 8) & 255, 255 & s]);
                      }
                      return n;
                    })()),
                    (Xh.transparent = [0, 0, 0, 0]));
                  const t = Xh[n.toLowerCase()];
                  return (
                    t && {
                      r: t[0],
                      g: t[1],
                      b: t[2],
                      a: 4 === t.length ? t[3] : 255,
                    }
                  );
                })(t) ||
                gG(t)),
            (this._rgb = i),
            (this._valid = !!i);
        }
        get valid() {
          return this._valid;
        }
        get rgb() {
          var t = Tk(this._rgb);
          return t && (t.a = qr(t.a)), t;
        }
        set rgb(t) {
          this._rgb = Ak(t);
        }
        rgbString() {
          return this._valid
            ? (function pG(n) {
                return (
                  n &&
                  (n.a < 255
                    ? `rgba(${n.r}, ${n.g}, ${n.b}, ${qr(n.a)})`
                    : `rgb(${n.r}, ${n.g}, ${n.b})`)
                );
              })(this._rgb)
            : void 0;
        }
        hexString() {
          return this._valid
            ? (function eG(n) {
                var t = ((n) => Kh(n.r) && Kh(n.g) && Kh(n.b) && Kh(n.a))(n)
                  ? KW
                  : XW;
                return n
                  ? "#" +
                      t(n.r) +
                      t(n.g) +
                      t(n.b) +
                      ((n, t) => (n < 255 ? t(n) : ""))(n.a, t)
                  : void 0;
              })(this._rgb)
            : void 0;
        }
        hslString() {
          return this._valid
            ? (function cG(n) {
                if (!n) return;
                const t = Jy(n),
                  e = t[0],
                  i = Mk(t[1]),
                  r = Mk(t[2]);
                return n.a < 255
                  ? `hsla(${e}, ${i}%, ${r}%, ${qr(n.a)})`
                  : `hsl(${e}, ${i}%, ${r}%)`;
              })(this._rgb)
            : void 0;
        }
        mix(t, e) {
          if (t) {
            const i = this.rgb,
              r = t.rgb;
            let s;
            const o = e === s ? 0.5 : e,
              a = 2 * o - 1,
              l = i.a - r.a,
              c = ((a * l == -1 ? a : (a + l) / (1 + a * l)) + 1) / 2;
            (s = 1 - c),
              (i.r = 255 & (c * i.r + s * r.r + 0.5)),
              (i.g = 255 & (c * i.g + s * r.g + 0.5)),
              (i.b = 255 & (c * i.b + s * r.b + 0.5)),
              (i.a = o * i.a + (1 - o) * r.a),
              (this.rgb = i);
          }
          return this;
        }
        interpolate(t, e) {
          return (
            t &&
              (this._rgb = (function mG(n, t, e) {
                const i = Pa(qr(n.r)),
                  r = Pa(qr(n.g)),
                  s = Pa(qr(n.b));
                return {
                  r: ws(nv(i + e * (Pa(qr(t.r)) - i))),
                  g: ws(nv(r + e * (Pa(qr(t.g)) - r))),
                  b: ws(nv(s + e * (Pa(qr(t.b)) - s))),
                  a: n.a + e * (t.a - n.a),
                };
              })(this._rgb, t._rgb, e)),
            this
          );
        }
        clone() {
          return new Qh(this.rgb);
        }
        alpha(t) {
          return (this._rgb.a = ws(t)), this;
        }
        clearer(t) {
          return (this._rgb.a *= 1 - t), this;
        }
        greyscale() {
          const t = this._rgb,
            e = Tc(0.3 * t.r + 0.59 * t.g + 0.11 * t.b);
          return (t.r = t.g = t.b = e), this;
        }
        opaquer(t) {
          return (this._rgb.a *= 1 + t), this;
        }
        negate() {
          const t = this._rgb;
          return (t.r = 255 - t.r), (t.g = 255 - t.g), (t.b = 255 - t.b), this;
        }
        lighten(t) {
          return Zh(this._rgb, 2, t), this;
        }
        darken(t) {
          return Zh(this._rgb, 2, -t), this;
        }
        saturate(t) {
          return Zh(this._rgb, 1, t), this;
        }
        desaturate(t) {
          return Zh(this._rgb, 1, -t), this;
        }
        rotate(t) {
          return (
            (function lG(n, t) {
              var e = Jy(n);
              (e[0] = xk(e[0] + t)),
                (e = tv(e)),
                (n.r = e[0]),
                (n.g = e[1]),
                (n.b = e[2]);
            })(this._rgb, t),
            this
          );
        }
      }
      function kk(n) {
        return new Qh(n);
      }
      function Ik(n) {
        if (n && "object" == typeof n) {
          const t = n.toString();
          return (
            "[object CanvasPattern]" === t || "[object CanvasGradient]" === t
          );
        }
        return !1;
      }
      function Ok(n) {
        return Ik(n) ? n : kk(n);
      }
      function iv(n) {
        return Ik(n) ? n : kk(n).saturate(0.5).darken(0.1).hexString();
      }
      const ho = Object.create(null),
        rv = Object.create(null);
      function kc(n, t) {
        if (!t) return n;
        const e = t.split(".");
        for (let i = 0, r = e.length; i < r; ++i) {
          const s = e[i];
          n = n[s] || (n[s] = Object.create(null));
        }
        return n;
      }
      function sv(n, t, e) {
        return "string" == typeof t ? wc(kc(n, t), e) : wc(kc(n, ""), t);
      }
      var Ie = new (class _G {
        constructor(t) {
          (this.animation = void 0),
            (this.backgroundColor = "rgba(0,0,0,0.1)"),
            (this.borderColor = "rgba(0,0,0,0.1)"),
            (this.color = "#666"),
            (this.datasets = {}),
            (this.devicePixelRatio = (e) =>
              e.chart.platform.getDevicePixelRatio()),
            (this.elements = {}),
            (this.events = [
              "mousemove",
              "mouseout",
              "click",
              "touchstart",
              "touchmove",
            ]),
            (this.font = {
              family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
              size: 12,
              style: "normal",
              lineHeight: 1.2,
              weight: null,
            }),
            (this.hover = {}),
            (this.hoverBackgroundColor = (e, i) => iv(i.backgroundColor)),
            (this.hoverBorderColor = (e, i) => iv(i.borderColor)),
            (this.hoverColor = (e, i) => iv(i.color)),
            (this.indexAxis = "x"),
            (this.interaction = {
              mode: "nearest",
              intersect: !0,
              includeInvisible: !1,
            }),
            (this.maintainAspectRatio = !0),
            (this.onHover = null),
            (this.onClick = null),
            (this.parsing = !0),
            (this.plugins = {}),
            (this.responsive = !0),
            (this.scale = void 0),
            (this.scales = {}),
            (this.showLine = !0),
            (this.drawActiveElementsOnTop = !0),
            this.describe(t);
        }
        set(t, e) {
          return sv(this, t, e);
        }
        get(t) {
          return kc(this, t);
        }
        describe(t, e) {
          return sv(rv, t, e);
        }
        override(t, e) {
          return sv(ho, t, e);
        }
        route(t, e, i, r) {
          const s = kc(this, t),
            o = kc(this, i),
            a = "_" + e;
          Object.defineProperties(s, {
            [a]: { value: s[e], writable: !0 },
            [e]: {
              enumerable: !0,
              get() {
                const l = this[a],
                  c = o[r];
                return Te(l) ? Object.assign({}, c, l) : ve(l, c);
              },
              set(l) {
                this[a] = l;
              },
            },
          });
        }
      })({
        _scriptable: (n) => !n.startsWith("on"),
        _indexable: (n) => "events" !== n,
        hover: { _fallback: "interaction" },
        interaction: { _scriptable: !1, _indexable: !1 },
      });
      function Jh(n, t, e, i, r) {
        let s = t[r];
        return (
          s || ((s = t[r] = n.measureText(r).width), e.push(r)),
          s > i && (i = s),
          i
        );
      }
      function vG(n, t, e, i) {
        let r = ((i = i || {}).data = i.data || {}),
          s = (i.garbageCollect = i.garbageCollect || []);
        i.font !== t &&
          ((r = i.data = {}), (s = i.garbageCollect = []), (i.font = t)),
          n.save(),
          (n.font = t);
        let o = 0;
        const a = e.length;
        let l, c, u, d, h;
        for (l = 0; l < a; l++)
          if (((d = e[l]), null != d && !0 !== it(d))) o = Jh(n, r, s, o, d);
          else if (it(d))
            for (c = 0, u = d.length; c < u; c++)
              (h = d[c]), null != h && !it(h) && (o = Jh(n, r, s, o, h));
        n.restore();
        const f = s.length / 2;
        if (f > e.length) {
          for (l = 0; l < f; l++) delete r[s[l]];
          s.splice(0, f);
        }
        return o;
      }
      function fo(n, t, e) {
        const i = n.currentDevicePixelRatio,
          r = 0 !== e ? Math.max(e / 2, 0.5) : 0;
        return Math.round((t - r) * i) / i + r;
      }
      function Rk(n, t) {
        (t = t || n.getContext("2d")).save(),
          t.resetTransform(),
          t.clearRect(0, 0, n.width, n.height),
          t.restore();
      }
      function ov(n, t, e, i) {
        Pk(n, t, e, i, null);
      }
      function Pk(n, t, e, i, r) {
        let s, o, a, l, c, u;
        const d = t.pointStyle,
          h = t.rotation,
          f = t.radius;
        let p = (h || 0) * VW;
        if (
          d &&
          "object" == typeof d &&
          ((s = d.toString()),
          "[object HTMLImageElement]" === s ||
            "[object HTMLCanvasElement]" === s)
        )
          return (
            n.save(),
            n.translate(e, i),
            n.rotate(p),
            n.drawImage(d, -d.width / 2, -d.height / 2, d.width, d.height),
            void n.restore()
          );
        if (!(isNaN(f) || f <= 0)) {
          switch ((n.beginPath(), d)) {
            default:
              r ? n.ellipse(e, i, r / 2, f, 0, 0, Xe) : n.arc(e, i, f, 0, Xe),
                n.closePath();
              break;
            case "triangle":
              n.moveTo(e + Math.sin(p) * f, i - Math.cos(p) * f),
                (p += ck),
                n.lineTo(e + Math.sin(p) * f, i - Math.cos(p) * f),
                (p += ck),
                n.lineTo(e + Math.sin(p) * f, i - Math.cos(p) * f),
                n.closePath();
              break;
            case "rectRounded":
              (c = 0.516 * f),
                (l = f - c),
                (o = Math.cos(p + Dc) * l),
                (a = Math.sin(p + Dc) * l),
                n.arc(e - o, i - a, c, p - ut, p - yt),
                n.arc(e + a, i - o, c, p - yt, p),
                n.arc(e + o, i + a, c, p, p + yt),
                n.arc(e - a, i + o, c, p + yt, p + ut),
                n.closePath();
              break;
            case "rect":
              if (!h) {
                (l = Math.SQRT1_2 * f),
                  (u = r ? r / 2 : l),
                  n.rect(e - u, i - l, 2 * u, 2 * l);
                break;
              }
              p += Dc;
            case "rectRot":
              (o = Math.cos(p) * f),
                (a = Math.sin(p) * f),
                n.moveTo(e - o, i - a),
                n.lineTo(e + a, i - o),
                n.lineTo(e + o, i + a),
                n.lineTo(e - a, i + o),
                n.closePath();
              break;
            case "crossRot":
              p += Dc;
            case "cross":
              (o = Math.cos(p) * f),
                (a = Math.sin(p) * f),
                n.moveTo(e - o, i - a),
                n.lineTo(e + o, i + a),
                n.moveTo(e + a, i - o),
                n.lineTo(e - a, i + o);
              break;
            case "star":
              (o = Math.cos(p) * f),
                (a = Math.sin(p) * f),
                n.moveTo(e - o, i - a),
                n.lineTo(e + o, i + a),
                n.moveTo(e + a, i - o),
                n.lineTo(e - a, i + o),
                (p += Dc),
                (o = Math.cos(p) * f),
                (a = Math.sin(p) * f),
                n.moveTo(e - o, i - a),
                n.lineTo(e + o, i + a),
                n.moveTo(e + a, i - o),
                n.lineTo(e - a, i + o);
              break;
            case "line":
              (o = r ? r / 2 : Math.cos(p) * f),
                (a = Math.sin(p) * f),
                n.moveTo(e - o, i - a),
                n.lineTo(e + o, i + a);
              break;
            case "dash":
              n.moveTo(e, i),
                n.lineTo(e + Math.cos(p) * f, i + Math.sin(p) * f);
          }
          n.fill(), t.borderWidth > 0 && n.stroke();
        }
      }
      function Ic(n, t, e) {
        return (
          (e = e || 0.5),
          !t ||
            (n &&
              n.x > t.left - e &&
              n.x < t.right + e &&
              n.y > t.top - e &&
              n.y < t.bottom + e)
        );
      }
      function ef(n, t) {
        n.save(),
          n.beginPath(),
          n.rect(t.left, t.top, t.right - t.left, t.bottom - t.top),
          n.clip();
      }
      function tf(n) {
        n.restore();
      }
      function bG(n, t, e, i, r) {
        if (!t) return n.lineTo(e.x, e.y);
        if ("middle" === r) {
          const s = (t.x + e.x) / 2;
          n.lineTo(s, t.y), n.lineTo(s, e.y);
        } else ("after" === r) != !!i ? n.lineTo(t.x, e.y) : n.lineTo(e.x, t.y);
        n.lineTo(e.x, e.y);
      }
      function CG(n, t, e, i) {
        if (!t) return n.lineTo(e.x, e.y);
        n.bezierCurveTo(
          i ? t.cp1x : t.cp2x,
          i ? t.cp1y : t.cp2y,
          i ? e.cp2x : e.cp1x,
          i ? e.cp2y : e.cp1y,
          e.x,
          e.y
        );
      }
      function po(n, t, e, i, r, s = {}) {
        const o = it(t) ? t : [t],
          a = s.strokeWidth > 0 && "" !== s.strokeColor;
        let l, c;
        for (
          n.save(),
            n.font = r.string,
            (function wG(n, t) {
              t.translation && n.translate(t.translation[0], t.translation[1]),
                Fe(t.rotation) || n.rotate(t.rotation),
                t.color && (n.fillStyle = t.color),
                t.textAlign && (n.textAlign = t.textAlign),
                t.textBaseline && (n.textBaseline = t.textBaseline);
            })(n, s),
            l = 0;
          l < o.length;
          ++l
        )
          (c = o[l]),
            a &&
              (s.strokeColor && (n.strokeStyle = s.strokeColor),
              Fe(s.strokeWidth) || (n.lineWidth = s.strokeWidth),
              n.strokeText(c, e, i, s.maxWidth)),
            n.fillText(c, e, i, s.maxWidth),
            MG(n, e, i, c, s),
            (i += r.lineHeight);
        n.restore();
      }
      function MG(n, t, e, i, r) {
        if (r.strikethrough || r.underline) {
          const s = n.measureText(i),
            o = t - s.actualBoundingBoxLeft,
            a = t + s.actualBoundingBoxRight,
            l = e - s.actualBoundingBoxAscent,
            c = e + s.actualBoundingBoxDescent,
            u = r.strikethrough ? (l + c) / 2 : c;
          (n.strokeStyle = n.fillStyle),
            n.beginPath(),
            (n.lineWidth = r.decorationWidth || 2),
            n.moveTo(o, u),
            n.lineTo(a, u),
            n.stroke();
        }
      }
      function Oc(n, t) {
        const { x: e, y: i, w: r, h: s, radius: o } = t;
        n.arc(e + o.topLeft, i + o.topLeft, o.topLeft, -yt, ut, !0),
          n.lineTo(e, i + s - o.bottomLeft),
          n.arc(
            e + o.bottomLeft,
            i + s - o.bottomLeft,
            o.bottomLeft,
            ut,
            yt,
            !0
          ),
          n.lineTo(e + r - o.bottomRight, i + s),
          n.arc(
            e + r - o.bottomRight,
            i + s - o.bottomRight,
            o.bottomRight,
            yt,
            0,
            !0
          ),
          n.lineTo(e + r, i + o.topRight),
          n.arc(e + r - o.topRight, i + o.topRight, o.topRight, 0, -yt, !0),
          n.lineTo(e + o.topLeft, i);
      }
      const DG = new RegExp(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/),
        xG = new RegExp(
          /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/
        );
      function EG(n, t) {
        const e = ("" + n).match(DG);
        if (!e || "normal" === e[1]) return 1.2 * t;
        switch (((n = +e[2]), e[3])) {
          case "px":
            return n;
          case "%":
            n /= 100;
        }
        return t * n;
      }
      const SG = (n) => +n || 0;
      function av(n, t) {
        const e = {},
          i = Te(t),
          r = i ? Object.keys(t) : t,
          s = Te(n) ? (i ? (o) => ve(n[o], n[t[o]]) : (o) => n[o]) : () => n;
        for (const o of r) e[o] = SG(s(o));
        return e;
      }
      function Fk(n) {
        return av(n, { top: "y", right: "x", bottom: "y", left: "x" });
      }
      function mo(n) {
        return av(n, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
      }
      function rn(n) {
        const t = Fk(n);
        return (t.width = t.left + t.right), (t.height = t.top + t.bottom), t;
      }
      function Ht(n, t) {
        let e = ve((n = n || {}).size, (t = t || Ie.font).size);
        "string" == typeof e && (e = parseInt(e, 10));
        let i = ve(n.style, t.style);
        i &&
          !("" + i).match(xG) &&
          (console.warn('Invalid font style specified: "' + i + '"'), (i = ""));
        const r = {
          family: ve(n.family, t.family),
          lineHeight: EG(ve(n.lineHeight, t.lineHeight), e),
          size: e,
          style: i,
          weight: ve(n.weight, t.weight),
          string: "",
        };
        return (
          (r.string = (function yG(n) {
            return !n || Fe(n.size) || Fe(n.family)
              ? null
              : (n.style ? n.style + " " : "") +
                  (n.weight ? n.weight + " " : "") +
                  n.size +
                  "px " +
                  n.family;
          })(r)),
          r
        );
      }
      function Rc(n, t, e, i) {
        let s,
          o,
          a,
          r = !0;
        for (s = 0, o = n.length; s < o; ++s)
          if (
            ((a = n[s]),
            void 0 !== a &&
              (void 0 !== t && "function" == typeof a && ((a = a(t)), (r = !1)),
              void 0 !== e && it(a) && ((a = a[e % a.length]), (r = !1)),
              void 0 !== a))
          )
            return i && !r && (i.cacheable = !1), a;
      }
      function Ms(n, t) {
        return Object.assign(Object.create(n), t);
      }
      function lv(n, t = [""], e = n, i, r = () => n[0]) {
        ui(i) || (i = jk("_fallback", n));
        const s = {
          [Symbol.toStringTag]: "Object",
          _cacheable: !0,
          _scopes: n,
          _rootScopes: e,
          _fallback: i,
          _getTarget: r,
          override: (o) => lv([o, ...n], t, e, i),
        };
        return new Proxy(s, {
          deleteProperty: (o, a) => (
            delete o[a], delete o._keys, delete n[0][a], !0
          ),
          get: (o, a) =>
            Lk(o, a, () =>
              (function NG(n, t, e, i) {
                let r;
                for (const s of t)
                  if (((r = jk(AG(s, n), e)), ui(r)))
                    return cv(n, r) ? uv(e, i, n, r) : r;
              })(a, t, n, o)
            ),
          getOwnPropertyDescriptor: (o, a) =>
            Reflect.getOwnPropertyDescriptor(o._scopes[0], a),
          getPrototypeOf: () => Reflect.getPrototypeOf(n[0]),
          has: (o, a) => Hk(o).includes(a),
          ownKeys: (o) => Hk(o),
          set(o, a, l) {
            const c = o._storage || (o._storage = r());
            return (o[a] = c[a] = l), delete o._keys, !0;
          },
        });
      }
      function Fa(n, t, e, i) {
        const r = {
          _cacheable: !1,
          _proxy: n,
          _context: t,
          _subProxy: e,
          _stack: new Set(),
          _descriptors: Nk(n, i),
          setContext: (s) => Fa(n, s, e, i),
          override: (s) => Fa(n.override(s), t, e, i),
        };
        return new Proxy(r, {
          deleteProperty: (s, o) => (delete s[o], delete n[o], !0),
          get: (s, o, a) =>
            Lk(s, o, () =>
              (function kG(n, t, e) {
                const {
                  _proxy: i,
                  _context: r,
                  _subProxy: s,
                  _descriptors: o,
                } = n;
                let a = i[t];
                return (
                  bs(a) &&
                    o.isScriptable(t) &&
                    (a = (function IG(n, t, e, i) {
                      const {
                        _proxy: r,
                        _context: s,
                        _subProxy: o,
                        _stack: a,
                      } = e;
                      if (a.has(n))
                        throw new Error(
                          "Recursion detected: " +
                            Array.from(a).join("->") +
                            "->" +
                            n
                        );
                      return (
                        a.add(n),
                        (t = t(s, o || i)),
                        a.delete(n),
                        cv(n, t) && (t = uv(r._scopes, r, n, t)),
                        t
                      );
                    })(t, a, n, e)),
                  it(a) &&
                    a.length &&
                    (a = (function OG(n, t, e, i) {
                      const {
                        _proxy: r,
                        _context: s,
                        _subProxy: o,
                        _descriptors: a,
                      } = e;
                      if (ui(s.index) && i(n)) t = t[s.index % t.length];
                      else if (Te(t[0])) {
                        const l = t,
                          c = r._scopes.filter((u) => u !== l);
                        t = [];
                        for (const u of l) {
                          const d = uv(c, r, n, u);
                          t.push(Fa(d, s, o && o[n], a));
                        }
                      }
                      return t;
                    })(t, a, n, o.isIndexable)),
                  cv(t, a) && (a = Fa(a, r, s && s[t], o)),
                  a
                );
              })(s, o, a)
            ),
          getOwnPropertyDescriptor: (s, o) =>
            s._descriptors.allKeys
              ? Reflect.has(n, o)
                ? { enumerable: !0, configurable: !0 }
                : void 0
              : Reflect.getOwnPropertyDescriptor(n, o),
          getPrototypeOf: () => Reflect.getPrototypeOf(n),
          has: (s, o) => Reflect.has(n, o),
          ownKeys: () => Reflect.ownKeys(n),
          set: (s, o, a) => ((n[o] = a), delete s[o], !0),
        });
      }
      function Nk(n, t = { scriptable: !0, indexable: !0 }) {
        const {
          _scriptable: e = t.scriptable,
          _indexable: i = t.indexable,
          _allKeys: r = t.allKeys,
        } = n;
        return {
          allKeys: r,
          scriptable: e,
          indexable: i,
          isScriptable: bs(e) ? e : () => e,
          isIndexable: bs(i) ? i : () => i,
        };
      }
      const AG = (n, t) => (n ? n + Gy(t) : t),
        cv = (n, t) =>
          Te(t) &&
          "adapters" !== n &&
          (null === Object.getPrototypeOf(t) || t.constructor === Object);
      function Lk(n, t, e) {
        if (Object.prototype.hasOwnProperty.call(n, t)) return n[t];
        const i = e();
        return (n[t] = i), i;
      }
      function Bk(n, t, e) {
        return bs(n) ? n(t, e) : n;
      }
      const RG = (n, t) =>
        !0 === n ? t : "string" == typeof n ? vs(t, n) : void 0;
      function PG(n, t, e, i, r) {
        for (const s of t) {
          const o = RG(e, s);
          if (o) {
            n.add(o);
            const a = Bk(o._fallback, e, r);
            if (ui(a) && a !== e && a !== i) return a;
          } else if (!1 === o && ui(i) && e !== i) return null;
        }
        return !1;
      }
      function uv(n, t, e, i) {
        const r = t._rootScopes,
          s = Bk(t._fallback, e, i),
          o = [...n, ...r],
          a = new Set();
        a.add(i);
        let l = Vk(a, o, e, s || e, i);
        return (
          !(
            null === l ||
            (ui(s) && s !== e && ((l = Vk(a, o, s, l, i)), null === l))
          ) &&
          lv(Array.from(a), [""], r, s, () =>
            (function FG(n, t, e) {
              const i = n._getTarget();
              t in i || (i[t] = {});
              const r = i[t];
              return it(r) && Te(e) ? e : r;
            })(t, e, i)
          )
        );
      }
      function Vk(n, t, e, i, r) {
        for (; e; ) e = PG(n, t, e, i, r);
        return e;
      }
      function jk(n, t) {
        for (const e of t) {
          if (!e) continue;
          const i = e[n];
          if (ui(i)) return i;
        }
      }
      function Hk(n) {
        let t = n._keys;
        return (
          t ||
            (t = n._keys =
              (function LG(n) {
                const t = new Set();
                for (const e of n)
                  for (const i of Object.keys(e).filter(
                    (r) => !r.startsWith("_")
                  ))
                    t.add(i);
                return Array.from(t);
              })(n._scopes)),
          t
        );
      }
      function zk(n, t, e, i) {
        const { iScale: r } = n,
          { key: s = "r" } = this._parsing,
          o = new Array(i);
        let a, l, c, u;
        for (a = 0, l = i; a < l; ++a)
          (c = a + e), (u = t[c]), (o[a] = { r: r.parse(vs(u, s), c) });
        return o;
      }
      const BG = Number.EPSILON || 1e-14,
        Na = (n, t) => t < n.length && !n[t].skip && n[t],
        Uk = (n) => ("x" === n ? "y" : "x");
      function VG(n, t, e, i) {
        const r = n.skip ? t : n,
          s = t,
          o = e.skip ? t : e,
          a = Ky(s, r),
          l = Ky(o, s);
        let c = a / (a + l),
          u = l / (a + l);
        (c = isNaN(c) ? 0 : c), (u = isNaN(u) ? 0 : u);
        const d = i * c,
          h = i * u;
        return {
          previous: { x: s.x - d * (o.x - r.x), y: s.y - d * (o.y - r.y) },
          next: { x: s.x + h * (o.x - r.x), y: s.y + h * (o.y - r.y) },
        };
      }
      function nf(n, t, e) {
        return Math.max(Math.min(n, e), t);
      }
      function $G(n, t, e, i, r) {
        let s, o, a, l;
        if (
          (t.spanGaps && (n = n.filter((c) => !c.skip)),
          "monotone" === t.cubicInterpolationMode)
        )
          !(function zG(n, t = "x") {
            const e = Uk(t),
              i = n.length,
              r = Array(i).fill(0),
              s = Array(i);
            let o,
              a,
              l,
              c = Na(n, 0);
            for (o = 0; o < i; ++o)
              if (((a = l), (l = c), (c = Na(n, o + 1)), l)) {
                if (c) {
                  const u = c[t] - l[t];
                  r[o] = 0 !== u ? (c[e] - l[e]) / u : 0;
                }
                s[o] = a
                  ? c
                    ? cr(r[o - 1]) !== cr(r[o])
                      ? 0
                      : (r[o - 1] + r[o]) / 2
                    : r[o - 1]
                  : r[o];
              }
            (function jG(n, t, e) {
              const i = n.length;
              let r,
                s,
                o,
                a,
                l,
                c = Na(n, 0);
              for (let u = 0; u < i - 1; ++u)
                if (((l = c), (c = Na(n, u + 1)), l && c)) {
                  if (xc(t[u], 0, BG)) {
                    e[u] = e[u + 1] = 0;
                    continue;
                  }
                  (r = e[u] / t[u]),
                    (s = e[u + 1] / t[u]),
                    (a = Math.pow(r, 2) + Math.pow(s, 2)),
                    !(a <= 9) &&
                      ((o = 3 / Math.sqrt(a)),
                      (e[u] = r * o * t[u]),
                      (e[u + 1] = s * o * t[u]));
                }
            })(n, r, s),
              (function HG(n, t, e = "x") {
                const i = Uk(e),
                  r = n.length;
                let s,
                  o,
                  a,
                  l = Na(n, 0);
                for (let c = 0; c < r; ++c) {
                  if (((o = a), (a = l), (l = Na(n, c + 1)), !a)) continue;
                  const u = a[e],
                    d = a[i];
                  o &&
                    ((s = (u - o[e]) / 3),
                    (a[`cp1${e}`] = u - s),
                    (a[`cp1${i}`] = d - s * t[c])),
                    l &&
                      ((s = (l[e] - u) / 3),
                      (a[`cp2${e}`] = u + s),
                      (a[`cp2${i}`] = d + s * t[c]));
                }
              })(n, s, t);
          })(n, r);
        else {
          let c = i ? n[n.length - 1] : n[0];
          for (s = 0, o = n.length; s < o; ++s)
            (a = n[s]),
              (l = VG(
                c,
                a,
                n[Math.min(s + 1, o - (i ? 0 : 1)) % o],
                t.tension
              )),
              (a.cp1x = l.previous.x),
              (a.cp1y = l.previous.y),
              (a.cp2x = l.next.x),
              (a.cp2y = l.next.y),
              (c = a);
        }
        t.capBezierPoints &&
          (function UG(n, t) {
            let e,
              i,
              r,
              s,
              o,
              a = Ic(n[0], t);
            for (e = 0, i = n.length; e < i; ++e)
              (o = s),
                (s = a),
                (a = e < i - 1 && Ic(n[e + 1], t)),
                s &&
                  ((r = n[e]),
                  o &&
                    ((r.cp1x = nf(r.cp1x, t.left, t.right)),
                    (r.cp1y = nf(r.cp1y, t.top, t.bottom))),
                  a &&
                    ((r.cp2x = nf(r.cp2x, t.left, t.right)),
                    (r.cp2y = nf(r.cp2y, t.top, t.bottom))));
          })(n, e);
      }
      function $k() {
        return typeof window < "u" && typeof document < "u";
      }
      function dv(n) {
        let t = n.parentNode;
        return t && "[object ShadowRoot]" === t.toString() && (t = t.host), t;
      }
      function rf(n, t, e) {
        let i;
        return (
          "string" == typeof n
            ? ((i = parseInt(n, 10)),
              -1 !== n.indexOf("%") && (i = (i / 100) * t.parentNode[e]))
            : (i = n),
          i
        );
      }
      const sf = (n) => window.getComputedStyle(n, null),
        WG = ["top", "right", "bottom", "left"];
      function go(n, t, e) {
        const i = {};
        e = e ? "-" + e : "";
        for (let r = 0; r < 4; r++) {
          const s = WG[r];
          i[s] = parseFloat(n[t + "-" + s + e]) || 0;
        }
        return (i.width = i.left + i.right), (i.height = i.top + i.bottom), i;
      }
      function _o(n, t) {
        if ("native" in n) return n;
        const { canvas: e, currentDevicePixelRatio: i } = t,
          r = sf(e),
          s = "border-box" === r.boxSizing,
          o = go(r, "padding"),
          a = go(r, "border", "width"),
          {
            x: l,
            y: c,
            box: u,
          } = (function YG(n, t) {
            const e = n.touches,
              i = e && e.length ? e[0] : n,
              { offsetX: r, offsetY: s } = i;
            let a,
              l,
              o = !1;
            if (
              ((n, t, e) => (n > 0 || t > 0) && (!e || !e.shadowRoot))(
                r,
                s,
                n.target
              )
            )
              (a = r), (l = s);
            else {
              const c = t.getBoundingClientRect();
              (a = i.clientX - c.left), (l = i.clientY - c.top), (o = !0);
            }
            return { x: a, y: l, box: o };
          })(n, e),
          d = o.left + (u && a.left),
          h = o.top + (u && a.top);
        let { width: f, height: p } = t;
        return (
          s && ((f -= o.width + a.width), (p -= o.height + a.height)),
          {
            x: Math.round((((l - d) / f) * e.width) / i),
            y: Math.round((((c - h) / p) * e.height) / i),
          }
        );
      }
      const hv = (n) => Math.round(10 * n) / 10;
      function qk(n, t, e) {
        const i = t || 1,
          r = Math.floor(n.height * i),
          s = Math.floor(n.width * i);
        (n.height = r / i), (n.width = s / i);
        const o = n.canvas;
        return (
          o.style &&
            (e || (!o.style.height && !o.style.width)) &&
            ((o.style.height = `${n.height}px`),
            (o.style.width = `${n.width}px`)),
          (n.currentDevicePixelRatio !== i ||
            o.height !== r ||
            o.width !== s) &&
            ((n.currentDevicePixelRatio = i),
            (o.height = r),
            (o.width = s),
            n.ctx.setTransform(i, 0, 0, i, 0, 0),
            !0)
        );
      }
      const ZG = (function () {
        let n = !1;
        try {
          const t = {
            get passive() {
              return (n = !0), !1;
            },
          };
          window.addEventListener("test", null, t),
            window.removeEventListener("test", null, t);
        } catch {}
        return n;
      })();
      function Wk(n, t) {
        const e = (function qG(n, t) {
            return sf(n).getPropertyValue(t);
          })(n, t),
          i = e && e.match(/^(\d+)(\.\d+)?px$/);
        return i ? +i[1] : void 0;
      }
      function yo(n, t, e, i) {
        return { x: n.x + e * (t.x - n.x), y: n.y + e * (t.y - n.y) };
      }
      function QG(n, t, e, i) {
        return {
          x: n.x + e * (t.x - n.x),
          y:
            "middle" === i
              ? e < 0.5
                ? n.y
                : t.y
              : "after" === i
              ? e < 1
                ? n.y
                : t.y
              : e > 0
              ? t.y
              : n.y,
        };
      }
      function JG(n, t, e, i) {
        const r = { x: n.cp2x, y: n.cp2y },
          s = { x: t.cp1x, y: t.cp1y },
          o = yo(n, r, e),
          a = yo(r, s, e),
          l = yo(s, t, e),
          c = yo(o, a, e),
          u = yo(a, l, e);
        return yo(c, u, e);
      }
      const Gk = new Map();
      function Pc(n, t, e) {
        return (function e6(n, t) {
          t = t || {};
          const e = n + JSON.stringify(t);
          let i = Gk.get(e);
          return i || ((i = new Intl.NumberFormat(n, t)), Gk.set(e, i)), i;
        })(t, e).format(n);
      }
      function La(n, t, e) {
        return n
          ? (function (n, t) {
              return {
                x: (e) => n + n + t - e,
                setWidth(e) {
                  t = e;
                },
                textAlign: (e) =>
                  "center" === e ? e : "right" === e ? "left" : "right",
                xPlus: (e, i) => e - i,
                leftForLtr: (e, i) => e - i,
              };
            })(t, e)
          : {
              x: (n) => n,
              setWidth(n) {},
              textAlign: (n) => n,
              xPlus: (n, t) => n + t,
              leftForLtr: (n, t) => n,
            };
      }
      function Yk(n, t) {
        let e, i;
        ("ltr" === t || "rtl" === t) &&
          ((e = n.canvas.style),
          (i = [
            e.getPropertyValue("direction"),
            e.getPropertyPriority("direction"),
          ]),
          e.setProperty("direction", t, "important"),
          (n.prevTextDirection = i));
      }
      function Kk(n, t) {
        void 0 !== t &&
          (delete n.prevTextDirection,
          n.canvas.style.setProperty("direction", t[0], t[1]));
      }
      function Xk(n) {
        return "angle" === n
          ? { between: Ec, compare: zW, normalize: Yn }
          : { between: Ur, compare: (t, e) => t - e, normalize: (t) => t };
      }
      function Zk({ start: n, end: t, count: e, loop: i, style: r }) {
        return {
          start: n % e,
          end: t % e,
          loop: i && (t - n + 1) % e == 0,
          style: r,
        };
      }
      function Qk(n, t, e) {
        if (!e) return [n];
        const { property: i, start: r, end: s } = e,
          o = t.length,
          { compare: a, between: l, normalize: c } = Xk(i),
          {
            start: u,
            end: d,
            loop: h,
            style: f,
          } = (function i6(n, t, e) {
            const { property: i, start: r, end: s } = e,
              { between: o, normalize: a } = Xk(i),
              l = t.length;
            let h,
              f,
              { start: c, end: u, loop: d } = n;
            if (d) {
              for (
                c += l, u += l, h = 0, f = l;
                h < f && o(a(t[c % l][i]), r, s);
                ++h
              )
                c--, u--;
              (c %= l), (u %= l);
            }
            return (
              u < c && (u += l), { start: c, end: u, loop: d, style: n.style }
            );
          })(n, t, e),
          p = [];
        let v,
          M,
          C,
          m = !1,
          _ = null;
        for (let V = u, j = u; V <= d; ++V)
          (M = t[V % o]),
            !M.skip &&
              ((v = c(M[i])),
              v !== C &&
                ((m = l(v, r, s)),
                null === _ &&
                  (m || (l(r, C, v) && 0 !== a(r, C))) &&
                  (_ = 0 === a(v, r) ? V : j),
                null !== _ &&
                  (!m || 0 === a(s, v) || l(s, C, v)) &&
                  (p.push(
                    Zk({ start: _, end: V, loop: h, count: o, style: f })
                  ),
                  (_ = null)),
                (j = V),
                (C = v)));
        return (
          null !== _ &&
            p.push(Zk({ start: _, end: d, loop: h, count: o, style: f })),
          p
        );
      }
      function Jk(n, t) {
        const e = [],
          i = n.segments;
        for (let r = 0; r < i.length; r++) {
          const s = Qk(i[r], n.points, t);
          s.length && e.push(...s);
        }
        return e;
      }
      function t1(n) {
        return {
          backgroundColor: n.backgroundColor,
          borderCapStyle: n.borderCapStyle,
          borderDash: n.borderDash,
          borderDashOffset: n.borderDashOffset,
          borderJoinStyle: n.borderJoinStyle,
          borderWidth: n.borderWidth,
          borderColor: n.borderColor,
        };
      }
      function l6(n, t) {
        return t && JSON.stringify(n) !== JSON.stringify(t);
      }
      var Wr = new (class c6 {
        constructor() {
          (this._request = null),
            (this._charts = new Map()),
            (this._running = !1),
            (this._lastDate = void 0);
        }
        _notify(t, e, i, r) {
          const o = e.duration;
          e.listeners[r].forEach((a) =>
            a({
              chart: t,
              initial: e.initial,
              numSteps: o,
              currentStep: Math.min(i - e.start, o),
            })
          );
        }
        _refresh() {
          this._request ||
            ((this._running = !0),
            (this._request = _k.call(window, () => {
              this._update(),
                (this._request = null),
                this._running && this._refresh();
            })));
        }
        _update(t = Date.now()) {
          let e = 0;
          this._charts.forEach((i, r) => {
            if (!i.running || !i.items.length) return;
            const s = i.items;
            let l,
              o = s.length - 1,
              a = !1;
            for (; o >= 0; --o)
              (l = s[o]),
                l._active
                  ? (l._total > i.duration && (i.duration = l._total),
                    l.tick(t),
                    (a = !0))
                  : ((s[o] = s[s.length - 1]), s.pop());
            a && (r.draw(), this._notify(r, i, t, "progress")),
              s.length ||
                ((i.running = !1),
                this._notify(r, i, t, "complete"),
                (i.initial = !1)),
              (e += s.length);
          }),
            (this._lastDate = t),
            0 === e && (this._running = !1);
        }
        _getAnims(t) {
          const e = this._charts;
          let i = e.get(t);
          return (
            i ||
              ((i = {
                running: !1,
                initial: !0,
                items: [],
                listeners: { complete: [], progress: [] },
              }),
              e.set(t, i)),
            i
          );
        }
        listen(t, e, i) {
          this._getAnims(t).listeners[e].push(i);
        }
        add(t, e) {
          !e || !e.length || this._getAnims(t).items.push(...e);
        }
        has(t) {
          return this._getAnims(t).items.length > 0;
        }
        start(t) {
          const e = this._charts.get(t);
          !e ||
            ((e.running = !0),
            (e.start = Date.now()),
            (e.duration = e.items.reduce(
              (i, r) => Math.max(i, r._duration),
              0
            )),
            this._refresh());
        }
        running(t) {
          if (!this._running) return !1;
          const e = this._charts.get(t);
          return !(!e || !e.running || !e.items.length);
        }
        stop(t) {
          const e = this._charts.get(t);
          if (!e || !e.items.length) return;
          const i = e.items;
          let r = i.length - 1;
          for (; r >= 0; --r) i[r].cancel();
          (e.items = []), this._notify(t, e, Date.now(), "complete");
        }
        remove(t) {
          return this._charts.delete(t);
        }
      })();
      const n1 = "transparent",
        u6 = {
          boolean: (n, t, e) => (e > 0.5 ? t : n),
          color(n, t, e) {
            const i = Ok(n || n1),
              r = i.valid && Ok(t || n1);
            return r && r.valid ? r.mix(i, e).hexString() : t;
          },
          number: (n, t, e) => n + (t - n) * e,
        };
      class d6 {
        constructor(t, e, i, r) {
          const s = e[i];
          r = Rc([t.to, r, s, t.from]);
          const o = Rc([t.from, s, r]);
          (this._active = !0),
            (this._fn = t.fn || u6[t.type || typeof o]),
            (this._easing = Sc[t.easing] || Sc.linear),
            (this._start = Math.floor(Date.now() + (t.delay || 0))),
            (this._duration = this._total = Math.floor(t.duration)),
            (this._loop = !!t.loop),
            (this._target = e),
            (this._prop = i),
            (this._from = o),
            (this._to = r),
            (this._promises = void 0);
        }
        active() {
          return this._active;
        }
        update(t, e, i) {
          if (this._active) {
            this._notify(!1);
            const r = this._target[this._prop],
              s = i - this._start,
              o = this._duration - s;
            (this._start = i),
              (this._duration = Math.floor(Math.max(o, t.duration))),
              (this._total += s),
              (this._loop = !!t.loop),
              (this._to = Rc([t.to, e, r, t.from])),
              (this._from = Rc([t.from, r, e]));
          }
        }
        cancel() {
          this._active &&
            (this.tick(Date.now()), (this._active = !1), this._notify(!1));
        }
        tick(t) {
          const e = t - this._start,
            i = this._duration,
            r = this._prop,
            s = this._from,
            o = this._loop,
            a = this._to;
          let l;
          if (((this._active = s !== a && (o || e < i)), !this._active))
            return (this._target[r] = a), void this._notify(!0);
          e < 0
            ? (this._target[r] = s)
            : ((l = (e / i) % 2),
              (l = o && l > 1 ? 2 - l : l),
              (l = this._easing(Math.min(1, Math.max(0, l)))),
              (this._target[r] = this._fn(s, a, l)));
        }
        wait() {
          const t = this._promises || (this._promises = []);
          return new Promise((e, i) => {
            t.push({ res: e, rej: i });
          });
        }
        _notify(t) {
          const e = t ? "res" : "rej",
            i = this._promises || [];
          for (let r = 0; r < i.length; r++) i[r][e]();
        }
      }
      Ie.set("animation", {
        delay: void 0,
        duration: 1e3,
        easing: "easeOutQuart",
        fn: void 0,
        from: void 0,
        loop: void 0,
        to: void 0,
        type: void 0,
      });
      const p6 = Object.keys(Ie.animation);
      Ie.describe("animation", {
        _fallback: !1,
        _indexable: !1,
        _scriptable: (n) =>
          "onProgress" !== n && "onComplete" !== n && "fn" !== n,
      }),
        Ie.set("animations", {
          colors: {
            type: "color",
            properties: ["color", "borderColor", "backgroundColor"],
          },
          numbers: {
            type: "number",
            properties: ["x", "y", "borderWidth", "radius", "tension"],
          },
        }),
        Ie.describe("animations", { _fallback: "animation" }),
        Ie.set("transitions", {
          active: { animation: { duration: 400 } },
          resize: { animation: { duration: 0 } },
          show: {
            animations: {
              colors: { from: "transparent" },
              visible: { type: "boolean", duration: 0 },
            },
          },
          hide: {
            animations: {
              colors: { to: "transparent" },
              visible: { type: "boolean", easing: "linear", fn: (n) => 0 | n },
            },
          },
        });
      class r1 {
        constructor(t, e) {
          (this._chart = t), (this._properties = new Map()), this.configure(e);
        }
        configure(t) {
          if (!Te(t)) return;
          const e = this._properties;
          Object.getOwnPropertyNames(t).forEach((i) => {
            const r = t[i];
            if (!Te(r)) return;
            const s = {};
            for (const o of p6) s[o] = r[o];
            ((it(r.properties) && r.properties) || [i]).forEach((o) => {
              (o === i || !e.has(o)) && e.set(o, s);
            });
          });
        }
        _animateOptions(t, e) {
          const i = e.options,
            r = (function g6(n, t) {
              if (!t) return;
              let e = n.options;
              if (e)
                return (
                  e.$shared &&
                    (n.options = e =
                      Object.assign({}, e, { $shared: !1, $animations: {} })),
                  e
                );
              n.options = t;
            })(t, i);
          if (!r) return [];
          const s = this._createAnimations(r, i);
          return (
            i.$shared &&
              (function m6(n, t) {
                const e = [],
                  i = Object.keys(t);
                for (let r = 0; r < i.length; r++) {
                  const s = n[i[r]];
                  s && s.active() && e.push(s.wait());
                }
                return Promise.all(e);
              })(t.options.$animations, i).then(
                () => {
                  t.options = i;
                },
                () => {}
              ),
            s
          );
        }
        _createAnimations(t, e) {
          const i = this._properties,
            r = [],
            s = t.$animations || (t.$animations = {}),
            o = Object.keys(e),
            a = Date.now();
          let l;
          for (l = o.length - 1; l >= 0; --l) {
            const c = o[l];
            if ("$" === c.charAt(0)) continue;
            if ("options" === c) {
              r.push(...this._animateOptions(t, e));
              continue;
            }
            const u = e[c];
            let d = s[c];
            const h = i.get(c);
            if (d) {
              if (h && d.active()) {
                d.update(h, u, a);
                continue;
              }
              d.cancel();
            }
            h && h.duration
              ? ((s[c] = d = new d6(h, t, c, u)), r.push(d))
              : (t[c] = u);
          }
          return r;
        }
        update(t, e) {
          if (0 === this._properties.size) return void Object.assign(t, e);
          const i = this._createAnimations(t, e);
          return i.length ? (Wr.add(this._chart, i), !0) : void 0;
        }
      }
      function s1(n, t) {
        const e = (n && n.options) || {},
          i = e.reverse,
          r = void 0 === e.min ? t : 0,
          s = void 0 === e.max ? t : 0;
        return { start: i ? s : r, end: i ? r : s };
      }
      function o1(n, t) {
        const e = [],
          i = n._getSortedDatasetMetas(t);
        let r, s;
        for (r = 0, s = i.length; r < s; ++r) e.push(i[r].index);
        return e;
      }
      function a1(n, t, e, i = {}) {
        const r = n.keys,
          s = "single" === i.mode;
        let o, a, l, c;
        if (null !== t) {
          for (o = 0, a = r.length; o < a; ++o) {
            if (((l = +r[o]), l === e)) {
              if (i.all) continue;
              break;
            }
            (c = n.values[l]),
              Mt(c) && (s || 0 === t || cr(t) === cr(c)) && (t += c);
          }
          return t;
        }
      }
      function l1(n, t) {
        const e = n && n.options.stacked;
        return e || (void 0 === e && void 0 !== t.stack);
      }
      function w6(n, t, e) {
        const i = n[t] || (n[t] = {});
        return i[e] || (i[e] = {});
      }
      function c1(n, t, e, i) {
        for (const r of t.getMatchingVisibleMetas(i).reverse()) {
          const s = n[r.index];
          if ((e && s > 0) || (!e && s < 0)) return r.index;
        }
        return null;
      }
      function u1(n, t) {
        const { chart: e, _cachedMeta: i } = n,
          r = e._stacks || (e._stacks = {}),
          { iScale: s, vScale: o, index: a } = i,
          l = s.axis,
          c = o.axis,
          u = (function b6(n, t, e) {
            return `${n.id}.${t.id}.${e.stack || e.type}`;
          })(s, o, i),
          d = t.length;
        let h;
        for (let f = 0; f < d; ++f) {
          const p = t[f],
            { [l]: m, [c]: _ } = p;
          (h = (p._stacks || (p._stacks = {}))[c] = w6(r, u, m)),
            (h[a] = _),
            (h._top = c1(h, o, !0, i.type)),
            (h._bottom = c1(h, o, !1, i.type));
        }
      }
      function fv(n, t) {
        const e = n.scales;
        return Object.keys(e)
          .filter((i) => e[i].axis === t)
          .shift();
      }
      function Fc(n, t) {
        const e = n.controller.index,
          i = n.vScale && n.vScale.axis;
        if (i) {
          t = t || n._parsed;
          for (const r of t) {
            const s = r._stacks;
            if (!s || void 0 === s[i] || void 0 === s[i][e]) return;
            delete s[i][e];
          }
        }
      }
      const pv = (n) => "reset" === n || "none" === n,
        d1 = (n, t) => (t ? n : Object.assign({}, n));
      let ur = (() => {
        class n {
          constructor(e, i) {
            (this.chart = e),
              (this._ctx = e.ctx),
              (this.index = i),
              (this._cachedDataOpts = {}),
              (this._cachedMeta = this.getMeta()),
              (this._type = this._cachedMeta.type),
              (this.options = void 0),
              (this._parsing = !1),
              (this._data = void 0),
              (this._objectData = void 0),
              (this._sharedOptions = void 0),
              (this._drawStart = void 0),
              (this._drawCount = void 0),
              (this.enableOptionSharing = !1),
              (this.supportsDecimation = !1),
              (this.$context = void 0),
              (this._syncList = []),
              this.initialize();
          }
          initialize() {
            const e = this._cachedMeta;
            this.configure(),
              this.linkScales(),
              (e._stacked = l1(e.vScale, e)),
              this.addElements();
          }
          updateIndex(e) {
            this.index !== e && Fc(this._cachedMeta), (this.index = e);
          }
          linkScales() {
            const e = this.chart,
              i = this._cachedMeta,
              r = this.getDataset(),
              s = (h, f, p, m) => ("x" === h ? f : "r" === h ? m : p),
              o = (i.xAxisID = ve(r.xAxisID, fv(e, "x"))),
              a = (i.yAxisID = ve(r.yAxisID, fv(e, "y"))),
              l = (i.rAxisID = ve(r.rAxisID, fv(e, "r"))),
              c = i.indexAxis,
              u = (i.iAxisID = s(c, o, a, l)),
              d = (i.vAxisID = s(c, a, o, l));
            (i.xScale = this.getScaleForId(o)),
              (i.yScale = this.getScaleForId(a)),
              (i.rScale = this.getScaleForId(l)),
              (i.iScale = this.getScaleForId(u)),
              (i.vScale = this.getScaleForId(d));
          }
          getDataset() {
            return this.chart.data.datasets[this.index];
          }
          getMeta() {
            return this.chart.getDatasetMeta(this.index);
          }
          getScaleForId(e) {
            return this.chart.scales[e];
          }
          _getOtherScale(e) {
            const i = this._cachedMeta;
            return e === i.iScale ? i.vScale : i.iScale;
          }
          reset() {
            this._update("reset");
          }
          _destroy() {
            const e = this._cachedMeta;
            this._data && mk(this._data, this), e._stacked && Fc(e);
          }
          _dataCheck() {
            const e = this.getDataset(),
              i = e.data || (e.data = []),
              r = this._data;
            if (Te(i))
              this._data = (function v6(n) {
                const t = Object.keys(n),
                  e = new Array(t.length);
                let i, r, s;
                for (i = 0, r = t.length; i < r; ++i)
                  (s = t[i]), (e[i] = { x: s, y: n[s] });
                return e;
              })(i);
            else if (r !== i) {
              if (r) {
                mk(r, this);
                const s = this._cachedMeta;
                Fc(s), (s._parsed = []);
              }
              i &&
                Object.isExtensible(i) &&
                (function WW(n, t) {
                  n._chartjs
                    ? n._chartjs.listeners.push(t)
                    : (Object.defineProperty(n, "_chartjs", {
                        configurable: !0,
                        enumerable: !1,
                        value: { listeners: [t] },
                      }),
                      pk.forEach((e) => {
                        const i = "_onData" + Gy(e),
                          r = n[e];
                        Object.defineProperty(n, e, {
                          configurable: !0,
                          enumerable: !1,
                          value(...s) {
                            const o = r.apply(this, s);
                            return (
                              n._chartjs.listeners.forEach((a) => {
                                "function" == typeof a[i] && a[i](...s);
                              }),
                              o
                            );
                          },
                        });
                      }));
                })(i, this),
                (this._syncList = []),
                (this._data = i);
            }
          }
          addElements() {
            const e = this._cachedMeta;
            this._dataCheck(),
              this.datasetElementType &&
                (e.dataset = new this.datasetElementType());
          }
          buildOrUpdateElements(e) {
            const i = this._cachedMeta,
              r = this.getDataset();
            let s = !1;
            this._dataCheck();
            const o = i._stacked;
            (i._stacked = l1(i.vScale, i)),
              i.stack !== r.stack && ((s = !0), Fc(i), (i.stack = r.stack)),
              this._resyncElements(e),
              (s || o !== i._stacked) && u1(this, i._parsed);
          }
          configure() {
            const e = this.chart.config,
              i = e.datasetScopeKeys(this._type),
              r = e.getOptionScopes(this.getDataset(), i, !0);
            (this.options = e.createResolver(r, this.getContext())),
              (this._parsing = this.options.parsing),
              (this._cachedDataOpts = {});
          }
          parse(e, i) {
            const { _cachedMeta: r, _data: s } = this,
              { iScale: o, _stacked: a } = r,
              l = o.axis;
            let d,
              h,
              f,
              c = (0 === e && i === s.length) || r._sorted,
              u = e > 0 && r._parsed[e - 1];
            if (!1 === this._parsing)
              (r._parsed = s), (r._sorted = !0), (f = s);
            else {
              f = it(s[e])
                ? this.parseArrayData(r, s, e, i)
                : Te(s[e])
                ? this.parseObjectData(r, s, e, i)
                : this.parsePrimitiveData(r, s, e, i);
              const p = () => null === h[l] || (u && h[l] < u[l]);
              for (d = 0; d < i; ++d)
                (r._parsed[d + e] = h = f[d]), c && (p() && (c = !1), (u = h));
              r._sorted = c;
            }
            a && u1(this, f);
          }
          parsePrimitiveData(e, i, r, s) {
            const { iScale: o, vScale: a } = e,
              l = o.axis,
              c = a.axis,
              u = o.getLabels(),
              d = o === a,
              h = new Array(s);
            let f, p, m;
            for (f = 0, p = s; f < p; ++f)
              (m = f + r),
                (h[f] = { [l]: d || o.parse(u[m], m), [c]: a.parse(i[m], m) });
            return h;
          }
          parseArrayData(e, i, r, s) {
            const { xScale: o, yScale: a } = e,
              l = new Array(s);
            let c, u, d, h;
            for (c = 0, u = s; c < u; ++c)
              (d = c + r),
                (h = i[d]),
                (l[c] = { x: o.parse(h[0], d), y: a.parse(h[1], d) });
            return l;
          }
          parseObjectData(e, i, r, s) {
            const { xScale: o, yScale: a } = e,
              { xAxisKey: l = "x", yAxisKey: c = "y" } = this._parsing,
              u = new Array(s);
            let d, h, f, p;
            for (d = 0, h = s; d < h; ++d)
              (f = d + r),
                (p = i[f]),
                (u[d] = { x: o.parse(vs(p, l), f), y: a.parse(vs(p, c), f) });
            return u;
          }
          getParsed(e) {
            return this._cachedMeta._parsed[e];
          }
          getDataElement(e) {
            return this._cachedMeta.data[e];
          }
          applyStack(e, i, r) {
            const o = this._cachedMeta,
              a = i[e.axis];
            return a1(
              { keys: o1(this.chart, !0), values: i._stacks[e.axis] },
              a,
              o.index,
              { mode: r }
            );
          }
          updateRangeFromParsed(e, i, r, s) {
            const o = r[i.axis];
            let a = null === o ? NaN : o;
            const l = s && r._stacks[i.axis];
            s && l && ((s.values = l), (a = a1(s, o, this._cachedMeta.index))),
              (e.min = Math.min(e.min, a)),
              (e.max = Math.max(e.max, a));
          }
          getMinMax(e, i) {
            const r = this._cachedMeta,
              s = r._parsed,
              o = r._sorted && e === r.iScale,
              a = s.length,
              l = this._getOtherScale(e),
              c = ((n, t, e) =>
                n &&
                !t.hidden &&
                t._stacked && { keys: o1(this.chart, !0), values: null })(i, r),
              u = {
                min: Number.POSITIVE_INFINITY,
                max: Number.NEGATIVE_INFINITY,
              },
              { min: d, max: h } = (function C6(n) {
                const {
                  min: t,
                  max: e,
                  minDefined: i,
                  maxDefined: r,
                } = n.getUserBounds();
                return {
                  min: i ? t : Number.NEGATIVE_INFINITY,
                  max: r ? e : Number.POSITIVE_INFINITY,
                };
              })(l);
            let f, p;
            function m() {
              p = s[f];
              const _ = p[l.axis];
              return !Mt(p[e.axis]) || d > _ || h < _;
            }
            for (
              f = 0;
              f < a && (m() || (this.updateRangeFromParsed(u, e, p, c), !o));
              ++f
            );
            if (o)
              for (f = a - 1; f >= 0; --f)
                if (!m()) {
                  this.updateRangeFromParsed(u, e, p, c);
                  break;
                }
            return u;
          }
          getAllParsedValues(e) {
            const i = this._cachedMeta._parsed,
              r = [];
            let s, o, a;
            for (s = 0, o = i.length; s < o; ++s)
              (a = i[s][e.axis]), Mt(a) && r.push(a);
            return r;
          }
          getMaxOverflow() {
            return !1;
          }
          getLabelAndValue(e) {
            const i = this._cachedMeta,
              r = i.iScale,
              s = i.vScale,
              o = this.getParsed(e);
            return {
              label: r ? "" + r.getLabelForValue(o[r.axis]) : "",
              value: s ? "" + s.getLabelForValue(o[s.axis]) : "",
            };
          }
          _update(e) {
            const i = this._cachedMeta;
            this.update(e || "default"),
              (i._clip = (function y6(n) {
                let t, e, i, r;
                return (
                  Te(n)
                    ? ((t = n.top), (e = n.right), (i = n.bottom), (r = n.left))
                    : (t = e = i = r = n),
                  { top: t, right: e, bottom: i, left: r, disabled: !1 === n }
                );
              })(
                ve(
                  this.options.clip,
                  (function _6(n, t, e) {
                    if (!1 === e) return !1;
                    const i = s1(n, e),
                      r = s1(t, e);
                    return {
                      top: r.end,
                      right: i.end,
                      bottom: r.start,
                      left: i.start,
                    };
                  })(i.xScale, i.yScale, this.getMaxOverflow())
                )
              ));
          }
          update(e) {}
          draw() {
            const e = this._ctx,
              r = this._cachedMeta,
              s = r.data || [],
              o = this.chart.chartArea,
              a = [],
              l = this._drawStart || 0,
              c = this._drawCount || s.length - l,
              u = this.options.drawActiveElementsOnTop;
            let d;
            for (
              r.dataset && r.dataset.draw(e, o, l, c), d = l;
              d < l + c;
              ++d
            ) {
              const h = s[d];
              h.hidden || (h.active && u ? a.push(h) : h.draw(e, o));
            }
            for (d = 0; d < a.length; ++d) a[d].draw(e, o);
          }
          getStyle(e, i) {
            const r = i ? "active" : "default";
            return void 0 === e && this._cachedMeta.dataset
              ? this.resolveDatasetElementOptions(r)
              : this.resolveDataElementOptions(e || 0, r);
          }
          getContext(e, i, r) {
            const s = this.getDataset();
            let o;
            if (e >= 0 && e < this._cachedMeta.data.length) {
              const a = this._cachedMeta.data[e];
              (o =
                a.$context ||
                (a.$context = (function D6(n, t, e) {
                  return Ms(n, {
                    active: !1,
                    dataIndex: t,
                    parsed: void 0,
                    raw: void 0,
                    element: e,
                    index: t,
                    mode: "default",
                    type: "data",
                  });
                })(this.getContext(), e, a))),
                (o.parsed = this.getParsed(e)),
                (o.raw = s.data[e]),
                (o.index = o.dataIndex = e);
            } else
              (o =
                this.$context ||
                (this.$context = (function M6(n, t) {
                  return Ms(n, {
                    active: !1,
                    dataset: void 0,
                    datasetIndex: t,
                    index: t,
                    mode: "default",
                    type: "dataset",
                  });
                })(this.chart.getContext(), this.index))),
                (o.dataset = s),
                (o.index = o.datasetIndex = this.index);
            return (o.active = !!i), (o.mode = r), o;
          }
          resolveDatasetElementOptions(e) {
            return this._resolveElementOptions(this.datasetElementType.id, e);
          }
          resolveDataElementOptions(e, i) {
            return this._resolveElementOptions(this.dataElementType.id, i, e);
          }
          _resolveElementOptions(e, i = "default", r) {
            const s = "active" === i,
              o = this._cachedDataOpts,
              a = e + "-" + i,
              l = o[a],
              c = this.enableOptionSharing && ui(r);
            if (l) return d1(l, c);
            const u = this.chart.config,
              d = u.datasetElementScopeKeys(this._type, e),
              h = s ? [`${e}Hover`, "hover", e, ""] : [e, ""],
              f = u.getOptionScopes(this.getDataset(), d),
              p = Object.keys(Ie.elements[e]),
              _ = u.resolveNamedOptions(f, p, () => this.getContext(r, s), h);
            return (
              _.$shared && ((_.$shared = c), (o[a] = Object.freeze(d1(_, c)))),
              _
            );
          }
          _resolveAnimations(e, i, r) {
            const s = this.chart,
              o = this._cachedDataOpts,
              a = `animation-${i}`,
              l = o[a];
            if (l) return l;
            let c;
            if (!1 !== s.options.animation) {
              const d = this.chart.config,
                h = d.datasetAnimationScopeKeys(this._type, i),
                f = d.getOptionScopes(this.getDataset(), h);
              c = d.createResolver(f, this.getContext(e, r, i));
            }
            const u = new r1(s, c && c.animations);
            return c && c._cacheable && (o[a] = Object.freeze(u)), u;
          }
          getSharedOptions(e) {
            if (e.$shared)
              return (
                this._sharedOptions ||
                (this._sharedOptions = Object.assign({}, e))
              );
          }
          includeOptions(e, i) {
            return !i || pv(e) || this.chart._animationsDisabled;
          }
          _getSharedOptions(e, i) {
            const r = this.resolveDataElementOptions(e, i),
              s = this._sharedOptions,
              o = this.getSharedOptions(r),
              a = this.includeOptions(i, o) || o !== s;
            return (
              this.updateSharedOptions(o, i, r),
              { sharedOptions: o, includeOptions: a }
            );
          }
          updateElement(e, i, r, s) {
            pv(s)
              ? Object.assign(e, r)
              : this._resolveAnimations(i, s).update(e, r);
          }
          updateSharedOptions(e, i, r) {
            e && !pv(i) && this._resolveAnimations(void 0, i).update(e, r);
          }
          _setStyle(e, i, r, s) {
            e.active = s;
            const o = this.getStyle(i, s);
            this._resolveAnimations(i, r, s).update(e, {
              options: (!s && this.getSharedOptions(o)) || o,
            });
          }
          removeHoverStyle(e, i, r) {
            this._setStyle(e, r, "active", !1);
          }
          setHoverStyle(e, i, r) {
            this._setStyle(e, r, "active", !0);
          }
          _removeDatasetHoverStyle() {
            const e = this._cachedMeta.dataset;
            e && this._setStyle(e, void 0, "active", !1);
          }
          _setDatasetHoverStyle() {
            const e = this._cachedMeta.dataset;
            e && this._setStyle(e, void 0, "active", !0);
          }
          _resyncElements(e) {
            const i = this._data,
              r = this._cachedMeta.data;
            for (const [l, c, u] of this._syncList) this[l](c, u);
            this._syncList = [];
            const s = r.length,
              o = i.length,
              a = Math.min(o, s);
            a && this.parse(0, a),
              o > s
                ? this._insertElements(s, o - s, e)
                : o < s && this._removeElements(o, s - o);
          }
          _insertElements(e, i, r = !0) {
            const s = this._cachedMeta,
              o = s.data,
              a = e + i;
            let l;
            const c = (u) => {
              for (u.length += i, l = u.length - 1; l >= a; l--)
                u[l] = u[l - i];
            };
            for (c(o), l = e; l < a; ++l) o[l] = new this.dataElementType();
            this._parsing && c(s._parsed),
              this.parse(e, i),
              r && this.updateElements(o, e, i, "reset");
          }
          updateElements(e, i, r, s) {}
          _removeElements(e, i) {
            const r = this._cachedMeta;
            if (this._parsing) {
              const s = r._parsed.splice(e, i);
              r._stacked && Fc(r, s);
            }
            r.data.splice(e, i);
          }
          _sync(e) {
            if (this._parsing) this._syncList.push(e);
            else {
              const [i, r, s] = e;
              this[i](r, s);
            }
            this.chart._dataChanges.push([this.index, ...e]);
          }
          _onDataPush() {
            const e = arguments.length;
            this._sync([
              "_insertElements",
              this.getDataset().data.length - e,
              e,
            ]);
          }
          _onDataPop() {
            this._sync([
              "_removeElements",
              this._cachedMeta.data.length - 1,
              1,
            ]);
          }
          _onDataShift() {
            this._sync(["_removeElements", 0, 1]);
          }
          _onDataSplice(e, i) {
            i && this._sync(["_removeElements", e, i]);
            const r = arguments.length - 2;
            r && this._sync(["_insertElements", e, r]);
          }
          _onDataUnshift() {
            this._sync(["_insertElements", 0, arguments.length]);
          }
        }
        return (n.defaults = {}), n;
      })();
      function S6(n) {
        const t = n.iScale,
          e = (function E6(n, t) {
            if (!n._cache.$bar) {
              const e = n.getMatchingVisibleMetas(t);
              let i = [];
              for (let r = 0, s = e.length; r < s; r++)
                i = i.concat(e[r].controller.getAllParsedValues(n));
              n._cache.$bar = gk(i.sort((r, s) => r - s));
            }
            return n._cache.$bar;
          })(t, n.type);
        let r,
          s,
          o,
          a,
          i = t._length;
        const l = () => {
          32767 === o ||
            -32768 === o ||
            (ui(a) && (i = Math.min(i, Math.abs(o - a) || i)), (a = o));
        };
        for (r = 0, s = e.length; r < s; ++r)
          (o = t.getPixelForValue(e[r])), l();
        for (a = void 0, r = 0, s = t.ticks.length; r < s; ++r)
          (o = t.getPixelForTick(r)), l();
        return i;
      }
      function h1(n, t, e, i) {
        return (
          it(n)
            ? (function k6(n, t, e, i) {
                const r = e.parse(n[0], i),
                  s = e.parse(n[1], i),
                  o = Math.min(r, s),
                  a = Math.max(r, s);
                let l = o,
                  c = a;
                Math.abs(o) > Math.abs(a) && ((l = a), (c = o)),
                  (t[e.axis] = c),
                  (t._custom = {
                    barStart: l,
                    barEnd: c,
                    start: r,
                    end: s,
                    min: o,
                    max: a,
                  });
              })(n, t, e, i)
            : (t[e.axis] = e.parse(n, i)),
          t
        );
      }
      function f1(n, t, e, i) {
        const r = n.iScale,
          s = n.vScale,
          o = r.getLabels(),
          a = r === s,
          l = [];
        let c, u, d, h;
        for (c = e, u = e + i; c < u; ++c)
          (h = t[c]),
            (d = {}),
            (d[r.axis] = a || r.parse(o[c], c)),
            l.push(h1(h, d, s, c));
        return l;
      }
      function mv(n) {
        return n && void 0 !== n.barStart && void 0 !== n.barEnd;
      }
      function R6(n, t, e, i) {
        let r = t.borderSkipped;
        const s = {};
        if (!r) return void (n.borderSkipped = s);
        if (!0 === r)
          return void (n.borderSkipped = {
            top: !0,
            right: !0,
            bottom: !0,
            left: !0,
          });
        const {
          start: o,
          end: a,
          reverse: l,
          top: c,
          bottom: u,
        } = (function O6(n) {
          let t, e, i, r, s;
          return (
            n.horizontal
              ? ((t = n.base > n.x), (e = "left"), (i = "right"))
              : ((t = n.base < n.y), (e = "bottom"), (i = "top")),
            t ? ((r = "end"), (s = "start")) : ((r = "start"), (s = "end")),
            { start: e, end: i, reverse: t, top: r, bottom: s }
          );
        })(n);
        "middle" === r &&
          e &&
          ((n.enableBorderRadius = !0),
          (e._top || 0) === i
            ? (r = c)
            : (e._bottom || 0) === i
            ? (r = u)
            : ((s[p1(u, o, a, l)] = !0), (r = c))),
          (s[p1(r, o, a, l)] = !0),
          (n.borderSkipped = s);
      }
      function p1(n, t, e, i) {
        return (
          i
            ? ((n = (function P6(n, t, e) {
                return n === t ? e : n === e ? t : n;
              })(n, t, e)),
              (n = m1(n, e, t)))
            : (n = m1(n, t, e)),
          n
        );
      }
      function m1(n, t, e) {
        return "start" === n ? t : "end" === n ? e : n;
      }
      function F6(n, { inflateAmount: t }, e) {
        n.inflateAmount = "auto" === t ? (1 === e ? 0.33 : 0) : t;
      }
      (ur.prototype.datasetElementType = null),
        (ur.prototype.dataElementType = null);
      let N6 = (() => {
          class n extends ur {
            parsePrimitiveData(e, i, r, s) {
              return f1(e, i, r, s);
            }
            parseArrayData(e, i, r, s) {
              return f1(e, i, r, s);
            }
            parseObjectData(e, i, r, s) {
              const { iScale: o, vScale: a } = e,
                { xAxisKey: l = "x", yAxisKey: c = "y" } = this._parsing,
                u = "x" === o.axis ? l : c,
                d = "x" === a.axis ? l : c,
                h = [];
              let f, p, m, _;
              for (f = r, p = r + s; f < p; ++f)
                (_ = i[f]),
                  (m = {}),
                  (m[o.axis] = o.parse(vs(_, u), f)),
                  h.push(h1(vs(_, d), m, a, f));
              return h;
            }
            updateRangeFromParsed(e, i, r, s) {
              super.updateRangeFromParsed(e, i, r, s);
              const o = r._custom;
              o &&
                i === this._cachedMeta.vScale &&
                ((e.min = Math.min(e.min, o.min)),
                (e.max = Math.max(e.max, o.max)));
            }
            getMaxOverflow() {
              return 0;
            }
            getLabelAndValue(e) {
              const i = this._cachedMeta,
                { iScale: r, vScale: s } = i,
                o = this.getParsed(e),
                a = o._custom,
                l = mv(a)
                  ? "[" + a.start + ", " + a.end + "]"
                  : "" + s.getLabelForValue(o[s.axis]);
              return { label: "" + r.getLabelForValue(o[r.axis]), value: l };
            }
            initialize() {
              (this.enableOptionSharing = !0),
                super.initialize(),
                (this._cachedMeta.stack = this.getDataset().stack);
            }
            update(e) {
              const i = this._cachedMeta;
              this.updateElements(i.data, 0, i.data.length, e);
            }
            updateElements(e, i, r, s) {
              const o = "reset" === s,
                {
                  index: a,
                  _cachedMeta: { vScale: l },
                } = this,
                c = l.getBasePixel(),
                u = l.isHorizontal(),
                d = this._getRuler(),
                { sharedOptions: h, includeOptions: f } =
                  this._getSharedOptions(i, s);
              for (let p = i; p < i + r; p++) {
                const m = this.getParsed(p),
                  _ =
                    o || Fe(m[l.axis])
                      ? { base: c, head: c }
                      : this._calculateBarValuePixels(p),
                  v = this._calculateBarIndexPixels(p, d),
                  M = (m._stacks || {})[l.axis],
                  C = {
                    horizontal: u,
                    base: _.base,
                    enableBorderRadius:
                      !M || mv(m._custom) || a === M._top || a === M._bottom,
                    x: u ? _.head : v.center,
                    y: u ? v.center : _.head,
                    height: u ? v.size : Math.abs(_.size),
                    width: u ? Math.abs(_.size) : v.size,
                  };
                f &&
                  (C.options =
                    h ||
                    this.resolveDataElementOptions(
                      p,
                      e[p].active ? "active" : s
                    ));
                const D = C.options || e[p].options;
                R6(C, D, M, a),
                  F6(C, D, d.ratio),
                  this.updateElement(e[p], p, C, s);
              }
            }
            _getStacks(e, i) {
              const { iScale: r } = this._cachedMeta,
                s = r
                  .getMatchingVisibleMetas(this._type)
                  .filter((c) => c.controller.options.grouped),
                o = r.options.stacked,
                a = [],
                l = (c) => {
                  const u = c.controller.getParsed(i),
                    d = u && u[c.vScale.axis];
                  if (Fe(d) || isNaN(d)) return !0;
                };
              for (const c of s)
                if (
                  (void 0 === i || !l(c)) &&
                  ((!1 === o ||
                    -1 === a.indexOf(c.stack) ||
                    (void 0 === o && void 0 === c.stack)) &&
                    a.push(c.stack),
                  c.index === e)
                )
                  break;
              return a.length || a.push(void 0), a;
            }
            _getStackCount(e) {
              return this._getStacks(void 0, e).length;
            }
            _getStackIndex(e, i, r) {
              const s = this._getStacks(e, r),
                o = void 0 !== i ? s.indexOf(i) : -1;
              return -1 === o ? s.length - 1 : o;
            }
            _getRuler() {
              const e = this.options,
                i = this._cachedMeta,
                r = i.iScale,
                s = [];
              let o, a;
              for (o = 0, a = i.data.length; o < a; ++o)
                s.push(r.getPixelForValue(this.getParsed(o)[r.axis], o));
              const l = e.barThickness;
              return {
                min: l || S6(i),
                pixels: s,
                start: r._startPixel,
                end: r._endPixel,
                stackCount: this._getStackCount(),
                scale: r,
                grouped: e.grouped,
                ratio: l ? 1 : e.categoryPercentage * e.barPercentage,
              };
            }
            _calculateBarValuePixels(e) {
              const {
                  _cachedMeta: { vScale: i, _stacked: r },
                  options: { base: s, minBarLength: o },
                } = this,
                a = s || 0,
                l = this.getParsed(e),
                c = l._custom,
                u = mv(c);
              let p,
                m,
                d = l[i.axis],
                h = 0,
                f = r ? this.applyStack(i, l, r) : d;
              f !== d && ((h = f - d), (f = d)),
                u &&
                  ((d = c.barStart),
                  (f = c.barEnd - c.barStart),
                  0 !== d && cr(d) !== cr(c.barEnd) && (h = 0),
                  (h += d));
              const _ = Fe(s) || u ? h : s;
              let v = i.getPixelForValue(_);
              if (
                ((p = this.chart.getDataVisibility(e)
                  ? i.getPixelForValue(h + f)
                  : v),
                (m = p - v),
                Math.abs(m) < o)
              ) {
                (m =
                  (function I6(n, t, e) {
                    return 0 !== n
                      ? cr(n)
                      : (t.isHorizontal() ? 1 : -1) * (t.min >= e ? 1 : -1);
                  })(m, i, a) * o),
                  d === a && (v -= m / 2);
                const M = i.getPixelForDecimal(0),
                  C = i.getPixelForDecimal(1),
                  D = Math.min(M, C),
                  S = Math.max(M, C);
                (v = Math.max(Math.min(v, S), D)), (p = v + m);
              }
              if (v === i.getPixelForValue(a)) {
                const M = (cr(m) * i.getLineWidthForValue(a)) / 2;
                (v += M), (m -= M);
              }
              return { size: m, base: v, head: p, center: p + m / 2 };
            }
            _calculateBarIndexPixels(e, i) {
              const r = i.scale,
                s = this.options,
                o = s.skipNull,
                a = ve(s.maxBarThickness, 1 / 0);
              let l, c;
              if (i.grouped) {
                const u = o ? this._getStackCount(e) : i.stackCount,
                  d =
                    "flex" === s.barThickness
                      ? (function A6(n, t, e, i) {
                          const r = t.pixels,
                            s = r[n];
                          let o = n > 0 ? r[n - 1] : null,
                            a = n < r.length - 1 ? r[n + 1] : null;
                          const l = e.categoryPercentage;
                          null === o &&
                            (o = s - (null === a ? t.end - t.start : a - s)),
                            null === a && (a = s + s - o);
                          const c = s - ((s - Math.min(o, a)) / 2) * l;
                          return {
                            chunk: ((Math.abs(a - o) / 2) * l) / i,
                            ratio: e.barPercentage,
                            start: c,
                          };
                        })(e, i, s, u)
                      : (function T6(n, t, e, i) {
                          const r = e.barThickness;
                          let s, o;
                          return (
                            Fe(r)
                              ? ((s = t.min * e.categoryPercentage),
                                (o = e.barPercentage))
                              : ((s = r * i), (o = 1)),
                            {
                              chunk: s / i,
                              ratio: o,
                              start: t.pixels[n] - s / 2,
                            }
                          );
                        })(e, i, s, u),
                  h = this._getStackIndex(
                    this.index,
                    this._cachedMeta.stack,
                    o ? e : void 0
                  );
                (l = d.start + d.chunk * h + d.chunk / 2),
                  (c = Math.min(a, d.chunk * d.ratio));
              } else
                (l = r.getPixelForValue(this.getParsed(e)[r.axis], e)),
                  (c = Math.min(a, i.min * i.ratio));
              return { base: l - c / 2, head: l + c / 2, center: l, size: c };
            }
            draw() {
              const e = this._cachedMeta,
                i = e.vScale,
                r = e.data,
                s = r.length;
              let o = 0;
              for (; o < s; ++o)
                null !== this.getParsed(o)[i.axis] && r[o].draw(this._ctx);
            }
          }
          return (
            (n.id = "bar"),
            (n.defaults = {
              datasetElementType: !1,
              dataElementType: "bar",
              categoryPercentage: 0.8,
              barPercentage: 0.9,
              grouped: !0,
              animations: {
                numbers: {
                  type: "number",
                  properties: ["x", "y", "base", "width", "height"],
                },
              },
            }),
            (n.overrides = {
              scales: {
                _index_: { type: "category", offset: !0, grid: { offset: !0 } },
                _value_: { type: "linear", beginAtZero: !0 },
              },
            }),
            n
          );
        })(),
        L6 = (() => {
          class n extends ur {
            initialize() {
              (this.enableOptionSharing = !0), super.initialize();
            }
            parsePrimitiveData(e, i, r, s) {
              const o = super.parsePrimitiveData(e, i, r, s);
              for (let a = 0; a < o.length; a++)
                o[a]._custom = this.resolveDataElementOptions(a + r).radius;
              return o;
            }
            parseArrayData(e, i, r, s) {
              const o = super.parseArrayData(e, i, r, s);
              for (let a = 0; a < o.length; a++)
                o[a]._custom = ve(
                  i[r + a][2],
                  this.resolveDataElementOptions(a + r).radius
                );
              return o;
            }
            parseObjectData(e, i, r, s) {
              const o = super.parseObjectData(e, i, r, s);
              for (let a = 0; a < o.length; a++) {
                const l = i[r + a];
                o[a]._custom = ve(
                  l && l.r && +l.r,
                  this.resolveDataElementOptions(a + r).radius
                );
              }
              return o;
            }
            getMaxOverflow() {
              const e = this._cachedMeta.data;
              let i = 0;
              for (let r = e.length - 1; r >= 0; --r)
                i = Math.max(
                  i,
                  e[r].size(this.resolveDataElementOptions(r)) / 2
                );
              return i > 0 && i;
            }
            getLabelAndValue(e) {
              const i = this._cachedMeta,
                { xScale: r, yScale: s } = i,
                o = this.getParsed(e),
                a = r.getLabelForValue(o.x),
                l = s.getLabelForValue(o.y),
                c = o._custom;
              return {
                label: i.label,
                value: "(" + a + ", " + l + (c ? ", " + c : "") + ")",
              };
            }
            update(e) {
              const i = this._cachedMeta.data;
              this.updateElements(i, 0, i.length, e);
            }
            updateElements(e, i, r, s) {
              const o = "reset" === s,
                { iScale: a, vScale: l } = this._cachedMeta,
                { sharedOptions: c, includeOptions: u } =
                  this._getSharedOptions(i, s),
                d = a.axis,
                h = l.axis;
              for (let f = i; f < i + r; f++) {
                const p = e[f],
                  m = !o && this.getParsed(f),
                  _ = {},
                  v = (_[d] = o
                    ? a.getPixelForDecimal(0.5)
                    : a.getPixelForValue(m[d])),
                  M = (_[h] = o ? l.getBasePixel() : l.getPixelForValue(m[h]));
                (_.skip = isNaN(v) || isNaN(M)),
                  u &&
                    ((_.options =
                      c ||
                      this.resolveDataElementOptions(
                        f,
                        p.active ? "active" : s
                      )),
                    o && (_.options.radius = 0)),
                  this.updateElement(p, f, _, s);
              }
            }
            resolveDataElementOptions(e, i) {
              const r = this.getParsed(e);
              let s = super.resolveDataElementOptions(e, i);
              s.$shared && (s = Object.assign({}, s, { $shared: !1 }));
              const o = s.radius;
              return (
                "active" !== i && (s.radius = 0),
                (s.radius += ve(r && r._custom, o)),
                s
              );
            }
          }
          return (
            (n.id = "bubble"),
            (n.defaults = {
              datasetElementType: !1,
              dataElementType: "point",
              animations: {
                numbers: {
                  type: "number",
                  properties: ["x", "y", "borderWidth", "radius"],
                },
              },
            }),
            (n.overrides = {
              scales: { x: { type: "linear" }, y: { type: "linear" } },
              plugins: { tooltip: { callbacks: { title: () => "" } } },
            }),
            n
          );
        })(),
        g1 = (() => {
          class n extends ur {
            constructor(e, i) {
              super(e, i),
                (this.enableOptionSharing = !0),
                (this.innerRadius = void 0),
                (this.outerRadius = void 0),
                (this.offsetX = void 0),
                (this.offsetY = void 0);
            }
            linkScales() {}
            parse(e, i) {
              const r = this.getDataset().data,
                s = this._cachedMeta;
              if (!1 === this._parsing) s._parsed = r;
              else {
                let a,
                  l,
                  o = (c) => +r[c];
                if (Te(r[e])) {
                  const { key: c = "value" } = this._parsing;
                  o = (u) => +vs(r[u], c);
                }
                for (a = e, l = e + i; a < l; ++a) s._parsed[a] = o(a);
              }
            }
            _getRotation() {
              return ki(this.options.rotation - 90);
            }
            _getCircumference() {
              return ki(this.options.circumference);
            }
            _getRotationExtents() {
              let e = Xe,
                i = -Xe;
              for (let r = 0; r < this.chart.data.datasets.length; ++r)
                if (this.chart.isDatasetVisible(r)) {
                  const s = this.chart.getDatasetMeta(r).controller,
                    o = s._getRotation(),
                    a = s._getCircumference();
                  (e = Math.min(e, o)), (i = Math.max(i, o + a));
                }
              return { rotation: e, circumference: i - e };
            }
            update(e) {
              const i = this.chart,
                { chartArea: r } = i,
                s = this._cachedMeta,
                o = s.data,
                a =
                  this.getMaxBorderWidth() +
                  this.getMaxOffset(o) +
                  this.options.spacing,
                l = Math.max((Math.min(r.width, r.height) - a) / 2, 0),
                c = Math.min(
                  ((n, t) =>
                    "string" == typeof n && n.endsWith("%")
                      ? parseFloat(n) / 100
                      : n / t)(this.options.cutout, l),
                  1
                ),
                u = this._getRingWeight(this.index),
                { circumference: d, rotation: h } = this._getRotationExtents(),
                {
                  ratioX: f,
                  ratioY: p,
                  offsetX: m,
                  offsetY: _,
                } = (function B6(n, t, e) {
                  let i = 1,
                    r = 1,
                    s = 0,
                    o = 0;
                  if (t < Xe) {
                    const a = n,
                      l = a + t,
                      c = Math.cos(a),
                      u = Math.sin(a),
                      d = Math.cos(l),
                      h = Math.sin(l),
                      f = (C, D, S) =>
                        Ec(C, a, l, !0) ? 1 : Math.max(D, D * e, S, S * e),
                      p = (C, D, S) =>
                        Ec(C, a, l, !0) ? -1 : Math.min(D, D * e, S, S * e),
                      m = f(0, c, d),
                      _ = f(yt, u, h),
                      v = p(ut, c, d),
                      M = p(ut + yt, u, h);
                    (i = (m - v) / 2),
                      (r = (_ - M) / 2),
                      (s = -(m + v) / 2),
                      (o = -(_ + M) / 2);
                  }
                  return { ratioX: i, ratioY: r, offsetX: s, offsetY: o };
                })(h, d, c),
                C = Math.max(
                  Math.min((r.width - a) / f, (r.height - a) / p) / 2,
                  0
                ),
                D = sk(this.options.radius, C),
                A =
                  (D - Math.max(D * c, 0)) /
                  this._getVisibleDatasetWeightTotal();
              (this.offsetX = m * D),
                (this.offsetY = _ * D),
                (s.total = this.calculateTotal()),
                (this.outerRadius =
                  D - A * this._getRingWeightOffset(this.index)),
                (this.innerRadius = Math.max(this.outerRadius - A * u, 0)),
                this.updateElements(o, 0, o.length, e);
            }
            _circumference(e, i) {
              const r = this.options,
                s = this._cachedMeta,
                o = this._getCircumference();
              return (i && r.animation.animateRotate) ||
                !this.chart.getDataVisibility(e) ||
                null === s._parsed[e] ||
                s.data[e].hidden
                ? 0
                : this.calculateCircumference((s._parsed[e] * o) / Xe);
            }
            updateElements(e, i, r, s) {
              const o = "reset" === s,
                a = this.chart,
                l = a.chartArea,
                d = (l.left + l.right) / 2,
                h = (l.top + l.bottom) / 2,
                f = o && a.options.animation.animateScale,
                p = f ? 0 : this.innerRadius,
                m = f ? 0 : this.outerRadius,
                { sharedOptions: _, includeOptions: v } =
                  this._getSharedOptions(i, s);
              let C,
                M = this._getRotation();
              for (C = 0; C < i; ++C) M += this._circumference(C, o);
              for (C = i; C < i + r; ++C) {
                const D = this._circumference(C, o),
                  S = e[C],
                  A = {
                    x: d + this.offsetX,
                    y: h + this.offsetY,
                    startAngle: M,
                    endAngle: M + D,
                    circumference: D,
                    outerRadius: m,
                    innerRadius: p,
                  };
                v &&
                  (A.options =
                    _ ||
                    this.resolveDataElementOptions(C, S.active ? "active" : s)),
                  (M += D),
                  this.updateElement(S, C, A, s);
              }
            }
            calculateTotal() {
              const e = this._cachedMeta,
                i = e.data;
              let s,
                r = 0;
              for (s = 0; s < i.length; s++) {
                const o = e._parsed[s];
                null !== o &&
                  !isNaN(o) &&
                  this.chart.getDataVisibility(s) &&
                  !i[s].hidden &&
                  (r += Math.abs(o));
              }
              return r;
            }
            calculateCircumference(e) {
              const i = this._cachedMeta.total;
              return i > 0 && !isNaN(e) ? Xe * (Math.abs(e) / i) : 0;
            }
            getLabelAndValue(e) {
              const r = this.chart,
                s = r.data.labels || [],
                o = Pc(this._cachedMeta._parsed[e], r.options.locale);
              return { label: s[e] || "", value: o };
            }
            getMaxBorderWidth(e) {
              let i = 0;
              const r = this.chart;
              let s, o, a, l, c;
              if (!e)
                for (s = 0, o = r.data.datasets.length; s < o; ++s)
                  if (r.isDatasetVisible(s)) {
                    (a = r.getDatasetMeta(s)), (e = a.data), (l = a.controller);
                    break;
                  }
              if (!e) return 0;
              for (s = 0, o = e.length; s < o; ++s)
                (c = l.resolveDataElementOptions(s)),
                  "inner" !== c.borderAlign &&
                    (i = Math.max(
                      i,
                      c.borderWidth || 0,
                      c.hoverBorderWidth || 0
                    ));
              return i;
            }
            getMaxOffset(e) {
              let i = 0;
              for (let r = 0, s = e.length; r < s; ++r) {
                const o = this.resolveDataElementOptions(r);
                i = Math.max(i, o.offset || 0, o.hoverOffset || 0);
              }
              return i;
            }
            _getRingWeightOffset(e) {
              let i = 0;
              for (let r = 0; r < e; ++r)
                this.chart.isDatasetVisible(r) && (i += this._getRingWeight(r));
              return i;
            }
            _getRingWeight(e) {
              return Math.max(ve(this.chart.data.datasets[e].weight, 1), 0);
            }
            _getVisibleDatasetWeightTotal() {
              return (
                this._getRingWeightOffset(this.chart.data.datasets.length) || 1
              );
            }
          }
          return (
            (n.id = "doughnut"),
            (n.defaults = {
              datasetElementType: !1,
              dataElementType: "arc",
              animation: { animateRotate: !0, animateScale: !1 },
              animations: {
                numbers: {
                  type: "number",
                  properties: [
                    "circumference",
                    "endAngle",
                    "innerRadius",
                    "outerRadius",
                    "startAngle",
                    "x",
                    "y",
                    "offset",
                    "borderWidth",
                    "spacing",
                  ],
                },
              },
              cutout: "50%",
              rotation: 0,
              circumference: 360,
              radius: "100%",
              spacing: 0,
              indexAxis: "r",
            }),
            (n.descriptors = {
              _scriptable: (t) => "spacing" !== t,
              _indexable: (t) => "spacing" !== t,
            }),
            (n.overrides = {
              aspectRatio: 1,
              plugins: {
                legend: {
                  labels: {
                    generateLabels(t) {
                      const e = t.data;
                      if (e.labels.length && e.datasets.length) {
                        const {
                          labels: { pointStyle: i },
                        } = t.legend.options;
                        return e.labels.map((r, s) => {
                          const a = t.getDatasetMeta(0).controller.getStyle(s);
                          return {
                            text: r,
                            fillStyle: a.backgroundColor,
                            strokeStyle: a.borderColor,
                            lineWidth: a.borderWidth,
                            pointStyle: i,
                            hidden: !t.getDataVisibility(s),
                            index: s,
                          };
                        });
                      }
                      return [];
                    },
                  },
                  onClick(t, e, i) {
                    i.chart.toggleDataVisibility(e.index), i.chart.update();
                  },
                },
                tooltip: {
                  callbacks: {
                    title: () => "",
                    label(t) {
                      let e = t.label;
                      const i = ": " + t.formattedValue;
                      return (
                        it(e) ? ((e = e.slice()), (e[0] += i)) : (e += i), e
                      );
                    },
                  },
                },
              },
            }),
            n
          );
        })(),
        V6 = (() => {
          class n extends ur {
            initialize() {
              (this.enableOptionSharing = !0),
                (this.supportsDecimation = !0),
                super.initialize();
            }
            update(e) {
              const i = this._cachedMeta,
                { dataset: r, data: s = [], _dataset: o } = i,
                a = this.chart._animationsDisabled;
              let { start: l, count: c } = vk(i, s, a);
              (this._drawStart = l),
                (this._drawCount = c),
                bk(i) && ((l = 0), (c = s.length)),
                (r._chart = this.chart),
                (r._datasetIndex = this.index),
                (r._decimated = !!o._decimated),
                (r.points = s);
              const u = this.resolveDatasetElementOptions(e);
              this.options.showLine || (u.borderWidth = 0),
                (u.segment = this.options.segment),
                this.updateElement(r, void 0, { animated: !a, options: u }, e),
                this.updateElements(s, l, c, e);
            }
            updateElements(e, i, r, s) {
              const o = "reset" === s,
                {
                  iScale: a,
                  vScale: l,
                  _stacked: c,
                  _dataset: u,
                } = this._cachedMeta,
                { sharedOptions: d, includeOptions: h } =
                  this._getSharedOptions(i, s),
                f = a.axis,
                p = l.axis,
                { spanGaps: m, segment: _ } = this.options,
                v = Ra(m) ? m : Number.POSITIVE_INFINITY,
                M = this.chart._animationsDisabled || o || "none" === s;
              let C = i > 0 && this.getParsed(i - 1);
              for (let D = i; D < i + r; ++D) {
                const S = e[D],
                  A = this.getParsed(D),
                  O = M ? S : {},
                  V = Fe(A[p]),
                  j = (O[f] = a.getPixelForValue(A[f], D)),
                  ie = (O[p] =
                    o || V
                      ? l.getBasePixel()
                      : l.getPixelForValue(
                          c ? this.applyStack(l, A, c) : A[p],
                          D
                        ));
                (O.skip = isNaN(j) || isNaN(ie) || V),
                  (O.stop = D > 0 && Math.abs(A[f] - C[f]) > v),
                  _ && ((O.parsed = A), (O.raw = u.data[D])),
                  h &&
                    (O.options =
                      d ||
                      this.resolveDataElementOptions(
                        D,
                        S.active ? "active" : s
                      )),
                  M || this.updateElement(S, D, O, s),
                  (C = A);
              }
            }
            getMaxOverflow() {
              const e = this._cachedMeta,
                i = e.dataset,
                r = (i.options && i.options.borderWidth) || 0,
                s = e.data || [];
              if (!s.length) return r;
              const o = s[0].size(this.resolveDataElementOptions(0)),
                a = s[s.length - 1].size(
                  this.resolveDataElementOptions(s.length - 1)
                );
              return Math.max(r, o, a) / 2;
            }
            draw() {
              const e = this._cachedMeta;
              e.dataset.updateControlPoints(
                this.chart.chartArea,
                e.iScale.axis
              ),
                super.draw();
            }
          }
          return (
            (n.id = "line"),
            (n.defaults = {
              datasetElementType: "line",
              dataElementType: "point",
              showLine: !0,
              spanGaps: !1,
            }),
            (n.overrides = {
              scales: {
                _index_: { type: "category" },
                _value_: { type: "linear" },
              },
            }),
            n
          );
        })(),
        j6 = (() => {
          class n extends ur {
            constructor(e, i) {
              super(e, i),
                (this.innerRadius = void 0),
                (this.outerRadius = void 0);
            }
            getLabelAndValue(e) {
              const r = this.chart,
                s = r.data.labels || [],
                o = Pc(this._cachedMeta._parsed[e].r, r.options.locale);
              return { label: s[e] || "", value: o };
            }
            parseObjectData(e, i, r, s) {
              return zk.bind(this)(e, i, r, s);
            }
            update(e) {
              const i = this._cachedMeta.data;
              this._updateRadius(), this.updateElements(i, 0, i.length, e);
            }
            getMinMax() {
              const i = {
                min: Number.POSITIVE_INFINITY,
                max: Number.NEGATIVE_INFINITY,
              };
              return (
                this._cachedMeta.data.forEach((r, s) => {
                  const o = this.getParsed(s).r;
                  !isNaN(o) &&
                    this.chart.getDataVisibility(s) &&
                    (o < i.min && (i.min = o), o > i.max && (i.max = o));
                }),
                i
              );
            }
            _updateRadius() {
              const e = this.chart,
                i = e.chartArea,
                r = e.options,
                s = Math.min(i.right - i.left, i.bottom - i.top),
                o = Math.max(s / 2, 0),
                l =
                  (o -
                    Math.max(
                      r.cutoutPercentage ? (o / 100) * r.cutoutPercentage : 1,
                      0
                    )) /
                  e.getVisibleDatasetCount();
              (this.outerRadius = o - l * this.index),
                (this.innerRadius = this.outerRadius - l);
            }
            updateElements(e, i, r, s) {
              const o = "reset" === s,
                a = this.chart,
                c = a.options.animation,
                u = this._cachedMeta.rScale,
                d = u.xCenter,
                h = u.yCenter,
                f = u.getIndexAngle(0) - 0.5 * ut;
              let m,
                p = f;
              const _ = 360 / this.countVisibleElements();
              for (m = 0; m < i; ++m) p += this._computeAngle(m, s, _);
              for (m = i; m < i + r; m++) {
                const v = e[m];
                let M = p,
                  C = p + this._computeAngle(m, s, _),
                  D = a.getDataVisibility(m)
                    ? u.getDistanceFromCenterForValue(this.getParsed(m).r)
                    : 0;
                (p = C),
                  o &&
                    (c.animateScale && (D = 0), c.animateRotate && (M = C = f));
                const S = {
                  x: d,
                  y: h,
                  innerRadius: 0,
                  outerRadius: D,
                  startAngle: M,
                  endAngle: C,
                  options: this.resolveDataElementOptions(
                    m,
                    v.active ? "active" : s
                  ),
                };
                this.updateElement(v, m, S, s);
              }
            }
            countVisibleElements() {
              let i = 0;
              return (
                this._cachedMeta.data.forEach((r, s) => {
                  !isNaN(this.getParsed(s).r) &&
                    this.chart.getDataVisibility(s) &&
                    i++;
                }),
                i
              );
            }
            _computeAngle(e, i, r) {
              return this.chart.getDataVisibility(e)
                ? ki(this.resolveDataElementOptions(e, i).angle || r)
                : 0;
            }
          }
          return (
            (n.id = "polarArea"),
            (n.defaults = {
              dataElementType: "arc",
              animation: { animateRotate: !0, animateScale: !0 },
              animations: {
                numbers: {
                  type: "number",
                  properties: [
                    "x",
                    "y",
                    "startAngle",
                    "endAngle",
                    "innerRadius",
                    "outerRadius",
                  ],
                },
              },
              indexAxis: "r",
              startAngle: 0,
            }),
            (n.overrides = {
              aspectRatio: 1,
              plugins: {
                legend: {
                  labels: {
                    generateLabels(t) {
                      const e = t.data;
                      if (e.labels.length && e.datasets.length) {
                        const {
                          labels: { pointStyle: i },
                        } = t.legend.options;
                        return e.labels.map((r, s) => {
                          const a = t.getDatasetMeta(0).controller.getStyle(s);
                          return {
                            text: r,
                            fillStyle: a.backgroundColor,
                            strokeStyle: a.borderColor,
                            lineWidth: a.borderWidth,
                            pointStyle: i,
                            hidden: !t.getDataVisibility(s),
                            index: s,
                          };
                        });
                      }
                      return [];
                    },
                  },
                  onClick(t, e, i) {
                    i.chart.toggleDataVisibility(e.index), i.chart.update();
                  },
                },
                tooltip: {
                  callbacks: {
                    title: () => "",
                    label: (t) =>
                      t.chart.data.labels[t.dataIndex] +
                      ": " +
                      t.formattedValue,
                  },
                },
              },
              scales: {
                r: {
                  type: "radialLinear",
                  angleLines: { display: !1 },
                  beginAtZero: !0,
                  grid: { circular: !0 },
                  pointLabels: { display: !1 },
                  startAngle: 0,
                },
              },
            }),
            n
          );
        })(),
        H6 = (() => {
          class n extends g1 {}
          return (
            (n.id = "pie"),
            (n.defaults = {
              cutout: 0,
              rotation: 0,
              circumference: 360,
              radius: "100%",
            }),
            n
          );
        })(),
        z6 = (() => {
          class n extends ur {
            getLabelAndValue(e) {
              const i = this._cachedMeta.vScale,
                r = this.getParsed(e);
              return {
                label: i.getLabels()[e],
                value: "" + i.getLabelForValue(r[i.axis]),
              };
            }
            parseObjectData(e, i, r, s) {
              return zk.bind(this)(e, i, r, s);
            }
            update(e) {
              const i = this._cachedMeta,
                r = i.dataset,
                s = i.data || [],
                o = i.iScale.getLabels();
              if (((r.points = s), "resize" !== e)) {
                const a = this.resolveDatasetElementOptions(e);
                this.options.showLine || (a.borderWidth = 0),
                  this.updateElement(
                    r,
                    void 0,
                    { _loop: !0, _fullLoop: o.length === s.length, options: a },
                    e
                  );
              }
              this.updateElements(s, 0, s.length, e);
            }
            updateElements(e, i, r, s) {
              const o = this._cachedMeta.rScale,
                a = "reset" === s;
              for (let l = i; l < i + r; l++) {
                const c = e[l],
                  u = this.resolveDataElementOptions(
                    l,
                    c.active ? "active" : s
                  ),
                  d = o.getPointPositionForValue(l, this.getParsed(l).r),
                  h = a ? o.xCenter : d.x,
                  f = a ? o.yCenter : d.y,
                  p = {
                    x: h,
                    y: f,
                    angle: d.angle,
                    skip: isNaN(h) || isNaN(f),
                    options: u,
                  };
                this.updateElement(c, l, p, s);
              }
            }
          }
          return (
            (n.id = "radar"),
            (n.defaults = {
              datasetElementType: "line",
              dataElementType: "point",
              indexAxis: "r",
              showLine: !0,
              elements: { line: { fill: "start" } },
            }),
            (n.overrides = {
              aspectRatio: 1,
              scales: { r: { type: "radialLinear" } },
            }),
            n
          );
        })();
      class Ii {
        constructor() {
          (this.x = void 0),
            (this.y = void 0),
            (this.active = !1),
            (this.options = void 0),
            (this.$animations = void 0);
        }
        tooltipPosition(t) {
          const { x: e, y: i } = this.getProps(["x", "y"], t);
          return { x: e, y: i };
        }
        hasValue() {
          return Ra(this.x) && Ra(this.y);
        }
        getProps(t, e) {
          const i = this.$animations;
          if (!e || !i) return this;
          const r = {};
          return (
            t.forEach((s) => {
              r[s] = i[s] && i[s].active() ? i[s]._to : this[s];
            }),
            r
          );
        }
      }
      (Ii.defaults = {}), (Ii.defaultRoutes = void 0);
      const _1 = {
        values: (n) => (it(n) ? n : "" + n),
        numeric(n, t, e) {
          if (0 === n) return "0";
          const i = this.chart.options.locale;
          let r,
            s = n;
          if (e.length > 1) {
            const c = Math.max(
              Math.abs(e[0].value),
              Math.abs(e[e.length - 1].value)
            );
            (c < 1e-4 || c > 1e15) && (r = "scientific"),
              (s = (function U6(n, t) {
                let e =
                  t.length > 3
                    ? t[2].value - t[1].value
                    : t[1].value - t[0].value;
                return (
                  Math.abs(e) >= 1 &&
                    n !== Math.floor(n) &&
                    (e = n - Math.floor(n)),
                  e
                );
              })(n, e));
          }
          const o = di(Math.abs(s)),
            a = Math.max(Math.min(-1 * Math.floor(o), 20), 0),
            l = {
              notation: r,
              minimumFractionDigits: a,
              maximumFractionDigits: a,
            };
          return Object.assign(l, this.options.ticks.format), Pc(n, i, l);
        },
        logarithmic(n, t, e) {
          if (0 === n) return "0";
          const i = n / Math.pow(10, Math.floor(di(n)));
          return 1 === i || 2 === i || 5 === i
            ? _1.numeric.call(this, n, t, e)
            : "";
        },
      };
      var af = { formatters: _1 };
      function lf(n, t, e, i, r) {
        const s = ve(i, 0),
          o = Math.min(ve(r, n.length), n.length);
        let l,
          c,
          u,
          a = 0;
        for (
          e = Math.ceil(e),
            r && ((l = r - i), (e = l / Math.floor(l / e))),
            u = s;
          u < 0;

        )
          a++, (u = Math.round(s + a * e));
        for (c = Math.max(s, 0); c < o; c++)
          c === u && (t.push(n[c]), a++, (u = Math.round(s + a * e)));
      }
      Ie.set("scale", {
        display: !0,
        offset: !1,
        reverse: !1,
        beginAtZero: !1,
        bounds: "ticks",
        grace: 0,
        grid: {
          display: !0,
          lineWidth: 1,
          drawBorder: !0,
          drawOnChartArea: !0,
          drawTicks: !0,
          tickLength: 8,
          tickWidth: (n, t) => t.lineWidth,
          tickColor: (n, t) => t.color,
          offset: !1,
          borderDash: [],
          borderDashOffset: 0,
          borderWidth: 1,
        },
        title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
        ticks: {
          minRotation: 0,
          maxRotation: 50,
          mirror: !1,
          textStrokeWidth: 0,
          textStrokeColor: "",
          padding: 3,
          display: !0,
          autoSkip: !0,
          autoSkipPadding: 3,
          labelOffset: 0,
          callback: af.formatters.values,
          minor: {},
          major: {},
          align: "center",
          crossAlign: "near",
          showLabelBackdrop: !1,
          backdropColor: "rgba(255, 255, 255, 0.75)",
          backdropPadding: 2,
        },
      }),
        Ie.route("scale.ticks", "color", "", "color"),
        Ie.route("scale.grid", "color", "", "borderColor"),
        Ie.route("scale.grid", "borderColor", "", "borderColor"),
        Ie.route("scale.title", "color", "", "color"),
        Ie.describe("scale", {
          _fallback: !1,
          _scriptable: (n) =>
            !n.startsWith("before") &&
            !n.startsWith("after") &&
            "callback" !== n &&
            "parser" !== n,
          _indexable: (n) => "borderDash" !== n && "tickBorderDash" !== n,
        }),
        Ie.describe("scales", { _fallback: "scale" }),
        Ie.describe("scale.ticks", {
          _scriptable: (n) => "backdropPadding" !== n && "callback" !== n,
          _indexable: (n) => "backdropPadding" !== n,
        });
      const y1 = (n, t, e) =>
        "top" === t || "left" === t ? n[t] + e : n[t] - e;
      function v1(n, t) {
        const e = [],
          i = n.length / t,
          r = n.length;
        let s = 0;
        for (; s < r; s += i) e.push(n[Math.floor(s)]);
        return e;
      }
      function Z6(n, t, e) {
        const i = n.ticks.length,
          r = Math.min(t, i - 1),
          s = n._startPixel,
          o = n._endPixel,
          a = 1e-6;
        let c,
          l = n.getPixelForTick(r);
        if (
          !(
            e &&
            ((c =
              1 === i
                ? Math.max(l - s, o - l)
                : 0 === t
                ? (n.getPixelForTick(1) - l) / 2
                : (l - n.getPixelForTick(r - 1)) / 2),
            (l += r < t ? c : -c),
            l < s - a || l > o + a)
          )
        )
          return l;
      }
      function Nc(n) {
        return n.drawTicks ? n.tickLength : 0;
      }
      function b1(n, t) {
        if (!n.display) return 0;
        const e = Ht(n.font, t),
          i = rn(n.padding);
        return (it(n.text) ? n.text.length : 1) * e.lineHeight + i.height;
      }
      function tY(n, t, e) {
        let i = Zy(n);
        return (
          ((e && "right" !== t) || (!e && "right" === t)) &&
            (i = ((n) => ("left" === n ? "right" : "right" === n ? "left" : n))(
              i
            )),
          i
        );
      }
      class vo extends Ii {
        constructor(t) {
          super(),
            (this.id = t.id),
            (this.type = t.type),
            (this.options = void 0),
            (this.ctx = t.ctx),
            (this.chart = t.chart),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
            (this.maxWidth = void 0),
            (this.maxHeight = void 0),
            (this.paddingTop = void 0),
            (this.paddingBottom = void 0),
            (this.paddingLeft = void 0),
            (this.paddingRight = void 0),
            (this.axis = void 0),
            (this.labelRotation = void 0),
            (this.min = void 0),
            (this.max = void 0),
            (this._range = void 0),
            (this.ticks = []),
            (this._gridLineItems = null),
            (this._labelItems = null),
            (this._labelSizes = null),
            (this._length = 0),
            (this._maxLength = 0),
            (this._longestTextCache = {}),
            (this._startPixel = void 0),
            (this._endPixel = void 0),
            (this._reversePixels = !1),
            (this._userMax = void 0),
            (this._userMin = void 0),
            (this._suggestedMax = void 0),
            (this._suggestedMin = void 0),
            (this._ticksLength = 0),
            (this._borderValue = 0),
            (this._cache = {}),
            (this._dataLimitsCached = !1),
            (this.$context = void 0);
        }
        init(t) {
          (this.options = t.setContext(this.getContext())),
            (this.axis = t.axis),
            (this._userMin = this.parse(t.min)),
            (this._userMax = this.parse(t.max)),
            (this._suggestedMin = this.parse(t.suggestedMin)),
            (this._suggestedMax = this.parse(t.suggestedMax));
        }
        parse(t, e) {
          return t;
        }
        getUserBounds() {
          let {
            _userMin: t,
            _userMax: e,
            _suggestedMin: i,
            _suggestedMax: r,
          } = this;
          return (
            (t = ci(t, Number.POSITIVE_INFINITY)),
            (e = ci(e, Number.NEGATIVE_INFINITY)),
            (i = ci(i, Number.POSITIVE_INFINITY)),
            (r = ci(r, Number.NEGATIVE_INFINITY)),
            {
              min: ci(t, i),
              max: ci(e, r),
              minDefined: Mt(t),
              maxDefined: Mt(e),
            }
          );
        }
        getMinMax(t) {
          let o,
            {
              min: e,
              max: i,
              minDefined: r,
              maxDefined: s,
            } = this.getUserBounds();
          if (r && s) return { min: e, max: i };
          const a = this.getMatchingVisibleMetas();
          for (let l = 0, c = a.length; l < c; ++l)
            (o = a[l].controller.getMinMax(this, t)),
              r || (e = Math.min(e, o.min)),
              s || (i = Math.max(i, o.max));
          return (
            (e = s && e > i ? i : e),
            (i = r && e > i ? e : i),
            { min: ci(e, ci(i, e)), max: ci(i, ci(e, i)) }
          );
        }
        getPadding() {
          return {
            left: this.paddingLeft || 0,
            top: this.paddingTop || 0,
            right: this.paddingRight || 0,
            bottom: this.paddingBottom || 0,
          };
        }
        getTicks() {
          return this.ticks;
        }
        getLabels() {
          const t = this.chart.data;
          return (
            this.options.labels ||
            (this.isHorizontal() ? t.xLabels : t.yLabels) ||
            t.labels ||
            []
          );
        }
        beforeLayout() {
          (this._cache = {}), (this._dataLimitsCached = !1);
        }
        beforeUpdate() {
          rt(this.options.beforeUpdate, [this]);
        }
        update(t, e, i) {
          const { beginAtZero: r, grace: s, ticks: o } = this.options,
            a = o.sampleSize;
          this.beforeUpdate(),
            (this.maxWidth = t),
            (this.maxHeight = e),
            (this._margins = i =
              Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, i)),
            (this.ticks = null),
            (this._labelSizes = null),
            (this._gridLineItems = null),
            (this._labelItems = null),
            this.beforeSetDimensions(),
            this.setDimensions(),
            this.afterSetDimensions(),
            (this._maxLength = this.isHorizontal()
              ? this.width + i.left + i.right
              : this.height + i.top + i.bottom),
            this._dataLimitsCached ||
              (this.beforeDataLimits(),
              this.determineDataLimits(),
              this.afterDataLimits(),
              (this._range = (function TG(n, t, e) {
                const { min: i, max: r } = n,
                  s = sk(t, (r - i) / 2),
                  o = (a, l) => (e && 0 === a ? 0 : a + l);
                return { min: o(i, -Math.abs(s)), max: o(r, s) };
              })(this, s, r)),
              (this._dataLimitsCached = !0)),
            this.beforeBuildTicks(),
            (this.ticks = this.buildTicks() || []),
            this.afterBuildTicks();
          const l = a < this.ticks.length;
          this._convertTicksToLabels(l ? v1(this.ticks, a) : this.ticks),
            this.configure(),
            this.beforeCalculateLabelRotation(),
            this.calculateLabelRotation(),
            this.afterCalculateLabelRotation(),
            o.display &&
              (o.autoSkip || "auto" === o.source) &&
              ((this.ticks = (function $6(n, t) {
                const e = n.options.ticks,
                  i =
                    e.maxTicksLimit ||
                    (function q6(n) {
                      const t = n.options.offset,
                        e = n._tickSize();
                      return Math.floor(
                        Math.min(n._length / e + (t ? 0 : 1), n._maxLength / e)
                      );
                    })(n),
                  r = e.major.enabled
                    ? (function G6(n) {
                        const t = [];
                        let e, i;
                        for (e = 0, i = n.length; e < i; e++)
                          n[e].major && t.push(e);
                        return t;
                      })(t)
                    : [],
                  s = r.length,
                  o = r[0],
                  a = r[s - 1],
                  l = [];
                if (s > i)
                  return (
                    (function Y6(n, t, e, i) {
                      let o,
                        r = 0,
                        s = e[0];
                      for (i = Math.ceil(i), o = 0; o < n.length; o++)
                        o === s && (t.push(n[o]), r++, (s = e[r * i]));
                    })(t, l, r, s / i),
                    l
                  );
                const c = (function W6(n, t, e) {
                  const i = (function K6(n) {
                      const t = n.length;
                      let e, i;
                      if (t < 2) return !1;
                      for (i = n[0], e = 1; e < t; ++e)
                        if (n[e] - n[e - 1] !== i) return !1;
                      return i;
                    })(n),
                    r = t.length / e;
                  if (!i) return Math.max(r, 1);
                  const s = (function jW(n) {
                    const t = [],
                      e = Math.sqrt(n);
                    let i;
                    for (i = 1; i < e; i++)
                      n % i == 0 && (t.push(i), t.push(n / i));
                    return (
                      e === (0 | e) && t.push(e),
                      t.sort((r, s) => r - s).pop(),
                      t
                    );
                  })(i);
                  for (let o = 0, a = s.length - 1; o < a; o++) {
                    const l = s[o];
                    if (l > r) return l;
                  }
                  return Math.max(r, 1);
                })(r, t, i);
                if (s > 0) {
                  let u, d;
                  const h = s > 1 ? Math.round((a - o) / (s - 1)) : null;
                  for (
                    lf(t, l, c, Fe(h) ? 0 : o - h, o), u = 0, d = s - 1;
                    u < d;
                    u++
                  )
                    lf(t, l, c, r[u], r[u + 1]);
                  return lf(t, l, c, a, Fe(h) ? t.length : a + h), l;
                }
                return lf(t, l, c), l;
              })(this, this.ticks)),
              (this._labelSizes = null),
              this.afterAutoSkip()),
            l && this._convertTicksToLabels(this.ticks),
            this.beforeFit(),
            this.fit(),
            this.afterFit(),
            this.afterUpdate();
        }
        configure() {
          let e,
            i,
            t = this.options.reverse;
          this.isHorizontal()
            ? ((e = this.left), (i = this.right))
            : ((e = this.top), (i = this.bottom), (t = !t)),
            (this._startPixel = e),
            (this._endPixel = i),
            (this._reversePixels = t),
            (this._length = i - e),
            (this._alignToPixels = this.options.alignToPixels);
        }
        afterUpdate() {
          rt(this.options.afterUpdate, [this]);
        }
        beforeSetDimensions() {
          rt(this.options.beforeSetDimensions, [this]);
        }
        setDimensions() {
          this.isHorizontal()
            ? ((this.width = this.maxWidth),
              (this.left = 0),
              (this.right = this.width))
            : ((this.height = this.maxHeight),
              (this.top = 0),
              (this.bottom = this.height)),
            (this.paddingLeft = 0),
            (this.paddingTop = 0),
            (this.paddingRight = 0),
            (this.paddingBottom = 0);
        }
        afterSetDimensions() {
          rt(this.options.afterSetDimensions, [this]);
        }
        _callHooks(t) {
          this.chart.notifyPlugins(t, this.getContext()),
            rt(this.options[t], [this]);
        }
        beforeDataLimits() {
          this._callHooks("beforeDataLimits");
        }
        determineDataLimits() {}
        afterDataLimits() {
          this._callHooks("afterDataLimits");
        }
        beforeBuildTicks() {
          this._callHooks("beforeBuildTicks");
        }
        buildTicks() {
          return [];
        }
        afterBuildTicks() {
          this._callHooks("afterBuildTicks");
        }
        beforeTickToLabelConversion() {
          rt(this.options.beforeTickToLabelConversion, [this]);
        }
        generateTickLabels(t) {
          const e = this.options.ticks;
          let i, r, s;
          for (i = 0, r = t.length; i < r; i++)
            (s = t[i]), (s.label = rt(e.callback, [s.value, i, t], this));
        }
        afterTickToLabelConversion() {
          rt(this.options.afterTickToLabelConversion, [this]);
        }
        beforeCalculateLabelRotation() {
          rt(this.options.beforeCalculateLabelRotation, [this]);
        }
        calculateLabelRotation() {
          const t = this.options,
            e = t.ticks,
            i = this.ticks.length,
            r = e.minRotation || 0,
            s = e.maxRotation;
          let a,
            l,
            c,
            o = r;
          if (
            !this._isVisible() ||
            !e.display ||
            r >= s ||
            i <= 1 ||
            !this.isHorizontal()
          )
            return void (this.labelRotation = r);
          const u = this._getLabelSizes(),
            d = u.widest.width,
            h = u.highest.height,
            f = Wt(this.chart.width - d, 0, this.maxWidth);
          (a = t.offset ? this.maxWidth / i : f / (i - 1)),
            d + 6 > a &&
              ((a = f / (i - (t.offset ? 0.5 : 1))),
              (l =
                this.maxHeight -
                Nc(t.grid) -
                e.padding -
                b1(t.title, this.chart.options.font)),
              (c = Math.sqrt(d * d + h * h)),
              (o = Yy(
                Math.min(
                  Math.asin(Wt((u.highest.height + 6) / a, -1, 1)),
                  Math.asin(Wt(l / c, -1, 1)) - Math.asin(Wt(h / c, -1, 1))
                )
              )),
              (o = Math.max(r, Math.min(s, o)))),
            (this.labelRotation = o);
        }
        afterCalculateLabelRotation() {
          rt(this.options.afterCalculateLabelRotation, [this]);
        }
        afterAutoSkip() {}
        beforeFit() {
          rt(this.options.beforeFit, [this]);
        }
        fit() {
          const t = { width: 0, height: 0 },
            {
              chart: e,
              options: { ticks: i, title: r, grid: s },
            } = this,
            o = this._isVisible(),
            a = this.isHorizontal();
          if (o) {
            const l = b1(r, e.options.font);
            if (
              (a
                ? ((t.width = this.maxWidth), (t.height = Nc(s) + l))
                : ((t.height = this.maxHeight), (t.width = Nc(s) + l)),
              i.display && this.ticks.length)
            ) {
              const {
                  first: c,
                  last: u,
                  widest: d,
                  highest: h,
                } = this._getLabelSizes(),
                f = 2 * i.padding,
                p = ki(this.labelRotation),
                m = Math.cos(p),
                _ = Math.sin(p);
              a
                ? (t.height = Math.min(
                    this.maxHeight,
                    t.height + (i.mirror ? 0 : _ * d.width + m * h.height) + f
                  ))
                : (t.width = Math.min(
                    this.maxWidth,
                    t.width + (i.mirror ? 0 : m * d.width + _ * h.height) + f
                  )),
                this._calculatePadding(c, u, _, m);
            }
          }
          this._handleMargins(),
            a
              ? ((this.width = this._length =
                  e.width - this._margins.left - this._margins.right),
                (this.height = t.height))
              : ((this.width = t.width),
                (this.height = this._length =
                  e.height - this._margins.top - this._margins.bottom));
        }
        _calculatePadding(t, e, i, r) {
          const {
              ticks: { align: s, padding: o },
              position: a,
            } = this.options,
            l = 0 !== this.labelRotation,
            c = "top" !== a && "x" === this.axis;
          if (this.isHorizontal()) {
            const u = this.getPixelForTick(0) - this.left,
              d = this.right - this.getPixelForTick(this.ticks.length - 1);
            let h = 0,
              f = 0;
            l
              ? c
                ? ((h = r * t.width), (f = i * e.height))
                : ((h = i * t.height), (f = r * e.width))
              : "start" === s
              ? (f = e.width)
              : "end" === s
              ? (h = t.width)
              : "inner" !== s && ((h = t.width / 2), (f = e.width / 2)),
              (this.paddingLeft = Math.max(
                ((h - u + o) * this.width) / (this.width - u),
                0
              )),
              (this.paddingRight = Math.max(
                ((f - d + o) * this.width) / (this.width - d),
                0
              ));
          } else {
            let u = e.height / 2,
              d = t.height / 2;
            "start" === s
              ? ((u = 0), (d = t.height))
              : "end" === s && ((u = e.height), (d = 0)),
              (this.paddingTop = u + o),
              (this.paddingBottom = d + o);
          }
        }
        _handleMargins() {
          this._margins &&
            ((this._margins.left = Math.max(
              this.paddingLeft,
              this._margins.left
            )),
            (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
            (this._margins.right = Math.max(
              this.paddingRight,
              this._margins.right
            )),
            (this._margins.bottom = Math.max(
              this.paddingBottom,
              this._margins.bottom
            )));
        }
        afterFit() {
          rt(this.options.afterFit, [this]);
        }
        isHorizontal() {
          const { axis: t, position: e } = this.options;
          return "top" === e || "bottom" === e || "x" === t;
        }
        isFullSize() {
          return this.options.fullSize;
        }
        _convertTicksToLabels(t) {
          let e, i;
          for (
            this.beforeTickToLabelConversion(),
              this.generateTickLabels(t),
              e = 0,
              i = t.length;
            e < i;
            e++
          )
            Fe(t[e].label) && (t.splice(e, 1), i--, e--);
          this.afterTickToLabelConversion();
        }
        _getLabelSizes() {
          let t = this._labelSizes;
          if (!t) {
            const e = this.options.ticks.sampleSize;
            let i = this.ticks;
            e < i.length && (i = v1(i, e)),
              (this._labelSizes = t = this._computeLabelSizes(i, i.length));
          }
          return t;
        }
        _computeLabelSizes(t, e) {
          const { ctx: i, _longestTextCache: r } = this,
            s = [],
            o = [];
          let c,
            u,
            d,
            h,
            f,
            p,
            m,
            _,
            v,
            M,
            C,
            a = 0,
            l = 0;
          for (c = 0; c < e; ++c) {
            if (
              ((h = t[c].label),
              (f = this._resolveTickFontOptions(c)),
              (i.font = p = f.string),
              (m = r[p] = r[p] || { data: {}, gc: [] }),
              (_ = f.lineHeight),
              (v = M = 0),
              Fe(h) || it(h))
            ) {
              if (it(h))
                for (u = 0, d = h.length; u < d; ++u)
                  (C = h[u]),
                    !Fe(C) &&
                      !it(C) &&
                      ((v = Jh(i, m.data, m.gc, v, C)), (M += _));
            } else (v = Jh(i, m.data, m.gc, v, h)), (M = _);
            s.push(v), o.push(M), (a = Math.max(v, a)), (l = Math.max(M, l));
          }
          !(function Q6(n, t) {
            qe(n, (e) => {
              const i = e.gc,
                r = i.length / 2;
              let s;
              if (r > t) {
                for (s = 0; s < r; ++s) delete e.data[i[s]];
                i.splice(0, r);
              }
            });
          })(r, e);
          const D = s.indexOf(a),
            S = o.indexOf(l),
            A = (O) => ({ width: s[O] || 0, height: o[O] || 0 });
          return {
            first: A(0),
            last: A(e - 1),
            widest: A(D),
            highest: A(S),
            widths: s,
            heights: o,
          };
        }
        getLabelForValue(t) {
          return t;
        }
        getPixelForValue(t, e) {
          return NaN;
        }
        getValueForPixel(t) {}
        getPixelForTick(t) {
          const e = this.ticks;
          return t < 0 || t > e.length - 1
            ? null
            : this.getPixelForValue(e[t].value);
        }
        getPixelForDecimal(t) {
          this._reversePixels && (t = 1 - t);
          const e = this._startPixel + t * this._length;
          return (function UW(n) {
            return Wt(n, -32768, 32767);
          })(this._alignToPixels ? fo(this.chart, e, 0) : e);
        }
        getDecimalForPixel(t) {
          const e = (t - this._startPixel) / this._length;
          return this._reversePixels ? 1 - e : e;
        }
        getBasePixel() {
          return this.getPixelForValue(this.getBaseValue());
        }
        getBaseValue() {
          const { min: t, max: e } = this;
          return t < 0 && e < 0 ? e : t > 0 && e > 0 ? t : 0;
        }
        getContext(t) {
          const e = this.ticks || [];
          if (t >= 0 && t < e.length) {
            const i = e[t];
            return (
              i.$context ||
              (i.$context = (function eY(n, t, e) {
                return Ms(n, { tick: e, index: t, type: "tick" });
              })(this.getContext(), t, i))
            );
          }
          return (
            this.$context ||
            (this.$context = (function J6(n, t) {
              return Ms(n, { scale: t, type: "scale" });
            })(this.chart.getContext(), this))
          );
        }
        _tickSize() {
          const t = this.options.ticks,
            e = ki(this.labelRotation),
            i = Math.abs(Math.cos(e)),
            r = Math.abs(Math.sin(e)),
            s = this._getLabelSizes(),
            o = t.autoSkipPadding || 0,
            a = s ? s.widest.width + o : 0,
            l = s ? s.highest.height + o : 0;
          return this.isHorizontal()
            ? l * i > a * r
              ? a / i
              : l / r
            : l * r < a * i
            ? l / i
            : a / r;
        }
        _isVisible() {
          const t = this.options.display;
          return "auto" !== t ? !!t : this.getMatchingVisibleMetas().length > 0;
        }
        _computeGridLineItems(t) {
          const e = this.axis,
            i = this.chart,
            r = this.options,
            { grid: s, position: o } = r,
            a = s.offset,
            l = this.isHorizontal(),
            u = this.ticks.length + (a ? 1 : 0),
            d = Nc(s),
            h = [],
            f = s.setContext(this.getContext()),
            p = f.drawBorder ? f.borderWidth : 0,
            m = p / 2,
            _ = function (ee) {
              return fo(i, ee, p);
            };
          let v, M, C, D, S, A, O, V, j, ie, Ce, ue;
          if ("top" === o)
            (v = _(this.bottom)),
              (A = this.bottom - d),
              (V = v - m),
              (ie = _(t.top) + m),
              (ue = t.bottom);
          else if ("bottom" === o)
            (v = _(this.top)),
              (ie = t.top),
              (ue = _(t.bottom) - m),
              (A = v + m),
              (V = this.top + d);
          else if ("left" === o)
            (v = _(this.right)),
              (S = this.right - d),
              (O = v - m),
              (j = _(t.left) + m),
              (Ce = t.right);
          else if ("right" === o)
            (v = _(this.left)),
              (j = t.left),
              (Ce = _(t.right) - m),
              (S = v + m),
              (O = this.left + d);
          else if ("x" === e) {
            if ("center" === o) v = _((t.top + t.bottom) / 2 + 0.5);
            else if (Te(o)) {
              const ee = Object.keys(o)[0];
              v = _(this.chart.scales[ee].getPixelForValue(o[ee]));
            }
            (ie = t.top), (ue = t.bottom), (A = v + m), (V = A + d);
          } else if ("y" === e) {
            if ("center" === o) v = _((t.left + t.right) / 2);
            else if (Te(o)) {
              const ee = Object.keys(o)[0];
              v = _(this.chart.scales[ee].getPixelForValue(o[ee]));
            }
            (S = v - m), (O = S - d), (j = t.left), (Ce = t.right);
          }
          const Ne = ve(r.ticks.maxTicksLimit, u),
            vt = Math.max(1, Math.ceil(u / Ne));
          for (M = 0; M < u; M += vt) {
            const ee = s.setContext(this.getContext(M)),
              L = ee.lineWidth,
              H = ee.color,
              Y = ee.borderDash || [],
              Se = ee.borderDashOffset,
              st = ee.tickWidth,
              gn = ee.tickColor,
              Rt = ee.tickBorderDash || [],
              An = ee.tickBorderDashOffset;
            (C = Z6(this, M, a)),
              void 0 !== C &&
                ((D = fo(i, C, L)),
                l ? (S = O = j = Ce = D) : (A = V = ie = ue = D),
                h.push({
                  tx1: S,
                  ty1: A,
                  tx2: O,
                  ty2: V,
                  x1: j,
                  y1: ie,
                  x2: Ce,
                  y2: ue,
                  width: L,
                  color: H,
                  borderDash: Y,
                  borderDashOffset: Se,
                  tickWidth: st,
                  tickColor: gn,
                  tickBorderDash: Rt,
                  tickBorderDashOffset: An,
                }));
          }
          return (this._ticksLength = u), (this._borderValue = v), h;
        }
        _computeLabelItems(t) {
          const e = this.axis,
            i = this.options,
            { position: r, ticks: s } = i,
            o = this.isHorizontal(),
            a = this.ticks,
            { align: l, crossAlign: c, padding: u, mirror: d } = s,
            h = Nc(i.grid),
            f = h + u,
            p = d ? -u : f,
            m = -ki(this.labelRotation),
            _ = [];
          let v,
            M,
            C,
            D,
            S,
            A,
            O,
            V,
            j,
            ie,
            Ce,
            ue,
            Ne = "middle";
          if ("top" === r)
            (A = this.bottom - p), (O = this._getXAxisLabelAlignment());
          else if ("bottom" === r)
            (A = this.top + p), (O = this._getXAxisLabelAlignment());
          else if ("left" === r) {
            const ee = this._getYAxisLabelAlignment(h);
            (O = ee.textAlign), (S = ee.x);
          } else if ("right" === r) {
            const ee = this._getYAxisLabelAlignment(h);
            (O = ee.textAlign), (S = ee.x);
          } else if ("x" === e) {
            if ("center" === r) A = (t.top + t.bottom) / 2 + f;
            else if (Te(r)) {
              const ee = Object.keys(r)[0];
              A = this.chart.scales[ee].getPixelForValue(r[ee]) + f;
            }
            O = this._getXAxisLabelAlignment();
          } else if ("y" === e) {
            if ("center" === r) S = (t.left + t.right) / 2 - f;
            else if (Te(r)) {
              const ee = Object.keys(r)[0];
              S = this.chart.scales[ee].getPixelForValue(r[ee]);
            }
            O = this._getYAxisLabelAlignment(h).textAlign;
          }
          "y" === e &&
            ("start" === l ? (Ne = "top") : "end" === l && (Ne = "bottom"));
          const vt = this._getLabelSizes();
          for (v = 0, M = a.length; v < M; ++v) {
            (C = a[v]), (D = C.label);
            const ee = s.setContext(this.getContext(v));
            (V = this.getPixelForTick(v) + s.labelOffset),
              (j = this._resolveTickFontOptions(v)),
              (ie = j.lineHeight),
              (Ce = it(D) ? D.length : 1);
            const L = Ce / 2,
              H = ee.color,
              Y = ee.textStrokeColor,
              Se = ee.textStrokeWidth;
            let gn,
              st = O;
            if (
              (o
                ? ((S = V),
                  "inner" === O &&
                    (st =
                      v === M - 1
                        ? this.options.reverse
                          ? "left"
                          : "right"
                        : 0 === v
                        ? this.options.reverse
                          ? "right"
                          : "left"
                        : "center"),
                  (ue =
                    "top" === r
                      ? "near" === c || 0 !== m
                        ? -Ce * ie + ie / 2
                        : "center" === c
                        ? -vt.highest.height / 2 - L * ie + ie
                        : ie / 2 - vt.highest.height
                      : "near" === c || 0 !== m
                      ? ie / 2
                      : "center" === c
                      ? vt.highest.height / 2 - L * ie
                      : vt.highest.height - Ce * ie),
                  d && (ue *= -1))
                : ((A = V), (ue = ((1 - Ce) * ie) / 2)),
              ee.showLabelBackdrop)
            ) {
              const Rt = rn(ee.backdropPadding),
                An = vt.heights[v],
                Je = vt.widths[v];
              let $a = A + ue - Rt.top,
                nu = S - Rt.left;
              switch (Ne) {
                case "middle":
                  $a -= An / 2;
                  break;
                case "bottom":
                  $a -= An;
              }
              switch (O) {
                case "center":
                  nu -= Je / 2;
                  break;
                case "right":
                  nu -= Je;
              }
              gn = {
                left: nu,
                top: $a,
                width: Je + Rt.width,
                height: An + Rt.height,
                color: ee.backdropColor,
              };
            }
            _.push({
              rotation: m,
              label: D,
              font: j,
              color: H,
              strokeColor: Y,
              strokeWidth: Se,
              textOffset: ue,
              textAlign: st,
              textBaseline: Ne,
              translation: [S, A],
              backdrop: gn,
            });
          }
          return _;
        }
        _getXAxisLabelAlignment() {
          const { position: t, ticks: e } = this.options;
          if (-ki(this.labelRotation)) return "top" === t ? "left" : "right";
          let r = "center";
          return (
            "start" === e.align
              ? (r = "left")
              : "end" === e.align
              ? (r = "right")
              : "inner" === e.align && (r = "inner"),
            r
          );
        }
        _getYAxisLabelAlignment(t) {
          const {
              position: e,
              ticks: { crossAlign: i, mirror: r, padding: s },
            } = this.options,
            a = t + s,
            l = this._getLabelSizes().widest.width;
          let c, u;
          return (
            "left" === e
              ? r
                ? ((u = this.right + s),
                  "near" === i
                    ? (c = "left")
                    : "center" === i
                    ? ((c = "center"), (u += l / 2))
                    : ((c = "right"), (u += l)))
                : ((u = this.right - a),
                  "near" === i
                    ? (c = "right")
                    : "center" === i
                    ? ((c = "center"), (u -= l / 2))
                    : ((c = "left"), (u = this.left)))
              : "right" === e
              ? r
                ? ((u = this.left + s),
                  "near" === i
                    ? (c = "right")
                    : "center" === i
                    ? ((c = "center"), (u -= l / 2))
                    : ((c = "left"), (u -= l)))
                : ((u = this.left + a),
                  "near" === i
                    ? (c = "left")
                    : "center" === i
                    ? ((c = "center"), (u += l / 2))
                    : ((c = "right"), (u = this.right)))
              : (c = "right"),
            { textAlign: c, x: u }
          );
        }
        _computeLabelArea() {
          if (this.options.ticks.mirror) return;
          const t = this.chart,
            e = this.options.position;
          return "left" === e || "right" === e
            ? { top: 0, left: this.left, bottom: t.height, right: this.right }
            : "top" === e || "bottom" === e
            ? { top: this.top, left: 0, bottom: this.bottom, right: t.width }
            : void 0;
        }
        drawBackground() {
          const {
            ctx: t,
            options: { backgroundColor: e },
            left: i,
            top: r,
            width: s,
            height: o,
          } = this;
          e &&
            (t.save(), (t.fillStyle = e), t.fillRect(i, r, s, o), t.restore());
        }
        getLineWidthForValue(t) {
          const e = this.options.grid;
          if (!this._isVisible() || !e.display) return 0;
          const r = this.ticks.findIndex((s) => s.value === t);
          return r >= 0 ? e.setContext(this.getContext(r)).lineWidth : 0;
        }
        drawGrid(t) {
          const e = this.options.grid,
            i = this.ctx,
            r =
              this._gridLineItems ||
              (this._gridLineItems = this._computeGridLineItems(t));
          let s, o;
          const a = (l, c, u) => {
            !u.width ||
              !u.color ||
              (i.save(),
              (i.lineWidth = u.width),
              (i.strokeStyle = u.color),
              i.setLineDash(u.borderDash || []),
              (i.lineDashOffset = u.borderDashOffset),
              i.beginPath(),
              i.moveTo(l.x, l.y),
              i.lineTo(c.x, c.y),
              i.stroke(),
              i.restore());
          };
          if (e.display)
            for (s = 0, o = r.length; s < o; ++s) {
              const l = r[s];
              e.drawOnChartArea &&
                a({ x: l.x1, y: l.y1 }, { x: l.x2, y: l.y2 }, l),
                e.drawTicks &&
                  a(
                    { x: l.tx1, y: l.ty1 },
                    { x: l.tx2, y: l.ty2 },
                    {
                      color: l.tickColor,
                      width: l.tickWidth,
                      borderDash: l.tickBorderDash,
                      borderDashOffset: l.tickBorderDashOffset,
                    }
                  );
            }
        }
        drawBorder() {
          const {
              chart: t,
              ctx: e,
              options: { grid: i },
            } = this,
            r = i.setContext(this.getContext()),
            s = i.drawBorder ? r.borderWidth : 0;
          if (!s) return;
          const o = i.setContext(this.getContext(0)).lineWidth,
            a = this._borderValue;
          let l, c, u, d;
          this.isHorizontal()
            ? ((l = fo(t, this.left, s) - s / 2),
              (c = fo(t, this.right, o) + o / 2),
              (u = d = a))
            : ((u = fo(t, this.top, s) - s / 2),
              (d = fo(t, this.bottom, o) + o / 2),
              (l = c = a)),
            e.save(),
            (e.lineWidth = r.borderWidth),
            (e.strokeStyle = r.borderColor),
            e.beginPath(),
            e.moveTo(l, u),
            e.lineTo(c, d),
            e.stroke(),
            e.restore();
        }
        drawLabels(t) {
          if (!this.options.ticks.display) return;
          const i = this.ctx,
            r = this._computeLabelArea();
          r && ef(i, r);
          const s =
            this._labelItems || (this._labelItems = this._computeLabelItems(t));
          let o, a;
          for (o = 0, a = s.length; o < a; ++o) {
            const l = s[o],
              c = l.font,
              u = l.label;
            l.backdrop &&
              ((i.fillStyle = l.backdrop.color),
              i.fillRect(
                l.backdrop.left,
                l.backdrop.top,
                l.backdrop.width,
                l.backdrop.height
              )),
              po(i, u, 0, l.textOffset, c, l);
          }
          r && tf(i);
        }
        drawTitle() {
          const {
            ctx: t,
            options: { position: e, title: i, reverse: r },
          } = this;
          if (!i.display) return;
          const s = Ht(i.font),
            o = rn(i.padding),
            a = i.align;
          let l = s.lineHeight / 2;
          "bottom" === e || "center" === e || Te(e)
            ? ((l += o.bottom),
              it(i.text) && (l += s.lineHeight * (i.text.length - 1)))
            : (l += o.top);
          const {
            titleX: c,
            titleY: u,
            maxWidth: d,
            rotation: h,
          } = (function nY(n, t, e, i) {
            const { top: r, left: s, bottom: o, right: a, chart: l } = n,
              { chartArea: c, scales: u } = l;
            let h,
              f,
              p,
              d = 0;
            const m = o - r,
              _ = a - s;
            if (n.isHorizontal()) {
              if (((f = nn(i, s, a)), Te(e))) {
                const v = Object.keys(e)[0];
                p = u[v].getPixelForValue(e[v]) + m - t;
              } else
                p =
                  "center" === e ? (c.bottom + c.top) / 2 + m - t : y1(n, e, t);
              h = a - s;
            } else {
              if (Te(e)) {
                const v = Object.keys(e)[0];
                f = u[v].getPixelForValue(e[v]) - _ + t;
              } else
                f =
                  "center" === e ? (c.left + c.right) / 2 - _ + t : y1(n, e, t);
              (p = nn(i, o, r)), (d = "left" === e ? -yt : yt);
            }
            return { titleX: f, titleY: p, maxWidth: h, rotation: d };
          })(this, l, e, a);
          po(t, i.text, 0, 0, s, {
            color: i.color,
            maxWidth: d,
            rotation: h,
            textAlign: tY(a, e, r),
            textBaseline: "middle",
            translation: [c, u],
          });
        }
        draw(t) {
          !this._isVisible() ||
            (this.drawBackground(),
            this.drawGrid(t),
            this.drawBorder(),
            this.drawTitle(),
            this.drawLabels(t));
        }
        _layers() {
          const t = this.options,
            e = (t.ticks && t.ticks.z) || 0,
            i = ve(t.grid && t.grid.z, -1);
          return this._isVisible() && this.draw === vo.prototype.draw
            ? [
                {
                  z: i,
                  draw: (r) => {
                    this.drawBackground(), this.drawGrid(r), this.drawTitle();
                  },
                },
                {
                  z: i + 1,
                  draw: () => {
                    this.drawBorder();
                  },
                },
                {
                  z: e,
                  draw: (r) => {
                    this.drawLabels(r);
                  },
                },
              ]
            : [
                {
                  z: e,
                  draw: (r) => {
                    this.draw(r);
                  },
                },
              ];
        }
        getMatchingVisibleMetas(t) {
          const e = this.chart.getSortedVisibleDatasetMetas(),
            i = this.axis + "AxisID",
            r = [];
          let s, o;
          for (s = 0, o = e.length; s < o; ++s) {
            const a = e[s];
            a[i] === this.id && (!t || a.type === t) && r.push(a);
          }
          return r;
        }
        _resolveTickFontOptions(t) {
          return Ht(this.options.ticks.setContext(this.getContext(t)).font);
        }
        _maxDigits() {
          const t = this._resolveTickFontOptions(0).lineHeight;
          return (this.isHorizontal() ? this.width : this.height) / t;
        }
      }
      class cf {
        constructor(t, e, i) {
          (this.type = t),
            (this.scope = e),
            (this.override = i),
            (this.items = Object.create(null));
        }
        isForType(t) {
          return Object.prototype.isPrototypeOf.call(
            this.type.prototype,
            t.prototype
          );
        }
        register(t) {
          const e = Object.getPrototypeOf(t);
          let i;
          (function sY(n) {
            return "id" in n && "defaults" in n;
          })(e) && (i = this.register(e));
          const r = this.items,
            s = t.id,
            o = this.scope + "." + s;
          if (!s) throw new Error("class does not have id: " + t);
          return (
            s in r ||
              ((r[s] = t),
              (function iY(n, t, e) {
                const i = wc(Object.create(null), [
                  e ? Ie.get(e) : {},
                  Ie.get(t),
                  n.defaults,
                ]);
                Ie.set(t, i),
                  n.defaultRoutes &&
                    (function rY(n, t) {
                      Object.keys(t).forEach((e) => {
                        const i = e.split("."),
                          r = i.pop(),
                          s = [n].concat(i).join("."),
                          o = t[e].split("."),
                          a = o.pop(),
                          l = o.join(".");
                        Ie.route(s, r, l, a);
                      });
                    })(t, n.defaultRoutes),
                  n.descriptors && Ie.describe(t, n.descriptors);
              })(t, o, i),
              this.override && Ie.override(t.id, t.overrides)),
            o
          );
        }
        get(t) {
          return this.items[t];
        }
        unregister(t) {
          const e = this.items,
            i = t.id,
            r = this.scope;
          i in e && delete e[i],
            r && i in Ie[r] && (delete Ie[r][i], this.override && delete ho[i]);
        }
      }
      var dr = new (class oY {
          constructor() {
            (this.controllers = new cf(ur, "datasets", !0)),
              (this.elements = new cf(Ii, "elements")),
              (this.plugins = new cf(Object, "plugins")),
              (this.scales = new cf(vo, "scales")),
              (this._typedRegistries = [
                this.controllers,
                this.scales,
                this.elements,
              ]);
          }
          add(...t) {
            this._each("register", t);
          }
          remove(...t) {
            this._each("unregister", t);
          }
          addControllers(...t) {
            this._each("register", t, this.controllers);
          }
          addElements(...t) {
            this._each("register", t, this.elements);
          }
          addPlugins(...t) {
            this._each("register", t, this.plugins);
          }
          addScales(...t) {
            this._each("register", t, this.scales);
          }
          getController(t) {
            return this._get(t, this.controllers, "controller");
          }
          getElement(t) {
            return this._get(t, this.elements, "element");
          }
          getPlugin(t) {
            return this._get(t, this.plugins, "plugin");
          }
          getScale(t) {
            return this._get(t, this.scales, "scale");
          }
          removeControllers(...t) {
            this._each("unregister", t, this.controllers);
          }
          removeElements(...t) {
            this._each("unregister", t, this.elements);
          }
          removePlugins(...t) {
            this._each("unregister", t, this.plugins);
          }
          removeScales(...t) {
            this._each("unregister", t, this.scales);
          }
          _each(t, e, i) {
            [...e].forEach((r) => {
              const s = i || this._getRegistryForType(r);
              i || s.isForType(r) || (s === this.plugins && r.id)
                ? this._exec(t, s, r)
                : qe(r, (o) => {
                    const a = i || this._getRegistryForType(o);
                    this._exec(t, a, o);
                  });
            });
          }
          _exec(t, e, i) {
            const r = Gy(t);
            rt(i["before" + r], [], i), e[t](i), rt(i["after" + r], [], i);
          }
          _getRegistryForType(t) {
            for (let e = 0; e < this._typedRegistries.length; e++) {
              const i = this._typedRegistries[e];
              if (i.isForType(t)) return i;
            }
            return this.plugins;
          }
          _get(t, e, i) {
            const r = e.get(t);
            if (void 0 === r)
              throw new Error('"' + t + '" is not a registered ' + i + ".");
            return r;
          }
        })(),
        aY = Object.freeze({
          __proto__: null,
          BarController: N6,
          BubbleController: L6,
          DoughnutController: g1,
          LineController: V6,
          PolarAreaController: j6,
          PieController: H6,
          RadarController: z6,
          ScatterController: (() => {
            class n extends ur {
              update(e) {
                const i = this._cachedMeta,
                  { data: r = [] } = i,
                  s = this.chart._animationsDisabled;
                let { start: o, count: a } = vk(i, r, s);
                if (
                  ((this._drawStart = o),
                  (this._drawCount = a),
                  bk(i) && ((o = 0), (a = r.length)),
                  this.options.showLine)
                ) {
                  const { dataset: l, _dataset: c } = i;
                  (l._chart = this.chart),
                    (l._datasetIndex = this.index),
                    (l._decimated = !!c._decimated),
                    (l.points = r);
                  const u = this.resolveDatasetElementOptions(e);
                  (u.segment = this.options.segment),
                    this.updateElement(
                      l,
                      void 0,
                      { animated: !s, options: u },
                      e
                    );
                }
                this.updateElements(r, o, a, e);
              }
              addElements() {
                const { showLine: e } = this.options;
                !this.datasetElementType &&
                  e &&
                  (this.datasetElementType = dr.getElement("line")),
                  super.addElements();
              }
              updateElements(e, i, r, s) {
                const o = "reset" === s,
                  {
                    iScale: a,
                    vScale: l,
                    _stacked: c,
                    _dataset: u,
                  } = this._cachedMeta,
                  d = this.resolveDataElementOptions(i, s),
                  h = this.getSharedOptions(d),
                  f = this.includeOptions(s, h),
                  p = a.axis,
                  m = l.axis,
                  { spanGaps: _, segment: v } = this.options,
                  M = Ra(_) ? _ : Number.POSITIVE_INFINITY,
                  C = this.chart._animationsDisabled || o || "none" === s;
                let D = i > 0 && this.getParsed(i - 1);
                for (let S = i; S < i + r; ++S) {
                  const A = e[S],
                    O = this.getParsed(S),
                    V = C ? A : {},
                    j = Fe(O[m]),
                    ie = (V[p] = a.getPixelForValue(O[p], S)),
                    Ce = (V[m] =
                      o || j
                        ? l.getBasePixel()
                        : l.getPixelForValue(
                            c ? this.applyStack(l, O, c) : O[m],
                            S
                          ));
                  (V.skip = isNaN(ie) || isNaN(Ce) || j),
                    (V.stop = S > 0 && Math.abs(O[p] - D[p]) > M),
                    v && ((V.parsed = O), (V.raw = u.data[S])),
                    f &&
                      (V.options =
                        h ||
                        this.resolveDataElementOptions(
                          S,
                          A.active ? "active" : s
                        )),
                    C || this.updateElement(A, S, V, s),
                    (D = O);
                }
                this.updateSharedOptions(h, s, d);
              }
              getMaxOverflow() {
                const e = this._cachedMeta,
                  i = e.data || [];
                if (!this.options.showLine) {
                  let l = 0;
                  for (let c = i.length - 1; c >= 0; --c)
                    l = Math.max(
                      l,
                      i[c].size(this.resolveDataElementOptions(c)) / 2
                    );
                  return l > 0 && l;
                }
                const r = e.dataset,
                  s = (r.options && r.options.borderWidth) || 0;
                if (!i.length) return s;
                const o = i[0].size(this.resolveDataElementOptions(0)),
                  a = i[i.length - 1].size(
                    this.resolveDataElementOptions(i.length - 1)
                  );
                return Math.max(s, o, a) / 2;
              }
            }
            return (
              (n.id = "scatter"),
              (n.defaults = {
                datasetElementType: !1,
                dataElementType: "point",
                showLine: !1,
                fill: !1,
              }),
              (n.overrides = {
                interaction: { mode: "point" },
                plugins: {
                  tooltip: {
                    callbacks: {
                      title: () => "",
                      label: (t) =>
                        "(" + t.label + ", " + t.formattedValue + ")",
                    },
                  },
                },
                scales: { x: { type: "linear" }, y: { type: "linear" } },
              }),
              n
            );
          })(),
        });
      function bo() {
        throw new Error(
          "This method is not implemented: Check that a complete date adapter is provided."
        );
      }
      var lY = {
        _date: (() => {
          class n {
            constructor(e) {
              this.options = e || {};
            }
            init(e) {}
            formats() {
              return bo();
            }
            parse(e, i) {
              return bo();
            }
            format(e, i) {
              return bo();
            }
            add(e, i, r) {
              return bo();
            }
            diff(e, i, r) {
              return bo();
            }
            startOf(e, i, r) {
              return bo();
            }
            endOf(e, i) {
              return bo();
            }
          }
          return (
            (n.override = function (t) {
              Object.assign(n.prototype, t);
            }),
            n
          );
        })(),
      };
      function cY(n, t, e, i) {
        const { controller: r, data: s, _sorted: o } = n,
          a = r._cachedMeta.iScale;
        if (a && t === a.axis && "r" !== t && o && s.length) {
          const l = a._reversePixels ? $W : $r;
          if (!i) return l(s, t, e);
          if (r._sharedOptions) {
            const c = s[0],
              u = "function" == typeof c.getRange && c.getRange(t);
            if (u) {
              const d = l(s, t, e - u),
                h = l(s, t, e + u);
              return { lo: d.lo, hi: h.hi };
            }
          }
        }
        return { lo: 0, hi: s.length - 1 };
      }
      function Lc(n, t, e, i, r) {
        const s = n.getSortedVisibleDatasetMetas(),
          o = e[t];
        for (let a = 0, l = s.length; a < l; ++a) {
          const { index: c, data: u } = s[a],
            { lo: d, hi: h } = cY(s[a], t, o, r);
          for (let f = d; f <= h; ++f) {
            const p = u[f];
            p.skip || i(p, c, f);
          }
        }
      }
      function gv(n, t, e, i, r) {
        const s = [];
        return (
          (!r && !n.isPointInArea(t)) ||
            Lc(
              n,
              e,
              t,
              function (a, l, c) {
                (!r && !Ic(a, n.chartArea, 0)) ||
                  (a.inRange(t.x, t.y, i) &&
                    s.push({ element: a, datasetIndex: l, index: c }));
              },
              !0
            ),
          s
        );
      }
      function _v(n, t, e, i, r, s) {
        return s || n.isPointInArea(t)
          ? "r" !== e || i
            ? (function hY(n, t, e, i, r, s) {
                let o = [];
                const a = (function uY(n) {
                  const t = -1 !== n.indexOf("x"),
                    e = -1 !== n.indexOf("y");
                  return function (i, r) {
                    const s = t ? Math.abs(i.x - r.x) : 0,
                      o = e ? Math.abs(i.y - r.y) : 0;
                    return Math.sqrt(Math.pow(s, 2) + Math.pow(o, 2));
                  };
                })(e);
                let l = Number.POSITIVE_INFINITY;
                return (
                  Lc(n, e, t, function c(u, d, h) {
                    const f = u.inRange(t.x, t.y, r);
                    if (i && !f) return;
                    const p = u.getCenterPoint(r);
                    if (!s && !n.isPointInArea(p) && !f) return;
                    const _ = a(t, p);
                    _ < l
                      ? ((o = [{ element: u, datasetIndex: d, index: h }]),
                        (l = _))
                      : _ === l &&
                        o.push({ element: u, datasetIndex: d, index: h });
                  }),
                  o
                );
              })(n, t, e, i, r, s)
            : (function dY(n, t, e, i) {
                let r = [];
                return (
                  Lc(n, e, t, function s(o, a, l) {
                    const { startAngle: c, endAngle: u } = o.getProps(
                        ["startAngle", "endAngle"],
                        i
                      ),
                      { angle: d } = fk(o, { x: t.x, y: t.y });
                    Ec(d, c, u) &&
                      r.push({ element: o, datasetIndex: a, index: l });
                  }),
                  r
                );
              })(n, t, e, r)
          : [];
      }
      function C1(n, t, e, i, r) {
        const s = [],
          o = "x" === e ? "inXRange" : "inYRange";
        let a = !1;
        return (
          Lc(n, e, t, (l, c, u) => {
            l[o](t[e], r) &&
              (s.push({ element: l, datasetIndex: c, index: u }),
              (a = a || l.inRange(t.x, t.y, r)));
          }),
          i && !a ? [] : s
        );
      }
      var fY = {
        evaluateInteractionItems: Lc,
        modes: {
          index(n, t, e, i) {
            const r = _o(t, n),
              s = e.axis || "x",
              o = e.includeInvisible || !1,
              a = e.intersect ? gv(n, r, s, i, o) : _v(n, r, s, !1, i, o),
              l = [];
            return a.length
              ? (n.getSortedVisibleDatasetMetas().forEach((c) => {
                  const u = a[0].index,
                    d = c.data[u];
                  d &&
                    !d.skip &&
                    l.push({ element: d, datasetIndex: c.index, index: u });
                }),
                l)
              : [];
          },
          dataset(n, t, e, i) {
            const r = _o(t, n),
              s = e.axis || "xy",
              o = e.includeInvisible || !1;
            let a = e.intersect ? gv(n, r, s, i, o) : _v(n, r, s, !1, i, o);
            if (a.length > 0) {
              const l = a[0].datasetIndex,
                c = n.getDatasetMeta(l).data;
              a = [];
              for (let u = 0; u < c.length; ++u)
                a.push({ element: c[u], datasetIndex: l, index: u });
            }
            return a;
          },
          point: (n, t, e, i) =>
            gv(n, _o(t, n), e.axis || "xy", i, e.includeInvisible || !1),
          nearest: (n, t, e, i) =>
            _v(
              n,
              _o(t, n),
              e.axis || "xy",
              e.intersect,
              i,
              e.includeInvisible || !1
            ),
          x: (n, t, e, i) => C1(n, _o(t, n), "x", e.intersect, i),
          y: (n, t, e, i) => C1(n, _o(t, n), "y", e.intersect, i),
        },
      };
      const w1 = ["left", "top", "right", "bottom"];
      function Bc(n, t) {
        return n.filter((e) => e.pos === t);
      }
      function M1(n, t) {
        return n.filter((e) => -1 === w1.indexOf(e.pos) && e.box.axis === t);
      }
      function Vc(n, t) {
        return n.sort((e, i) => {
          const r = t ? i : e,
            s = t ? e : i;
          return r.weight === s.weight
            ? r.index - s.index
            : r.weight - s.weight;
        });
      }
      function D1(n, t, e, i) {
        return Math.max(n[e], t[e]) + Math.max(n[i], t[i]);
      }
      function x1(n, t) {
        (n.top = Math.max(n.top, t.top)),
          (n.left = Math.max(n.left, t.left)),
          (n.bottom = Math.max(n.bottom, t.bottom)),
          (n.right = Math.max(n.right, t.right));
      }
      function yY(n, t, e, i) {
        const { pos: r, box: s } = e,
          o = n.maxPadding;
        if (!Te(r)) {
          e.size && (n[r] -= e.size);
          const d = i[e.stack] || { size: 0, count: 1 };
          (d.size = Math.max(d.size, e.horizontal ? s.height : s.width)),
            (e.size = d.size / d.count),
            (n[r] += e.size);
        }
        s.getPadding && x1(o, s.getPadding());
        const a = Math.max(0, t.outerWidth - D1(o, n, "left", "right")),
          l = Math.max(0, t.outerHeight - D1(o, n, "top", "bottom")),
          c = a !== n.w,
          u = l !== n.h;
        return (
          (n.w = a),
          (n.h = l),
          e.horizontal ? { same: c, other: u } : { same: u, other: c }
        );
      }
      function bY(n, t) {
        const e = t.maxPadding;
        return (function i(r) {
          const s = { left: 0, top: 0, right: 0, bottom: 0 };
          return (
            r.forEach((o) => {
              s[o] = Math.max(t[o], e[o]);
            }),
            s
          );
        })(n ? ["left", "right"] : ["top", "bottom"]);
      }
      function jc(n, t, e, i) {
        const r = [];
        let s, o, a, l, c, u;
        for (s = 0, o = n.length, c = 0; s < o; ++s) {
          (a = n[s]),
            (l = a.box),
            l.update(a.width || t.w, a.height || t.h, bY(a.horizontal, t));
          const { same: d, other: h } = yY(t, e, a, i);
          (c |= d && r.length), (u = u || h), l.fullSize || r.push(a);
        }
        return (c && jc(r, t, e, i)) || u;
      }
      function uf(n, t, e, i, r) {
        (n.top = e),
          (n.left = t),
          (n.right = t + i),
          (n.bottom = e + r),
          (n.width = i),
          (n.height = r);
      }
      function E1(n, t, e, i) {
        const r = e.padding;
        let { x: s, y: o } = t;
        for (const a of n) {
          const l = a.box,
            c = i[a.stack] || { count: 1, placed: 0, weight: 1 },
            u = a.stackWeight / c.weight || 1;
          if (a.horizontal) {
            const d = t.w * u,
              h = c.size || l.height;
            ui(c.start) && (o = c.start),
              l.fullSize
                ? uf(l, r.left, o, e.outerWidth - r.right - r.left, h)
                : uf(l, t.left + c.placed, o, d, h),
              (c.start = o),
              (c.placed += d),
              (o = l.bottom);
          } else {
            const d = t.h * u,
              h = c.size || l.width;
            ui(c.start) && (s = c.start),
              l.fullSize
                ? uf(l, s, r.top, h, e.outerHeight - r.bottom - r.top)
                : uf(l, s, t.top + c.placed, h, d),
              (c.start = s),
              (c.placed += d),
              (s = l.right);
          }
        }
        (t.x = s), (t.y = o);
      }
      Ie.set("layout", {
        autoPadding: !0,
        padding: { top: 0, right: 0, bottom: 0, left: 0 },
      });
      var sn = {
        addBox(n, t) {
          n.boxes || (n.boxes = []),
            (t.fullSize = t.fullSize || !1),
            (t.position = t.position || "top"),
            (t.weight = t.weight || 0),
            (t._layers =
              t._layers ||
              function () {
                return [
                  {
                    z: 0,
                    draw(e) {
                      t.draw(e);
                    },
                  },
                ];
              }),
            n.boxes.push(t);
        },
        removeBox(n, t) {
          const e = n.boxes ? n.boxes.indexOf(t) : -1;
          -1 !== e && n.boxes.splice(e, 1);
        },
        configure(n, t, e) {
          (t.fullSize = e.fullSize),
            (t.position = e.position),
            (t.weight = e.weight);
        },
        update(n, t, e, i) {
          if (!n) return;
          const r = rn(n.options.layout.padding),
            s = Math.max(t - r.width, 0),
            o = Math.max(e - r.height, 0),
            a = (function _Y(n) {
              const t = (function pY(n) {
                  const t = [];
                  let e, i, r, s, o, a;
                  for (e = 0, i = (n || []).length; e < i; ++e)
                    (r = n[e]),
                      ({
                        position: s,
                        options: { stack: o, stackWeight: a = 1 },
                      } = r),
                      t.push({
                        index: e,
                        box: r,
                        pos: s,
                        horizontal: r.isHorizontal(),
                        weight: r.weight,
                        stack: o && s + o,
                        stackWeight: a,
                      });
                  return t;
                })(n),
                e = Vc(
                  t.filter((c) => c.box.fullSize),
                  !0
                ),
                i = Vc(Bc(t, "left"), !0),
                r = Vc(Bc(t, "right")),
                s = Vc(Bc(t, "top"), !0),
                o = Vc(Bc(t, "bottom")),
                a = M1(t, "x"),
                l = M1(t, "y");
              return {
                fullSize: e,
                leftAndTop: i.concat(s),
                rightAndBottom: r.concat(l).concat(o).concat(a),
                chartArea: Bc(t, "chartArea"),
                vertical: i.concat(r).concat(l),
                horizontal: s.concat(o).concat(a),
              };
            })(n.boxes),
            l = a.vertical,
            c = a.horizontal;
          qe(n.boxes, (m) => {
            "function" == typeof m.beforeLayout && m.beforeLayout();
          });
          const u =
              l.reduce(
                (m, _) =>
                  _.box.options && !1 === _.box.options.display ? m : m + 1,
                0
              ) || 1,
            d = Object.freeze({
              outerWidth: t,
              outerHeight: e,
              padding: r,
              availableWidth: s,
              availableHeight: o,
              vBoxMaxWidth: s / 2 / u,
              hBoxMaxHeight: o / 2,
            }),
            h = Object.assign({}, r);
          x1(h, rn(i));
          const f = Object.assign(
              { maxPadding: h, w: s, h: o, x: r.left, y: r.top },
              r
            ),
            p = (function gY(n, t) {
              const e = (function mY(n) {
                  const t = {};
                  for (const e of n) {
                    const { stack: i, pos: r, stackWeight: s } = e;
                    if (!i || !w1.includes(r)) continue;
                    const o =
                      t[i] ||
                      (t[i] = { count: 0, placed: 0, weight: 0, size: 0 });
                    o.count++, (o.weight += s);
                  }
                  return t;
                })(n),
                { vBoxMaxWidth: i, hBoxMaxHeight: r } = t;
              let s, o, a;
              for (s = 0, o = n.length; s < o; ++s) {
                a = n[s];
                const { fullSize: l } = a.box,
                  c = e[a.stack],
                  u = c && a.stackWeight / c.weight;
                a.horizontal
                  ? ((a.width = u ? u * i : l && t.availableWidth),
                    (a.height = r))
                  : ((a.width = i),
                    (a.height = u ? u * r : l && t.availableHeight));
              }
              return e;
            })(l.concat(c), d);
          jc(a.fullSize, f, d, p),
            jc(l, f, d, p),
            jc(c, f, d, p) && jc(l, f, d, p),
            (function vY(n) {
              const t = n.maxPadding;
              function e(i) {
                const r = Math.max(t[i] - n[i], 0);
                return (n[i] += r), r;
              }
              (n.y += e("top")), (n.x += e("left")), e("right"), e("bottom");
            })(f),
            E1(a.leftAndTop, f, d, p),
            (f.x += f.w),
            (f.y += f.h),
            E1(a.rightAndBottom, f, d, p),
            (n.chartArea = {
              left: f.left,
              top: f.top,
              right: f.left + f.w,
              bottom: f.top + f.h,
              height: f.h,
              width: f.w,
            }),
            qe(a.chartArea, (m) => {
              const _ = m.box;
              Object.assign(_, n.chartArea),
                _.update(f.w, f.h, { left: 0, top: 0, right: 0, bottom: 0 });
            });
        },
      };
      class S1 {
        acquireContext(t, e) {}
        releaseContext(t) {
          return !1;
        }
        addEventListener(t, e, i) {}
        removeEventListener(t, e, i) {}
        getDevicePixelRatio() {
          return 1;
        }
        getMaximumSize(t, e, i, r) {
          return (
            (e = Math.max(0, e || t.width)),
            (i = i || t.height),
            { width: e, height: Math.max(0, r ? Math.floor(e / r) : i) }
          );
        }
        isAttached(t) {
          return !0;
        }
        updateConfig(t) {}
      }
      class CY extends S1 {
        acquireContext(t) {
          return (t && t.getContext && t.getContext("2d")) || null;
        }
        updateConfig(t) {
          t.options.animation = !1;
        }
      }
      const df = "$chartjs",
        wY = {
          touchstart: "mousedown",
          touchmove: "mousemove",
          touchend: "mouseup",
          pointerenter: "mouseenter",
          pointerdown: "mousedown",
          pointermove: "mousemove",
          pointerup: "mouseup",
          pointerleave: "mouseout",
          pointerout: "mouseout",
        },
        T1 = (n) => null === n || "" === n,
        A1 = !!ZG && { passive: !0 };
      function xY(n, t, e) {
        n.canvas.removeEventListener(t, e, A1);
      }
      function hf(n, t) {
        for (const e of n) if (e === t || e.contains(t)) return !0;
      }
      function SY(n, t, e) {
        const i = n.canvas,
          r = new MutationObserver((s) => {
            let o = !1;
            for (const a of s)
              (o = o || hf(a.addedNodes, i)), (o = o && !hf(a.removedNodes, i));
            o && e();
          });
        return r.observe(document, { childList: !0, subtree: !0 }), r;
      }
      function TY(n, t, e) {
        const i = n.canvas,
          r = new MutationObserver((s) => {
            let o = !1;
            for (const a of s)
              (o = o || hf(a.removedNodes, i)), (o = o && !hf(a.addedNodes, i));
            o && e();
          });
        return r.observe(document, { childList: !0, subtree: !0 }), r;
      }
      const Hc = new Map();
      let k1 = 0;
      function I1() {
        const n = window.devicePixelRatio;
        n !== k1 &&
          ((k1 = n),
          Hc.forEach((t, e) => {
            e.currentDevicePixelRatio !== n && t();
          }));
      }
      function IY(n, t, e) {
        const i = n.canvas,
          r = i && dv(i);
        if (!r) return;
        const s = yk((a, l) => {
            const c = r.clientWidth;
            e(a, l), c < r.clientWidth && e();
          }, window),
          o = new ResizeObserver((a) => {
            const l = a[0],
              c = l.contentRect.width,
              u = l.contentRect.height;
            (0 === c && 0 === u) || s(c, u);
          });
        return (
          o.observe(r),
          (function AY(n, t) {
            Hc.size || window.addEventListener("resize", I1), Hc.set(n, t);
          })(n, s),
          o
        );
      }
      function yv(n, t, e) {
        e && e.disconnect(),
          "resize" === t &&
            (function kY(n) {
              Hc.delete(n), Hc.size || window.removeEventListener("resize", I1);
            })(n);
      }
      function OY(n, t, e) {
        const i = n.canvas,
          r = yk(
            (s) => {
              null !== n.ctx &&
                e(
                  (function EY(n, t) {
                    const e = wY[n.type] || n.type,
                      { x: i, y: r } = _o(n, t);
                    return {
                      type: e,
                      chart: t,
                      native: n,
                      x: void 0 !== i ? i : null,
                      y: void 0 !== r ? r : null,
                    };
                  })(s, n)
                );
            },
            n,
            (s) => {
              const o = s[0];
              return [o, o.offsetX, o.offsetY];
            }
          );
        return (
          (function DY(n, t, e) {
            n.addEventListener(t, e, A1);
          })(i, t, r),
          r
        );
      }
      class RY extends S1 {
        acquireContext(t, e) {
          const i = t && t.getContext && t.getContext("2d");
          return i && i.canvas === t
            ? ((function MY(n, t) {
                const e = n.style,
                  i = n.getAttribute("height"),
                  r = n.getAttribute("width");
                if (
                  ((n[df] = {
                    initial: {
                      height: i,
                      width: r,
                      style: {
                        display: e.display,
                        height: e.height,
                        width: e.width,
                      },
                    },
                  }),
                  (e.display = e.display || "block"),
                  (e.boxSizing = e.boxSizing || "border-box"),
                  T1(r))
                ) {
                  const s = Wk(n, "width");
                  void 0 !== s && (n.width = s);
                }
                if (T1(i))
                  if ("" === n.style.height) n.height = n.width / (t || 2);
                  else {
                    const s = Wk(n, "height");
                    void 0 !== s && (n.height = s);
                  }
              })(t, e),
              i)
            : null;
        }
        releaseContext(t) {
          const e = t.canvas;
          if (!e[df]) return !1;
          const i = e[df].initial;
          ["height", "width"].forEach((s) => {
            const o = i[s];
            Fe(o) ? e.removeAttribute(s) : e.setAttribute(s, o);
          });
          const r = i.style || {};
          return (
            Object.keys(r).forEach((s) => {
              e.style[s] = r[s];
            }),
            (e.width = e.width),
            delete e[df],
            !0
          );
        }
        addEventListener(t, e, i) {
          this.removeEventListener(t, e),
            ((t.$proxies || (t.$proxies = {}))[e] = (
              { attach: SY, detach: TY, resize: IY }[e] || OY
            )(t, e, i));
        }
        removeEventListener(t, e) {
          const i = t.$proxies || (t.$proxies = {}),
            r = i[e];
          r &&
            (({ attach: yv, detach: yv, resize: yv }[e] || xY)(t, e, r),
            (i[e] = void 0));
        }
        getDevicePixelRatio() {
          return window.devicePixelRatio;
        }
        getMaximumSize(t, e, i, r) {
          return (function XG(n, t, e, i) {
            const r = sf(n),
              s = go(r, "margin"),
              o = rf(r.maxWidth, n, "clientWidth") || Gh,
              a = rf(r.maxHeight, n, "clientHeight") || Gh,
              l = (function KG(n, t, e) {
                let i, r;
                if (void 0 === t || void 0 === e) {
                  const s = dv(n);
                  if (s) {
                    const o = s.getBoundingClientRect(),
                      a = sf(s),
                      l = go(a, "border", "width"),
                      c = go(a, "padding");
                    (t = o.width - c.width - l.width),
                      (e = o.height - c.height - l.height),
                      (i = rf(a.maxWidth, s, "clientWidth")),
                      (r = rf(a.maxHeight, s, "clientHeight"));
                  } else (t = n.clientWidth), (e = n.clientHeight);
                }
                return {
                  width: t,
                  height: e,
                  maxWidth: i || Gh,
                  maxHeight: r || Gh,
                };
              })(n, t, e);
            let { width: c, height: u } = l;
            if ("content-box" === r.boxSizing) {
              const d = go(r, "border", "width"),
                h = go(r, "padding");
              (c -= h.width + d.width), (u -= h.height + d.height);
            }
            return (
              (c = Math.max(0, c - s.width)),
              (u = Math.max(0, i ? Math.floor(c / i) : u - s.height)),
              (c = hv(Math.min(c, o, l.maxWidth))),
              (u = hv(Math.min(u, a, l.maxHeight))),
              c && !u && (u = hv(c / 2)),
              { width: c, height: u }
            );
          })(t, e, i, r);
        }
        isAttached(t) {
          const e = dv(t);
          return !(!e || !e.isConnected);
        }
      }
      class FY {
        constructor() {
          this._init = [];
        }
        notify(t, e, i, r) {
          "beforeInit" === e &&
            ((this._init = this._createDescriptors(t, !0)),
            this._notify(this._init, t, "install"));
          const s = r ? this._descriptors(t).filter(r) : this._descriptors(t),
            o = this._notify(s, t, e, i);
          return (
            "afterDestroy" === e &&
              (this._notify(s, t, "stop"),
              this._notify(this._init, t, "uninstall")),
            o
          );
        }
        _notify(t, e, i, r) {
          r = r || {};
          for (const s of t) {
            const o = s.plugin;
            if (!1 === rt(o[i], [e, r, s.options], o) && r.cancelable)
              return !1;
          }
          return !0;
        }
        invalidate() {
          Fe(this._cache) ||
            ((this._oldCache = this._cache), (this._cache = void 0));
        }
        _descriptors(t) {
          if (this._cache) return this._cache;
          const e = (this._cache = this._createDescriptors(t));
          return this._notifyStateChanges(t), e;
        }
        _createDescriptors(t, e) {
          const i = t && t.config,
            r = ve(i.options && i.options.plugins, {}),
            s = (function NY(n) {
              const t = {},
                e = [],
                i = Object.keys(dr.plugins.items);
              for (let s = 0; s < i.length; s++) e.push(dr.getPlugin(i[s]));
              const r = n.plugins || [];
              for (let s = 0; s < r.length; s++) {
                const o = r[s];
                -1 === e.indexOf(o) && (e.push(o), (t[o.id] = !0));
              }
              return { plugins: e, localIds: t };
            })(i);
          return !1 !== r || e
            ? (function BY(n, { plugins: t, localIds: e }, i, r) {
                const s = [],
                  o = n.getContext();
                for (const a of t) {
                  const l = a.id,
                    c = LY(i[l], r);
                  null !== c &&
                    s.push({
                      plugin: a,
                      options: VY(n.config, { plugin: a, local: e[l] }, c, o),
                    });
                }
                return s;
              })(t, s, r, e)
            : [];
        }
        _notifyStateChanges(t) {
          const e = this._oldCache || [],
            i = this._cache,
            r = (s, o) =>
              s.filter((a) => !o.some((l) => a.plugin.id === l.plugin.id));
          this._notify(r(e, i), t, "stop"), this._notify(r(i, e), t, "start");
        }
      }
      function LY(n, t) {
        return t || !1 !== n ? (!0 === n ? {} : n) : null;
      }
      function VY(n, { plugin: t, local: e }, i, r) {
        const s = n.pluginScopeKeys(t),
          o = n.getOptionScopes(i, s);
        return (
          e && t.defaults && o.push(t.defaults),
          n.createResolver(o, r, [""], {
            scriptable: !1,
            indexable: !1,
            allKeys: !0,
          })
        );
      }
      function vv(n, t) {
        return (
          ((t.datasets || {})[n] || {}).indexAxis ||
          t.indexAxis ||
          (Ie.datasets[n] || {}).indexAxis ||
          "x"
        );
      }
      function bv(n, t) {
        return "x" === n || "y" === n
          ? n
          : t.axis ||
              (function zY(n) {
                return "top" === n || "bottom" === n
                  ? "x"
                  : "left" === n || "right" === n
                  ? "y"
                  : void 0;
              })(t.position) ||
              n.charAt(0).toLowerCase();
      }
      function O1(n) {
        const t = n.options || (n.options = {});
        (t.plugins = ve(t.plugins, {})),
          (t.scales = (function UY(n, t) {
            const e = ho[n.type] || { scales: {} },
              i = t.scales || {},
              r = vv(n.type, t),
              s = Object.create(null),
              o = Object.create(null);
            return (
              Object.keys(i).forEach((a) => {
                const l = i[a];
                if (!Te(l))
                  return console.error(
                    `Invalid scale configuration for scale: ${a}`
                  );
                if (l._proxy)
                  return console.warn(
                    `Ignoring resolver passed as options for scale: ${a}`
                  );
                const c = bv(a, l),
                  u = (function HY(n, t) {
                    return n === t ? "_index_" : "_value_";
                  })(c, r),
                  d = e.scales || {};
                (s[c] = s[c] || a),
                  (o[a] = Mc(Object.create(null), [
                    { axis: c },
                    l,
                    d[c],
                    d[u],
                  ]));
              }),
              n.data.datasets.forEach((a) => {
                const l = a.type || n.type,
                  c = a.indexAxis || vv(l, t),
                  d = (ho[l] || {}).scales || {};
                Object.keys(d).forEach((h) => {
                  const f = (function jY(n, t) {
                      let e = n;
                      return (
                        "_index_" === n
                          ? (e = t)
                          : "_value_" === n && (e = "x" === t ? "y" : "x"),
                        e
                      );
                    })(h, c),
                    p = a[f + "AxisID"] || s[f] || f;
                  (o[p] = o[p] || Object.create(null)),
                    Mc(o[p], [{ axis: f }, i[p], d[h]]);
                });
              }),
              Object.keys(o).forEach((a) => {
                const l = o[a];
                Mc(l, [Ie.scales[l.type], Ie.scale]);
              }),
              o
            );
          })(n, t));
      }
      function R1(n) {
        return (
          ((n = n || {}).datasets = n.datasets || []),
          (n.labels = n.labels || []),
          n
        );
      }
      const P1 = new Map(),
        F1 = new Set();
      function ff(n, t) {
        let e = P1.get(n);
        return e || ((e = t()), P1.set(n, e), F1.add(e)), e;
      }
      const zc = (n, t, e) => {
        const i = vs(t, e);
        void 0 !== i && n.add(i);
      };
      class qY {
        constructor(t) {
          (this._config = (function $Y(n) {
            return ((n = n || {}).data = R1(n.data)), O1(n), n;
          })(t)),
            (this._scopeCache = new Map()),
            (this._resolverCache = new Map());
        }
        get platform() {
          return this._config.platform;
        }
        get type() {
          return this._config.type;
        }
        set type(t) {
          this._config.type = t;
        }
        get data() {
          return this._config.data;
        }
        set data(t) {
          this._config.data = R1(t);
        }
        get options() {
          return this._config.options;
        }
        set options(t) {
          this._config.options = t;
        }
        get plugins() {
          return this._config.plugins;
        }
        update() {
          const t = this._config;
          this.clearCache(), O1(t);
        }
        clearCache() {
          this._scopeCache.clear(), this._resolverCache.clear();
        }
        datasetScopeKeys(t) {
          return ff(t, () => [[`datasets.${t}`, ""]]);
        }
        datasetAnimationScopeKeys(t, e) {
          return ff(`${t}.transition.${e}`, () => [
            [`datasets.${t}.transitions.${e}`, `transitions.${e}`],
            [`datasets.${t}`, ""],
          ]);
        }
        datasetElementScopeKeys(t, e) {
          return ff(`${t}-${e}`, () => [
            [
              `datasets.${t}.elements.${e}`,
              `datasets.${t}`,
              `elements.${e}`,
              "",
            ],
          ]);
        }
        pluginScopeKeys(t) {
          const e = t.id;
          return ff(`${this.type}-plugin-${e}`, () => [
            [`plugins.${e}`, ...(t.additionalOptionScopes || [])],
          ]);
        }
        _cachedScopes(t, e) {
          const i = this._scopeCache;
          let r = i.get(t);
          return (!r || e) && ((r = new Map()), i.set(t, r)), r;
        }
        getOptionScopes(t, e, i) {
          const { options: r, type: s } = this,
            o = this._cachedScopes(t, i),
            a = o.get(e);
          if (a) return a;
          const l = new Set();
          e.forEach((u) => {
            t && (l.add(t), u.forEach((d) => zc(l, t, d))),
              u.forEach((d) => zc(l, r, d)),
              u.forEach((d) => zc(l, ho[s] || {}, d)),
              u.forEach((d) => zc(l, Ie, d)),
              u.forEach((d) => zc(l, rv, d));
          });
          const c = Array.from(l);
          return (
            0 === c.length && c.push(Object.create(null)),
            F1.has(e) && o.set(e, c),
            c
          );
        }
        chartOptionScopes() {
          const { options: t, type: e } = this;
          return [t, ho[e] || {}, Ie.datasets[e] || {}, { type: e }, Ie, rv];
        }
        resolveNamedOptions(t, e, i, r = [""]) {
          const s = { $shared: !0 },
            { resolver: o, subPrefixes: a } = N1(this._resolverCache, t, r);
          let l = o;
          (function GY(n, t) {
            const { isScriptable: e, isIndexable: i } = Nk(n);
            for (const r of t) {
              const s = e(r),
                o = i(r),
                a = (o || s) && n[r];
              if ((s && (bs(a) || WY(a))) || (o && it(a))) return !0;
            }
            return !1;
          })(o, e) &&
            ((s.$shared = !1),
            (l = Fa(o, (i = bs(i) ? i() : i), this.createResolver(t, i, a))));
          for (const c of e) s[c] = l[c];
          return s;
        }
        createResolver(t, e, i = [""], r) {
          const { resolver: s } = N1(this._resolverCache, t, i);
          return Te(e) ? Fa(s, e, void 0, r) : s;
        }
      }
      function N1(n, t, e) {
        let i = n.get(t);
        i || ((i = new Map()), n.set(t, i));
        const r = e.join();
        let s = i.get(r);
        return (
          s ||
            ((s = {
              resolver: lv(t, e),
              subPrefixes: e.filter((a) => !a.toLowerCase().includes("hover")),
            }),
            i.set(r, s)),
          s
        );
      }
      const WY = (n) =>
          Te(n) &&
          Object.getOwnPropertyNames(n).reduce((t, e) => t || bs(n[e]), !1),
        KY = ["top", "bottom", "left", "right", "chartArea"];
      function L1(n, t) {
        return (
          "top" === n || "bottom" === n || (-1 === KY.indexOf(n) && "x" === t)
        );
      }
      function B1(n, t) {
        return function (e, i) {
          return e[n] === i[n] ? e[t] - i[t] : e[n] - i[n];
        };
      }
      function V1(n) {
        const t = n.chart,
          e = t.options.animation;
        t.notifyPlugins("afterRender"), rt(e && e.onComplete, [n], t);
      }
      function XY(n) {
        const t = n.chart,
          e = t.options.animation;
        rt(e && e.onProgress, [n], t);
      }
      function j1(n) {
        return (
          $k() && "string" == typeof n
            ? (n = document.getElementById(n))
            : n && n.length && (n = n[0]),
          n && n.canvas && (n = n.canvas),
          n
        );
      }
      const pf = {},
        H1 = (n) => {
          const t = j1(n);
          return Object.values(pf)
            .filter((e) => e.canvas === t)
            .pop();
        };
      function ZY(n, t, e) {
        const i = Object.keys(n);
        for (const r of i) {
          const s = +r;
          if (s >= t) {
            const o = n[r];
            delete n[r], (e > 0 || s > t) && (n[s + e] = o);
          }
        }
      }
      class mf {
        constructor(t, e) {
          const i = (this.config = new qY(e)),
            r = j1(t),
            s = H1(r);
          if (s)
            throw new Error(
              "Canvas is already in use. Chart with ID '" +
                s.id +
                "' must be destroyed before the canvas with ID '" +
                s.canvas.id +
                "' can be reused."
            );
          const o = i.createResolver(i.chartOptionScopes(), this.getContext());
          (this.platform = new (i.platform ||
            (function PY(n) {
              return !$k() ||
                (typeof OffscreenCanvas < "u" && n instanceof OffscreenCanvas)
                ? CY
                : RY;
            })(r))()),
            this.platform.updateConfig(i);
          const a = this.platform.acquireContext(r, o.aspectRatio),
            l = a && a.canvas,
            c = l && l.height,
            u = l && l.width;
          (this.id = IW()),
            (this.ctx = a),
            (this.canvas = l),
            (this.width = u),
            (this.height = c),
            (this._options = o),
            (this._aspectRatio = this.aspectRatio),
            (this._layers = []),
            (this._metasets = []),
            (this._stacks = void 0),
            (this.boxes = []),
            (this.currentDevicePixelRatio = void 0),
            (this.chartArea = void 0),
            (this._active = []),
            (this._lastEvent = void 0),
            (this._listeners = {}),
            (this._responsiveListeners = void 0),
            (this._sortedMetasets = []),
            (this.scales = {}),
            (this._plugins = new FY()),
            (this.$proxies = {}),
            (this._hiddenIndices = {}),
            (this.attached = !1),
            (this._animationsDisabled = void 0),
            (this.$context = void 0),
            (this._doResize = (function GW(n, t) {
              let e;
              return function (...i) {
                return (
                  t
                    ? (clearTimeout(e), (e = setTimeout(n, t, i)))
                    : n.apply(this, i),
                  t
                );
              };
            })((d) => this.update(d), o.resizeDelay || 0)),
            (this._dataChanges = []),
            (pf[this.id] = this),
            a && l
              ? (Wr.listen(this, "complete", V1),
                Wr.listen(this, "progress", XY),
                this._initialize(),
                this.attached && this.update())
              : console.error(
                  "Failed to create chart: can't acquire context from the given item"
                );
        }
        get aspectRatio() {
          const {
            options: { aspectRatio: t, maintainAspectRatio: e },
            width: i,
            height: r,
            _aspectRatio: s,
          } = this;
          return Fe(t) ? (e && s ? s : r ? i / r : null) : t;
        }
        get data() {
          return this.config.data;
        }
        set data(t) {
          this.config.data = t;
        }
        get options() {
          return this._options;
        }
        set options(t) {
          this.config.options = t;
        }
        _initialize() {
          return (
            this.notifyPlugins("beforeInit"),
            this.options.responsive
              ? this.resize()
              : qk(this, this.options.devicePixelRatio),
            this.bindEvents(),
            this.notifyPlugins("afterInit"),
            this
          );
        }
        clear() {
          return Rk(this.canvas, this.ctx), this;
        }
        stop() {
          return Wr.stop(this), this;
        }
        resize(t, e) {
          Wr.running(this)
            ? (this._resizeBeforeDraw = { width: t, height: e })
            : this._resize(t, e);
        }
        _resize(t, e) {
          const i = this.options,
            o = this.platform.getMaximumSize(
              this.canvas,
              t,
              e,
              i.maintainAspectRatio && this.aspectRatio
            ),
            a = i.devicePixelRatio || this.platform.getDevicePixelRatio(),
            l = this.width ? "resize" : "attach";
          (this.width = o.width),
            (this.height = o.height),
            (this._aspectRatio = this.aspectRatio),
            qk(this, a, !0) &&
              (this.notifyPlugins("resize", { size: o }),
              rt(i.onResize, [this, o], this),
              this.attached && this._doResize(l) && this.render());
        }
        ensureScalesHaveIDs() {
          qe(this.options.scales || {}, (i, r) => {
            i.id = r;
          });
        }
        buildOrUpdateScales() {
          const t = this.options,
            e = t.scales,
            i = this.scales,
            r = Object.keys(i).reduce((o, a) => ((o[a] = !1), o), {});
          let s = [];
          e &&
            (s = s.concat(
              Object.keys(e).map((o) => {
                const a = e[o],
                  l = bv(o, a),
                  c = "r" === l,
                  u = "x" === l;
                return {
                  options: a,
                  dposition: c ? "chartArea" : u ? "bottom" : "left",
                  dtype: c ? "radialLinear" : u ? "category" : "linear",
                };
              })
            )),
            qe(s, (o) => {
              const a = o.options,
                l = a.id,
                c = bv(l, a),
                u = ve(a.type, o.dtype);
              (void 0 === a.position ||
                L1(a.position, c) !== L1(o.dposition)) &&
                (a.position = o.dposition),
                (r[l] = !0);
              let d = null;
              l in i && i[l].type === u
                ? (d = i[l])
                : ((d = new (dr.getScale(u))({
                    id: l,
                    type: u,
                    ctx: this.ctx,
                    chart: this,
                  })),
                  (i[d.id] = d)),
                d.init(a, t);
            }),
            qe(r, (o, a) => {
              o || delete i[a];
            }),
            qe(i, (o) => {
              sn.configure(this, o, o.options), sn.addBox(this, o);
            });
        }
        _updateMetasets() {
          const t = this._metasets,
            e = this.data.datasets.length,
            i = t.length;
          if ((t.sort((r, s) => r.index - s.index), i > e)) {
            for (let r = e; r < i; ++r) this._destroyDatasetMeta(r);
            t.splice(e, i - e);
          }
          this._sortedMetasets = t.slice(0).sort(B1("order", "index"));
        }
        _removeUnreferencedMetasets() {
          const {
            _metasets: t,
            data: { datasets: e },
          } = this;
          t.length > e.length && delete this._stacks,
            t.forEach((i, r) => {
              0 === e.filter((s) => s === i._dataset).length &&
                this._destroyDatasetMeta(r);
            });
        }
        buildOrUpdateControllers() {
          const t = [],
            e = this.data.datasets;
          let i, r;
          for (
            this._removeUnreferencedMetasets(), i = 0, r = e.length;
            i < r;
            i++
          ) {
            const s = e[i];
            let o = this.getDatasetMeta(i);
            const a = s.type || this.config.type;
            if (
              (o.type &&
                o.type !== a &&
                (this._destroyDatasetMeta(i), (o = this.getDatasetMeta(i))),
              (o.type = a),
              (o.indexAxis = s.indexAxis || vv(a, this.options)),
              (o.order = s.order || 0),
              (o.index = i),
              (o.label = "" + s.label),
              (o.visible = this.isDatasetVisible(i)),
              o.controller)
            )
              o.controller.updateIndex(i), o.controller.linkScales();
            else {
              const l = dr.getController(a),
                { datasetElementType: c, dataElementType: u } = Ie.datasets[a];
              Object.assign(l.prototype, {
                dataElementType: dr.getElement(u),
                datasetElementType: c && dr.getElement(c),
              }),
                (o.controller = new l(this, i)),
                t.push(o.controller);
            }
          }
          return this._updateMetasets(), t;
        }
        _resetElements() {
          qe(
            this.data.datasets,
            (t, e) => {
              this.getDatasetMeta(e).controller.reset();
            },
            this
          );
        }
        reset() {
          this._resetElements(), this.notifyPlugins("reset");
        }
        update(t) {
          const e = this.config;
          e.update();
          const i = (this._options = e.createResolver(
              e.chartOptionScopes(),
              this.getContext()
            )),
            r = (this._animationsDisabled = !i.animation);
          if (
            (this._updateScales(),
            this._checkEventBindings(),
            this._updateHiddenIndices(),
            this._plugins.invalidate(),
            !1 ===
              this.notifyPlugins("beforeUpdate", { mode: t, cancelable: !0 }))
          )
            return;
          const s = this.buildOrUpdateControllers();
          this.notifyPlugins("beforeElementsUpdate");
          let o = 0;
          for (let c = 0, u = this.data.datasets.length; c < u; c++) {
            const { controller: d } = this.getDatasetMeta(c),
              h = !r && -1 === s.indexOf(d);
            d.buildOrUpdateElements(h), (o = Math.max(+d.getMaxOverflow(), o));
          }
          (o = this._minPadding = i.layout.autoPadding ? o : 0),
            this._updateLayout(o),
            r ||
              qe(s, (c) => {
                c.reset();
              }),
            this._updateDatasets(t),
            this.notifyPlugins("afterUpdate", { mode: t }),
            this._layers.sort(B1("z", "_idx"));
          const { _active: a, _lastEvent: l } = this;
          l
            ? this._eventHandler(l, !0)
            : a.length && this._updateHoverStyles(a, a, !0),
            this.render();
        }
        _updateScales() {
          qe(this.scales, (t) => {
            sn.removeBox(this, t);
          }),
            this.ensureScalesHaveIDs(),
            this.buildOrUpdateScales();
        }
        _checkEventBindings() {
          const t = this.options,
            e = new Set(Object.keys(this._listeners)),
            i = new Set(t.events);
          (!lk(e, i) || !!this._responsiveListeners !== t.responsive) &&
            (this.unbindEvents(), this.bindEvents());
        }
        _updateHiddenIndices() {
          const { _hiddenIndices: t } = this,
            e = this._getUniformDataChanges() || [];
          for (const { method: i, start: r, count: s } of e)
            ZY(t, r, "_removeElements" === i ? -s : s);
        }
        _getUniformDataChanges() {
          const t = this._dataChanges;
          if (!t || !t.length) return;
          this._dataChanges = [];
          const e = this.data.datasets.length,
            i = (s) =>
              new Set(
                t
                  .filter((o) => o[0] === s)
                  .map((o, a) => a + "," + o.splice(1).join(","))
              ),
            r = i(0);
          for (let s = 1; s < e; s++) if (!lk(r, i(s))) return;
          return Array.from(r)
            .map((s) => s.split(","))
            .map((s) => ({ method: s[1], start: +s[2], count: +s[3] }));
        }
        _updateLayout(t) {
          if (!1 === this.notifyPlugins("beforeLayout", { cancelable: !0 }))
            return;
          sn.update(this, this.width, this.height, t);
          const e = this.chartArea,
            i = e.width <= 0 || e.height <= 0;
          (this._layers = []),
            qe(
              this.boxes,
              (r) => {
                (i && "chartArea" === r.position) ||
                  (r.configure && r.configure(),
                  this._layers.push(...r._layers()));
              },
              this
            ),
            this._layers.forEach((r, s) => {
              r._idx = s;
            }),
            this.notifyPlugins("afterLayout");
        }
        _updateDatasets(t) {
          if (
            !1 !==
            this.notifyPlugins("beforeDatasetsUpdate", {
              mode: t,
              cancelable: !0,
            })
          ) {
            for (let e = 0, i = this.data.datasets.length; e < i; ++e)
              this.getDatasetMeta(e).controller.configure();
            for (let e = 0, i = this.data.datasets.length; e < i; ++e)
              this._updateDataset(e, bs(t) ? t({ datasetIndex: e }) : t);
            this.notifyPlugins("afterDatasetsUpdate", { mode: t });
          }
        }
        _updateDataset(t, e) {
          const i = this.getDatasetMeta(t),
            r = { meta: i, index: t, mode: e, cancelable: !0 };
          !1 !== this.notifyPlugins("beforeDatasetUpdate", r) &&
            (i.controller._update(e),
            (r.cancelable = !1),
            this.notifyPlugins("afterDatasetUpdate", r));
        }
        render() {
          !1 !== this.notifyPlugins("beforeRender", { cancelable: !0 }) &&
            (Wr.has(this)
              ? this.attached && !Wr.running(this) && Wr.start(this)
              : (this.draw(), V1({ chart: this })));
        }
        draw() {
          let t;
          if (this._resizeBeforeDraw) {
            const { width: i, height: r } = this._resizeBeforeDraw;
            this._resize(i, r), (this._resizeBeforeDraw = null);
          }
          if (
            (this.clear(),
            this.width <= 0 ||
              this.height <= 0 ||
              !1 === this.notifyPlugins("beforeDraw", { cancelable: !0 }))
          )
            return;
          const e = this._layers;
          for (t = 0; t < e.length && e[t].z <= 0; ++t)
            e[t].draw(this.chartArea);
          for (this._drawDatasets(); t < e.length; ++t)
            e[t].draw(this.chartArea);
          this.notifyPlugins("afterDraw");
        }
        _getSortedDatasetMetas(t) {
          const e = this._sortedMetasets,
            i = [];
          let r, s;
          for (r = 0, s = e.length; r < s; ++r) {
            const o = e[r];
            (!t || o.visible) && i.push(o);
          }
          return i;
        }
        getSortedVisibleDatasetMetas() {
          return this._getSortedDatasetMetas(!0);
        }
        _drawDatasets() {
          if (
            !1 === this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 })
          )
            return;
          const t = this.getSortedVisibleDatasetMetas();
          for (let e = t.length - 1; e >= 0; --e) this._drawDataset(t[e]);
          this.notifyPlugins("afterDatasetsDraw");
        }
        _drawDataset(t) {
          const e = this.ctx,
            i = t._clip,
            r = !i.disabled,
            s = this.chartArea,
            o = { meta: t, index: t.index, cancelable: !0 };
          !1 !== this.notifyPlugins("beforeDatasetDraw", o) &&
            (r &&
              ef(e, {
                left: !1 === i.left ? 0 : s.left - i.left,
                right: !1 === i.right ? this.width : s.right + i.right,
                top: !1 === i.top ? 0 : s.top - i.top,
                bottom: !1 === i.bottom ? this.height : s.bottom + i.bottom,
              }),
            t.controller.draw(),
            r && tf(e),
            (o.cancelable = !1),
            this.notifyPlugins("afterDatasetDraw", o));
        }
        isPointInArea(t) {
          return Ic(t, this.chartArea, this._minPadding);
        }
        getElementsAtEventForMode(t, e, i, r) {
          const s = fY.modes[e];
          return "function" == typeof s ? s(this, t, i, r) : [];
        }
        getDatasetMeta(t) {
          const e = this.data.datasets[t],
            i = this._metasets;
          let r = i.filter((s) => s && s._dataset === e).pop();
          return (
            r ||
              ((r = {
                type: null,
                data: [],
                dataset: null,
                controller: null,
                hidden: null,
                xAxisID: null,
                yAxisID: null,
                order: (e && e.order) || 0,
                index: t,
                _dataset: e,
                _parsed: [],
                _sorted: !1,
              }),
              i.push(r)),
            r
          );
        }
        getContext() {
          return (
            this.$context ||
            (this.$context = Ms(null, { chart: this, type: "chart" }))
          );
        }
        getVisibleDatasetCount() {
          return this.getSortedVisibleDatasetMetas().length;
        }
        isDatasetVisible(t) {
          const e = this.data.datasets[t];
          if (!e) return !1;
          const i = this.getDatasetMeta(t);
          return "boolean" == typeof i.hidden ? !i.hidden : !e.hidden;
        }
        setDatasetVisibility(t, e) {
          this.getDatasetMeta(t).hidden = !e;
        }
        toggleDataVisibility(t) {
          this._hiddenIndices[t] = !this._hiddenIndices[t];
        }
        getDataVisibility(t) {
          return !this._hiddenIndices[t];
        }
        _updateVisibility(t, e, i) {
          const r = i ? "show" : "hide",
            s = this.getDatasetMeta(t),
            o = s.controller._resolveAnimations(void 0, r);
          ui(e)
            ? ((s.data[e].hidden = !i), this.update())
            : (this.setDatasetVisibility(t, i),
              o.update(s, { visible: i }),
              this.update((a) => (a.datasetIndex === t ? r : void 0)));
        }
        hide(t, e) {
          this._updateVisibility(t, e, !1);
        }
        show(t, e) {
          this._updateVisibility(t, e, !0);
        }
        _destroyDatasetMeta(t) {
          const e = this._metasets[t];
          e && e.controller && e.controller._destroy(),
            delete this._metasets[t];
        }
        _stop() {
          let t, e;
          for (
            this.stop(), Wr.remove(this), t = 0, e = this.data.datasets.length;
            t < e;
            ++t
          )
            this._destroyDatasetMeta(t);
        }
        destroy() {
          this.notifyPlugins("beforeDestroy");
          const { canvas: t, ctx: e } = this;
          this._stop(),
            this.config.clearCache(),
            t &&
              (this.unbindEvents(),
              Rk(t, e),
              this.platform.releaseContext(e),
              (this.canvas = null),
              (this.ctx = null)),
            this.notifyPlugins("destroy"),
            delete pf[this.id],
            this.notifyPlugins("afterDestroy");
        }
        toBase64Image(...t) {
          return this.canvas.toDataURL(...t);
        }
        bindEvents() {
          this.bindUserEvents(),
            this.options.responsive
              ? this.bindResponsiveEvents()
              : (this.attached = !0);
        }
        bindUserEvents() {
          const t = this._listeners,
            e = this.platform,
            i = (s, o) => {
              e.addEventListener(this, s, o), (t[s] = o);
            },
            r = (s, o, a) => {
              (s.offsetX = o), (s.offsetY = a), this._eventHandler(s);
            };
          qe(this.options.events, (s) => i(s, r));
        }
        bindResponsiveEvents() {
          this._responsiveListeners || (this._responsiveListeners = {});
          const t = this._responsiveListeners,
            e = this.platform,
            i = (l, c) => {
              e.addEventListener(this, l, c), (t[l] = c);
            },
            r = (l, c) => {
              t[l] && (e.removeEventListener(this, l, c), delete t[l]);
            },
            s = (l, c) => {
              this.canvas && this.resize(l, c);
            };
          let o;
          const a = () => {
            r("attach", a),
              (this.attached = !0),
              this.resize(),
              i("resize", s),
              i("detach", o);
          };
          (o = () => {
            (this.attached = !1),
              r("resize", s),
              this._stop(),
              this._resize(0, 0),
              i("attach", a);
          }),
            e.isAttached(this.canvas) ? a() : o();
        }
        unbindEvents() {
          qe(this._listeners, (t, e) => {
            this.platform.removeEventListener(this, e, t);
          }),
            (this._listeners = {}),
            qe(this._responsiveListeners, (t, e) => {
              this.platform.removeEventListener(this, e, t);
            }),
            (this._responsiveListeners = void 0);
        }
        updateHoverStyle(t, e, i) {
          const r = i ? "set" : "remove";
          let s, o, a, l;
          for (
            "dataset" === e &&
              ((s = this.getDatasetMeta(t[0].datasetIndex)),
              s.controller["_" + r + "DatasetHoverStyle"]()),
              a = 0,
              l = t.length;
            a < l;
            ++a
          ) {
            o = t[a];
            const c = o && this.getDatasetMeta(o.datasetIndex).controller;
            c && c[r + "HoverStyle"](o.element, o.datasetIndex, o.index);
          }
        }
        getActiveElements() {
          return this._active || [];
        }
        setActiveElements(t) {
          const e = this._active || [],
            i = t.map(({ datasetIndex: s, index: o }) => {
              const a = this.getDatasetMeta(s);
              if (!a) throw new Error("No dataset found at index " + s);
              return { datasetIndex: s, element: a.data[o], index: o };
            });
          !qh(i, e) &&
            ((this._active = i),
            (this._lastEvent = null),
            this._updateHoverStyles(i, e));
        }
        notifyPlugins(t, e, i) {
          return this._plugins.notify(this, t, e, i);
        }
        _updateHoverStyles(t, e, i) {
          const r = this.options.hover,
            s = (l, c) =>
              l.filter(
                (u) =>
                  !c.some(
                    (d) =>
                      u.datasetIndex === d.datasetIndex && u.index === d.index
                  )
              ),
            o = s(e, t),
            a = i ? t : s(t, e);
          o.length && this.updateHoverStyle(o, r.mode, !1),
            a.length && r.mode && this.updateHoverStyle(a, r.mode, !0);
        }
        _eventHandler(t, e) {
          const i = {
              event: t,
              replay: e,
              cancelable: !0,
              inChartArea: this.isPointInArea(t),
            },
            r = (o) =>
              (o.options.events || this.options.events).includes(t.native.type);
          if (!1 === this.notifyPlugins("beforeEvent", i, r)) return;
          const s = this._handleEvent(t, e, i.inChartArea);
          return (
            (i.cancelable = !1),
            this.notifyPlugins("afterEvent", i, r),
            (s || i.changed) && this.render(),
            this
          );
        }
        _handleEvent(t, e, i) {
          const { _active: r = [], options: s } = this,
            a = this._getActiveElements(t, r, i, e),
            l = (function LW(n) {
              return (
                "mouseup" === n.type ||
                "click" === n.type ||
                "contextmenu" === n.type
              );
            })(t),
            c = (function QY(n, t, e, i) {
              return e && "mouseout" !== n.type ? (i ? t : n) : null;
            })(t, this._lastEvent, i, l);
          i &&
            ((this._lastEvent = null),
            rt(s.onHover, [t, a, this], this),
            l && rt(s.onClick, [t, a, this], this));
          const u = !qh(a, r);
          return (
            (u || e) && ((this._active = a), this._updateHoverStyles(a, r, e)),
            (this._lastEvent = c),
            u
          );
        }
        _getActiveElements(t, e, i, r) {
          if ("mouseout" === t.type) return [];
          if (!i) return e;
          const s = this.options.hover;
          return this.getElementsAtEventForMode(t, s.mode, s, r);
        }
      }
      const z1 = () => qe(mf.instances, (n) => n._plugins.invalidate()),
        Ds = !0;
      function U1(n, t, e) {
        const {
          startAngle: i,
          pixelMargin: r,
          x: s,
          y: o,
          outerRadius: a,
          innerRadius: l,
        } = t;
        let c = r / a;
        n.beginPath(),
          n.arc(s, o, a, i - c, e + c),
          l > r
            ? ((c = r / l), n.arc(s, o, l, e + c, i - c, !0))
            : n.arc(s, o, r, e + yt, i - yt),
          n.closePath(),
          n.clip();
      }
      function Ba(n, t, e, i) {
        return { x: e + n * Math.cos(t), y: i + n * Math.sin(t) };
      }
      function Cv(n, t, e, i, r, s) {
        const { x: o, y: a, startAngle: l, pixelMargin: c, innerRadius: u } = t,
          d = Math.max(t.outerRadius + i + e - c, 0),
          h = u > 0 ? u + i + e + c : 0;
        let f = 0;
        const p = r - l;
        if (i) {
          const H = ((u > 0 ? u - i : 0) + (d > 0 ? d - i : 0)) / 2;
          f = (p - (0 !== H ? (p * H) / (H + i) : p)) / 2;
        }
        const _ = (p - Math.max(0.001, p * d - e / ut) / d) / 2,
          v = l + _ + f,
          M = r - _ - f,
          {
            outerStart: C,
            outerEnd: D,
            innerStart: S,
            innerEnd: A,
          } = (function e7(n, t, e, i) {
            const r = (function JY(n) {
                return av(n, [
                  "outerStart",
                  "outerEnd",
                  "innerStart",
                  "innerEnd",
                ]);
              })(n.options.borderRadius),
              s = (e - t) / 2,
              o = Math.min(s, (i * t) / 2),
              a = (l) => {
                const c = ((e - Math.min(s, l)) * i) / 2;
                return Wt(l, 0, Math.min(s, c));
              };
            return {
              outerStart: a(r.outerStart),
              outerEnd: a(r.outerEnd),
              innerStart: Wt(r.innerStart, 0, o),
              innerEnd: Wt(r.innerEnd, 0, o),
            };
          })(t, h, d, M - v),
          O = d - C,
          V = d - D,
          j = v + C / O,
          ie = M - D / V,
          Ce = h + S,
          ue = h + A,
          Ne = v + S / Ce,
          vt = M - A / ue;
        if ((n.beginPath(), s)) {
          if ((n.arc(o, a, d, j, ie), D > 0)) {
            const H = Ba(V, ie, o, a);
            n.arc(H.x, H.y, D, ie, M + yt);
          }
          const ee = Ba(ue, M, o, a);
          if ((n.lineTo(ee.x, ee.y), A > 0)) {
            const H = Ba(ue, vt, o, a);
            n.arc(H.x, H.y, A, M + yt, vt + Math.PI);
          }
          if ((n.arc(o, a, h, M - A / h, v + S / h, !0), S > 0)) {
            const H = Ba(Ce, Ne, o, a);
            n.arc(H.x, H.y, S, Ne + Math.PI, v - yt);
          }
          const L = Ba(O, v, o, a);
          if ((n.lineTo(L.x, L.y), C > 0)) {
            const H = Ba(O, j, o, a);
            n.arc(H.x, H.y, C, v - yt, j);
          }
        } else {
          n.moveTo(o, a);
          const ee = Math.cos(j) * d + o,
            L = Math.sin(j) * d + a;
          n.lineTo(ee, L);
          const H = Math.cos(ie) * d + o,
            Y = Math.sin(ie) * d + a;
          n.lineTo(H, Y);
        }
        n.closePath();
      }
      Object.defineProperties(mf, {
        defaults: { enumerable: Ds, value: Ie },
        instances: { enumerable: Ds, value: pf },
        overrides: { enumerable: Ds, value: ho },
        registry: { enumerable: Ds, value: dr },
        version: { enumerable: Ds, value: "3.9.1" },
        getChart: { enumerable: Ds, value: H1 },
        register: {
          enumerable: Ds,
          value: (...n) => {
            dr.add(...n), z1();
          },
        },
        unregister: {
          enumerable: Ds,
          value: (...n) => {
            dr.remove(...n), z1();
          },
        },
      });
      class gf extends Ii {
        constructor(t) {
          super(),
            (this.options = void 0),
            (this.circumference = void 0),
            (this.startAngle = void 0),
            (this.endAngle = void 0),
            (this.innerRadius = void 0),
            (this.outerRadius = void 0),
            (this.pixelMargin = 0),
            (this.fullCircles = 0),
            t && Object.assign(this, t);
        }
        inRange(t, e, i) {
          const r = this.getProps(["x", "y"], i),
            { angle: s, distance: o } = fk(r, { x: t, y: e }),
            {
              startAngle: a,
              endAngle: l,
              innerRadius: c,
              outerRadius: u,
              circumference: d,
            } = this.getProps(
              [
                "startAngle",
                "endAngle",
                "innerRadius",
                "outerRadius",
                "circumference",
              ],
              i
            ),
            h = this.options.spacing / 2,
            p = ve(d, l - a) >= Xe || Ec(s, a, l),
            m = Ur(o, c + h, u + h);
          return p && m;
        }
        getCenterPoint(t) {
          const {
              x: e,
              y: i,
              startAngle: r,
              endAngle: s,
              innerRadius: o,
              outerRadius: a,
            } = this.getProps(
              [
                "x",
                "y",
                "startAngle",
                "endAngle",
                "innerRadius",
                "outerRadius",
                "circumference",
              ],
              t
            ),
            { offset: l, spacing: c } = this.options,
            u = (r + s) / 2,
            d = (o + a + c + l) / 2;
          return { x: e + Math.cos(u) * d, y: i + Math.sin(u) * d };
        }
        tooltipPosition(t) {
          return this.getCenterPoint(t);
        }
        draw(t) {
          const { options: e, circumference: i } = this,
            r = (e.offset || 0) / 2,
            s = (e.spacing || 0) / 2,
            o = e.circular;
          if (
            ((this.pixelMargin = "inner" === e.borderAlign ? 0.33 : 0),
            (this.fullCircles = i > Xe ? Math.floor(i / Xe) : 0),
            0 === i || this.innerRadius < 0 || this.outerRadius < 0)
          )
            return;
          t.save();
          let a = 0;
          if (r) {
            a = r / 2;
            const c = (this.startAngle + this.endAngle) / 2;
            t.translate(Math.cos(c) * a, Math.sin(c) * a),
              this.circumference >= ut && (a = r);
          }
          (t.fillStyle = e.backgroundColor), (t.strokeStyle = e.borderColor);
          const l = (function t7(n, t, e, i, r) {
            const { fullCircles: s, startAngle: o, circumference: a } = t;
            let l = t.endAngle;
            if (s) {
              Cv(n, t, e, i, o + Xe, r);
              for (let c = 0; c < s; ++c) n.fill();
              isNaN(a) || ((l = o + (a % Xe)), a % Xe == 0 && (l += Xe));
            }
            return Cv(n, t, e, i, l, r), n.fill(), l;
          })(t, this, a, s, o);
          (function i7(n, t, e, i, r, s) {
            const { options: o } = t,
              { borderWidth: a, borderJoinStyle: l } = o,
              c = "inner" === o.borderAlign;
            !a ||
              (c
                ? ((n.lineWidth = 2 * a), (n.lineJoin = l || "round"))
                : ((n.lineWidth = a), (n.lineJoin = l || "bevel")),
              t.fullCircles &&
                (function n7(n, t, e) {
                  const {
                      x: i,
                      y: r,
                      startAngle: s,
                      pixelMargin: o,
                      fullCircles: a,
                    } = t,
                    l = Math.max(t.outerRadius - o, 0),
                    c = t.innerRadius + o;
                  let u;
                  for (
                    e && U1(n, t, s + Xe),
                      n.beginPath(),
                      n.arc(i, r, c, s + Xe, s, !0),
                      u = 0;
                    u < a;
                    ++u
                  )
                    n.stroke();
                  for (
                    n.beginPath(), n.arc(i, r, l, s, s + Xe), u = 0;
                    u < a;
                    ++u
                  )
                    n.stroke();
                })(n, t, c),
              c && U1(n, t, r),
              Cv(n, t, e, i, r, s),
              n.stroke());
          })(t, this, a, s, l, o),
            t.restore();
        }
      }
      function $1(n, t, e = t) {
        (n.lineCap = ve(e.borderCapStyle, t.borderCapStyle)),
          n.setLineDash(ve(e.borderDash, t.borderDash)),
          (n.lineDashOffset = ve(e.borderDashOffset, t.borderDashOffset)),
          (n.lineJoin = ve(e.borderJoinStyle, t.borderJoinStyle)),
          (n.lineWidth = ve(e.borderWidth, t.borderWidth)),
          (n.strokeStyle = ve(e.borderColor, t.borderColor));
      }
      function r7(n, t, e) {
        n.lineTo(e.x, e.y);
      }
      function q1(n, t, e = {}) {
        const i = n.length,
          { start: r = 0, end: s = i - 1 } = e,
          { start: o, end: a } = t,
          l = Math.max(r, o),
          c = Math.min(s, a);
        return {
          count: i,
          start: l,
          loop: t.loop,
          ilen:
            c < l && !((r < o && s < o) || (r > a && s > a))
              ? i + c - l
              : c - l,
        };
      }
      function o7(n, t, e, i) {
        const { points: r, options: s } = t,
          { count: o, start: a, loop: l, ilen: c } = q1(r, e, i),
          u = (function s7(n) {
            return n.stepped
              ? bG
              : n.tension || "monotone" === n.cubicInterpolationMode
              ? CG
              : r7;
          })(s);
        let f,
          p,
          m,
          { move: d = !0, reverse: h } = i || {};
        for (f = 0; f <= c; ++f)
          (p = r[(a + (h ? c - f : f)) % o]),
            !p.skip &&
              (d ? (n.moveTo(p.x, p.y), (d = !1)) : u(n, m, p, h, s.stepped),
              (m = p));
        return (
          l && ((p = r[(a + (h ? c : 0)) % o]), u(n, m, p, h, s.stepped)), !!l
        );
      }
      function a7(n, t, e, i) {
        const r = t.points,
          { count: s, start: o, ilen: a } = q1(r, e, i),
          { move: l = !0, reverse: c } = i || {};
        let h,
          f,
          p,
          m,
          _,
          v,
          u = 0,
          d = 0;
        const M = (D) => (o + (c ? a - D : D)) % s,
          C = () => {
            m !== _ && (n.lineTo(u, _), n.lineTo(u, m), n.lineTo(u, v));
          };
        for (l && ((f = r[M(0)]), n.moveTo(f.x, f.y)), h = 0; h <= a; ++h) {
          if (((f = r[M(h)]), f.skip)) continue;
          const D = f.x,
            S = f.y,
            A = 0 | D;
          A === p
            ? (S < m ? (m = S) : S > _ && (_ = S), (u = (d * u + D) / ++d))
            : (C(), n.lineTo(D, S), (p = A), (d = 0), (m = _ = S)),
            (v = S);
        }
        C();
      }
      function wv(n) {
        const t = n.options;
        return n._decimated ||
          n._loop ||
          t.tension ||
          "monotone" === t.cubicInterpolationMode ||
          t.stepped ||
          (t.borderDash && t.borderDash.length)
          ? o7
          : a7;
      }
      (gf.id = "arc"),
        (gf.defaults = {
          borderAlign: "center",
          borderColor: "#fff",
          borderJoinStyle: void 0,
          borderRadius: 0,
          borderWidth: 2,
          offset: 0,
          spacing: 0,
          angle: void 0,
          circular: !0,
        }),
        (gf.defaultRoutes = { backgroundColor: "backgroundColor" });
      const d7 = "function" == typeof Path2D;
      let _f = (() => {
        class n extends Ii {
          constructor(e) {
            super(),
              (this.animated = !0),
              (this.options = void 0),
              (this._chart = void 0),
              (this._loop = void 0),
              (this._fullLoop = void 0),
              (this._path = void 0),
              (this._points = void 0),
              (this._segments = void 0),
              (this._decimated = !1),
              (this._pointsUpdated = !1),
              (this._datasetIndex = void 0),
              e && Object.assign(this, e);
          }
          updateControlPoints(e, i) {
            const r = this.options;
            (!r.tension && "monotone" !== r.cubicInterpolationMode) ||
              r.stepped ||
              this._pointsUpdated ||
              ($G(
                this._points,
                r,
                e,
                r.spanGaps ? this._loop : this._fullLoop,
                i
              ),
              (this._pointsUpdated = !0));
          }
          set points(e) {
            (this._points = e),
              delete this._segments,
              delete this._path,
              (this._pointsUpdated = !1);
          }
          get points() {
            return this._points;
          }
          get segments() {
            return (
              this._segments ||
              (this._segments = (function o6(n, t) {
                const e = n.points,
                  i = n.options.spanGaps,
                  r = e.length;
                if (!r) return [];
                const s = !!n._loop,
                  { start: o, end: a } = (function r6(n, t, e, i) {
                    let r = 0,
                      s = t - 1;
                    if (e && !i) for (; r < t && !n[r].skip; ) r++;
                    for (; r < t && n[r].skip; ) r++;
                    for (r %= t, e && (s += r); s > r && n[s % t].skip; ) s--;
                    return (s %= t), { start: r, end: s };
                  })(e, r, s, i);
                return (function e1(n, t, e, i) {
                  return i && i.setContext && e
                    ? (function a6(n, t, e, i) {
                        const r = n._chart.getContext(),
                          s = t1(n.options),
                          {
                            _datasetIndex: o,
                            options: { spanGaps: a },
                          } = n,
                          l = e.length,
                          c = [];
                        let u = s,
                          d = t[0].start,
                          h = d;
                        function f(p, m, _, v) {
                          const M = a ? -1 : 1;
                          if (p !== m) {
                            for (p += l; e[p % l].skip; ) p -= M;
                            for (; e[m % l].skip; ) m += M;
                            p % l != m % l &&
                              (c.push({
                                start: p % l,
                                end: m % l,
                                loop: _,
                                style: v,
                              }),
                              (u = v),
                              (d = m % l));
                          }
                        }
                        for (const p of t) {
                          d = a ? d : p.start;
                          let _,
                            m = e[d % l];
                          for (h = d + 1; h <= p.end; h++) {
                            const v = e[h % l];
                            (_ = t1(
                              i.setContext(
                                Ms(r, {
                                  type: "segment",
                                  p0: m,
                                  p1: v,
                                  p0DataIndex: (h - 1) % l,
                                  p1DataIndex: h % l,
                                  datasetIndex: o,
                                })
                              )
                            )),
                              l6(_, u) && f(d, h - 1, p.loop, u),
                              (m = v),
                              (u = _);
                          }
                          d < h - 1 && f(d, h - 1, p.loop, u);
                        }
                        return c;
                      })(n, t, e, i)
                    : t;
                })(
                  n,
                  !0 === i
                    ? [{ start: o, end: a, loop: s }]
                    : (function s6(n, t, e, i) {
                        const r = n.length,
                          s = [];
                        let l,
                          o = t,
                          a = n[t];
                        for (l = t + 1; l <= e; ++l) {
                          const c = n[l % r];
                          c.skip || c.stop
                            ? a.skip ||
                              (s.push({
                                start: t % r,
                                end: (l - 1) % r,
                                loop: (i = !1),
                              }),
                              (t = o = c.stop ? l : null))
                            : ((o = l), a.skip && (t = l)),
                            (a = c);
                        }
                        return (
                          null !== o &&
                            s.push({ start: t % r, end: o % r, loop: i }),
                          s
                        );
                      })(
                        e,
                        o,
                        a < o ? a + r : a,
                        !!n._fullLoop && 0 === o && a === r - 1
                      ),
                  e,
                  t
                );
              })(this, this.options.segment))
            );
          }
          first() {
            const e = this.segments;
            return e.length && this.points[e[0].start];
          }
          last() {
            const e = this.segments,
              r = e.length;
            return r && this.points[e[r - 1].end];
          }
          interpolate(e, i) {
            const r = this.options,
              s = e[i],
              o = this.points,
              a = Jk(this, { property: i, start: s, end: s });
            if (!a.length) return;
            const l = [],
              c = (function l7(n) {
                return n.stepped
                  ? QG
                  : n.tension || "monotone" === n.cubicInterpolationMode
                  ? JG
                  : yo;
              })(r);
            let u, d;
            for (u = 0, d = a.length; u < d; ++u) {
              const { start: h, end: f } = a[u],
                p = o[h],
                m = o[f];
              if (p === m) {
                l.push(p);
                continue;
              }
              const v = c(
                p,
                m,
                Math.abs((s - p[i]) / (m[i] - p[i])),
                r.stepped
              );
              (v[i] = e[i]), l.push(v);
            }
            return 1 === l.length ? l[0] : l;
          }
          pathSegment(e, i, r) {
            return wv(this)(e, this, i, r);
          }
          path(e, i, r) {
            const s = this.segments,
              o = wv(this);
            let a = this._loop;
            (i = i || 0), (r = r || this.points.length - i);
            for (const l of s) a &= o(e, this, l, { start: i, end: i + r - 1 });
            return !!a;
          }
          draw(e, i, r, s) {
            (this.points || []).length &&
              (this.options || {}).borderWidth &&
              (e.save(),
              (function h7(n, t, e, i) {
                d7 && !t.options.segment
                  ? (function c7(n, t, e, i) {
                      let r = t._path;
                      r ||
                        ((r = t._path = new Path2D()),
                        t.path(r, e, i) && r.closePath()),
                        $1(n, t.options),
                        n.stroke(r);
                    })(n, t, e, i)
                  : (function u7(n, t, e, i) {
                      const { segments: r, options: s } = t,
                        o = wv(t);
                      for (const a of r)
                        $1(n, s, a.style),
                          n.beginPath(),
                          o(n, t, a, { start: e, end: e + i - 1 }) &&
                            n.closePath(),
                          n.stroke();
                    })(n, t, e, i);
              })(e, this, r, s),
              e.restore()),
              this.animated &&
                ((this._pointsUpdated = !1), (this._path = void 0));
          }
        }
        return (
          (n.id = "line"),
          (n.defaults = {
            borderCapStyle: "butt",
            borderDash: [],
            borderDashOffset: 0,
            borderJoinStyle: "miter",
            borderWidth: 3,
            capBezierPoints: !0,
            cubicInterpolationMode: "default",
            fill: !1,
            spanGaps: !1,
            stepped: !1,
            tension: 0,
          }),
          (n.defaultRoutes = {
            backgroundColor: "backgroundColor",
            borderColor: "borderColor",
          }),
          (n.descriptors = {
            _scriptable: !0,
            _indexable: (t) => "borderDash" !== t && "fill" !== t,
          }),
          n
        );
      })();
      function W1(n, t, e, i) {
        const r = n.options,
          { [e]: s } = n.getProps([e], i);
        return Math.abs(t - s) < r.radius + r.hitRadius;
      }
      let f7 = (() => {
        class n extends Ii {
          constructor(e) {
            super(),
              (this.options = void 0),
              (this.parsed = void 0),
              (this.skip = void 0),
              (this.stop = void 0),
              e && Object.assign(this, e);
          }
          inRange(e, i, r) {
            const s = this.options,
              { x: o, y: a } = this.getProps(["x", "y"], r);
            return (
              Math.pow(e - o, 2) + Math.pow(i - a, 2) <
              Math.pow(s.hitRadius + s.radius, 2)
            );
          }
          inXRange(e, i) {
            return W1(this, e, "x", i);
          }
          inYRange(e, i) {
            return W1(this, e, "y", i);
          }
          getCenterPoint(e) {
            const { x: i, y: r } = this.getProps(["x", "y"], e);
            return { x: i, y: r };
          }
          size(e) {
            let i = (e = e || this.options || {}).radius || 0;
            return (
              (i = Math.max(i, (i && e.hoverRadius) || 0)),
              2 * (i + ((i && e.borderWidth) || 0))
            );
          }
          draw(e, i) {
            const r = this.options;
            this.skip ||
              r.radius < 0.1 ||
              !Ic(this, i, this.size(r) / 2) ||
              ((e.strokeStyle = r.borderColor),
              (e.lineWidth = r.borderWidth),
              (e.fillStyle = r.backgroundColor),
              ov(e, r, this.x, this.y));
          }
          getRange() {
            const e = this.options || {};
            return e.radius + e.hitRadius;
          }
        }
        return (
          (n.id = "point"),
          (n.defaults = {
            borderWidth: 1,
            hitRadius: 1,
            hoverBorderWidth: 1,
            hoverRadius: 4,
            pointStyle: "circle",
            radius: 3,
            rotation: 0,
          }),
          (n.defaultRoutes = {
            backgroundColor: "backgroundColor",
            borderColor: "borderColor",
          }),
          n
        );
      })();
      function G1(n, t) {
        const {
          x: e,
          y: i,
          base: r,
          width: s,
          height: o,
        } = n.getProps(["x", "y", "base", "width", "height"], t);
        let a, l, c, u, d;
        return (
          n.horizontal
            ? ((d = o / 2),
              (a = Math.min(e, r)),
              (l = Math.max(e, r)),
              (c = i - d),
              (u = i + d))
            : ((d = s / 2),
              (a = e - d),
              (l = e + d),
              (c = Math.min(i, r)),
              (u = Math.max(i, r))),
          { left: a, top: c, right: l, bottom: u }
        );
      }
      function xs(n, t, e, i) {
        return n ? 0 : Wt(t, e, i);
      }
      function Mv(n, t, e, i) {
        const r = null === t,
          s = null === e,
          a = n && !(r && s) && G1(n, i);
        return (
          a && (r || Ur(t, a.left, a.right)) && (s || Ur(e, a.top, a.bottom))
        );
      }
      function y7(n, t) {
        n.rect(t.x, t.y, t.w, t.h);
      }
      function Dv(n, t, e = {}) {
        const i = n.x !== e.x ? -t : 0,
          r = n.y !== e.y ? -t : 0;
        return {
          x: n.x + i,
          y: n.y + r,
          w: n.w + ((n.x + n.w !== e.x + e.w ? t : 0) - i),
          h: n.h + ((n.y + n.h !== e.y + e.h ? t : 0) - r),
          radius: n.radius,
        };
      }
      class yf extends Ii {
        constructor(t) {
          super(),
            (this.options = void 0),
            (this.horizontal = void 0),
            (this.base = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this.inflateAmount = void 0),
            t && Object.assign(this, t);
        }
        draw(t) {
          const {
              inflateAmount: e,
              options: { borderColor: i, backgroundColor: r },
            } = this,
            { inner: s, outer: o } = (function g7(n) {
              const t = G1(n),
                e = t.right - t.left,
                i = t.bottom - t.top,
                r = (function p7(n, t, e) {
                  const r = n.borderSkipped,
                    s = Fk(n.options.borderWidth);
                  return {
                    t: xs(r.top, s.top, 0, e),
                    r: xs(r.right, s.right, 0, t),
                    b: xs(r.bottom, s.bottom, 0, e),
                    l: xs(r.left, s.left, 0, t),
                  };
                })(n, e / 2, i / 2),
                s = (function m7(n, t, e) {
                  const { enableBorderRadius: i } = n.getProps([
                      "enableBorderRadius",
                    ]),
                    r = n.options.borderRadius,
                    s = mo(r),
                    o = Math.min(t, e),
                    a = n.borderSkipped,
                    l = i || Te(r);
                  return {
                    topLeft: xs(!l || a.top || a.left, s.topLeft, 0, o),
                    topRight: xs(!l || a.top || a.right, s.topRight, 0, o),
                    bottomLeft: xs(
                      !l || a.bottom || a.left,
                      s.bottomLeft,
                      0,
                      o
                    ),
                    bottomRight: xs(
                      !l || a.bottom || a.right,
                      s.bottomRight,
                      0,
                      o
                    ),
                  };
                })(n, e / 2, i / 2);
              return {
                outer: { x: t.left, y: t.top, w: e, h: i, radius: s },
                inner: {
                  x: t.left + r.l,
                  y: t.top + r.t,
                  w: e - r.l - r.r,
                  h: i - r.t - r.b,
                  radius: {
                    topLeft: Math.max(0, s.topLeft - Math.max(r.t, r.l)),
                    topRight: Math.max(0, s.topRight - Math.max(r.t, r.r)),
                    bottomLeft: Math.max(0, s.bottomLeft - Math.max(r.b, r.l)),
                    bottomRight: Math.max(
                      0,
                      s.bottomRight - Math.max(r.b, r.r)
                    ),
                  },
                },
              };
            })(this),
            a = (function _7(n) {
              return n.topLeft || n.topRight || n.bottomLeft || n.bottomRight;
            })(o.radius)
              ? Oc
              : y7;
          t.save(),
            (o.w !== s.w || o.h !== s.h) &&
              (t.beginPath(),
              a(t, Dv(o, e, s)),
              t.clip(),
              a(t, Dv(s, -e, o)),
              (t.fillStyle = i),
              t.fill("evenodd")),
            t.beginPath(),
            a(t, Dv(s, e)),
            (t.fillStyle = r),
            t.fill(),
            t.restore();
        }
        inRange(t, e, i) {
          return Mv(this, t, e, i);
        }
        inXRange(t, e) {
          return Mv(this, t, null, e);
        }
        inYRange(t, e) {
          return Mv(this, null, t, e);
        }
        getCenterPoint(t) {
          const {
            x: e,
            y: i,
            base: r,
            horizontal: s,
          } = this.getProps(["x", "y", "base", "horizontal"], t);
          return { x: s ? (e + r) / 2 : e, y: s ? i : (i + r) / 2 };
        }
        getRange(t) {
          return "x" === t ? this.width / 2 : this.height / 2;
        }
      }
      (yf.id = "bar"),
        (yf.defaults = {
          borderSkipped: "start",
          borderWidth: 0,
          borderRadius: 0,
          inflateAmount: "auto",
          pointStyle: void 0,
        }),
        (yf.defaultRoutes = {
          backgroundColor: "backgroundColor",
          borderColor: "borderColor",
        });
      var v7 = Object.freeze({
        __proto__: null,
        ArcElement: gf,
        LineElement: _f,
        PointElement: f7,
        BarElement: yf,
      });
      function Y1(n) {
        if (n._decimated) {
          const t = n._data;
          delete n._decimated,
            delete n._data,
            Object.defineProperty(n, "data", { value: t });
        }
      }
      function K1(n) {
        n.data.datasets.forEach((t) => {
          Y1(t);
        });
      }
      var M7 = {
        id: "decimation",
        defaults: { algorithm: "min-max", enabled: !1 },
        beforeElementsUpdate: (n, t, e) => {
          if (!e.enabled) return void K1(n);
          const i = n.width;
          n.data.datasets.forEach((r, s) => {
            const { _data: o, indexAxis: a } = r,
              l = n.getDatasetMeta(s),
              c = o || r.data;
            if (
              "y" === Rc([a, n.options.indexAxis]) ||
              !l.controller.supportsDecimation
            )
              return;
            const u = n.scales[l.xAxisID];
            if (("linear" !== u.type && "time" !== u.type) || n.options.parsing)
              return;
            let p,
              { start: d, count: h } = (function w7(n, t) {
                const e = t.length;
                let r,
                  i = 0;
                const { iScale: s } = n,
                  {
                    min: o,
                    max: a,
                    minDefined: l,
                    maxDefined: c,
                  } = s.getUserBounds();
                return (
                  l && (i = Wt($r(t, s.axis, o).lo, 0, e - 1)),
                  (r = c ? Wt($r(t, s.axis, a).hi + 1, i, e) - i : e - i),
                  { start: i, count: r }
                );
              })(l, c);
            if (h <= (e.threshold || 4 * i)) Y1(r);
            else {
              switch (
                (Fe(o) &&
                  ((r._data = c),
                  delete r.data,
                  Object.defineProperty(r, "data", {
                    configurable: !0,
                    enumerable: !0,
                    get: function () {
                      return this._decimated;
                    },
                    set: function (m) {
                      this._data = m;
                    },
                  })),
                e.algorithm)
              ) {
                case "lttb":
                  p = (function b7(n, t, e, i, r) {
                    const s = r.samples || i;
                    if (s >= e) return n.slice(t, t + e);
                    const o = [],
                      a = (e - 2) / (s - 2);
                    let l = 0;
                    const c = t + e - 1;
                    let d,
                      h,
                      f,
                      p,
                      m,
                      u = t;
                    for (o[l++] = n[u], d = 0; d < s - 2; d++) {
                      let M,
                        _ = 0,
                        v = 0;
                      const C = Math.floor((d + 1) * a) + 1 + t,
                        D = Math.min(Math.floor((d + 2) * a) + 1, e) + t,
                        S = D - C;
                      for (M = C; M < D; M++) (_ += n[M].x), (v += n[M].y);
                      (_ /= S), (v /= S);
                      const A = Math.floor(d * a) + 1 + t,
                        O = Math.min(Math.floor((d + 1) * a) + 1, e) + t,
                        { x: V, y: j } = n[u];
                      for (f = p = -1, M = A; M < O; M++)
                        (p =
                          0.5 *
                          Math.abs(
                            (V - _) * (n[M].y - j) - (V - n[M].x) * (v - j)
                          )),
                          p > f && ((f = p), (h = n[M]), (m = M));
                      (o[l++] = h), (u = m);
                    }
                    return (o[l++] = n[c]), o;
                  })(c, d, h, i, e);
                  break;
                case "min-max":
                  p = (function C7(n, t, e, i) {
                    let o,
                      a,
                      l,
                      c,
                      u,
                      d,
                      h,
                      f,
                      p,
                      m,
                      r = 0,
                      s = 0;
                    const _ = [],
                      M = n[t].x,
                      D = n[t + e - 1].x - M;
                    for (o = t; o < t + e; ++o) {
                      (a = n[o]), (l = ((a.x - M) / D) * i), (c = a.y);
                      const S = 0 | l;
                      if (S === u)
                        c < p
                          ? ((p = c), (d = o))
                          : c > m && ((m = c), (h = o)),
                          (r = (s * r + a.x) / ++s);
                      else {
                        const A = o - 1;
                        if (!Fe(d) && !Fe(h)) {
                          const O = Math.min(d, h),
                            V = Math.max(d, h);
                          O !== f && O !== A && _.push({ ...n[O], x: r }),
                            V !== f && V !== A && _.push({ ...n[V], x: r });
                        }
                        o > 0 && A !== f && _.push(n[A]),
                          _.push(a),
                          (u = S),
                          (s = 0),
                          (p = m = c),
                          (d = h = f = o);
                      }
                    }
                    return _;
                  })(c, d, h, i);
                  break;
                default:
                  throw new Error(
                    `Unsupported decimation algorithm '${e.algorithm}'`
                  );
              }
              r._decimated = p;
            }
          });
        },
        destroy(n) {
          K1(n);
        },
      };
      function xv(n, t, e, i) {
        if (i) return;
        let r = t[n],
          s = e[n];
        return (
          "angle" === n && ((r = Yn(r)), (s = Yn(s))),
          { property: n, start: r, end: s }
        );
      }
      function Ev(n, t, e) {
        for (; t > n; t--) {
          const i = e[t];
          if (!isNaN(i.x) && !isNaN(i.y)) break;
        }
        return t;
      }
      function X1(n, t, e, i) {
        return n && t ? i(n[e], t[e]) : n ? n[e] : t ? t[e] : 0;
      }
      function Z1(n, t) {
        let e = [],
          i = !1;
        return (
          it(n)
            ? ((i = !0), (e = n))
            : (e = (function x7(n, t) {
                const { x: e = null, y: i = null } = n || {},
                  r = t.points,
                  s = [];
                return (
                  t.segments.forEach(({ start: o, end: a }) => {
                    a = Ev(o, a, r);
                    const l = r[o],
                      c = r[a];
                    null !== i
                      ? (s.push({ x: l.x, y: i }), s.push({ x: c.x, y: i }))
                      : null !== e &&
                        (s.push({ x: e, y: l.y }), s.push({ x: e, y: c.y }));
                  }),
                  s
                );
              })(n, t)),
          e.length
            ? new _f({
                points: e,
                options: { tension: 0 },
                _loop: i,
                _fullLoop: i,
              })
            : null
        );
      }
      function Q1(n) {
        return n && !1 !== n.fill;
      }
      function E7(n, t, e) {
        let r = n[t].fill;
        const s = [t];
        let o;
        if (!e) return r;
        for (; !1 !== r && -1 === s.indexOf(r); ) {
          if (!Mt(r)) return r;
          if (((o = n[r]), !o)) return !1;
          if (o.visible) return r;
          s.push(r), (r = o.fill);
        }
        return !1;
      }
      function S7(n, t, e) {
        const i = (function I7(n) {
          const t = n.options,
            e = t.fill;
          let i = ve(e && e.target, e);
          return (
            void 0 === i && (i = !!t.backgroundColor),
            !1 !== i && null !== i && (!0 === i ? "origin" : i)
          );
        })(n);
        if (Te(i)) return !isNaN(i.value) && i;
        let r = parseFloat(i);
        return Mt(r) && Math.floor(r) === r
          ? (function T7(n, t, e, i) {
              return (
                ("-" === n || "+" === n) && (e = t + e),
                !(e === t || e < 0 || e >= i) && e
              );
            })(i[0], t, r, e)
          : ["origin", "start", "end", "stack", "shape"].indexOf(i) >= 0 && i;
      }
      function P7(n, t, e) {
        const i = [];
        for (let r = 0; r < e.length; r++) {
          const s = e[r],
            { first: o, last: a, point: l } = F7(s, t, "x");
          if (!(!l || (o && a)))
            if (o) i.unshift(l);
            else if ((n.push(l), !a)) break;
        }
        n.push(...i);
      }
      function F7(n, t, e) {
        const i = n.interpolate(t, e);
        if (!i) return {};
        const r = i[e],
          s = n.segments,
          o = n.points;
        let a = !1,
          l = !1;
        for (let c = 0; c < s.length; c++) {
          const u = s[c],
            d = o[u.start][e],
            h = o[u.end][e];
          if (Ur(r, d, h)) {
            (a = r === d), (l = r === h);
            break;
          }
        }
        return { first: a, last: l, point: i };
      }
      class J1 {
        constructor(t) {
          (this.x = t.x), (this.y = t.y), (this.radius = t.radius);
        }
        pathSegment(t, e, i) {
          const { x: r, y: s, radius: o } = this;
          return (
            t.arc(r, s, o, (e = e || { start: 0, end: Xe }).end, e.start, !0),
            !i.bounds
          );
        }
        interpolate(t) {
          const { x: e, y: i, radius: r } = this,
            s = t.angle;
          return { x: e + Math.cos(s) * r, y: i + Math.sin(s) * r, angle: s };
        }
      }
      function Sv(n, t, e) {
        const i = (function N7(n) {
            const { chart: t, fill: e, line: i } = n;
            if (Mt(e))
              return (function L7(n, t) {
                const e = n.getDatasetMeta(t);
                return e && n.isDatasetVisible(t) ? e.dataset : null;
              })(t, e);
            if ("stack" === e)
              return (function O7(n) {
                const { scale: t, index: e, line: i } = n,
                  r = [],
                  s = i.segments,
                  o = i.points,
                  a = (function R7(n, t) {
                    const e = [],
                      i = n.getMatchingVisibleMetas("line");
                    for (let r = 0; r < i.length; r++) {
                      const s = i[r];
                      if (s.index === t) break;
                      s.hidden || e.unshift(s.dataset);
                    }
                    return e;
                  })(t, e);
                a.push(Z1({ x: null, y: t.bottom }, i));
                for (let l = 0; l < s.length; l++) {
                  const c = s[l];
                  for (let u = c.start; u <= c.end; u++) P7(r, o[u], a);
                }
                return new _f({ points: r, options: {} });
              })(n);
            if ("shape" === e) return !0;
            const r = (function B7(n) {
              return (n.scale || {}).getPointPositionForValue
                ? (function j7(n) {
                    const { scale: t, fill: e } = n,
                      i = t.options,
                      r = t.getLabels().length,
                      s = i.reverse ? t.max : t.min,
                      o = (function k7(n, t, e) {
                        let i;
                        return (
                          (i =
                            "start" === n
                              ? e
                              : "end" === n
                              ? t.options.reverse
                                ? t.min
                                : t.max
                              : Te(n)
                              ? n.value
                              : t.getBaseValue()),
                          i
                        );
                      })(e, t, s),
                      a = [];
                    if (i.grid.circular) {
                      const l = t.getPointPositionForValue(0, s);
                      return new J1({
                        x: l.x,
                        y: l.y,
                        radius: t.getDistanceFromCenterForValue(o),
                      });
                    }
                    for (let l = 0; l < r; ++l)
                      a.push(t.getPointPositionForValue(l, o));
                    return a;
                  })(n)
                : (function V7(n) {
                    const { scale: t = {}, fill: e } = n,
                      i = (function A7(n, t) {
                        let e = null;
                        return (
                          "start" === n
                            ? (e = t.bottom)
                            : "end" === n
                            ? (e = t.top)
                            : Te(n)
                            ? (e = t.getPixelForValue(n.value))
                            : t.getBasePixel && (e = t.getBasePixel()),
                          e
                        );
                      })(e, t);
                    if (Mt(i)) {
                      const r = t.isHorizontal();
                      return { x: r ? i : null, y: r ? null : i };
                    }
                    return null;
                  })(n);
            })(n);
            return r instanceof J1 ? r : Z1(r, i);
          })(t),
          { line: r, scale: s, axis: o } = t,
          a = r.options,
          l = a.fill,
          c = a.backgroundColor,
          { above: u = c, below: d = c } = l || {};
        i &&
          r.points.length &&
          (ef(n, e),
          (function H7(n, t) {
            const {
                line: e,
                target: i,
                above: r,
                below: s,
                area: o,
                scale: a,
              } = t,
              l = e._loop ? "angle" : t.axis;
            n.save(),
              "x" === l &&
                s !== r &&
                (eI(n, i, o.top),
                tI(n, { line: e, target: i, color: r, scale: a, property: l }),
                n.restore(),
                n.save(),
                eI(n, i, o.bottom)),
              tI(n, { line: e, target: i, color: s, scale: a, property: l }),
              n.restore();
          })(n, {
            line: r,
            target: i,
            above: u,
            below: d,
            area: e,
            scale: s,
            axis: o,
          }),
          tf(n));
      }
      function eI(n, t, e) {
        const { segments: i, points: r } = t;
        let s = !0,
          o = !1;
        n.beginPath();
        for (const a of i) {
          const { start: l, end: c } = a,
            u = r[l],
            d = r[Ev(l, c, r)];
          s
            ? (n.moveTo(u.x, u.y), (s = !1))
            : (n.lineTo(u.x, e), n.lineTo(u.x, u.y)),
            (o = !!t.pathSegment(n, a, { move: o })),
            o ? n.closePath() : n.lineTo(d.x, e);
        }
        n.lineTo(t.first().x, e), n.closePath(), n.clip();
      }
      function tI(n, t) {
        const { line: e, target: i, property: r, color: s, scale: o } = t,
          a = (function D7(n, t, e) {
            const i = n.segments,
              r = n.points,
              s = t.points,
              o = [];
            for (const a of i) {
              let { start: l, end: c } = a;
              c = Ev(l, c, r);
              const u = xv(e, r[l], r[c], a.loop);
              if (!t.segments) {
                o.push({ source: a, target: u, start: r[l], end: r[c] });
                continue;
              }
              const d = Jk(t, u);
              for (const h of d) {
                const f = xv(e, s[h.start], s[h.end], h.loop),
                  p = Qk(a, r, f);
                for (const m of p)
                  o.push({
                    source: m,
                    target: h,
                    start: { [e]: X1(u, f, "start", Math.max) },
                    end: { [e]: X1(u, f, "end", Math.min) },
                  });
              }
            }
            return o;
          })(e, i, r);
        for (const { source: l, target: c, start: u, end: d } of a) {
          const { style: { backgroundColor: h = s } = {} } = l,
            f = !0 !== i;
          n.save(),
            (n.fillStyle = h),
            z7(n, o, f && xv(r, u, d)),
            n.beginPath();
          const p = !!e.pathSegment(n, l);
          let m;
          if (f) {
            p ? n.closePath() : nI(n, i, d, r);
            const _ = !!i.pathSegment(n, c, { move: p, reverse: !0 });
            (m = p && _), m || nI(n, i, u, r);
          }
          n.closePath(), n.fill(m ? "evenodd" : "nonzero"), n.restore();
        }
      }
      function z7(n, t, e) {
        const { top: i, bottom: r } = t.chart.chartArea,
          { property: s, start: o, end: a } = e || {};
        "x" === s && (n.beginPath(), n.rect(o, i, a - o, r - i), n.clip());
      }
      function nI(n, t, e, i) {
        const r = t.interpolate(e, i);
        r && n.lineTo(r.x, r.y);
      }
      var U7 = {
        id: "filler",
        afterDatasetsUpdate(n, t, e) {
          const i = (n.data.datasets || []).length,
            r = [];
          let s, o, a, l;
          for (o = 0; o < i; ++o)
            (s = n.getDatasetMeta(o)),
              (a = s.dataset),
              (l = null),
              a &&
                a.options &&
                a instanceof _f &&
                (l = {
                  visible: n.isDatasetVisible(o),
                  index: o,
                  fill: S7(a, o, i),
                  chart: n,
                  axis: s.controller.options.indexAxis,
                  scale: s.vScale,
                  line: a,
                }),
              (s.$filler = l),
              r.push(l);
          for (o = 0; o < i; ++o)
            (l = r[o]), l && !1 !== l.fill && (l.fill = E7(r, o, e.propagate));
        },
        beforeDraw(n, t, e) {
          const i = "beforeDraw" === e.drawTime,
            r = n.getSortedVisibleDatasetMetas(),
            s = n.chartArea;
          for (let o = r.length - 1; o >= 0; --o) {
            const a = r[o].$filler;
            !a ||
              (a.line.updateControlPoints(s, a.axis),
              i && a.fill && Sv(n.ctx, a, s));
          }
        },
        beforeDatasetsDraw(n, t, e) {
          if ("beforeDatasetsDraw" !== e.drawTime) return;
          const i = n.getSortedVisibleDatasetMetas();
          for (let r = i.length - 1; r >= 0; --r) {
            const s = i[r].$filler;
            Q1(s) && Sv(n.ctx, s, n.chartArea);
          }
        },
        beforeDatasetDraw(n, t, e) {
          const i = t.meta.$filler;
          !Q1(i) ||
            "beforeDatasetDraw" !== e.drawTime ||
            Sv(n.ctx, i, n.chartArea);
        },
        defaults: { propagate: !0, drawTime: "beforeDatasetDraw" },
      };
      const iI = (n, t) => {
        let { boxHeight: e = t, boxWidth: i = t } = n;
        return (
          n.usePointStyle &&
            ((e = Math.min(e, t)), (i = n.pointStyleWidth || Math.min(i, t))),
          { boxWidth: i, boxHeight: e, itemHeight: Math.max(t, e) }
        );
      };
      class rI extends Ii {
        constructor(t) {
          super(),
            (this._added = !1),
            (this.legendHitBoxes = []),
            (this._hoveredItem = null),
            (this.doughnutMode = !1),
            (this.chart = t.chart),
            (this.options = t.options),
            (this.ctx = t.ctx),
            (this.legendItems = void 0),
            (this.columnSizes = void 0),
            (this.lineWidths = void 0),
            (this.maxHeight = void 0),
            (this.maxWidth = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.height = void 0),
            (this.width = void 0),
            (this._margins = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(t, e, i) {
          (this.maxWidth = t),
            (this.maxHeight = e),
            (this._margins = i),
            this.setDimensions(),
            this.buildLabels(),
            this.fit();
        }
        setDimensions() {
          this.isHorizontal()
            ? ((this.width = this.maxWidth),
              (this.left = this._margins.left),
              (this.right = this.width))
            : ((this.height = this.maxHeight),
              (this.top = this._margins.top),
              (this.bottom = this.height));
        }
        buildLabels() {
          const t = this.options.labels || {};
          let e = rt(t.generateLabels, [this.chart], this) || [];
          t.filter && (e = e.filter((i) => t.filter(i, this.chart.data))),
            t.sort && (e = e.sort((i, r) => t.sort(i, r, this.chart.data))),
            this.options.reverse && e.reverse(),
            (this.legendItems = e);
        }
        fit() {
          const { options: t, ctx: e } = this;
          if (!t.display) return void (this.width = this.height = 0);
          const i = t.labels,
            r = Ht(i.font),
            s = r.size,
            o = this._computeTitleHeight(),
            { boxWidth: a, itemHeight: l } = iI(i, s);
          let c, u;
          (e.font = r.string),
            this.isHorizontal()
              ? ((c = this.maxWidth), (u = this._fitRows(o, s, a, l) + 10))
              : ((u = this.maxHeight), (c = this._fitCols(o, s, a, l) + 10)),
            (this.width = Math.min(c, t.maxWidth || this.maxWidth)),
            (this.height = Math.min(u, t.maxHeight || this.maxHeight));
        }
        _fitRows(t, e, i, r) {
          const {
              ctx: s,
              maxWidth: o,
              options: {
                labels: { padding: a },
              },
            } = this,
            l = (this.legendHitBoxes = []),
            c = (this.lineWidths = [0]),
            u = r + a;
          let d = t;
          (s.textAlign = "left"), (s.textBaseline = "middle");
          let h = -1,
            f = -u;
          return (
            this.legendItems.forEach((p, m) => {
              const _ = i + e / 2 + s.measureText(p.text).width;
              (0 === m || c[c.length - 1] + _ + 2 * a > o) &&
                ((d += u), (c[c.length - (m > 0 ? 0 : 1)] = 0), (f += u), h++),
                (l[m] = { left: 0, top: f, row: h, width: _, height: r }),
                (c[c.length - 1] += _ + a);
            }),
            d
          );
        }
        _fitCols(t, e, i, r) {
          const {
              ctx: s,
              maxHeight: o,
              options: {
                labels: { padding: a },
              },
            } = this,
            l = (this.legendHitBoxes = []),
            c = (this.columnSizes = []),
            u = o - t;
          let d = a,
            h = 0,
            f = 0,
            p = 0,
            m = 0;
          return (
            this.legendItems.forEach((_, v) => {
              const M = i + e / 2 + s.measureText(_.text).width;
              v > 0 &&
                f + r + 2 * a > u &&
                ((d += h + a),
                c.push({ width: h, height: f }),
                (p += h + a),
                m++,
                (h = f = 0)),
                (l[v] = { left: p, top: f, col: m, width: M, height: r }),
                (h = Math.max(h, M)),
                (f += r + a);
            }),
            (d += h),
            c.push({ width: h, height: f }),
            d
          );
        }
        adjustHitBoxes() {
          if (!this.options.display) return;
          const t = this._computeTitleHeight(),
            {
              legendHitBoxes: e,
              options: {
                align: i,
                labels: { padding: r },
                rtl: s,
              },
            } = this,
            o = La(s, this.left, this.width);
          if (this.isHorizontal()) {
            let a = 0,
              l = nn(i, this.left + r, this.right - this.lineWidths[a]);
            for (const c of e)
              a !== c.row &&
                ((a = c.row),
                (l = nn(i, this.left + r, this.right - this.lineWidths[a]))),
                (c.top += this.top + t + r),
                (c.left = o.leftForLtr(o.x(l), c.width)),
                (l += c.width + r);
          } else {
            let a = 0,
              l = nn(
                i,
                this.top + t + r,
                this.bottom - this.columnSizes[a].height
              );
            for (const c of e)
              c.col !== a &&
                ((a = c.col),
                (l = nn(
                  i,
                  this.top + t + r,
                  this.bottom - this.columnSizes[a].height
                ))),
                (c.top = l),
                (c.left += this.left + r),
                (c.left = o.leftForLtr(o.x(c.left), c.width)),
                (l += c.height + r);
          }
        }
        isHorizontal() {
          return (
            "top" === this.options.position ||
            "bottom" === this.options.position
          );
        }
        draw() {
          if (this.options.display) {
            const t = this.ctx;
            ef(t, this), this._draw(), tf(t);
          }
        }
        _draw() {
          const { options: t, columnSizes: e, lineWidths: i, ctx: r } = this,
            { align: s, labels: o } = t,
            a = Ie.color,
            l = La(t.rtl, this.left, this.width),
            c = Ht(o.font),
            { color: u, padding: d } = o,
            h = c.size,
            f = h / 2;
          let p;
          this.drawTitle(),
            (r.textAlign = l.textAlign("left")),
            (r.textBaseline = "middle"),
            (r.lineWidth = 0.5),
            (r.font = c.string);
          const { boxWidth: m, boxHeight: _, itemHeight: v } = iI(o, h),
            D = this.isHorizontal(),
            S = this._computeTitleHeight();
          (p = D
            ? {
                x: nn(s, this.left + d, this.right - i[0]),
                y: this.top + d + S,
                line: 0,
              }
            : {
                x: this.left + d,
                y: nn(s, this.top + S + d, this.bottom - e[0].height),
                line: 0,
              }),
            Yk(this.ctx, t.textDirection);
          const A = v + d;
          this.legendItems.forEach((O, V) => {
            (r.strokeStyle = O.fontColor || u),
              (r.fillStyle = O.fontColor || u);
            const j = r.measureText(O.text).width,
              ie = l.textAlign(O.textAlign || (O.textAlign = o.textAlign)),
              Ce = m + f + j;
            let ue = p.x,
              Ne = p.y;
            l.setWidth(this.width),
              D
                ? V > 0 &&
                  ue + Ce + d > this.right &&
                  ((Ne = p.y += A),
                  p.line++,
                  (ue = p.x = nn(s, this.left + d, this.right - i[p.line])))
                : V > 0 &&
                  Ne + A > this.bottom &&
                  ((ue = p.x = ue + e[p.line].width + d),
                  p.line++,
                  (Ne = p.y =
                    nn(s, this.top + S + d, this.bottom - e[p.line].height))),
              (function (O, V, j) {
                if (isNaN(m) || m <= 0 || isNaN(_) || _ < 0) return;
                r.save();
                const ie = ve(j.lineWidth, 1);
                if (
                  ((r.fillStyle = ve(j.fillStyle, a)),
                  (r.lineCap = ve(j.lineCap, "butt")),
                  (r.lineDashOffset = ve(j.lineDashOffset, 0)),
                  (r.lineJoin = ve(j.lineJoin, "miter")),
                  (r.lineWidth = ie),
                  (r.strokeStyle = ve(j.strokeStyle, a)),
                  r.setLineDash(ve(j.lineDash, [])),
                  o.usePointStyle)
                ) {
                  const Ce = {
                      radius: (_ * Math.SQRT2) / 2,
                      pointStyle: j.pointStyle,
                      rotation: j.rotation,
                      borderWidth: ie,
                    },
                    ue = l.xPlus(O, m / 2);
                  Pk(r, Ce, ue, V + f, o.pointStyleWidth && m);
                } else {
                  const Ce = V + Math.max((h - _) / 2, 0),
                    ue = l.leftForLtr(O, m),
                    Ne = mo(j.borderRadius);
                  r.beginPath(),
                    Object.values(Ne).some((vt) => 0 !== vt)
                      ? Oc(r, { x: ue, y: Ce, w: m, h: _, radius: Ne })
                      : r.rect(ue, Ce, m, _),
                    r.fill(),
                    0 !== ie && r.stroke();
                }
                r.restore();
              })(l.x(ue), Ne, O),
              (ue = ((n, t, e, i) =>
                n === (i ? "left" : "right")
                  ? e
                  : "center" === n
                  ? (t + e) / 2
                  : t)(ie, ue + m + f, D ? ue + Ce : this.right, t.rtl)),
              (function (O, V, j) {
                po(r, j.text, O, V + v / 2, c, {
                  strikethrough: j.hidden,
                  textAlign: l.textAlign(j.textAlign),
                });
              })(l.x(ue), Ne, O),
              D ? (p.x += Ce + d) : (p.y += A);
          }),
            Kk(this.ctx, t.textDirection);
        }
        drawTitle() {
          const t = this.options,
            e = t.title,
            i = Ht(e.font),
            r = rn(e.padding);
          if (!e.display) return;
          const s = La(t.rtl, this.left, this.width),
            o = this.ctx,
            a = e.position,
            c = r.top + i.size / 2;
          let u,
            d = this.left,
            h = this.width;
          if (this.isHorizontal())
            (h = Math.max(...this.lineWidths)),
              (u = this.top + c),
              (d = nn(t.align, d, this.right - h));
          else {
            const p = this.columnSizes.reduce(
              (m, _) => Math.max(m, _.height),
              0
            );
            u =
              c +
              nn(
                t.align,
                this.top,
                this.bottom - p - t.labels.padding - this._computeTitleHeight()
              );
          }
          const f = nn(a, d, d + h);
          (o.textAlign = s.textAlign(Zy(a))),
            (o.textBaseline = "middle"),
            (o.strokeStyle = e.color),
            (o.fillStyle = e.color),
            (o.font = i.string),
            po(o, e.text, f, u, i);
        }
        _computeTitleHeight() {
          const t = this.options.title,
            e = Ht(t.font),
            i = rn(t.padding);
          return t.display ? e.lineHeight + i.height : 0;
        }
        _getLegendItemAt(t, e) {
          let i, r, s;
          if (Ur(t, this.left, this.right) && Ur(e, this.top, this.bottom))
            for (s = this.legendHitBoxes, i = 0; i < s.length; ++i)
              if (
                ((r = s[i]),
                Ur(t, r.left, r.left + r.width) &&
                  Ur(e, r.top, r.top + r.height))
              )
                return this.legendItems[i];
          return null;
        }
        handleEvent(t) {
          const e = this.options;
          if (
            !(function q7(n, t) {
              return !(
                (("mousemove" !== n && "mouseout" !== n) ||
                  (!t.onHover && !t.onLeave)) &&
                (!t.onClick || ("click" !== n && "mouseup" !== n))
              );
            })(t.type, e)
          )
            return;
          const i = this._getLegendItemAt(t.x, t.y);
          if ("mousemove" === t.type || "mouseout" === t.type) {
            const r = this._hoveredItem,
              s = ((n, t) =>
                null !== n &&
                null !== t &&
                n.datasetIndex === t.datasetIndex &&
                n.index === t.index)(r, i);
            r && !s && rt(e.onLeave, [t, r, this], this),
              (this._hoveredItem = i),
              i && !s && rt(e.onHover, [t, i, this], this);
          } else i && rt(e.onClick, [t, i, this], this);
        }
      }
      var W7 = {
        id: "legend",
        _element: rI,
        start(n, t, e) {
          const i = (n.legend = new rI({ ctx: n.ctx, options: e, chart: n }));
          sn.configure(n, i, e), sn.addBox(n, i);
        },
        stop(n) {
          sn.removeBox(n, n.legend), delete n.legend;
        },
        beforeUpdate(n, t, e) {
          const i = n.legend;
          sn.configure(n, i, e), (i.options = e);
        },
        afterUpdate(n) {
          const t = n.legend;
          t.buildLabels(), t.adjustHitBoxes();
        },
        afterEvent(n, t) {
          t.replay || n.legend.handleEvent(t.event);
        },
        defaults: {
          display: !0,
          position: "top",
          align: "center",
          fullSize: !0,
          reverse: !1,
          weight: 1e3,
          onClick(n, t, e) {
            const i = t.datasetIndex,
              r = e.chart;
            r.isDatasetVisible(i)
              ? (r.hide(i), (t.hidden = !0))
              : (r.show(i), (t.hidden = !1));
          },
          onHover: null,
          onLeave: null,
          labels: {
            color: (n) => n.chart.options.color,
            boxWidth: 40,
            padding: 10,
            generateLabels(n) {
              const t = n.data.datasets,
                {
                  labels: {
                    usePointStyle: e,
                    pointStyle: i,
                    textAlign: r,
                    color: s,
                  },
                } = n.legend.options;
              return n._getSortedDatasetMetas().map((o) => {
                const a = o.controller.getStyle(e ? 0 : void 0),
                  l = rn(a.borderWidth);
                return {
                  text: t[o.index].label,
                  fillStyle: a.backgroundColor,
                  fontColor: s,
                  hidden: !o.visible,
                  lineCap: a.borderCapStyle,
                  lineDash: a.borderDash,
                  lineDashOffset: a.borderDashOffset,
                  lineJoin: a.borderJoinStyle,
                  lineWidth: (l.width + l.height) / 4,
                  strokeStyle: a.borderColor,
                  pointStyle: i || a.pointStyle,
                  rotation: a.rotation,
                  textAlign: r || a.textAlign,
                  borderRadius: 0,
                  datasetIndex: o.index,
                };
              }, this);
            },
          },
          title: {
            color: (n) => n.chart.options.color,
            display: !1,
            position: "center",
            text: "",
          },
        },
        descriptors: {
          _scriptable: (n) => !n.startsWith("on"),
          labels: {
            _scriptable: (n) =>
              !["generateLabels", "filter", "sort"].includes(n),
          },
        },
      };
      class Tv extends Ii {
        constructor(t) {
          super(),
            (this.chart = t.chart),
            (this.options = t.options),
            (this.ctx = t.ctx),
            (this._padding = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(t, e) {
          const i = this.options;
          if (((this.left = 0), (this.top = 0), !i.display))
            return void (this.width =
              this.height =
              this.right =
              this.bottom =
                0);
          (this.width = this.right = t), (this.height = this.bottom = e);
          const r = it(i.text) ? i.text.length : 1;
          this._padding = rn(i.padding);
          const s = r * Ht(i.font).lineHeight + this._padding.height;
          this.isHorizontal() ? (this.height = s) : (this.width = s);
        }
        isHorizontal() {
          const t = this.options.position;
          return "top" === t || "bottom" === t;
        }
        _drawArgs(t) {
          const { top: e, left: i, bottom: r, right: s, options: o } = this,
            a = o.align;
          let c,
            u,
            d,
            l = 0;
          return (
            this.isHorizontal()
              ? ((u = nn(a, i, s)), (d = e + t), (c = s - i))
              : ("left" === o.position
                  ? ((u = i + t), (d = nn(a, r, e)), (l = -0.5 * ut))
                  : ((u = s - t), (d = nn(a, e, r)), (l = 0.5 * ut)),
                (c = r - e)),
            { titleX: u, titleY: d, maxWidth: c, rotation: l }
          );
        }
        draw() {
          const t = this.ctx,
            e = this.options;
          if (!e.display) return;
          const i = Ht(e.font),
            s = i.lineHeight / 2 + this._padding.top,
            {
              titleX: o,
              titleY: a,
              maxWidth: l,
              rotation: c,
            } = this._drawArgs(s);
          po(t, e.text, 0, 0, i, {
            color: e.color,
            maxWidth: l,
            rotation: c,
            textAlign: Zy(e.align),
            textBaseline: "middle",
            translation: [o, a],
          });
        }
      }
      var Y7 = {
        id: "title",
        _element: Tv,
        start(n, t, e) {
          !(function G7(n, t) {
            const e = new Tv({ ctx: n.ctx, options: t, chart: n });
            sn.configure(n, e, t), sn.addBox(n, e), (n.titleBlock = e);
          })(n, e);
        },
        stop(n) {
          sn.removeBox(n, n.titleBlock), delete n.titleBlock;
        },
        beforeUpdate(n, t, e) {
          const i = n.titleBlock;
          sn.configure(n, i, e), (i.options = e);
        },
        defaults: {
          align: "center",
          display: !1,
          font: { weight: "bold" },
          fullSize: !0,
          padding: 10,
          position: "top",
          text: "",
          weight: 2e3,
        },
        defaultRoutes: { color: "color" },
        descriptors: { _scriptable: !0, _indexable: !1 },
      };
      const vf = new WeakMap();
      var K7 = {
        id: "subtitle",
        start(n, t, e) {
          const i = new Tv({ ctx: n.ctx, options: e, chart: n });
          sn.configure(n, i, e), sn.addBox(n, i), vf.set(n, i);
        },
        stop(n) {
          sn.removeBox(n, vf.get(n)), vf.delete(n);
        },
        beforeUpdate(n, t, e) {
          const i = vf.get(n);
          sn.configure(n, i, e), (i.options = e);
        },
        defaults: {
          align: "center",
          display: !1,
          font: { weight: "normal" },
          fullSize: !0,
          padding: 0,
          position: "top",
          text: "",
          weight: 1500,
        },
        defaultRoutes: { color: "color" },
        descriptors: { _scriptable: !0, _indexable: !1 },
      };
      const Uc = {
        average(n) {
          if (!n.length) return !1;
          let t,
            e,
            i = 0,
            r = 0,
            s = 0;
          for (t = 0, e = n.length; t < e; ++t) {
            const o = n[t].element;
            if (o && o.hasValue()) {
              const a = o.tooltipPosition();
              (i += a.x), (r += a.y), ++s;
            }
          }
          return { x: i / s, y: r / s };
        },
        nearest(n, t) {
          if (!n.length) return !1;
          let s,
            o,
            a,
            e = t.x,
            i = t.y,
            r = Number.POSITIVE_INFINITY;
          for (s = 0, o = n.length; s < o; ++s) {
            const l = n[s].element;
            if (l && l.hasValue()) {
              const u = Ky(t, l.getCenterPoint());
              u < r && ((r = u), (a = l));
            }
          }
          if (a) {
            const l = a.tooltipPosition();
            (e = l.x), (i = l.y);
          }
          return { x: e, y: i };
        },
      };
      function hr(n, t) {
        return t && (it(t) ? Array.prototype.push.apply(n, t) : n.push(t)), n;
      }
      function Gr(n) {
        return ("string" == typeof n || n instanceof String) &&
          n.indexOf("\n") > -1
          ? n.split("\n")
          : n;
      }
      function X7(n, t) {
        const { element: e, datasetIndex: i, index: r } = t,
          s = n.getDatasetMeta(i).controller,
          { label: o, value: a } = s.getLabelAndValue(r);
        return {
          chart: n,
          label: o,
          parsed: s.getParsed(r),
          raw: n.data.datasets[i].data[r],
          formattedValue: a,
          dataset: s.getDataset(),
          dataIndex: r,
          datasetIndex: i,
          element: e,
        };
      }
      function sI(n, t) {
        const e = n.chart.ctx,
          { body: i, footer: r, title: s } = n,
          { boxWidth: o, boxHeight: a } = t,
          l = Ht(t.bodyFont),
          c = Ht(t.titleFont),
          u = Ht(t.footerFont),
          d = s.length,
          h = r.length,
          f = i.length,
          p = rn(t.padding);
        let m = p.height,
          _ = 0,
          v = i.reduce(
            (D, S) => D + S.before.length + S.lines.length + S.after.length,
            0
          );
        (v += n.beforeBody.length + n.afterBody.length),
          d &&
            (m +=
              d * c.lineHeight +
              (d - 1) * t.titleSpacing +
              t.titleMarginBottom),
          v &&
            (m +=
              f * (t.displayColors ? Math.max(a, l.lineHeight) : l.lineHeight) +
              (v - f) * l.lineHeight +
              (v - 1) * t.bodySpacing),
          h &&
            (m +=
              t.footerMarginTop + h * u.lineHeight + (h - 1) * t.footerSpacing);
        let M = 0;
        const C = function (D) {
          _ = Math.max(_, e.measureText(D).width + M);
        };
        return (
          e.save(),
          (e.font = c.string),
          qe(n.title, C),
          (e.font = l.string),
          qe(n.beforeBody.concat(n.afterBody), C),
          (M = t.displayColors ? o + 2 + t.boxPadding : 0),
          qe(i, (D) => {
            qe(D.before, C), qe(D.lines, C), qe(D.after, C);
          }),
          (M = 0),
          (e.font = u.string),
          qe(n.footer, C),
          e.restore(),
          (_ += p.width),
          { width: _, height: m }
        );
      }
      function J7(n, t, e, i) {
        const { x: r, width: s } = e,
          {
            width: o,
            chartArea: { left: a, right: l },
          } = n;
        let c = "center";
        return (
          "center" === i
            ? (c = r <= (a + l) / 2 ? "left" : "right")
            : r <= s / 2
            ? (c = "left")
            : r >= o - s / 2 && (c = "right"),
          (function Q7(n, t, e, i) {
            const { x: r, width: s } = i,
              o = e.caretSize + e.caretPadding;
            if (
              ("left" === n && r + s + o > t.width) ||
              ("right" === n && r - s - o < 0)
            )
              return !0;
          })(c, n, t, e) && (c = "center"),
          c
        );
      }
      function oI(n, t, e) {
        const i =
          e.yAlign ||
          t.yAlign ||
          (function Z7(n, t) {
            const { y: e, height: i } = t;
            return e < i / 2
              ? "top"
              : e > n.height - i / 2
              ? "bottom"
              : "center";
          })(n, e);
        return { xAlign: e.xAlign || t.xAlign || J7(n, t, e, i), yAlign: i };
      }
      function aI(n, t, e, i) {
        const { caretSize: r, caretPadding: s, cornerRadius: o } = n,
          { xAlign: a, yAlign: l } = e,
          c = r + s,
          { topLeft: u, topRight: d, bottomLeft: h, bottomRight: f } = mo(o);
        let p = (function e9(n, t) {
          let { x: e, width: i } = n;
          return "right" === t ? (e -= i) : "center" === t && (e -= i / 2), e;
        })(t, a);
        const m = (function t9(n, t, e) {
          let { y: i, height: r } = n;
          return (
            "top" === t ? (i += e) : (i -= "bottom" === t ? r + e : r / 2), i
          );
        })(t, l, c);
        return (
          "center" === l
            ? "left" === a
              ? (p += c)
              : "right" === a && (p -= c)
            : "left" === a
            ? (p -= Math.max(u, h) + r)
            : "right" === a && (p += Math.max(d, f) + r),
          { x: Wt(p, 0, i.width - t.width), y: Wt(m, 0, i.height - t.height) }
        );
      }
      function bf(n, t, e) {
        const i = rn(e.padding);
        return "center" === t
          ? n.x + n.width / 2
          : "right" === t
          ? n.x + n.width - i.right
          : n.x + i.left;
      }
      function lI(n) {
        return hr([], Gr(n));
      }
      function cI(n, t) {
        const e =
          t && t.dataset && t.dataset.tooltip && t.dataset.tooltip.callbacks;
        return e ? n.override(e) : n;
      }
      let uI = (() => {
        class n extends Ii {
          constructor(e) {
            super(),
              (this.opacity = 0),
              (this._active = []),
              (this._eventPosition = void 0),
              (this._size = void 0),
              (this._cachedAnimations = void 0),
              (this._tooltipItems = []),
              (this.$animations = void 0),
              (this.$context = void 0),
              (this.chart = e.chart || e._chart),
              (this._chart = this.chart),
              (this.options = e.options),
              (this.dataPoints = void 0),
              (this.title = void 0),
              (this.beforeBody = void 0),
              (this.body = void 0),
              (this.afterBody = void 0),
              (this.footer = void 0),
              (this.xAlign = void 0),
              (this.yAlign = void 0),
              (this.x = void 0),
              (this.y = void 0),
              (this.height = void 0),
              (this.width = void 0),
              (this.caretX = void 0),
              (this.caretY = void 0),
              (this.labelColors = void 0),
              (this.labelPointStyles = void 0),
              (this.labelTextColors = void 0);
          }
          initialize(e) {
            (this.options = e),
              (this._cachedAnimations = void 0),
              (this.$context = void 0);
          }
          _resolveAnimations() {
            const e = this._cachedAnimations;
            if (e) return e;
            const i = this.chart,
              r = this.options.setContext(this.getContext()),
              s = r.enabled && i.options.animation && r.animations,
              o = new r1(this.chart, s);
            return (
              s._cacheable && (this._cachedAnimations = Object.freeze(o)), o
            );
          }
          getContext() {
            return (
              this.$context ||
              (this.$context = (function n9(n, t, e) {
                return Ms(n, { tooltip: t, tooltipItems: e, type: "tooltip" });
              })(this.chart.getContext(), this, this._tooltipItems))
            );
          }
          getTitle(e, i) {
            const { callbacks: r } = i,
              s = r.beforeTitle.apply(this, [e]),
              o = r.title.apply(this, [e]),
              a = r.afterTitle.apply(this, [e]);
            let l = [];
            return (
              (l = hr(l, Gr(s))), (l = hr(l, Gr(o))), (l = hr(l, Gr(a))), l
            );
          }
          getBeforeBody(e, i) {
            return lI(i.callbacks.beforeBody.apply(this, [e]));
          }
          getBody(e, i) {
            const { callbacks: r } = i,
              s = [];
            return (
              qe(e, (o) => {
                const a = { before: [], lines: [], after: [] },
                  l = cI(r, o);
                hr(a.before, Gr(l.beforeLabel.call(this, o))),
                  hr(a.lines, l.label.call(this, o)),
                  hr(a.after, Gr(l.afterLabel.call(this, o))),
                  s.push(a);
              }),
              s
            );
          }
          getAfterBody(e, i) {
            return lI(i.callbacks.afterBody.apply(this, [e]));
          }
          getFooter(e, i) {
            const { callbacks: r } = i,
              s = r.beforeFooter.apply(this, [e]),
              o = r.footer.apply(this, [e]),
              a = r.afterFooter.apply(this, [e]);
            let l = [];
            return (
              (l = hr(l, Gr(s))), (l = hr(l, Gr(o))), (l = hr(l, Gr(a))), l
            );
          }
          _createItems(e) {
            const i = this._active,
              r = this.chart.data,
              s = [],
              o = [],
              a = [];
            let c,
              u,
              l = [];
            for (c = 0, u = i.length; c < u; ++c) l.push(X7(this.chart, i[c]));
            return (
              e.filter && (l = l.filter((d, h, f) => e.filter(d, h, f, r))),
              e.itemSort && (l = l.sort((d, h) => e.itemSort(d, h, r))),
              qe(l, (d) => {
                const h = cI(e.callbacks, d);
                s.push(h.labelColor.call(this, d)),
                  o.push(h.labelPointStyle.call(this, d)),
                  a.push(h.labelTextColor.call(this, d));
              }),
              (this.labelColors = s),
              (this.labelPointStyles = o),
              (this.labelTextColors = a),
              (this.dataPoints = l),
              l
            );
          }
          update(e, i) {
            const r = this.options.setContext(this.getContext()),
              s = this._active;
            let o,
              a = [];
            if (s.length) {
              const l = Uc[r.position].call(this, s, this._eventPosition);
              (a = this._createItems(r)),
                (this.title = this.getTitle(a, r)),
                (this.beforeBody = this.getBeforeBody(a, r)),
                (this.body = this.getBody(a, r)),
                (this.afterBody = this.getAfterBody(a, r)),
                (this.footer = this.getFooter(a, r));
              const c = (this._size = sI(this, r)),
                u = Object.assign({}, l, c),
                d = oI(this.chart, r, u),
                h = aI(r, u, d, this.chart);
              (this.xAlign = d.xAlign),
                (this.yAlign = d.yAlign),
                (o = {
                  opacity: 1,
                  x: h.x,
                  y: h.y,
                  width: c.width,
                  height: c.height,
                  caretX: l.x,
                  caretY: l.y,
                });
            } else 0 !== this.opacity && (o = { opacity: 0 });
            (this._tooltipItems = a),
              (this.$context = void 0),
              o && this._resolveAnimations().update(this, o),
              e &&
                r.external &&
                r.external.call(this, {
                  chart: this.chart,
                  tooltip: this,
                  replay: i,
                });
          }
          drawCaret(e, i, r, s) {
            const o = this.getCaretPosition(e, r, s);
            i.lineTo(o.x1, o.y1), i.lineTo(o.x2, o.y2), i.lineTo(o.x3, o.y3);
          }
          getCaretPosition(e, i, r) {
            const { xAlign: s, yAlign: o } = this,
              { caretSize: a, cornerRadius: l } = r,
              {
                topLeft: c,
                topRight: u,
                bottomLeft: d,
                bottomRight: h,
              } = mo(l),
              { x: f, y: p } = e,
              { width: m, height: _ } = i;
            let v, M, C, D, S, A;
            return (
              "center" === o
                ? ((S = p + _ / 2),
                  "left" === s
                    ? ((v = f), (M = v - a), (D = S + a), (A = S - a))
                    : ((v = f + m), (M = v + a), (D = S - a), (A = S + a)),
                  (C = v))
                : ((M =
                    "left" === s
                      ? f + Math.max(c, d) + a
                      : "right" === s
                      ? f + m - Math.max(u, h) - a
                      : this.caretX),
                  "top" === o
                    ? ((D = p), (S = D - a), (v = M - a), (C = M + a))
                    : ((D = p + _), (S = D + a), (v = M + a), (C = M - a)),
                  (A = D)),
              { x1: v, x2: M, x3: C, y1: D, y2: S, y3: A }
            );
          }
          drawTitle(e, i, r) {
            const s = this.title,
              o = s.length;
            let a, l, c;
            if (o) {
              const u = La(r.rtl, this.x, this.width);
              for (
                e.x = bf(this, r.titleAlign, r),
                  i.textAlign = u.textAlign(r.titleAlign),
                  i.textBaseline = "middle",
                  a = Ht(r.titleFont),
                  l = r.titleSpacing,
                  i.fillStyle = r.titleColor,
                  i.font = a.string,
                  c = 0;
                c < o;
                ++c
              )
                i.fillText(s[c], u.x(e.x), e.y + a.lineHeight / 2),
                  (e.y += a.lineHeight + l),
                  c + 1 === o && (e.y += r.titleMarginBottom - l);
            }
          }
          _drawColorBox(e, i, r, s, o) {
            const a = this.labelColors[r],
              l = this.labelPointStyles[r],
              { boxHeight: c, boxWidth: u, boxPadding: d } = o,
              h = Ht(o.bodyFont),
              f = bf(this, "left", o),
              p = s.x(f),
              _ = i.y + (c < h.lineHeight ? (h.lineHeight - c) / 2 : 0);
            if (o.usePointStyle) {
              const v = {
                  radius: Math.min(u, c) / 2,
                  pointStyle: l.pointStyle,
                  rotation: l.rotation,
                  borderWidth: 1,
                },
                M = s.leftForLtr(p, u) + u / 2,
                C = _ + c / 2;
              (e.strokeStyle = o.multiKeyBackground),
                (e.fillStyle = o.multiKeyBackground),
                ov(e, v, M, C),
                (e.strokeStyle = a.borderColor),
                (e.fillStyle = a.backgroundColor),
                ov(e, v, M, C);
            } else {
              (e.lineWidth = Te(a.borderWidth)
                ? Math.max(...Object.values(a.borderWidth))
                : a.borderWidth || 1),
                (e.strokeStyle = a.borderColor),
                e.setLineDash(a.borderDash || []),
                (e.lineDashOffset = a.borderDashOffset || 0);
              const v = s.leftForLtr(p, u - d),
                M = s.leftForLtr(s.xPlus(p, 1), u - d - 2),
                C = mo(a.borderRadius);
              Object.values(C).some((D) => 0 !== D)
                ? (e.beginPath(),
                  (e.fillStyle = o.multiKeyBackground),
                  Oc(e, { x: v, y: _, w: u, h: c, radius: C }),
                  e.fill(),
                  e.stroke(),
                  (e.fillStyle = a.backgroundColor),
                  e.beginPath(),
                  Oc(e, { x: M, y: _ + 1, w: u - 2, h: c - 2, radius: C }),
                  e.fill())
                : ((e.fillStyle = o.multiKeyBackground),
                  e.fillRect(v, _, u, c),
                  e.strokeRect(v, _, u, c),
                  (e.fillStyle = a.backgroundColor),
                  e.fillRect(M, _ + 1, u - 2, c - 2));
            }
            e.fillStyle = this.labelTextColors[r];
          }
          drawBody(e, i, r) {
            const { body: s } = this,
              {
                bodySpacing: o,
                bodyAlign: a,
                displayColors: l,
                boxHeight: c,
                boxWidth: u,
                boxPadding: d,
              } = r,
              h = Ht(r.bodyFont);
            let f = h.lineHeight,
              p = 0;
            const m = La(r.rtl, this.x, this.width),
              _ = function (j) {
                i.fillText(j, m.x(e.x + p), e.y + f / 2), (e.y += f + o);
              },
              v = m.textAlign(a);
            let M, C, D, S, A, O, V;
            for (
              i.textAlign = a,
                i.textBaseline = "middle",
                i.font = h.string,
                e.x = bf(this, v, r),
                i.fillStyle = r.bodyColor,
                qe(this.beforeBody, _),
                p =
                  l && "right" !== v
                    ? "center" === a
                      ? u / 2 + d
                      : u + 2 + d
                    : 0,
                S = 0,
                O = s.length;
              S < O;
              ++S
            ) {
              for (
                M = s[S],
                  C = this.labelTextColors[S],
                  i.fillStyle = C,
                  qe(M.before, _),
                  D = M.lines,
                  l &&
                    D.length &&
                    (this._drawColorBox(i, e, S, m, r),
                    (f = Math.max(h.lineHeight, c))),
                  A = 0,
                  V = D.length;
                A < V;
                ++A
              )
                _(D[A]), (f = h.lineHeight);
              qe(M.after, _);
            }
            (p = 0), (f = h.lineHeight), qe(this.afterBody, _), (e.y -= o);
          }
          drawFooter(e, i, r) {
            const s = this.footer,
              o = s.length;
            let a, l;
            if (o) {
              const c = La(r.rtl, this.x, this.width);
              for (
                e.x = bf(this, r.footerAlign, r),
                  e.y += r.footerMarginTop,
                  i.textAlign = c.textAlign(r.footerAlign),
                  i.textBaseline = "middle",
                  a = Ht(r.footerFont),
                  i.fillStyle = r.footerColor,
                  i.font = a.string,
                  l = 0;
                l < o;
                ++l
              )
                i.fillText(s[l], c.x(e.x), e.y + a.lineHeight / 2),
                  (e.y += a.lineHeight + r.footerSpacing);
            }
          }
          drawBackground(e, i, r, s) {
            const { xAlign: o, yAlign: a } = this,
              { x: l, y: c } = e,
              { width: u, height: d } = r,
              {
                topLeft: h,
                topRight: f,
                bottomLeft: p,
                bottomRight: m,
              } = mo(s.cornerRadius);
            (i.fillStyle = s.backgroundColor),
              (i.strokeStyle = s.borderColor),
              (i.lineWidth = s.borderWidth),
              i.beginPath(),
              i.moveTo(l + h, c),
              "top" === a && this.drawCaret(e, i, r, s),
              i.lineTo(l + u - f, c),
              i.quadraticCurveTo(l + u, c, l + u, c + f),
              "center" === a && "right" === o && this.drawCaret(e, i, r, s),
              i.lineTo(l + u, c + d - m),
              i.quadraticCurveTo(l + u, c + d, l + u - m, c + d),
              "bottom" === a && this.drawCaret(e, i, r, s),
              i.lineTo(l + p, c + d),
              i.quadraticCurveTo(l, c + d, l, c + d - p),
              "center" === a && "left" === o && this.drawCaret(e, i, r, s),
              i.lineTo(l, c + h),
              i.quadraticCurveTo(l, c, l + h, c),
              i.closePath(),
              i.fill(),
              s.borderWidth > 0 && i.stroke();
          }
          _updateAnimationTarget(e) {
            const i = this.chart,
              r = this.$animations,
              s = r && r.x,
              o = r && r.y;
            if (s || o) {
              const a = Uc[e.position].call(
                this,
                this._active,
                this._eventPosition
              );
              if (!a) return;
              const l = (this._size = sI(this, e)),
                c = Object.assign({}, a, this._size),
                u = oI(i, e, c),
                d = aI(e, c, u, i);
              (s._to !== d.x || o._to !== d.y) &&
                ((this.xAlign = u.xAlign),
                (this.yAlign = u.yAlign),
                (this.width = l.width),
                (this.height = l.height),
                (this.caretX = a.x),
                (this.caretY = a.y),
                this._resolveAnimations().update(this, d));
            }
          }
          _willRender() {
            return !!this.opacity;
          }
          draw(e) {
            const i = this.options.setContext(this.getContext());
            let r = this.opacity;
            if (!r) return;
            this._updateAnimationTarget(i);
            const s = { width: this.width, height: this.height },
              o = { x: this.x, y: this.y };
            r = Math.abs(r) < 0.001 ? 0 : r;
            const a = rn(i.padding);
            i.enabled &&
              (this.title.length ||
                this.beforeBody.length ||
                this.body.length ||
                this.afterBody.length ||
                this.footer.length) &&
              (e.save(),
              (e.globalAlpha = r),
              this.drawBackground(o, e, s, i),
              Yk(e, i.textDirection),
              (o.y += a.top),
              this.drawTitle(o, e, i),
              this.drawBody(o, e, i),
              this.drawFooter(o, e, i),
              Kk(e, i.textDirection),
              e.restore());
          }
          getActiveElements() {
            return this._active || [];
          }
          setActiveElements(e, i) {
            const r = this._active,
              s = e.map(({ datasetIndex: l, index: c }) => {
                const u = this.chart.getDatasetMeta(l);
                if (!u) throw new Error("Cannot find a dataset at index " + l);
                return { datasetIndex: l, element: u.data[c], index: c };
              }),
              o = !qh(r, s),
              a = this._positionChanged(s, i);
            (o || a) &&
              ((this._active = s),
              (this._eventPosition = i),
              (this._ignoreReplayEvents = !0),
              this.update(!0));
          }
          handleEvent(e, i, r = !0) {
            if (i && this._ignoreReplayEvents) return !1;
            this._ignoreReplayEvents = !1;
            const s = this.options,
              o = this._active || [],
              a = this._getActiveElements(e, o, i, r),
              l = this._positionChanged(a, e),
              c = i || !qh(a, o) || l;
            return (
              c &&
                ((this._active = a),
                (s.enabled || s.external) &&
                  ((this._eventPosition = { x: e.x, y: e.y }),
                  this.update(!0, i))),
              c
            );
          }
          _getActiveElements(e, i, r, s) {
            const o = this.options;
            if ("mouseout" === e.type) return [];
            if (!s) return i;
            const a = this.chart.getElementsAtEventForMode(e, o.mode, o, r);
            return o.reverse && a.reverse(), a;
          }
          _positionChanged(e, i) {
            const { caretX: r, caretY: s, options: o } = this,
              a = Uc[o.position].call(this, e, i);
            return !1 !== a && (r !== a.x || s !== a.y);
          }
        }
        return (n.positioners = Uc), n;
      })();
      var r9 = Object.freeze({
        __proto__: null,
        Decimation: M7,
        Filler: U7,
        Legend: W7,
        SubTitle: K7,
        Title: Y7,
        Tooltip: {
          id: "tooltip",
          _element: uI,
          positioners: Uc,
          afterInit(n, t, e) {
            e && (n.tooltip = new uI({ chart: n, options: e }));
          },
          beforeUpdate(n, t, e) {
            n.tooltip && n.tooltip.initialize(e);
          },
          reset(n, t, e) {
            n.tooltip && n.tooltip.initialize(e);
          },
          afterDraw(n) {
            const t = n.tooltip;
            if (t && t._willRender()) {
              const e = { tooltip: t };
              if (!1 === n.notifyPlugins("beforeTooltipDraw", e)) return;
              t.draw(n.ctx), n.notifyPlugins("afterTooltipDraw", e);
            }
          },
          afterEvent(n, t) {
            n.tooltip &&
              n.tooltip.handleEvent(t.event, t.replay, t.inChartArea) &&
              (t.changed = !0);
          },
          defaults: {
            enabled: !0,
            external: null,
            position: "average",
            backgroundColor: "rgba(0,0,0,0.8)",
            titleColor: "#fff",
            titleFont: { weight: "bold" },
            titleSpacing: 2,
            titleMarginBottom: 6,
            titleAlign: "left",
            bodyColor: "#fff",
            bodySpacing: 2,
            bodyFont: {},
            bodyAlign: "left",
            footerColor: "#fff",
            footerSpacing: 2,
            footerMarginTop: 6,
            footerFont: { weight: "bold" },
            footerAlign: "left",
            padding: 6,
            caretPadding: 2,
            caretSize: 5,
            cornerRadius: 6,
            boxHeight: (n, t) => t.bodyFont.size,
            boxWidth: (n, t) => t.bodyFont.size,
            multiKeyBackground: "#fff",
            displayColors: !0,
            boxPadding: 0,
            borderColor: "rgba(0,0,0,0)",
            borderWidth: 0,
            animation: { duration: 400, easing: "easeOutQuart" },
            animations: {
              numbers: {
                type: "number",
                properties: ["x", "y", "width", "height", "caretX", "caretY"],
              },
              opacity: { easing: "linear", duration: 200 },
            },
            callbacks: {
              beforeTitle: zr,
              title(n) {
                if (n.length > 0) {
                  const t = n[0],
                    e = t.chart.data.labels,
                    i = e ? e.length : 0;
                  if (this && this.options && "dataset" === this.options.mode)
                    return t.dataset.label || "";
                  if (t.label) return t.label;
                  if (i > 0 && t.dataIndex < i) return e[t.dataIndex];
                }
                return "";
              },
              afterTitle: zr,
              beforeBody: zr,
              beforeLabel: zr,
              label(n) {
                if (this && this.options && "dataset" === this.options.mode)
                  return n.label + ": " + n.formattedValue || n.formattedValue;
                let t = n.dataset.label || "";
                t && (t += ": ");
                const e = n.formattedValue;
                return Fe(e) || (t += e), t;
              },
              labelColor(n) {
                const e = n.chart
                  .getDatasetMeta(n.datasetIndex)
                  .controller.getStyle(n.dataIndex);
                return {
                  borderColor: e.borderColor,
                  backgroundColor: e.backgroundColor,
                  borderWidth: e.borderWidth,
                  borderDash: e.borderDash,
                  borderDashOffset: e.borderDashOffset,
                  borderRadius: 0,
                };
              },
              labelTextColor() {
                return this.options.bodyColor;
              },
              labelPointStyle(n) {
                const e = n.chart
                  .getDatasetMeta(n.datasetIndex)
                  .controller.getStyle(n.dataIndex);
                return { pointStyle: e.pointStyle, rotation: e.rotation };
              },
              afterLabel: zr,
              afterBody: zr,
              beforeFooter: zr,
              footer: zr,
              afterFooter: zr,
            },
          },
          defaultRoutes: {
            bodyFont: "font",
            footerFont: "font",
            titleFont: "font",
          },
          descriptors: {
            _scriptable: (n) =>
              "filter" !== n && "itemSort" !== n && "external" !== n,
            _indexable: !1,
            callbacks: { _scriptable: !1, _indexable: !1 },
            animation: { _fallback: !1 },
            animations: { _fallback: "animation" },
          },
          additionalOptionScopes: ["interaction"],
        },
      });
      class Cf extends vo {
        constructor(t) {
          super(t),
            (this._startValue = void 0),
            (this._valueRange = 0),
            (this._addedLabels = []);
        }
        init(t) {
          const e = this._addedLabels;
          if (e.length) {
            const i = this.getLabels();
            for (const { index: r, label: s } of e)
              i[r] === s && i.splice(r, 1);
            this._addedLabels = [];
          }
          super.init(t);
        }
        parse(t, e) {
          if (Fe(t)) return null;
          const i = this.getLabels();
          return ((n, t) => (null === n ? null : Wt(Math.round(n), 0, t)))(
            (e =
              isFinite(e) && i[e] === t
                ? e
                : (function o9(n, t, e, i) {
                    const r = n.indexOf(t);
                    return -1 === r
                      ? ((n, t, e, i) => (
                          "string" == typeof t
                            ? ((e = n.push(t) - 1),
                              i.unshift({ index: e, label: t }))
                            : isNaN(t) && (e = null),
                          e
                        ))(n, t, e, i)
                      : r !== n.lastIndexOf(t)
                      ? e
                      : r;
                  })(i, t, ve(e, t), this._addedLabels)),
            i.length - 1
          );
        }
        determineDataLimits() {
          const { minDefined: t, maxDefined: e } = this.getUserBounds();
          let { min: i, max: r } = this.getMinMax(!0);
          "ticks" === this.options.bounds &&
            (t || (i = 0), e || (r = this.getLabels().length - 1)),
            (this.min = i),
            (this.max = r);
        }
        buildTicks() {
          const t = this.min,
            e = this.max,
            i = this.options.offset,
            r = [];
          let s = this.getLabels();
          (s = 0 === t && e === s.length - 1 ? s : s.slice(t, e + 1)),
            (this._valueRange = Math.max(s.length - (i ? 0 : 1), 1)),
            (this._startValue = this.min - (i ? 0.5 : 0));
          for (let o = t; o <= e; o++) r.push({ value: o });
          return r;
        }
        getLabelForValue(t) {
          const e = this.getLabels();
          return t >= 0 && t < e.length ? e[t] : t;
        }
        configure() {
          super.configure(),
            this.isHorizontal() || (this._reversePixels = !this._reversePixels);
        }
        getPixelForValue(t) {
          return (
            "number" != typeof t && (t = this.parse(t)),
            null === t
              ? NaN
              : this.getPixelForDecimal(
                  (t - this._startValue) / this._valueRange
                )
          );
        }
        getPixelForTick(t) {
          const e = this.ticks;
          return t < 0 || t > e.length - 1
            ? null
            : this.getPixelForValue(e[t].value);
        }
        getValueForPixel(t) {
          return Math.round(
            this._startValue + this.getDecimalForPixel(t) * this._valueRange
          );
        }
        getBasePixel() {
          return this.bottom;
        }
      }
      function dI(n, t, { horizontal: e, minRotation: i }) {
        const r = ki(i),
          s = (e ? Math.sin(r) : Math.cos(r)) || 0.001;
        return Math.min(t / s, 0.75 * t * ("" + n).length);
      }
      (Cf.id = "category"),
        (Cf.defaults = { ticks: { callback: Cf.prototype.getLabelForValue } });
      class wf extends vo {
        constructor(t) {
          super(t),
            (this.start = void 0),
            (this.end = void 0),
            (this._startValue = void 0),
            (this._endValue = void 0),
            (this._valueRange = 0);
        }
        parse(t, e) {
          return Fe(t) ||
            (("number" == typeof t || t instanceof Number) && !isFinite(+t))
            ? null
            : +t;
        }
        handleTickRangeOptions() {
          const { beginAtZero: t } = this.options,
            { minDefined: e, maxDefined: i } = this.getUserBounds();
          let { min: r, max: s } = this;
          const o = (l) => (r = e ? r : l),
            a = (l) => (s = i ? s : l);
          if (t) {
            const l = cr(r),
              c = cr(s);
            l < 0 && c < 0 ? a(0) : l > 0 && c > 0 && o(0);
          }
          if (r === s) {
            let l = 1;
            (s >= Number.MAX_SAFE_INTEGER || r <= Number.MIN_SAFE_INTEGER) &&
              (l = Math.abs(0.05 * s)),
              a(s + l),
              t || o(r - l);
          }
          (this.min = r), (this.max = s);
        }
        getTickLimit() {
          const t = this.options.ticks;
          let r,
            { maxTicksLimit: e, stepSize: i } = t;
          return (
            i
              ? ((r = Math.ceil(this.max / i) - Math.floor(this.min / i) + 1),
                r > 1e3 &&
                  (console.warn(
                    `scales.${this.id}.ticks.stepSize: ${i} would result generating up to ${r} ticks. Limiting to 1000.`
                  ),
                  (r = 1e3)))
              : ((r = this.computeTickLimit()), (e = e || 11)),
            e && (r = Math.min(e, r)),
            r
          );
        }
        computeTickLimit() {
          return Number.POSITIVE_INFINITY;
        }
        buildTicks() {
          const t = this.options,
            e = t.ticks;
          let i = this.getTickLimit();
          i = Math.max(2, i);
          const o = (function l9(n, t) {
            const e = [],
              {
                bounds: r,
                step: s,
                min: o,
                max: a,
                precision: l,
                count: c,
                maxTicks: u,
                maxDigits: d,
                includeBounds: h,
              } = n,
              f = s || 1,
              p = u - 1,
              { min: m, max: _ } = t,
              v = !Fe(o),
              M = !Fe(a),
              C = !Fe(c),
              D = (_ - m) / (d + 1);
            let A,
              O,
              V,
              j,
              S = uk((_ - m) / p / f) * f;
            if (S < 1e-14 && !v && !M) return [{ value: m }, { value: _ }];
            (j = Math.ceil(_ / S) - Math.floor(m / S)),
              j > p && (S = uk((j * S) / p / f) * f),
              Fe(l) || ((A = Math.pow(10, l)), (S = Math.ceil(S * A) / A)),
              "ticks" === r
                ? ((O = Math.floor(m / S) * S), (V = Math.ceil(_ / S) * S))
                : ((O = m), (V = _)),
              v &&
              M &&
              s &&
              (function HW(n, t) {
                const e = Math.round(n);
                return e - t <= n && e + t >= n;
              })((a - o) / s, S / 1e3)
                ? ((j = Math.round(Math.min((a - o) / S, u))),
                  (S = (a - o) / j),
                  (O = o),
                  (V = a))
                : C
                ? ((O = v ? o : O),
                  (V = M ? a : V),
                  (j = c - 1),
                  (S = (V - O) / j))
                : ((j = (V - O) / S),
                  (j = xc(j, Math.round(j), S / 1e3)
                    ? Math.round(j)
                    : Math.ceil(j)));
            const ie = Math.max(hk(S), hk(O));
            (A = Math.pow(10, Fe(l) ? ie : l)),
              (O = Math.round(O * A) / A),
              (V = Math.round(V * A) / A);
            let Ce = 0;
            for (
              v &&
              (h && O !== o
                ? (e.push({ value: o }),
                  O < o && Ce++,
                  xc(Math.round((O + Ce * S) * A) / A, o, dI(o, D, n)) && Ce++)
                : O < o && Ce++);
              Ce < j;
              ++Ce
            )
              e.push({ value: Math.round((O + Ce * S) * A) / A });
            return (
              M && h && V !== a
                ? e.length && xc(e[e.length - 1].value, a, dI(a, D, n))
                  ? (e[e.length - 1].value = a)
                  : e.push({ value: a })
                : (!M || V === a) && e.push({ value: V }),
              e
            );
          })(
            {
              maxTicks: i,
              bounds: t.bounds,
              min: t.min,
              max: t.max,
              precision: e.precision,
              step: e.stepSize,
              count: e.count,
              maxDigits: this._maxDigits(),
              horizontal: this.isHorizontal(),
              minRotation: e.minRotation || 0,
              includeBounds: !1 !== e.includeBounds,
            },
            this._range || this
          );
          return (
            "ticks" === t.bounds && dk(o, this, "value"),
            t.reverse
              ? (o.reverse(), (this.start = this.max), (this.end = this.min))
              : ((this.start = this.min), (this.end = this.max)),
            o
          );
        }
        configure() {
          const t = this.ticks;
          let e = this.min,
            i = this.max;
          if ((super.configure(), this.options.offset && t.length)) {
            const r = (i - e) / Math.max(t.length - 1, 1) / 2;
            (e -= r), (i += r);
          }
          (this._startValue = e),
            (this._endValue = i),
            (this._valueRange = i - e);
        }
        getLabelForValue(t) {
          return Pc(t, this.chart.options.locale, this.options.ticks.format);
        }
      }
      class Av extends wf {
        determineDataLimits() {
          const { min: t, max: e } = this.getMinMax(!0);
          (this.min = Mt(t) ? t : 0),
            (this.max = Mt(e) ? e : 1),
            this.handleTickRangeOptions();
        }
        computeTickLimit() {
          const t = this.isHorizontal(),
            e = t ? this.width : this.height,
            i = ki(this.options.ticks.minRotation),
            r = (t ? Math.sin(i) : Math.cos(i)) || 0.001,
            s = this._resolveTickFontOptions(0);
          return Math.ceil(e / Math.min(40, s.lineHeight / r));
        }
        getPixelForValue(t) {
          return null === t
            ? NaN
            : this.getPixelForDecimal(
                (t - this._startValue) / this._valueRange
              );
        }
        getValueForPixel(t) {
          return (
            this._startValue + this.getDecimalForPixel(t) * this._valueRange
          );
        }
      }
      function hI(n) {
        return n / Math.pow(10, Math.floor(di(n))) == 1;
      }
      (Av.id = "linear"),
        (Av.defaults = { ticks: { callback: af.formatters.numeric } });
      class kv extends vo {
        constructor(t) {
          super(t),
            (this.start = void 0),
            (this.end = void 0),
            (this._startValue = void 0),
            (this._valueRange = 0);
        }
        parse(t, e) {
          const i = wf.prototype.parse.apply(this, [t, e]);
          if (0 !== i) return Mt(i) && i > 0 ? i : null;
          this._zero = !0;
        }
        determineDataLimits() {
          const { min: t, max: e } = this.getMinMax(!0);
          (this.min = Mt(t) ? Math.max(0, t) : null),
            (this.max = Mt(e) ? Math.max(0, e) : null),
            this.options.beginAtZero && (this._zero = !0),
            this.handleTickRangeOptions();
        }
        handleTickRangeOptions() {
          const { minDefined: t, maxDefined: e } = this.getUserBounds();
          let i = this.min,
            r = this.max;
          const s = (l) => (i = t ? i : l),
            o = (l) => (r = e ? r : l),
            a = (l, c) => Math.pow(10, Math.floor(di(l)) + c);
          i === r && (i <= 0 ? (s(1), o(10)) : (s(a(i, -1)), o(a(r, 1)))),
            i <= 0 && s(a(r, -1)),
            r <= 0 && o(a(i, 1)),
            this._zero &&
              this.min !== this._suggestedMin &&
              i === a(this.min, 0) &&
              s(a(i, -1)),
            (this.min = i),
            (this.max = r);
        }
        buildTicks() {
          const t = this.options,
            i = (function c9(n, t) {
              const e = Math.floor(di(t.max)),
                i = Math.ceil(t.max / Math.pow(10, e)),
                r = [];
              let s = ci(n.min, Math.pow(10, Math.floor(di(t.min)))),
                o = Math.floor(di(s)),
                a = Math.floor(s / Math.pow(10, o)),
                l = o < 0 ? Math.pow(10, Math.abs(o)) : 1;
              do {
                r.push({ value: s, major: hI(s) }),
                  ++a,
                  10 === a && ((a = 1), ++o, (l = o >= 0 ? 1 : l)),
                  (s = Math.round(a * Math.pow(10, o) * l) / l);
              } while (o < e || (o === e && a < i));
              const c = ci(n.max, s);
              return r.push({ value: c, major: hI(s) }), r;
            })({ min: this._userMin, max: this._userMax }, this);
          return (
            "ticks" === t.bounds && dk(i, this, "value"),
            t.reverse
              ? (i.reverse(), (this.start = this.max), (this.end = this.min))
              : ((this.start = this.min), (this.end = this.max)),
            i
          );
        }
        getLabelForValue(t) {
          return void 0 === t
            ? "0"
            : Pc(t, this.chart.options.locale, this.options.ticks.format);
        }
        configure() {
          const t = this.min;
          super.configure(),
            (this._startValue = di(t)),
            (this._valueRange = di(this.max) - di(t));
        }
        getPixelForValue(t) {
          return (
            (void 0 === t || 0 === t) && (t = this.min),
            null === t || isNaN(t)
              ? NaN
              : this.getPixelForDecimal(
                  t === this.min
                    ? 0
                    : (di(t) - this._startValue) / this._valueRange
                )
          );
        }
        getValueForPixel(t) {
          const e = this.getDecimalForPixel(t);
          return Math.pow(10, this._startValue + e * this._valueRange);
        }
      }
      function Iv(n) {
        const t = n.ticks;
        if (t.display && n.display) {
          const e = rn(t.backdropPadding);
          return ve(t.font && t.font.size, Ie.font.size) + e.height;
        }
        return 0;
      }
      function u9(n, t, e) {
        return (
          (e = it(e) ? e : [e]),
          { w: vG(n, t.string, e), h: e.length * t.lineHeight }
        );
      }
      function fI(n, t, e, i, r) {
        return n === i || n === r
          ? { start: t - e / 2, end: t + e / 2 }
          : n < i || n > r
          ? { start: t - e, end: t }
          : { start: t, end: t + e };
      }
      function h9(n, t, e, i, r) {
        const s = Math.abs(Math.sin(e)),
          o = Math.abs(Math.cos(e));
        let a = 0,
          l = 0;
        i.start < t.l
          ? ((a = (t.l - i.start) / s), (n.l = Math.min(n.l, t.l - a)))
          : i.end > t.r &&
            ((a = (i.end - t.r) / s), (n.r = Math.max(n.r, t.r + a))),
          r.start < t.t
            ? ((l = (t.t - r.start) / o), (n.t = Math.min(n.t, t.t - l)))
            : r.end > t.b &&
              ((l = (r.end - t.b) / o), (n.b = Math.max(n.b, t.b + l)));
      }
      function p9(n) {
        return 0 === n || 180 === n ? "center" : n < 180 ? "left" : "right";
      }
      function m9(n, t, e) {
        return "right" === e ? (n -= t) : "center" === e && (n -= t / 2), n;
      }
      function g9(n, t, e) {
        return (
          90 === e || 270 === e
            ? (n -= t / 2)
            : (e > 270 || e < 90) && (n -= t),
          n
        );
      }
      function pI(n, t, e, i) {
        const { ctx: r } = n;
        if (e) r.arc(n.xCenter, n.yCenter, t, 0, Xe);
        else {
          let s = n.getPointPosition(0, t);
          r.moveTo(s.x, s.y);
          for (let o = 1; o < i; o++)
            (s = n.getPointPosition(o, t)), r.lineTo(s.x, s.y);
        }
      }
      (kv.id = "logarithmic"),
        (kv.defaults = {
          ticks: {
            callback: af.formatters.logarithmic,
            major: { enabled: !0 },
          },
        });
      class $c extends wf {
        constructor(t) {
          super(t),
            (this.xCenter = void 0),
            (this.yCenter = void 0),
            (this.drawingArea = void 0),
            (this._pointLabels = []),
            (this._pointLabelItems = []);
        }
        setDimensions() {
          const t = (this._padding = rn(Iv(this.options) / 2)),
            e = (this.width = this.maxWidth - t.width),
            i = (this.height = this.maxHeight - t.height);
          (this.xCenter = Math.floor(this.left + e / 2 + t.left)),
            (this.yCenter = Math.floor(this.top + i / 2 + t.top)),
            (this.drawingArea = Math.floor(Math.min(e, i) / 2));
        }
        determineDataLimits() {
          const { min: t, max: e } = this.getMinMax(!1);
          (this.min = Mt(t) && !isNaN(t) ? t : 0),
            (this.max = Mt(e) && !isNaN(e) ? e : 0),
            this.handleTickRangeOptions();
        }
        computeTickLimit() {
          return Math.ceil(this.drawingArea / Iv(this.options));
        }
        generateTickLabels(t) {
          wf.prototype.generateTickLabels.call(this, t),
            (this._pointLabels = this.getLabels()
              .map((e, i) => {
                const r = rt(this.options.pointLabels.callback, [e, i], this);
                return r || 0 === r ? r : "";
              })
              .filter((e, i) => this.chart.getDataVisibility(i)));
        }
        fit() {
          const t = this.options;
          t.display && t.pointLabels.display
            ? (function d9(n) {
                const t = {
                    l: n.left + n._padding.left,
                    r: n.right - n._padding.right,
                    t: n.top + n._padding.top,
                    b: n.bottom - n._padding.bottom,
                  },
                  e = Object.assign({}, t),
                  i = [],
                  r = [],
                  s = n._pointLabels.length,
                  o = n.options.pointLabels,
                  a = o.centerPointLabels ? ut / s : 0;
                for (let l = 0; l < s; l++) {
                  const c = o.setContext(n.getPointLabelContext(l));
                  r[l] = c.padding;
                  const u = n.getPointPosition(l, n.drawingArea + r[l], a),
                    d = Ht(c.font),
                    h = u9(n.ctx, d, n._pointLabels[l]);
                  i[l] = h;
                  const f = Yn(n.getIndexAngle(l) + a),
                    p = Math.round(Yy(f));
                  h9(
                    e,
                    t,
                    f,
                    fI(p, u.x, h.w, 0, 180),
                    fI(p, u.y, h.h, 90, 270)
                  );
                }
                n.setCenterPoint(t.l - e.l, e.r - t.r, t.t - e.t, e.b - t.b),
                  (n._pointLabelItems = (function f9(n, t, e) {
                    const i = [],
                      r = n._pointLabels.length,
                      s = n.options,
                      o = Iv(s) / 2,
                      a = n.drawingArea,
                      l = s.pointLabels.centerPointLabels ? ut / r : 0;
                    for (let c = 0; c < r; c++) {
                      const u = n.getPointPosition(c, a + o + e[c], l),
                        d = Math.round(Yy(Yn(u.angle + yt))),
                        h = t[c],
                        f = g9(u.y, h.h, d),
                        p = p9(d),
                        m = m9(u.x, h.w, p);
                      i.push({
                        x: u.x,
                        y: f,
                        textAlign: p,
                        left: m,
                        top: f,
                        right: m + h.w,
                        bottom: f + h.h,
                      });
                    }
                    return i;
                  })(n, i, r));
              })(this)
            : this.setCenterPoint(0, 0, 0, 0);
        }
        setCenterPoint(t, e, i, r) {
          (this.xCenter += Math.floor((t - e) / 2)),
            (this.yCenter += Math.floor((i - r) / 2)),
            (this.drawingArea -= Math.min(
              this.drawingArea / 2,
              Math.max(t, e, i, r)
            ));
        }
        getIndexAngle(t) {
          return Yn(
            t * (Xe / (this._pointLabels.length || 1)) +
              ki(this.options.startAngle || 0)
          );
        }
        getDistanceFromCenterForValue(t) {
          if (Fe(t)) return NaN;
          const e = this.drawingArea / (this.max - this.min);
          return this.options.reverse ? (this.max - t) * e : (t - this.min) * e;
        }
        getValueForDistanceFromCenter(t) {
          if (Fe(t)) return NaN;
          const e = t / (this.drawingArea / (this.max - this.min));
          return this.options.reverse ? this.max - e : this.min + e;
        }
        getPointLabelContext(t) {
          const e = this._pointLabels || [];
          if (t >= 0 && t < e.length) {
            const i = e[t];
            return (function v9(n, t, e) {
              return Ms(n, { label: e, index: t, type: "pointLabel" });
            })(this.getContext(), t, i);
          }
        }
        getPointPosition(t, e, i = 0) {
          const r = this.getIndexAngle(t) - yt + i;
          return {
            x: Math.cos(r) * e + this.xCenter,
            y: Math.sin(r) * e + this.yCenter,
            angle: r,
          };
        }
        getPointPositionForValue(t, e) {
          return this.getPointPosition(
            t,
            this.getDistanceFromCenterForValue(e)
          );
        }
        getBasePosition(t) {
          return this.getPointPositionForValue(t || 0, this.getBaseValue());
        }
        getPointLabelPosition(t) {
          const {
            left: e,
            top: i,
            right: r,
            bottom: s,
          } = this._pointLabelItems[t];
          return { left: e, top: i, right: r, bottom: s };
        }
        drawBackground() {
          const {
            backgroundColor: t,
            grid: { circular: e },
          } = this.options;
          if (t) {
            const i = this.ctx;
            i.save(),
              i.beginPath(),
              pI(
                this,
                this.getDistanceFromCenterForValue(this._endValue),
                e,
                this._pointLabels.length
              ),
              i.closePath(),
              (i.fillStyle = t),
              i.fill(),
              i.restore();
          }
        }
        drawGrid() {
          const t = this.ctx,
            e = this.options,
            { angleLines: i, grid: r } = e,
            s = this._pointLabels.length;
          let o, a, l;
          if (
            (e.pointLabels.display &&
              (function _9(n, t) {
                const {
                  ctx: e,
                  options: { pointLabels: i },
                } = n;
                for (let r = t - 1; r >= 0; r--) {
                  const s = i.setContext(n.getPointLabelContext(r)),
                    o = Ht(s.font),
                    {
                      x: a,
                      y: l,
                      textAlign: c,
                      left: u,
                      top: d,
                      right: h,
                      bottom: f,
                    } = n._pointLabelItems[r],
                    { backdropColor: p } = s;
                  if (!Fe(p)) {
                    const m = mo(s.borderRadius),
                      _ = rn(s.backdropPadding);
                    e.fillStyle = p;
                    const v = u - _.left,
                      M = d - _.top,
                      C = h - u + _.width,
                      D = f - d + _.height;
                    Object.values(m).some((S) => 0 !== S)
                      ? (e.beginPath(),
                        Oc(e, { x: v, y: M, w: C, h: D, radius: m }),
                        e.fill())
                      : e.fillRect(v, M, C, D);
                  }
                  po(e, n._pointLabels[r], a, l + o.lineHeight / 2, o, {
                    color: s.color,
                    textAlign: c,
                    textBaseline: "middle",
                  });
                }
              })(this, s),
            r.display &&
              this.ticks.forEach((c, u) => {
                0 !== u &&
                  ((a = this.getDistanceFromCenterForValue(c.value)),
                  (function y9(n, t, e, i) {
                    const r = n.ctx,
                      s = t.circular,
                      { color: o, lineWidth: a } = t;
                    (!s && !i) ||
                      !o ||
                      !a ||
                      e < 0 ||
                      (r.save(),
                      (r.strokeStyle = o),
                      (r.lineWidth = a),
                      r.setLineDash(t.borderDash),
                      (r.lineDashOffset = t.borderDashOffset),
                      r.beginPath(),
                      pI(n, e, s, i),
                      r.closePath(),
                      r.stroke(),
                      r.restore());
                  })(this, r.setContext(this.getContext(u - 1)), a, s));
              }),
            i.display)
          ) {
            for (t.save(), o = s - 1; o >= 0; o--) {
              const c = i.setContext(this.getPointLabelContext(o)),
                { color: u, lineWidth: d } = c;
              !d ||
                !u ||
                ((t.lineWidth = d),
                (t.strokeStyle = u),
                t.setLineDash(c.borderDash),
                (t.lineDashOffset = c.borderDashOffset),
                (a = this.getDistanceFromCenterForValue(
                  e.ticks.reverse ? this.min : this.max
                )),
                (l = this.getPointPosition(o, a)),
                t.beginPath(),
                t.moveTo(this.xCenter, this.yCenter),
                t.lineTo(l.x, l.y),
                t.stroke());
            }
            t.restore();
          }
        }
        drawBorder() {}
        drawLabels() {
          const t = this.ctx,
            e = this.options,
            i = e.ticks;
          if (!i.display) return;
          const r = this.getIndexAngle(0);
          let s, o;
          t.save(),
            t.translate(this.xCenter, this.yCenter),
            t.rotate(r),
            (t.textAlign = "center"),
            (t.textBaseline = "middle"),
            this.ticks.forEach((a, l) => {
              if (0 === l && !e.reverse) return;
              const c = i.setContext(this.getContext(l)),
                u = Ht(c.font);
              if (
                ((s = this.getDistanceFromCenterForValue(this.ticks[l].value)),
                c.showLabelBackdrop)
              ) {
                (t.font = u.string),
                  (o = t.measureText(a.label).width),
                  (t.fillStyle = c.backdropColor);
                const d = rn(c.backdropPadding);
                t.fillRect(
                  -o / 2 - d.left,
                  -s - u.size / 2 - d.top,
                  o + d.width,
                  u.size + d.height
                );
              }
              po(t, a.label, 0, -s, u, { color: c.color });
            }),
            t.restore();
        }
        drawTitle() {}
      }
      ($c.id = "radialLinear"),
        ($c.defaults = {
          display: !0,
          animate: !0,
          position: "chartArea",
          angleLines: {
            display: !0,
            lineWidth: 1,
            borderDash: [],
            borderDashOffset: 0,
          },
          grid: { circular: !1 },
          startAngle: 0,
          ticks: { showLabelBackdrop: !0, callback: af.formatters.numeric },
          pointLabels: {
            backdropColor: void 0,
            backdropPadding: 2,
            display: !0,
            font: { size: 10 },
            callback: (n) => n,
            padding: 5,
            centerPointLabels: !1,
          },
        }),
        ($c.defaultRoutes = {
          "angleLines.color": "borderColor",
          "pointLabels.color": "color",
          "ticks.color": "color",
        }),
        ($c.descriptors = { angleLines: { _fallback: "grid" } });
      const Mf = {
          millisecond: { common: !0, size: 1, steps: 1e3 },
          second: { common: !0, size: 1e3, steps: 60 },
          minute: { common: !0, size: 6e4, steps: 60 },
          hour: { common: !0, size: 36e5, steps: 24 },
          day: { common: !0, size: 864e5, steps: 30 },
          week: { common: !1, size: 6048e5, steps: 4 },
          month: { common: !0, size: 2628e6, steps: 12 },
          quarter: { common: !1, size: 7884e6, steps: 4 },
          year: { common: !0, size: 3154e7 },
        },
        Sn = Object.keys(Mf);
      function b9(n, t) {
        return n - t;
      }
      function mI(n, t) {
        if (Fe(t)) return null;
        const e = n._adapter,
          { parser: i, round: r, isoWeekday: s } = n._parseOpts;
        let o = t;
        return (
          "function" == typeof i && (o = i(o)),
          Mt(o) || (o = "string" == typeof i ? e.parse(o, i) : e.parse(o)),
          null === o
            ? null
            : (r &&
                (o =
                  "week" !== r || (!Ra(s) && !0 !== s)
                    ? e.startOf(o, r)
                    : e.startOf(o, "isoWeek", s)),
              +o)
        );
      }
      function gI(n, t, e, i) {
        const r = Sn.length;
        for (let s = Sn.indexOf(n); s < r - 1; ++s) {
          const o = Mf[Sn[s]],
            a = o.steps ? o.steps : Number.MAX_SAFE_INTEGER;
          if (o.common && Math.ceil((e - t) / (a * o.size)) <= i) return Sn[s];
        }
        return Sn[r - 1];
      }
      function _I(n, t, e) {
        if (e) {
          if (e.length) {
            const { lo: i, hi: r } = Xy(e, t);
            n[e[i] >= t ? e[i] : e[r]] = !0;
          }
        } else n[t] = !0;
      }
      function yI(n, t, e) {
        const i = [],
          r = {},
          s = t.length;
        let o, a;
        for (o = 0; o < s; ++o)
          (a = t[o]), (r[a] = o), i.push({ value: a, major: !1 });
        return 0 !== s && e
          ? (function M9(n, t, e, i) {
              const r = n._adapter,
                s = +r.startOf(t[0].value, i),
                o = t[t.length - 1].value;
              let a, l;
              for (a = s; a <= o; a = +r.add(a, 1, i))
                (l = e[a]), l >= 0 && (t[l].major = !0);
              return t;
            })(n, i, r, e)
          : i;
      }
      let Ov = (() => {
        class n extends vo {
          constructor(e) {
            super(e),
              (this._cache = { data: [], labels: [], all: [] }),
              (this._unit = "day"),
              (this._majorUnit = void 0),
              (this._offsets = {}),
              (this._normalized = !1),
              (this._parseOpts = void 0);
          }
          init(e, i) {
            const r = e.time || (e.time = {}),
              s = (this._adapter = new lY._date(e.adapters.date));
            s.init(i),
              Mc(r.displayFormats, s.formats()),
              (this._parseOpts = {
                parser: r.parser,
                round: r.round,
                isoWeekday: r.isoWeekday,
              }),
              super.init(e),
              (this._normalized = i.normalized);
          }
          parse(e, i) {
            return void 0 === e ? null : mI(this, e);
          }
          beforeLayout() {
            super.beforeLayout(),
              (this._cache = { data: [], labels: [], all: [] });
          }
          determineDataLimits() {
            const e = this.options,
              i = this._adapter,
              r = e.time.unit || "day";
            let {
              min: s,
              max: o,
              minDefined: a,
              maxDefined: l,
            } = this.getUserBounds();
            function c(u) {
              !a && !isNaN(u.min) && (s = Math.min(s, u.min)),
                !l && !isNaN(u.max) && (o = Math.max(o, u.max));
            }
            (!a || !l) &&
              (c(this._getLabelBounds()),
              ("ticks" !== e.bounds || "labels" !== e.ticks.source) &&
                c(this.getMinMax(!1))),
              (s = Mt(s) && !isNaN(s) ? s : +i.startOf(Date.now(), r)),
              (o = Mt(o) && !isNaN(o) ? o : +i.endOf(Date.now(), r) + 1),
              (this.min = Math.min(s, o - 1)),
              (this.max = Math.max(s + 1, o));
          }
          _getLabelBounds() {
            const e = this.getLabelTimestamps();
            let i = Number.POSITIVE_INFINITY,
              r = Number.NEGATIVE_INFINITY;
            return (
              e.length && ((i = e[0]), (r = e[e.length - 1])),
              { min: i, max: r }
            );
          }
          buildTicks() {
            const e = this.options,
              i = e.time,
              r = e.ticks,
              s =
                "labels" === r.source
                  ? this.getLabelTimestamps()
                  : this._generate();
            "ticks" === e.bounds &&
              s.length &&
              ((this.min = this._userMin || s[0]),
              (this.max = this._userMax || s[s.length - 1]));
            const o = this.min,
              l = (function qW(n, t, e) {
                let i = 0,
                  r = n.length;
                for (; i < r && n[i] < t; ) i++;
                for (; r > i && n[r - 1] > e; ) r--;
                return i > 0 || r < n.length ? n.slice(i, r) : n;
              })(s, o, this.max);
            return (
              (this._unit =
                i.unit ||
                (r.autoSkip
                  ? gI(i.minUnit, this.min, this.max, this._getLabelCapacity(o))
                  : (function C9(n, t, e, i, r) {
                      for (let s = Sn.length - 1; s >= Sn.indexOf(e); s--) {
                        const o = Sn[s];
                        if (Mf[o].common && n._adapter.diff(r, i, o) >= t - 1)
                          return o;
                      }
                      return Sn[e ? Sn.indexOf(e) : 0];
                    })(this, l.length, i.minUnit, this.min, this.max))),
              (this._majorUnit =
                r.major.enabled && "year" !== this._unit
                  ? (function w9(n) {
                      for (let t = Sn.indexOf(n) + 1, e = Sn.length; t < e; ++t)
                        if (Mf[Sn[t]].common) return Sn[t];
                    })(this._unit)
                  : void 0),
              this.initOffsets(s),
              e.reverse && l.reverse(),
              yI(this, l, this._majorUnit)
            );
          }
          afterAutoSkip() {
            this.options.offsetAfterAutoskip &&
              this.initOffsets(this.ticks.map((e) => +e.value));
          }
          initOffsets(e) {
            let s,
              o,
              i = 0,
              r = 0;
            this.options.offset &&
              e.length &&
              ((s = this.getDecimalForValue(e[0])),
              (i =
                1 === e.length
                  ? 1 - s
                  : (this.getDecimalForValue(e[1]) - s) / 2),
              (o = this.getDecimalForValue(e[e.length - 1])),
              (r =
                1 === e.length
                  ? o
                  : (o - this.getDecimalForValue(e[e.length - 2])) / 2));
            const a = e.length < 3 ? 0.5 : 0.25;
            (i = Wt(i, 0, a)),
              (r = Wt(r, 0, a)),
              (this._offsets = { start: i, end: r, factor: 1 / (i + 1 + r) });
          }
          _generate() {
            const e = this._adapter,
              i = this.min,
              r = this.max,
              s = this.options,
              o = s.time,
              a = o.unit || gI(o.minUnit, i, r, this._getLabelCapacity(i)),
              l = ve(o.stepSize, 1),
              c = "week" === a && o.isoWeekday,
              u = Ra(c) || !0 === c,
              d = {};
            let f,
              p,
              h = i;
            if (
              (u && (h = +e.startOf(h, "isoWeek", c)),
              (h = +e.startOf(h, u ? "day" : a)),
              e.diff(r, i, a) > 1e5 * l)
            )
              throw new Error(
                i +
                  " and " +
                  r +
                  " are too far apart with stepSize of " +
                  l +
                  " " +
                  a
              );
            const m = "data" === s.ticks.source && this.getDataTimestamps();
            for (f = h, p = 0; f < r; f = +e.add(f, l, a), p++) _I(d, f, m);
            return (
              (f === r || "ticks" === s.bounds || 1 === p) && _I(d, f, m),
              Object.keys(d)
                .sort((_, v) => _ - v)
                .map((_) => +_)
            );
          }
          getLabelForValue(e) {
            const r = this.options.time;
            return this._adapter.format(
              e,
              r.tooltipFormat ? r.tooltipFormat : r.displayFormats.datetime
            );
          }
          _tickFormatFunction(e, i, r, s) {
            const o = this.options,
              a = o.time.displayFormats,
              l = this._unit,
              c = this._majorUnit,
              d = c && a[c],
              h = r[i],
              p = this._adapter.format(
                e,
                s || (c && d && h && h.major ? d : l && a[l])
              ),
              m = o.ticks.callback;
            return m ? rt(m, [p, i, r], this) : p;
          }
          generateTickLabels(e) {
            let i, r, s;
            for (i = 0, r = e.length; i < r; ++i)
              (s = e[i]), (s.label = this._tickFormatFunction(s.value, i, e));
          }
          getDecimalForValue(e) {
            return null === e ? NaN : (e - this.min) / (this.max - this.min);
          }
          getPixelForValue(e) {
            const i = this._offsets,
              r = this.getDecimalForValue(e);
            return this.getPixelForDecimal((i.start + r) * i.factor);
          }
          getValueForPixel(e) {
            const i = this._offsets,
              r = this.getDecimalForPixel(e) / i.factor - i.end;
            return this.min + r * (this.max - this.min);
          }
          _getLabelSize(e) {
            const i = this.options.ticks,
              r = this.ctx.measureText(e).width,
              s = ki(this.isHorizontal() ? i.maxRotation : i.minRotation),
              o = Math.cos(s),
              a = Math.sin(s),
              l = this._resolveTickFontOptions(0).size;
            return { w: r * o + l * a, h: r * a + l * o };
          }
          _getLabelCapacity(e) {
            const i = this.options.time,
              r = i.displayFormats,
              s = r[i.unit] || r.millisecond,
              o = this._tickFormatFunction(
                e,
                0,
                yI(this, [e], this._majorUnit),
                s
              ),
              a = this._getLabelSize(o),
              l =
                Math.floor(
                  this.isHorizontal() ? this.width / a.w : this.height / a.h
                ) - 1;
            return l > 0 ? l : 1;
          }
          getDataTimestamps() {
            let i,
              r,
              e = this._cache.data || [];
            if (e.length) return e;
            const s = this.getMatchingVisibleMetas();
            if (this._normalized && s.length)
              return (this._cache.data =
                s[0].controller.getAllParsedValues(this));
            for (i = 0, r = s.length; i < r; ++i)
              e = e.concat(s[i].controller.getAllParsedValues(this));
            return (this._cache.data = this.normalize(e));
          }
          getLabelTimestamps() {
            const e = this._cache.labels || [];
            let i, r;
            if (e.length) return e;
            const s = this.getLabels();
            for (i = 0, r = s.length; i < r; ++i) e.push(mI(this, s[i]));
            return (this._cache.labels = this._normalized
              ? e
              : this.normalize(e));
          }
          normalize(e) {
            return gk(e.sort(b9));
          }
        }
        return (
          (n.id = "time"),
          (n.defaults = {
            bounds: "data",
            adapters: {},
            time: {
              parser: !1,
              unit: !1,
              round: !1,
              isoWeekday: !1,
              minUnit: "millisecond",
              displayFormats: {},
            },
            ticks: { source: "auto", major: { enabled: !1 } },
          }),
          n
        );
      })();
      function Df(n, t, e) {
        let s,
          o,
          a,
          l,
          i = 0,
          r = n.length - 1;
        e
          ? (t >= n[i].pos &&
              t <= n[r].pos &&
              ({ lo: i, hi: r } = $r(n, "pos", t)),
            ({ pos: s, time: a } = n[i]),
            ({ pos: o, time: l } = n[r]))
          : (t >= n[i].time &&
              t <= n[r].time &&
              ({ lo: i, hi: r } = $r(n, "time", t)),
            ({ time: s, pos: a } = n[i]),
            ({ time: o, pos: l } = n[r]));
        const c = o - s;
        return c ? a + ((l - a) * (t - s)) / c : a;
      }
      class Rv extends Ov {
        constructor(t) {
          super(t),
            (this._table = []),
            (this._minPos = void 0),
            (this._tableRange = void 0);
        }
        initOffsets() {
          const t = this._getTimestampsForTable(),
            e = (this._table = this.buildLookupTable(t));
          (this._minPos = Df(e, this.min)),
            (this._tableRange = Df(e, this.max) - this._minPos),
            super.initOffsets(t);
        }
        buildLookupTable(t) {
          const { min: e, max: i } = this,
            r = [],
            s = [];
          let o, a, l, c, u;
          for (o = 0, a = t.length; o < a; ++o)
            (c = t[o]), c >= e && c <= i && r.push(c);
          if (r.length < 2)
            return [
              { time: e, pos: 0 },
              { time: i, pos: 1 },
            ];
          for (o = 0, a = r.length; o < a; ++o)
            (u = r[o + 1]),
              (l = r[o - 1]),
              (c = r[o]),
              Math.round((u + l) / 2) !== c &&
                s.push({ time: c, pos: o / (a - 1) });
          return s;
        }
        _getTimestampsForTable() {
          let t = this._cache.all || [];
          if (t.length) return t;
          const e = this.getDataTimestamps(),
            i = this.getLabelTimestamps();
          return (
            (t =
              e.length && i.length
                ? this.normalize(e.concat(i))
                : e.length
                ? e
                : i),
            (t = this._cache.all = t),
            t
          );
        }
        getDecimalForValue(t) {
          return (Df(this._table, t) - this._minPos) / this._tableRange;
        }
        getValueForPixel(t) {
          const e = this._offsets,
            i = this.getDecimalForPixel(t) / e.factor - e.end;
          return Df(this._table, i * this._tableRange + this._minPos, !0);
        }
      }
      (Rv.id = "timeseries"), (Rv.defaults = Ov.defaults);
      const x9 = [
          aY,
          v7,
          r9,
          Object.freeze({
            __proto__: null,
            CategoryScale: Cf,
            LinearScale: Av,
            LogarithmicScale: kv,
            RadialLinearScale: $c,
            TimeScale: Ov,
            TimeSeriesScale: Rv,
          }),
        ],
        E9 = ["meuCanvas"];
      let S9 = (() => {
          class n {
            constructor(e) {
              (this.equipeService = e),
                (this.now = new Date()),
                (this.diaAtual = this.now.getDay()),
                (this.equipes = []),
                (this.membros1 = 0),
                (this.membros2 = 0),
                (this.membros3 = 0),
                (this.membros4 = 0),
                (this.membros5 = 0),
                (this.membros6 = 0),
                (this.membros7 = 0),
                (this.dataCriacao = 0);
            }
            lerEquipes() {
              this.equipeService.read().subscribe((e) => {
                (this.equipes = e),
                  e.forEach((i) => {
                    (this.dataCriacao = parseInt(i.createdAt.slice(8, 10))),
                      this.dataCriacao == this.now.getDate()
                        ? (this.membros1 += 1)
                        : this.dataCriacao == this.now.getDate() - 1
                        ? (this.membros2 += 1)
                        : this.dataCriacao == this.now.getDate() - 2
                        ? (this.membros3 += 1)
                        : this.dataCriacao == this.now.getDate() - 3
                        ? (this.membros4 += 1)
                        : this.dataCriacao == this.now.getDate() - 4
                        ? (this.membros5 += 1)
                        : this.dataCriacao == this.now.getDate() - 5
                        ? (this.membros6 += 1)
                        : this.dataCriacao == this.now.getDate() - 6 &&
                          (this.membros7 += 1);
                  }),
                  this.mostraGrafico();
              });
            }
            ngOnInit() {
              this.lerEquipes();
            }
            mostraGrafico() {
              mf.register(...x9),
                new mf(this.elemento.nativeElement, {
                  type: "line",
                  options: {
                    borderColor: "#000000",
                    plugins: {
                      title: {
                        display: !0,
                        text: "Quantidade de equipes adicionada por dia",
                      },
                    },
                    scales: {
                      x: {
                        display: !0,
                        title: { display: !0, text: "Dia do m\xeas" },
                      },
                      y: {
                        display: !0,
                        title: {
                          display: !0,
                          text: "Quantidade de equipes adicionadas",
                        },
                      },
                    },
                  },
                  data: {
                    labels: [
                      this.now.getDate() - 6,
                      this.now.getDate() - 5,
                      this.now.getDate() - 4,
                      this.now.getDate() - 3,
                      this.now.getDate() - 2,
                      this.now.getDate() - 1,
                      this.now.getDate(),
                    ],
                    datasets: [
                      {
                        fill: "#ff0000",
                        label: "Quantidade de equipes adicionadas",
                        data: [
                          this.membros7,
                          this.membros6,
                          this.membros5,
                          this.membros4,
                          this.membros3,
                          this.membros2,
                          this.membros1,
                        ],
                      },
                    ],
                  },
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(sr));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-grapfico"]],
              viewQuery: function (e, i) {
                if ((1 & e && $t(E9, 7), 2 & e)) {
                  let r;
                  se((r = oe())) && (i.elemento = r.first);
                }
              },
              decls: 3,
              vars: 0,
              consts: [["meuCanvas", ""]],
              template: function (e, i) {
                1 & e && (b(0, "div"), ge(1, "canvas", null, 0), y());
              },
            })),
            n
          );
        })(),
        T9 = (() => {
          class n {
            constructor(e, i, r, s) {
              (this.equipeService = e),
                (this.membroService = i),
                (this.projetoService = r),
                (this.tarefaService = s),
                (this.equipes = []),
                (this.membros = []),
                (this.projetos = []),
                (this.tarefas = []);
            }
            ngOnInit() {
              this.equipeService.read().subscribe((e) => {
                this.equipes = e;
              }),
                this.membroService.read().subscribe((e) => {
                  this.membros = e;
                }),
                this.projetoService.read().subscribe((e) => {
                  this.projetos = e;
                }),
                this.tarefaService.read().subscribe((e) => {
                  this.tarefas = e;
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(sr), g(co), g(uo), g($h));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-dashboard"]],
              decls: 79,
              vars: 4,
              consts: [
                [1, "graficos"],
                [1, "grafico"],
                [1, "cards"],
                [1, "card"],
                [1, "title-view"],
                [
                  "target",
                  "_blank",
                  "href",
                  "https://www.github.com/TheSamuelVitor",
                ],
                ["target", "_blank", "href", "https://www.angular.io"],
                ["target", "_blank", "href", "https://www.postgresql.org/"],
                ["target", "_blank", "href", "https://go.dev/"],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "div", 0),
                  ge(1, "app-grapfico", 1),
                  y(),
                  b(2, "div", 2)(3, "mat-card", 3)(4, "mat-card-title"),
                  w(5),
                  y(),
                  b(6, "mat-card-subtitle"),
                  w(7, " Membro(s)"),
                  ge(8, "br"),
                  w(9, "Cadastrado(s) "),
                  y()(),
                  b(10, "mat-card", 3)(11, "mat-card-title"),
                  w(12),
                  y(),
                  b(13, "mat-card-subtitle"),
                  w(14, " Equipe(s)"),
                  ge(15, "br"),
                  w(16, "Cadastrada(s) "),
                  y()(),
                  b(17, "mat-card", 3)(18, "mat-card-title"),
                  w(19),
                  y(),
                  b(20, "mat-card-subtitle"),
                  w(21, " Projeto(s)"),
                  ge(22, "br"),
                  w(23, "Cadastrado(s) "),
                  y()(),
                  b(24, "mat-card", 3)(25, "mat-card-title"),
                  w(26),
                  y(),
                  b(27, "mat-card-subtitle"),
                  w(28, " Tarefa(s)"),
                  ge(29, "br"),
                  w(30, "Cadastrada(s) "),
                  y()()(),
                  b(31, "mat-card")(32, "h1", 4),
                  w(33, "Sobre o Projeto"),
                  y(),
                  b(34, "mat-card-content")(35, "ul")(36, "li")(37, "p"),
                  w(38, " Desenvolvido por "),
                  b(39, "a", 5),
                  w(40, " Samuel Vitor "),
                  y()()(),
                  b(41, "li")(42, "p"),
                  w(
                    43,
                    "Desafio proposto pela Brisanet para os jovens aprendizes"
                  ),
                  y()(),
                  b(44, "li")(45, "p"),
                  w(
                    46,
                    "Software de gerenciamente de projetos onde \xe9 poss\xedvel conectar:"
                  ),
                  y(),
                  b(47, "ul")(48, "li"),
                  w(49, "Membros a uma equipe"),
                  y(),
                  b(50, "li"),
                  w(51, "Projeto a uma equipe"),
                  y(),
                  b(52, "li"),
                  w(53, "Tarefas a um membro e a um projeto"),
                  y()()(),
                  b(54, "li")(55, "p"),
                  w(56, " Desenvolvido com "),
                  b(57, "a", 6),
                  w(58, "Angular"),
                  y(),
                  w(59, ", "),
                  b(60, "a", 7),
                  w(61, "Postgres"),
                  y(),
                  w(62, " e "),
                  b(63, "a", 8),
                  w(64, "Go"),
                  y(),
                  w(65, ". "),
                  y()()()(),
                  b(66, "mat-card-header")(67, "mat-card-title"),
                  w(68, "Informa\xe7\xf5es Importantes"),
                  y(),
                  b(69, "mat-card-subtitle"),
                  w(70, "Importante ler antes de usar este software"),
                  y()(),
                  b(71, "mat-card-content")(72, "ul")(73, "li")(74, "p"),
                  w(
                    75,
                    " \xc9 necess\xe1rio ter uma equipe para que sejam criados membros e projetos; "
                  ),
                  y()(),
                  b(76, "li")(77, "p"),
                  w(
                    78,
                    " Para criar uma Tarefa deve existir tanto o projeto da tarefa, quanto o membro que realizar\xe1 a tarefa. "
                  ),
                  y()()()()()),
                  2 & e &&
                    (E(5),
                    dt(" ", i.membros.length, " "),
                    E(7),
                    dt(" ", i.equipes.length, " "),
                    E(7),
                    dt(" ", i.projetos.length, " "),
                    E(7),
                    dt(" ", i.tarefas.length, " "));
              },
              dependencies: [lr, AW, rk, or, ar, S9],
              styles: [
                "h1[_ngcontent-%COMP%]{margin-left:-0px}span.subtitle[_ngcontent-%COMP%]{font-size:1.5rem}a[_ngcontent-%COMP%]{color:#000;text-decoration:none}.cards[_ngcontent-%COMP%]{display:flex;justify-content:space-between;flex-wrap:wrap;margin:20px}.card[_ngcontent-%COMP%]{margin:10px;text-align:center;width:20rem}.grafico[_ngcontent-%COMP%]{min-width:35rem;width:50%;display:block;margin:20px;padding:10px}",
              ],
            })),
            n
          );
        })();
      const qc = {
        schedule(n) {
          let t = requestAnimationFrame,
            e = cancelAnimationFrame;
          const { delegate: i } = qc;
          i && ((t = i.requestAnimationFrame), (e = i.cancelAnimationFrame));
          const r = t((s) => {
            (e = void 0), n(s);
          });
          return new bt(() => e?.(r));
        },
        requestAnimationFrame(...n) {
          const { delegate: t } = qc;
          return (t?.requestAnimationFrame || requestAnimationFrame)(...n);
        },
        cancelAnimationFrame(...n) {
          const { delegate: t } = qc;
          return (t?.cancelAnimationFrame || cancelAnimationFrame)(...n);
        },
        delegate: void 0,
      };
      new (class k9 extends Ry {
        flush(t) {
          this._active = !0;
          const e = this._scheduled;
          this._scheduled = void 0;
          const { actions: i } = this;
          let r;
          t = t || i.shift();
          do {
            if ((r = t.execute(t.state, t.delay))) break;
          } while ((t = i[0]) && t.id === e && i.shift());
          if (((this._active = !1), r)) {
            for (; (t = i[0]) && t.id === e && i.shift(); ) t.unsubscribe();
            throw r;
          }
        }
      })(
        class A9 extends Oy {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          requestAsyncId(t, e, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(t, e, i)
              : (t.actions.push(this),
                t._scheduled ||
                  (t._scheduled = qc.requestAnimationFrame(() =>
                    t.flush(void 0)
                  )));
          }
          recycleAsyncId(t, e, i = 0) {
            if ((null != i && i > 0) || (null == i && this.delay > 0))
              return super.recycleAsyncId(t, e, i);
            t.actions.some((r) => r.id === e) ||
              (qc.cancelAnimationFrame(e), (t._scheduled = void 0));
          }
        }
      );
      let Pv,
        O9 = 1;
      const xf = {};
      function vI(n) {
        return n in xf && (delete xf[n], !0);
      }
      const R9 = {
          setImmediate(n) {
            const t = O9++;
            return (
              (xf[t] = !0),
              Pv || (Pv = Promise.resolve()),
              Pv.then(() => vI(t) && n()),
              t
            );
          },
          clearImmediate(n) {
            vI(n);
          },
        },
        { setImmediate: P9, clearImmediate: F9 } = R9,
        Ef = {
          setImmediate(...n) {
            const { delegate: t } = Ef;
            return (t?.setImmediate || P9)(...n);
          },
          clearImmediate(n) {
            const { delegate: t } = Ef;
            return (t?.clearImmediate || F9)(n);
          },
          delegate: void 0,
        };
      new (class L9 extends Ry {
        flush(t) {
          this._active = !0;
          const e = this._scheduled;
          this._scheduled = void 0;
          const { actions: i } = this;
          let r;
          t = t || i.shift();
          do {
            if ((r = t.execute(t.state, t.delay))) break;
          } while ((t = i[0]) && t.id === e && i.shift());
          if (((this._active = !1), r)) {
            for (; (t = i[0]) && t.id === e && i.shift(); ) t.unsubscribe();
            throw r;
          }
        }
      })(
        class N9 extends Oy {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          requestAsyncId(t, e, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(t, e, i)
              : (t.actions.push(this),
                t._scheduled ||
                  (t._scheduled = Ef.setImmediate(t.flush.bind(t, void 0))));
          }
          recycleAsyncId(t, e, i = 0) {
            if ((null != i && i > 0) || (null == i && this.delay > 0))
              return super.recycleAsyncId(t, e, i);
            t.actions.some((r) => r.id === e) ||
              (Ef.clearImmediate(e), (t._scheduled = void 0));
          }
        }
      );
      function bI(n, t = Py) {
        return (function V9(n) {
          return ft((t, e) => {
            let i = !1,
              r = null,
              s = null,
              o = !1;
            const a = () => {
                if ((s?.unsubscribe(), (s = null), i)) {
                  i = !1;
                  const c = r;
                  (r = null), e.next(c);
                }
                o && e.complete();
              },
              l = () => {
                (s = null), o && e.complete();
              };
            t.subscribe(
              ot(
                e,
                (c) => {
                  (i = !0), (r = c), s || _n(n(c)).subscribe((s = ot(e, a, l)));
                },
                () => {
                  (o = !0), (!i || !s || s.closed) && e.complete();
                }
              )
            );
          });
        })(() =>
          (function H9(n = 0, t, e = N8) {
            let i = -1;
            return (
              null != t && (pb(t) ? (e = t) : (i = t)),
              new We((r) => {
                let s = (function j9(n) {
                  return n instanceof Date && !isNaN(n);
                })(n)
                  ? +n - e.now()
                  : n;
                s < 0 && (s = 0);
                let o = 0;
                return e.schedule(function () {
                  r.closed ||
                    (r.next(o++),
                    0 <= i ? this.schedule(void 0, i) : r.complete());
                }, s);
              })
            );
          })(n, t)
        );
      }
      let Wc = (() => {
          class n {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this._platform = i),
                (this._scrolled = new $()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = r);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const i = this.scrollContainers.get(e);
              i && (i.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new We((i) => {
                    this._globalSubscription || this._addGlobalListener();
                    const r =
                      e > 0
                        ? this._scrolled.pipe(bI(e)).subscribe(i)
                        : this._scrolled.subscribe(i);
                    return (
                      this._scrolledCount++,
                      () => {
                        r.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : W();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, i) => this.deregister(i)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, i) {
              const r = this.getAncestorScrollContainers(e);
              return this.scrolled(i).pipe(ct((s) => !s || r.indexOf(s) > -1));
            }
            getAncestorScrollContainers(e) {
              const i = [];
              return (
                this.scrollContainers.forEach((r, s) => {
                  this._scrollableContainsElement(s, e) && i.push(s);
                }),
                i
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(e, i) {
              let r = Br(i),
                s = e.getElementRef().nativeElement;
              do {
                if (r == s) return !0;
              } while ((r = r.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                Oa(this._getWindow().document, "scroll").subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Q), x(jt), x(ae, 8));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Gc = (() => {
          class n {
            constructor(e, i, r, s) {
              (this.elementRef = e),
                (this.scrollDispatcher = i),
                (this.ngZone = r),
                (this.dir = s),
                (this._destroyed = new $()),
                (this._elementScrolled = new We((o) =>
                  this.ngZone.runOutsideAngular(() =>
                    Oa(this.elementRef.nativeElement, "scroll")
                      .pipe(_e(this._destroyed))
                      .subscribe(o)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(e) {
              const i = this.elementRef.nativeElement,
                r = this.dir && "rtl" == this.dir.value;
              null == e.left && (e.left = r ? e.end : e.start),
                null == e.right && (e.right = r ? e.start : e.end),
                null != e.bottom &&
                  (e.top = i.scrollHeight - i.clientHeight - e.bottom),
                r && 0 != mc()
                  ? (null != e.left &&
                      (e.right = i.scrollWidth - i.clientWidth - e.left),
                    2 == mc()
                      ? (e.left = e.right)
                      : 1 == mc() && (e.left = e.right ? -e.right : e.right))
                  : null != e.right &&
                    (e.left = i.scrollWidth - i.clientWidth - e.right),
                this._applyScrollToOptions(e);
            }
            _applyScrollToOptions(e) {
              const i = this.elementRef.nativeElement;
              mA()
                ? i.scrollTo(e)
                : (null != e.top && (i.scrollTop = e.top),
                  null != e.left && (i.scrollLeft = e.left));
            }
            measureScrollOffset(e) {
              const i = "left",
                r = "right",
                s = this.elementRef.nativeElement;
              if ("top" == e) return s.scrollTop;
              if ("bottom" == e)
                return s.scrollHeight - s.clientHeight - s.scrollTop;
              const o = this.dir && "rtl" == this.dir.value;
              return (
                "start" == e ? (e = o ? r : i) : "end" == e && (e = o ? i : r),
                o && 2 == mc()
                  ? e == i
                    ? s.scrollWidth - s.clientWidth - s.scrollLeft
                    : s.scrollLeft
                  : o && 1 == mc()
                  ? e == i
                    ? s.scrollLeft + s.scrollWidth - s.clientWidth
                    : -s.scrollLeft
                  : e == i
                  ? s.scrollLeft
                  : s.scrollWidth - s.clientWidth - s.scrollLeft
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(ce), g(Wc), g(Q), g(rr, 8));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["", "cdk-scrollable", ""],
                ["", "cdkScrollable", ""],
              ],
            })),
            n
          );
        })(),
        Sf = (() => {
          class n {
            constructor(e, i, r) {
              (this._platform = e),
                (this._change = new $()),
                (this._changeListener = (s) => {
                  this._change.next(s);
                }),
                (this._document = r),
                i.runOutsideAngular(() => {
                  if (e.isBrowser) {
                    const s = this._getWindow();
                    s.addEventListener("resize", this._changeListener),
                      s.addEventListener(
                        "orientationchange",
                        this._changeListener
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const e = this._getWindow();
                e.removeEventListener("resize", this._changeListener),
                  e.removeEventListener(
                    "orientationchange",
                    this._changeListener
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: i, height: r } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + r,
                right: e.left + i,
                height: r,
                width: i,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._document,
                i = this._getWindow(),
                r = e.documentElement,
                s = r.getBoundingClientRect();
              return {
                top:
                  -s.top || e.body.scrollTop || i.scrollY || r.scrollTop || 0,
                left:
                  -s.left ||
                  e.body.scrollLeft ||
                  i.scrollX ||
                  r.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(bI(e)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(jt), x(Q), x(ae, 8));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Co = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({})),
            n
          );
        })(),
        CI = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [vc, Co, vc, Co] })),
            n
          );
        })();
      class Fv {
        attach(t) {
          return (this._attachedHost = t), t.attach(this);
        }
        detach() {
          let t = this._attachedHost;
          null != t && ((this._attachedHost = null), t.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class Va extends Fv {
        constructor(t, e, i, r) {
          super(),
            (this.component = t),
            (this.viewContainerRef = e),
            (this.injector = i),
            (this.componentFactoryResolver = r);
        }
      }
      class Tf extends Fv {
        constructor(t, e, i, r) {
          super(),
            (this.templateRef = t),
            (this.viewContainerRef = e),
            (this.context = i),
            (this.injector = r);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(t, e = this.context) {
          return (this.context = e), super.attach(t);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class $9 extends Fv {
        constructor(t) {
          super(), (this.element = t instanceof ce ? t.nativeElement : t);
        }
      }
      class Af {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(t) {
          return t instanceof Va
            ? ((this._attachedPortal = t), this.attachComponentPortal(t))
            : t instanceof Tf
            ? ((this._attachedPortal = t), this.attachTemplatePortal(t))
            : this.attachDomPortal && t instanceof $9
            ? ((this._attachedPortal = t), this.attachDomPortal(t))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class q9 extends Af {
        constructor(t, e, i, r, s) {
          super(),
            (this.outletElement = t),
            (this._componentFactoryResolver = e),
            (this._appRef = i),
            (this._defaultInjector = r),
            (this.attachDomPortal = (o) => {
              const a = o.element,
                l = this._document.createComment("dom-portal");
              a.parentNode.insertBefore(l, a),
                this.outletElement.appendChild(a),
                (this._attachedPortal = o),
                super.setDisposeFn(() => {
                  l.parentNode && l.parentNode.replaceChild(a, l);
                });
            }),
            (this._document = s);
        }
        attachComponentPortal(t) {
          const i = (
            t.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(t.component);
          let r;
          return (
            t.viewContainerRef
              ? ((r = t.viewContainerRef.createComponent(
                  i,
                  t.viewContainerRef.length,
                  t.injector || t.viewContainerRef.injector
                )),
                this.setDisposeFn(() => r.destroy()))
              : ((r = i.create(t.injector || this._defaultInjector || lt.NULL)),
                this._appRef.attachView(r.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(r.hostView),
                    r.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(r)),
            (this._attachedPortal = t),
            r
          );
        }
        attachTemplatePortal(t) {
          let e = t.viewContainerRef,
            i = e.createEmbeddedView(t.templateRef, t.context, {
              injector: t.injector,
            });
          return (
            i.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
            i.detectChanges(),
            this.setDisposeFn(() => {
              let r = e.indexOf(i);
              -1 !== r && e.remove(r);
            }),
            (this._attachedPortal = t),
            i
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let Yc = (() => {
          class n extends Af {
            constructor(e, i, r) {
              super(),
                (this._componentFactoryResolver = e),
                (this._viewContainerRef = i),
                (this._isInitialized = !1),
                (this.attached = new fe()),
                (this.attachDomPortal = (s) => {
                  const o = s.element,
                    a = this._document.createComment("dom-portal");
                  s.setAttachedHost(this),
                    o.parentNode.insertBefore(a, o),
                    this._getRootNode().appendChild(o),
                    (this._attachedPortal = s),
                    super.setDisposeFn(() => {
                      a.parentNode && a.parentNode.replaceChild(o, a);
                    });
                }),
                (this._document = r);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(e) {
              (this.hasAttached() && !e && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                e && super.attach(e),
                (this._attachedPortal = e || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedPortal = null),
                (this._attachedRef = null);
            }
            attachComponentPortal(e) {
              e.setAttachedHost(this);
              const i =
                  null != e.viewContainerRef
                    ? e.viewContainerRef
                    : this._viewContainerRef,
                s = (
                  e.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(e.component),
                o = i.createComponent(s, i.length, e.injector || i.injector);
              return (
                i !== this._viewContainerRef &&
                  this._getRootNode().appendChild(o.hostView.rootNodes[0]),
                super.setDisposeFn(() => o.destroy()),
                (this._attachedPortal = e),
                (this._attachedRef = o),
                this.attached.emit(o),
                o
              );
            }
            attachTemplatePortal(e) {
              e.setAttachedHost(this);
              const i = this._viewContainerRef.createEmbeddedView(
                e.templateRef,
                e.context,
                { injector: e.injector }
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = e),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            _getRootNode() {
              const e = this._viewContainerRef.element.nativeElement;
              return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Ls), g(en), g(ae));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [["", "cdkPortalOutlet", ""]],
              inputs: { portal: ["cdkPortalOutlet", "portal"] },
              outputs: { attached: "attached" },
              exportAs: ["cdkPortalOutlet"],
              features: [q],
            })),
            n
          );
        })(),
        Kc = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({})),
            n
          );
        })();
      const wI = mA();
      class W9 {
        constructor(t, e) {
          (this._viewportRuler = t),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const t = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = t.style.left || ""),
              (this._previousHTMLStyles.top = t.style.top || ""),
              (t.style.left = Ot(-this._previousScrollPosition.left)),
              (t.style.top = Ot(-this._previousScrollPosition.top)),
              t.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const t = this._document.documentElement,
              i = t.style,
              r = this._document.body.style,
              s = i.scrollBehavior || "",
              o = r.scrollBehavior || "";
            (this._isEnabled = !1),
              (i.left = this._previousHTMLStyles.left),
              (i.top = this._previousHTMLStyles.top),
              t.classList.remove("cdk-global-scrollblock"),
              wI && (i.scrollBehavior = r.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              wI && ((i.scrollBehavior = s), (r.scrollBehavior = o));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            i = this._viewportRuler.getViewportSize();
          return e.scrollHeight > i.height || e.scrollWidth > i.width;
        }
      }
      class G9 {
        constructor(t, e, i, r) {
          (this._scrollDispatcher = t),
            (this._ngZone = e),
            (this._viewportRuler = i),
            (this._config = r),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          if (this._scrollSubscription) return;
          const t = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = t.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = t.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class MI {
        enable() {}
        disable() {}
        attach() {}
      }
      function Nv(n, t) {
        return t.some(
          (e) =>
            n.bottom < e.top ||
            n.top > e.bottom ||
            n.right < e.left ||
            n.left > e.right
        );
      }
      function DI(n, t) {
        return t.some(
          (e) =>
            n.top < e.top ||
            n.bottom > e.bottom ||
            n.left < e.left ||
            n.right > e.right
        );
      }
      class Y9 {
        constructor(t, e, i, r) {
          (this._scrollDispatcher = t),
            (this._viewportRuler = e),
            (this._ngZone = i),
            (this._config = r),
            (this._scrollSubscription = null);
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: i, height: r } =
                      this._viewportRuler.getViewportSize();
                  Nv(e, [
                    {
                      width: i,
                      height: r,
                      bottom: r,
                      right: i,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let K9 = (() => {
        class n {
          constructor(e, i, r, s) {
            (this._scrollDispatcher = e),
              (this._viewportRuler = i),
              (this._ngZone = r),
              (this.noop = () => new MI()),
              (this.close = (o) =>
                new G9(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  o
                )),
              (this.block = () => new W9(this._viewportRuler, this._document)),
              (this.reposition = (o) =>
                new Y9(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  o
                )),
              (this._document = s);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(x(Wc), x(Sf), x(Q), x(ae));
          }),
          (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      class kf {
        constructor(t) {
          if (
            ((this.scrollStrategy = new MI()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            t)
          ) {
            const e = Object.keys(t);
            for (const i of e) void 0 !== t[i] && (this[i] = t[i]);
          }
        }
      }
      class X9 {
        constructor(t, e) {
          (this.connectionPair = t), (this.scrollableViewProperties = e);
        }
      }
      let xI = (() => {
          class n {
            constructor(e) {
              (this._attachedOverlays = []), (this._document = e);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(e) {
              this.remove(e), this._attachedOverlays.push(e);
            }
            remove(e) {
              const i = this._attachedOverlays.indexOf(e);
              i > -1 && this._attachedOverlays.splice(i, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(ae));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Z9 = (() => {
          class n extends xI {
            constructor(e, i) {
              super(e),
                (this._ngZone = i),
                (this._keydownListener = (r) => {
                  const s = this._attachedOverlays;
                  for (let o = s.length - 1; o > -1; o--)
                    if (s[o]._keydownEvents.observers.length > 0) {
                      const a = s[o]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => a.next(r))
                        : a.next(r);
                      break;
                    }
                });
            }
            add(e) {
              super.add(e),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          "keydown",
                          this._keydownListener
                        )
                      )
                    : this._document.body.addEventListener(
                        "keydown",
                        this._keydownListener
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  "keydown",
                  this._keydownListener
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(ae), x(Q, 8));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Q9 = (() => {
          class n extends xI {
            constructor(e, i, r) {
              super(e),
                (this._platform = i),
                (this._ngZone = r),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = (s) => {
                  this._pointerDownEventTarget = oo(s);
                }),
                (this._clickListener = (s) => {
                  const o = oo(s),
                    a =
                      "click" === s.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : o;
                  this._pointerDownEventTarget = null;
                  const l = this._attachedOverlays.slice();
                  for (let c = l.length - 1; c > -1; c--) {
                    const u = l[c];
                    if (
                      u._outsidePointerEvents.observers.length < 1 ||
                      !u.hasAttached()
                    )
                      continue;
                    if (
                      u.overlayElement.contains(o) ||
                      u.overlayElement.contains(a)
                    )
                      break;
                    const d = u._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => d.next(s))
                      : d.next(s);
                  }
                });
            }
            add(e) {
              if ((super.add(e), !this._isAttached)) {
                const i = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(i)
                    )
                  : this._addEventListeners(i),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = i.style.cursor),
                    (i.style.cursor = "pointer"),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const e = this._document.body;
                e.removeEventListener(
                  "pointerdown",
                  this._pointerDownListener,
                  !0
                ),
                  e.removeEventListener("click", this._clickListener, !0),
                  e.removeEventListener("auxclick", this._clickListener, !0),
                  e.removeEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((e.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(e) {
              e.addEventListener("pointerdown", this._pointerDownListener, !0),
                e.addEventListener("click", this._clickListener, !0),
                e.addEventListener("auxclick", this._clickListener, !0),
                e.addEventListener("contextmenu", this._clickListener, !0);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(ae), x(jt), x(Q, 8));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        If = (() => {
          class n {
            constructor(e, i) {
              (this._platform = i), (this._document = e);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const e = "cdk-overlay-container";
              if (this._platform.isBrowser || ky()) {
                const r = this._document.querySelectorAll(
                  `.${e}[platform="server"], .${e}[platform="test"]`
                );
                for (let s = 0; s < r.length; s++) r[s].remove();
              }
              const i = this._document.createElement("div");
              i.classList.add(e),
                ky()
                  ? i.setAttribute("platform", "test")
                  : this._platform.isBrowser ||
                    i.setAttribute("platform", "server"),
                this._document.body.appendChild(i),
                (this._containerElement = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(ae), x(jt));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      class Xc {
        constructor(t, e, i, r, s, o, a, l, c, u = !1) {
          (this._portalOutlet = t),
            (this._host = e),
            (this._pane = i),
            (this._config = r),
            (this._ngZone = s),
            (this._keyboardDispatcher = o),
            (this._document = a),
            (this._location = l),
            (this._outsideClickDispatcher = c),
            (this._animationsDisabled = u),
            (this._backdropElement = null),
            (this._backdropClick = new $()),
            (this._attachments = new $()),
            (this._detachments = new $()),
            (this._locationChanges = bt.EMPTY),
            (this._backdropClickHandler = (d) => this._backdropClick.next(d)),
            (this._backdropTransitionendHandler = (d) => {
              this._disposeBackdrop(d.target);
            }),
            (this._keydownEvents = new $()),
            (this._outsidePointerEvents = new $()),
            r.scrollStrategy &&
              ((this._scrollStrategy = r.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = r.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(t) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const e = this._portalOutlet.attach(t);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(Vt(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const t = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            t
          );
        }
        dispose() {
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(t) {
          t !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = t),
            this.hasAttached() && (t.attach(this), this.updatePosition()));
        }
        updateSize(t) {
          (this._config = { ...this._config, ...t }), this._updateElementSize();
        }
        setDirection(t) {
          (this._config = { ...this._config, direction: t }),
            this._updateElementDirection();
        }
        addPanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !0);
        }
        removePanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !1);
        }
        getDirection() {
          const t = this._config.direction;
          return t ? ("string" == typeof t ? t : t.value) : "ltr";
        }
        updateScrollStrategy(t) {
          t !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = t),
            this.hasAttached() && (t.attach(this), t.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const t = this._pane.style;
          (t.width = Ot(this._config.width)),
            (t.height = Ot(this._config.height)),
            (t.minWidth = Ot(this._config.minWidth)),
            (t.minHeight = Ot(this._config.minHeight)),
            (t.maxWidth = Ot(this._config.maxWidth)),
            (t.maxHeight = Ot(this._config.maxHeight));
        }
        _togglePointerEvents(t) {
          this._pane.style.pointerEvents = t ? "" : "none";
        }
        _attachBackdrop() {
          const t = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                "cdk-overlay-backdrop-noop-animation"
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < "u"
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(t);
                  });
                })
              : this._backdropElement.classList.add(t);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const t = this._backdropElement;
          if (t) {
            if (this._animationsDisabled) return void this._disposeBackdrop(t);
            t.classList.remove("cdk-overlay-backdrop-showing"),
              this._ngZone.runOutsideAngular(() => {
                t.addEventListener(
                  "transitionend",
                  this._backdropTransitionendHandler
                );
              }),
              (t.style.pointerEvents = "none"),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(t);
                }, 500)
              ));
          }
        }
        _toggleClasses(t, e, i) {
          const r = Fh(e || []).filter((s) => !!s);
          r.length && (i ? t.classList.add(...r) : t.classList.remove(...r));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const t = this._ngZone.onStable
              .pipe(_e(Xr(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  t.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const t = this._scrollStrategy;
          t && (t.disable(), t.detach && t.detach());
        }
        _disposeBackdrop(t) {
          t &&
            (t.removeEventListener("click", this._backdropClickHandler),
            t.removeEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            ),
            t.remove(),
            this._backdropElement === t && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const EI = "cdk-overlay-connected-position-bounding-box",
        J9 = /([A-Za-z%]+)$/;
      class eK {
        constructor(t, e, i, r, s) {
          (this._viewportRuler = e),
            (this._document = i),
            (this._platform = r),
            (this._overlayContainer = s),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new $()),
            (this._resizeSubscription = bt.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(t);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          this._validatePositions(),
            t.hostElement.classList.add(EI),
            (this._overlayRef = t),
            (this._boundingBox = t.hostElement),
            (this._pane = t.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const t = this._originRect,
            e = this._overlayRect,
            i = this._viewportRect,
            r = this._containerRect,
            s = [];
          let o;
          for (let a of this._preferredPositions) {
            let l = this._getOriginPoint(t, r, a),
              c = this._getOverlayPoint(l, e, a),
              u = this._getOverlayFit(c, e, i, a);
            if (u.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(a, l);
            this._canFitWithFlexibleDimensions(u, c, i)
              ? s.push({
                  position: a,
                  origin: l,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(l, a),
                })
              : (!o || o.overlayFit.visibleArea < u.visibleArea) &&
                (o = {
                  overlayFit: u,
                  overlayPoint: c,
                  originPoint: l,
                  position: a,
                  overlayRect: e,
                });
          }
          if (s.length) {
            let a = null,
              l = -1;
            for (const c of s) {
              const u =
                c.boundingBoxRect.width *
                c.boundingBoxRect.height *
                (c.position.weight || 1);
              u > l && ((l = u), (a = c));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(a.position, a.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(o.position, o.originPoint)
            );
          this._applyPosition(o.position, o.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              wo(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(EI),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const t = this._lastPosition;
          if (t) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const e = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              t
            );
            this._applyPosition(t, e);
          } else this.apply();
        }
        withScrollableContainers(t) {
          return (this._scrollables = t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t),
            -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(t) {
          return (this._viewportMargin = t), this;
        }
        withFlexibleDimensions(t = !0) {
          return (this._hasFlexibleDimensions = t), this;
        }
        withGrowAfterOpen(t = !0) {
          return (this._growAfterOpen = t), this;
        }
        withPush(t = !0) {
          return (this._canPush = t), this;
        }
        withLockedPosition(t = !0) {
          return (this._positionLocked = t), this;
        }
        setOrigin(t) {
          return (this._origin = t), this;
        }
        withDefaultOffsetX(t) {
          return (this._offsetX = t), this;
        }
        withDefaultOffsetY(t) {
          return (this._offsetY = t), this;
        }
        withTransformOriginOn(t) {
          return (this._transformOriginSelector = t), this;
        }
        _getOriginPoint(t, e, i) {
          let r, s;
          if ("center" == i.originX) r = t.left + t.width / 2;
          else {
            const o = this._isRtl() ? t.right : t.left,
              a = this._isRtl() ? t.left : t.right;
            r = "start" == i.originX ? o : a;
          }
          return (
            e.left < 0 && (r -= e.left),
            (s =
              "center" == i.originY
                ? t.top + t.height / 2
                : "top" == i.originY
                ? t.top
                : t.bottom),
            e.top < 0 && (s -= e.top),
            { x: r, y: s }
          );
        }
        _getOverlayPoint(t, e, i) {
          let r, s;
          return (
            (r =
              "center" == i.overlayX
                ? -e.width / 2
                : "start" === i.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (s =
              "center" == i.overlayY
                ? -e.height / 2
                : "top" == i.overlayY
                ? 0
                : -e.height),
            { x: t.x + r, y: t.y + s }
          );
        }
        _getOverlayFit(t, e, i, r) {
          const s = TI(e);
          let { x: o, y: a } = t,
            l = this._getOffset(r, "x"),
            c = this._getOffset(r, "y");
          l && (o += l), c && (a += c);
          let h = 0 - a,
            f = a + s.height - i.height,
            p = this._subtractOverflows(s.width, 0 - o, o + s.width - i.width),
            m = this._subtractOverflows(s.height, h, f),
            _ = p * m;
          return {
            visibleArea: _,
            isCompletelyWithinViewport: s.width * s.height === _,
            fitsInViewportVertically: m === s.height,
            fitsInViewportHorizontally: p == s.width,
          };
        }
        _canFitWithFlexibleDimensions(t, e, i) {
          if (this._hasFlexibleDimensions) {
            const r = i.bottom - e.y,
              s = i.right - e.x,
              o = SI(this._overlayRef.getConfig().minHeight),
              a = SI(this._overlayRef.getConfig().minWidth),
              c = t.fitsInViewportHorizontally || (null != a && a <= s);
            return (t.fitsInViewportVertically || (null != o && o <= r)) && c;
          }
          return !1;
        }
        _pushOverlayOnScreen(t, e, i) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: t.x + this._previousPushAmount.x,
              y: t.y + this._previousPushAmount.y,
            };
          const r = TI(e),
            s = this._viewportRect,
            o = Math.max(t.x + r.width - s.width, 0),
            a = Math.max(t.y + r.height - s.height, 0),
            l = Math.max(s.top - i.top - t.y, 0),
            c = Math.max(s.left - i.left - t.x, 0);
          let u = 0,
            d = 0;
          return (
            (u =
              r.width <= s.width
                ? c || -o
                : t.x < this._viewportMargin
                ? s.left - i.left - t.x
                : 0),
            (d =
              r.height <= s.height
                ? l || -a
                : t.y < this._viewportMargin
                ? s.top - i.top - t.y
                : 0),
            (this._previousPushAmount = { x: u, y: d }),
            { x: t.x + u, y: t.y + d }
          );
        }
        _applyPosition(t, e) {
          if (
            (this._setTransformOrigin(t),
            this._setOverlayElementStyles(e, t),
            this._setBoundingBoxStyles(e, t),
            t.panelClass && this._addPanelClasses(t.panelClass),
            (this._lastPosition = t),
            this._positionChanges.observers.length)
          ) {
            const i = this._getScrollVisibility(),
              r = new X9(t, i);
            this._positionChanges.next(r);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(t) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let i,
            r = t.overlayY;
          i =
            "center" === t.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === t.overlayX
                ? "right"
                : "left"
              : "start" === t.overlayX
              ? "left"
              : "right";
          for (let s = 0; s < e.length; s++)
            e[s].style.transformOrigin = `${i} ${r}`;
        }
        _calculateBoundingBoxRect(t, e) {
          const i = this._viewportRect,
            r = this._isRtl();
          let s, o, a, u, d, h;
          if ("top" === e.overlayY)
            (o = t.y), (s = i.height - o + this._viewportMargin);
          else if ("bottom" === e.overlayY)
            (a = i.height - t.y + 2 * this._viewportMargin),
              (s = i.height - a + this._viewportMargin);
          else {
            const f = Math.min(i.bottom - t.y + i.top, t.y),
              p = this._lastBoundingBoxSize.height;
            (s = 2 * f),
              (o = t.y - f),
              s > p &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (o = t.y - p / 2);
          }
          if (("end" === e.overlayX && !r) || ("start" === e.overlayX && r))
            (h = i.width - t.x + this._viewportMargin),
              (u = t.x - this._viewportMargin);
          else if (
            ("start" === e.overlayX && !r) ||
            ("end" === e.overlayX && r)
          )
            (d = t.x), (u = i.right - t.x);
          else {
            const f = Math.min(i.right - t.x + i.left, t.x),
              p = this._lastBoundingBoxSize.width;
            (u = 2 * f),
              (d = t.x - f),
              u > p &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (d = t.x - p / 2);
          }
          return { top: o, left: d, bottom: a, right: h, width: u, height: s };
        }
        _setBoundingBoxStyles(t, e) {
          const i = this._calculateBoundingBoxRect(t, e);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
            (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
          const r = {};
          if (this._hasExactPosition())
            (r.top = r.left = "0"),
              (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
              (r.width = r.height = "100%");
          else {
            const s = this._overlayRef.getConfig().maxHeight,
              o = this._overlayRef.getConfig().maxWidth;
            (r.height = Ot(i.height)),
              (r.top = Ot(i.top)),
              (r.bottom = Ot(i.bottom)),
              (r.width = Ot(i.width)),
              (r.left = Ot(i.left)),
              (r.right = Ot(i.right)),
              (r.alignItems =
                "center" === e.overlayX
                  ? "center"
                  : "end" === e.overlayX
                  ? "flex-end"
                  : "flex-start"),
              (r.justifyContent =
                "center" === e.overlayY
                  ? "center"
                  : "bottom" === e.overlayY
                  ? "flex-end"
                  : "flex-start"),
              s && (r.maxHeight = Ot(s)),
              o && (r.maxWidth = Ot(o));
          }
          (this._lastBoundingBoxSize = i), wo(this._boundingBox.style, r);
        }
        _resetBoundingBoxStyles() {
          wo(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          wo(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(t, e) {
          const i = {},
            r = this._hasExactPosition(),
            s = this._hasFlexibleDimensions,
            o = this._overlayRef.getConfig();
          if (r) {
            const u = this._viewportRuler.getViewportScrollPosition();
            wo(i, this._getExactOverlayY(e, t, u)),
              wo(i, this._getExactOverlayX(e, t, u));
          } else i.position = "static";
          let a = "",
            l = this._getOffset(e, "x"),
            c = this._getOffset(e, "y");
          l && (a += `translateX(${l}px) `),
            c && (a += `translateY(${c}px)`),
            (i.transform = a.trim()),
            o.maxHeight &&
              (r ? (i.maxHeight = Ot(o.maxHeight)) : s && (i.maxHeight = "")),
            o.maxWidth &&
              (r ? (i.maxWidth = Ot(o.maxWidth)) : s && (i.maxWidth = "")),
            wo(this._pane.style, i);
        }
        _getExactOverlayY(t, e, i) {
          let r = { top: "", bottom: "" },
            s = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (s = this._pushOverlayOnScreen(s, this._overlayRect, i)),
            "bottom" === t.overlayY
              ? (r.bottom =
                  this._document.documentElement.clientHeight -
                  (s.y + this._overlayRect.height) +
                  "px")
              : (r.top = Ot(s.y)),
            r
          );
        }
        _getExactOverlayX(t, e, i) {
          let o,
            r = { left: "", right: "" },
            s = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (s = this._pushOverlayOnScreen(s, this._overlayRect, i)),
            (o = this._isRtl()
              ? "end" === t.overlayX
                ? "left"
                : "right"
              : "end" === t.overlayX
              ? "right"
              : "left"),
            "right" === o
              ? (r.right =
                  this._document.documentElement.clientWidth -
                  (s.x + this._overlayRect.width) +
                  "px")
              : (r.left = Ot(s.x)),
            r
          );
        }
        _getScrollVisibility() {
          const t = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            i = this._scrollables.map((r) =>
              r.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: DI(t, i),
            isOriginOutsideView: Nv(t, i),
            isOverlayClipped: DI(e, i),
            isOverlayOutsideView: Nv(e, i),
          };
        }
        _subtractOverflows(t, ...e) {
          return e.reduce((i, r) => i - Math.max(r, 0), t);
        }
        _getNarrowedViewportRect() {
          const t = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            i = this._viewportRuler.getViewportScrollPosition();
          return {
            top: i.top + this._viewportMargin,
            left: i.left + this._viewportMargin,
            right: i.left + t - this._viewportMargin,
            bottom: i.top + e - this._viewportMargin,
            width: t - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(t, e) {
          return "x" === e
            ? t.offsetX ?? this._offsetX
            : t.offsetY ?? this._offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(t) {
          this._pane &&
            Fh(t).forEach((e) => {
              "" !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((t) => {
              this._pane.classList.remove(t);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const t = this._origin;
          if (t instanceof ce) return t.nativeElement.getBoundingClientRect();
          if (t instanceof Element) return t.getBoundingClientRect();
          const e = t.width || 0,
            i = t.height || 0;
          return {
            top: t.y,
            bottom: t.y + i,
            left: t.x,
            right: t.x + e,
            height: i,
            width: e,
          };
        }
      }
      function wo(n, t) {
        for (let e in t) t.hasOwnProperty(e) && (n[e] = t[e]);
        return n;
      }
      function SI(n) {
        if ("number" != typeof n && null != n) {
          const [t, e] = n.split(J9);
          return e && "px" !== e ? null : parseFloat(t);
        }
        return n || null;
      }
      function TI(n) {
        return {
          top: Math.floor(n.top),
          right: Math.floor(n.right),
          bottom: Math.floor(n.bottom),
          left: Math.floor(n.left),
          width: Math.floor(n.width),
          height: Math.floor(n.height),
        };
      }
      const AI = "cdk-global-overlay-wrapper";
      class tK {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._alignItems = ""),
            (this._xPosition = ""),
            (this._xOffset = ""),
            (this._width = ""),
            (this._height = ""),
            (this._isDisposed = !1);
        }
        attach(t) {
          const e = t.getConfig();
          (this._overlayRef = t),
            this._width && !e.width && t.updateSize({ width: this._width }),
            this._height && !e.height && t.updateSize({ height: this._height }),
            t.hostElement.classList.add(AI),
            (this._isDisposed = !1);
        }
        top(t = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = t),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(t = "") {
          return (this._xOffset = t), (this._xPosition = "left"), this;
        }
        bottom(t = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = t),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(t = "") {
          return (this._xOffset = t), (this._xPosition = "right"), this;
        }
        start(t = "") {
          return (this._xOffset = t), (this._xPosition = "start"), this;
        }
        end(t = "") {
          return (this._xOffset = t), (this._xPosition = "end"), this;
        }
        width(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: t })
              : (this._width = t),
            this
          );
        }
        height(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: t })
              : (this._height = t),
            this
          );
        }
        centerHorizontally(t = "") {
          return this.left(t), (this._xPosition = "center"), this;
        }
        centerVertically(t = "") {
          return this.top(t), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            i = this._overlayRef.getConfig(),
            { width: r, height: s, maxWidth: o, maxHeight: a } = i,
            l = !(
              ("100%" !== r && "100vw" !== r) ||
              (o && "100%" !== o && "100vw" !== o)
            ),
            c = !(
              ("100%" !== s && "100vh" !== s) ||
              (a && "100%" !== a && "100vh" !== a)
            ),
            u = this._xPosition,
            d = this._xOffset,
            h = "rtl" === this._overlayRef.getConfig().direction;
          let f = "",
            p = "",
            m = "";
          l
            ? (m = "flex-start")
            : "center" === u
            ? ((m = "center"), h ? (p = d) : (f = d))
            : h
            ? "left" === u || "end" === u
              ? ((m = "flex-end"), (f = d))
              : ("right" === u || "start" === u) &&
                ((m = "flex-start"), (p = d))
            : "left" === u || "start" === u
            ? ((m = "flex-start"), (f = d))
            : ("right" === u || "end" === u) && ((m = "flex-end"), (p = d)),
            (t.position = this._cssPosition),
            (t.marginLeft = l ? "0" : f),
            (t.marginTop = c ? "0" : this._topOffset),
            (t.marginBottom = this._bottomOffset),
            (t.marginRight = l ? "0" : p),
            (e.justifyContent = m),
            (e.alignItems = c ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            i = e.style;
          e.classList.remove(AI),
            (i.justifyContent =
              i.alignItems =
              t.marginTop =
              t.marginBottom =
              t.marginLeft =
              t.marginRight =
              t.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let nK = (() => {
          class n {
            constructor(e, i, r, s) {
              (this._viewportRuler = e),
                (this._document = i),
                (this._platform = r),
                (this._overlayContainer = s);
            }
            global() {
              return new tK();
            }
            flexibleConnectedTo(e) {
              return new eK(
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Sf), x(ae), x(jt), x(If));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        iK = 0,
        Kn = (() => {
          class n {
            constructor(e, i, r, s, o, a, l, c, u, d, h, f) {
              (this.scrollStrategies = e),
                (this._overlayContainer = i),
                (this._componentFactoryResolver = r),
                (this._positionBuilder = s),
                (this._keyboardDispatcher = o),
                (this._injector = a),
                (this._ngZone = l),
                (this._document = c),
                (this._directionality = u),
                (this._location = d),
                (this._outsideClickDispatcher = h),
                (this._animationsModuleType = f);
            }
            create(e) {
              const i = this._createHostElement(),
                r = this._createPaneElement(i),
                s = this._createPortalOutlet(r),
                o = new kf(e);
              return (
                (o.direction = o.direction || this._directionality.value),
                new Xc(
                  s,
                  i,
                  r,
                  o,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  "NoopAnimations" === this._animationsModuleType
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(e) {
              const i = this._document.createElement("div");
              return (
                (i.id = "cdk-overlay-" + iK++),
                i.classList.add("cdk-overlay-pane"),
                e.appendChild(i),
                i
              );
            }
            _createHostElement() {
              const e = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(e), e
              );
            }
            _createPortalOutlet(e) {
              return (
                this._appRef || (this._appRef = this._injector.get(ya)),
                new q9(
                  e,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                x(K9),
                x(If),
                x(Ls),
                x(nK),
                x(Z9),
                x(lt),
                x(Q),
                x(ae),
                x(rr),
                x(Bl),
                x(Q9),
                x(Hn, 8)
              );
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      const rK = [
          {
            originX: "start",
            originY: "bottom",
            overlayX: "start",
            overlayY: "top",
          },
          {
            originX: "start",
            originY: "top",
            overlayX: "start",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "top",
            overlayX: "end",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "bottom",
            overlayX: "end",
            overlayY: "top",
          },
        ],
        kI = new R("cdk-connected-overlay-scroll-strategy");
      let II = (() => {
          class n {
            constructor(e) {
              this.elementRef = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(ce));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["", "cdk-overlay-origin", ""],
                ["", "overlay-origin", ""],
                ["", "cdkOverlayOrigin", ""],
              ],
              exportAs: ["cdkOverlayOrigin"],
            })),
            n
          );
        })(),
        OI = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this._overlay = e),
                (this._dir = o),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = bt.EMPTY),
                (this._attachSubscription = bt.EMPTY),
                (this._detachSubscription = bt.EMPTY),
                (this._positionSubscription = bt.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new fe()),
                (this.positionChange = new fe()),
                (this.attach = new fe()),
                (this.detach = new fe()),
                (this.overlayKeydown = new fe()),
                (this.overlayOutsideClick = new fe()),
                (this._templatePortal = new Tf(i, r)),
                (this._scrollStrategyFactory = s),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(e) {
              (this._offsetX = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(e) {
              (this._offsetY = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(e) {
              this._hasBackdrop = ke(e);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(e) {
              this._lockPosition = ke(e);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(e) {
              this._flexibleDimensions = ke(e);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(e) {
              this._growAfterOpen = ke(e);
            }
            get push() {
              return this._push;
            }
            set push(e) {
              this._push = ke(e);
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : "ltr";
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(e) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                e.origin && this.open && this._position.apply()),
                e.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = rK);
              const e = (this._overlayRef = this._overlay.create(
                this._buildConfig()
              ));
              (this._attachSubscription = e
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = e
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                e.keydownEvents().subscribe((i) => {
                  this.overlayKeydown.next(i),
                    27 === i.keyCode &&
                      !this.disableClose &&
                      !Si(i) &&
                      (i.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe((i) => {
                  this.overlayOutsideClick.next(i);
                });
            }
            _buildConfig() {
              const e = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                i = new kf({
                  direction: this._dir,
                  positionStrategy: e,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (i.width = this.width),
                (this.height || 0 === this.height) && (i.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (i.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (i.minHeight = this.minHeight),
                this.backdropClass && (i.backdropClass = this.backdropClass),
                this.panelClass && (i.panelClass = this.panelClass),
                i
              );
            }
            _updatePositionStrategy(e) {
              const i = this.positions.map((r) => ({
                originX: r.originX,
                originY: r.originY,
                overlayX: r.overlayX,
                overlayY: r.overlayY,
                offsetX: r.offsetX || this.offsetX,
                offsetY: r.offsetY || this.offsetY,
                panelClass: r.panelClass || void 0,
              }));
              return e
                .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())
                .withPositions(i)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const e = this._overlay
                .position()
                .flexibleConnectedTo(
                  this._getFlexibleConnectedPositionStrategyOrigin()
                );
              return this._updatePositionStrategy(e), e;
            }
            _getFlexibleConnectedPositionStrategyOrigin() {
              return this.origin instanceof II
                ? this.origin.elementRef
                : this.origin;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe((e) => {
                        this.backdropClick.emit(e);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(KS(() => this.positionChange.observers.length > 0))
                    .subscribe((e) => {
                      this.positionChange.emit(e),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Kn), g(jn), g(en), g(kI), g(rr, 8));
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["", "cdk-connected-overlay", ""],
                ["", "connected-overlay", ""],
                ["", "cdkConnectedOverlay", ""],
              ],
              inputs: {
                origin: ["cdkConnectedOverlayOrigin", "origin"],
                positions: ["cdkConnectedOverlayPositions", "positions"],
                positionStrategy: [
                  "cdkConnectedOverlayPositionStrategy",
                  "positionStrategy",
                ],
                offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
                offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
                width: ["cdkConnectedOverlayWidth", "width"],
                height: ["cdkConnectedOverlayHeight", "height"],
                minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
                minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
                backdropClass: [
                  "cdkConnectedOverlayBackdropClass",
                  "backdropClass",
                ],
                panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
                viewportMargin: [
                  "cdkConnectedOverlayViewportMargin",
                  "viewportMargin",
                ],
                scrollStrategy: [
                  "cdkConnectedOverlayScrollStrategy",
                  "scrollStrategy",
                ],
                open: ["cdkConnectedOverlayOpen", "open"],
                disableClose: [
                  "cdkConnectedOverlayDisableClose",
                  "disableClose",
                ],
                transformOriginSelector: [
                  "cdkConnectedOverlayTransformOriginOn",
                  "transformOriginSelector",
                ],
                hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
                lockPosition: [
                  "cdkConnectedOverlayLockPosition",
                  "lockPosition",
                ],
                flexibleDimensions: [
                  "cdkConnectedOverlayFlexibleDimensions",
                  "flexibleDimensions",
                ],
                growAfterOpen: [
                  "cdkConnectedOverlayGrowAfterOpen",
                  "growAfterOpen",
                ],
                push: ["cdkConnectedOverlayPush", "push"],
              },
              outputs: {
                backdropClick: "backdropClick",
                positionChange: "positionChange",
                attach: "attach",
                detach: "detach",
                overlayKeydown: "overlayKeydown",
                overlayOutsideClick: "overlayOutsideClick",
              },
              exportAs: ["cdkConnectedOverlay"],
              features: [Gt],
            })),
            n
          );
        })();
      const oK = {
        provide: kI,
        deps: [Kn],
        useFactory: function sK(n) {
          return () => n.scrollStrategies.reposition();
        },
      };
      let ja = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = re({ type: n })),
          (n.ɵinj = ne({ providers: [Kn, oK], imports: [vc, Kc, CI, CI] })),
          n
        );
      })();
      function aK(n, t) {}
      class Of {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0),
            (this.closeOnDestroy = !0);
        }
      }
      let RI = (() => {
        class n extends Af {
          constructor(e, i, r, s, o, a, l, c) {
            super(),
              (this._elementRef = e),
              (this._focusTrapFactory = i),
              (this._config = s),
              (this._interactivityChecker = o),
              (this._ngZone = a),
              (this._overlayRef = l),
              (this._focusMonitor = c),
              (this._elementFocusedBeforeDialogWasOpened = null),
              (this._closeInteractionType = null),
              (this.attachDomPortal = (u) => {
                this._portalOutlet.hasAttached();
                const d = this._portalOutlet.attachDomPortal(u);
                return this._contentAttached(), d;
              }),
              (this._ariaLabelledBy = this._config.ariaLabelledBy || null),
              (this._document = r);
          }
          _contentAttached() {
            this._initializeFocusTrap(),
              this._handleBackdropClicks(),
              this._captureInitialFocus();
          }
          _captureInitialFocus() {
            this._trapFocus();
          }
          ngOnDestroy() {
            this._restoreFocus();
          }
          attachComponentPortal(e) {
            this._portalOutlet.hasAttached();
            const i = this._portalOutlet.attachComponentPortal(e);
            return this._contentAttached(), i;
          }
          attachTemplatePortal(e) {
            this._portalOutlet.hasAttached();
            const i = this._portalOutlet.attachTemplatePortal(e);
            return this._contentAttached(), i;
          }
          _recaptureFocus() {
            this._containsFocus() || this._trapFocus();
          }
          _forceFocus(e, i) {
            this._interactivityChecker.isFocusable(e) ||
              ((e.tabIndex = -1),
              this._ngZone.runOutsideAngular(() => {
                const r = () => {
                  e.removeEventListener("blur", r),
                    e.removeEventListener("mousedown", r),
                    e.removeAttribute("tabindex");
                };
                e.addEventListener("blur", r),
                  e.addEventListener("mousedown", r);
              })),
              e.focus(i);
          }
          _focusByCssSelector(e, i) {
            let r = this._elementRef.nativeElement.querySelector(e);
            r && this._forceFocus(r, i);
          }
          _trapFocus() {
            const e = this._elementRef.nativeElement;
            switch (this._config.autoFocus) {
              case !1:
              case "dialog":
                this._containsFocus() || e.focus();
                break;
              case !0:
              case "first-tabbable":
                this._focusTrap.focusInitialElementWhenReady().then((i) => {
                  i || this._focusDialogContainer();
                });
                break;
              case "first-heading":
                this._focusByCssSelector(
                  'h1, h2, h3, h4, h5, h6, [role="heading"]'
                );
                break;
              default:
                this._focusByCssSelector(this._config.autoFocus);
            }
          }
          _restoreFocus() {
            const e = this._config.restoreFocus;
            let i = null;
            if (
              ("string" == typeof e
                ? (i = this._document.querySelector(e))
                : "boolean" == typeof e
                ? (i = e ? this._elementFocusedBeforeDialogWasOpened : null)
                : e && (i = e),
              this._config.restoreFocus && i && "function" == typeof i.focus)
            ) {
              const r = Ay(),
                s = this._elementRef.nativeElement;
              (!r || r === this._document.body || r === s || s.contains(r)) &&
                (this._focusMonitor
                  ? (this._focusMonitor.focusVia(i, this._closeInteractionType),
                    (this._closeInteractionType = null))
                  : i.focus());
            }
            this._focusTrap && this._focusTrap.destroy();
          }
          _focusDialogContainer() {
            this._elementRef.nativeElement.focus &&
              this._elementRef.nativeElement.focus();
          }
          _containsFocus() {
            const e = this._elementRef.nativeElement,
              i = Ay();
            return e === i || e.contains(i);
          }
          _initializeFocusTrap() {
            (this._focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement
            )),
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = Ay());
          }
          _handleBackdropClicks() {
            this._overlayRef.backdropClick().subscribe(() => {
              this._config.disableClose && this._recaptureFocus();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              g(ce),
              g(Vh),
              g(ae, 8),
              g(Of),
              g(yc),
              g(Q),
              g(Xc),
              g(ys)
            );
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["cdk-dialog-container"]],
            viewQuery: function (e, i) {
              if ((1 & e && $t(Yc, 7), 2 & e)) {
                let r;
                se((r = oe())) && (i._portalOutlet = r.first);
              }
            },
            hostAttrs: ["tabindex", "-1", 1, "cdk-dialog-container"],
            hostVars: 6,
            hostBindings: function (e, i) {
              2 & e &&
                ze("id", i._config.id || null)("role", i._config.role)(
                  "aria-modal",
                  i._config.ariaModal
                )(
                  "aria-labelledby",
                  i._config.ariaLabel ? null : i._ariaLabelledBy
                )("aria-label", i._config.ariaLabel)(
                  "aria-describedby",
                  i._config.ariaDescribedBy || null
                );
            },
            features: [q],
            decls: 1,
            vars: 0,
            consts: [["cdkPortalOutlet", ""]],
            template: function (e, i) {
              1 & e && B(0, aK, 0, 0, "ng-template", 0);
            },
            dependencies: [Yc],
            styles: [
              ".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}",
            ],
            encapsulation: 2,
          })),
          n
        );
      })();
      class Zc {
        constructor(t, e) {
          (this.overlayRef = t),
            (this.config = e),
            (this.closed = new $()),
            (this.disableClose = e.disableClose),
            (this.backdropClick = t.backdropClick()),
            (this.keydownEvents = t.keydownEvents()),
            (this.outsidePointerEvents = t.outsidePointerEvents()),
            (this.id = e.id),
            this.keydownEvents.subscribe((i) => {
              27 === i.keyCode &&
                !this.disableClose &&
                !Si(i) &&
                (i.preventDefault(),
                this.close(void 0, { focusOrigin: "keyboard" }));
            }),
            this.backdropClick.subscribe(() => {
              this.disableClose || this.close(void 0, { focusOrigin: "mouse" });
            });
        }
        close(t, e) {
          if (this.containerInstance) {
            const i = this.closed;
            (this.containerInstance._closeInteractionType =
              e?.focusOrigin || "program"),
              this.overlayRef.dispose(),
              i.next(t),
              i.complete(),
              (this.componentInstance = this.containerInstance = null);
          }
        }
        updatePosition() {
          return this.overlayRef.updatePosition(), this;
        }
        updateSize(t = "", e = "") {
          return this.overlayRef.updateSize({ width: t, height: e }), this;
        }
        addPanelClass(t) {
          return this.overlayRef.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this.overlayRef.removePanelClass(t), this;
        }
      }
      const PI = new R("DialogScrollStrategy"),
        lK = new R("DialogData"),
        cK = new R("DefaultDialogConfig"),
        dK = {
          provide: PI,
          deps: [Kn],
          useFactory: function uK(n) {
            return () => n.scrollStrategies.block();
          },
        };
      let hK = 0,
        FI = (() => {
          class n {
            constructor(e, i, r, s, o, a) {
              (this._overlay = e),
                (this._injector = i),
                (this._defaultOptions = r),
                (this._parentDialog = s),
                (this._overlayContainer = o),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new $()),
                (this._afterOpenedAtThisLevel = new $()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = ec(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(qn(void 0))
                )),
                (this._scrollStrategy = a);
            }
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            open(e, i) {
              ((i = { ...(this._defaultOptions || new Of()), ...i }).id =
                i.id || "cdk-dialog-" + hK++),
                i.id && this.getDialogById(i.id);
              const s = this._getOverlayConfig(i),
                o = this._overlay.create(s),
                a = new Zc(o, i),
                l = this._attachContainer(o, a, i);
              return (
                (a.containerInstance = l),
                this._attachDialogContent(e, a, l, i),
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(a),
                a.closed.subscribe(() => this._removeOpenDialog(a, !0)),
                this.afterOpened.next(a),
                a
              );
            }
            closeAll() {
              Lv(this.openDialogs, (e) => e.close());
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              Lv(this._openDialogsAtThisLevel, (e) => {
                !1 === e.config.closeOnDestroy && this._removeOpenDialog(e, !1);
              }),
                Lv(this._openDialogsAtThisLevel, (e) => e.close()),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                (this._openDialogsAtThisLevel = []);
            }
            _getOverlayConfig(e) {
              const i = new kf({
                positionStrategy:
                  e.positionStrategy ||
                  this._overlay
                    .position()
                    .global()
                    .centerHorizontally()
                    .centerVertically(),
                scrollStrategy: e.scrollStrategy || this._scrollStrategy(),
                panelClass: e.panelClass,
                hasBackdrop: e.hasBackdrop,
                direction: e.direction,
                minWidth: e.minWidth,
                minHeight: e.minHeight,
                maxWidth: e.maxWidth,
                maxHeight: e.maxHeight,
                width: e.width,
                height: e.height,
                disposeOnNavigation: e.closeOnNavigation,
              });
              return e.backdropClass && (i.backdropClass = e.backdropClass), i;
            }
            _attachContainer(e, i, r) {
              const s = r.injector ?? r.viewContainerRef?.injector,
                o = [
                  { provide: Of, useValue: r },
                  { provide: Zc, useValue: i },
                  { provide: Xc, useValue: e },
                ];
              let a;
              r.container
                ? "function" == typeof r.container
                  ? (a = r.container)
                  : ((a = r.container.type),
                    o.push(...r.container.providers(r)))
                : (a = RI);
              const l = new Va(
                a,
                r.viewContainerRef,
                lt.create({ parent: s || this._injector, providers: o }),
                r.componentFactoryResolver
              );
              return e.attach(l).instance;
            }
            _attachDialogContent(e, i, r, s) {
              const o = this._createInjector(s, i, r);
              if (e instanceof jn) {
                let a = { $implicit: s.data, dialogRef: i };
                s.templateContext &&
                  (a = {
                    ...a,
                    ...("function" == typeof s.templateContext
                      ? s.templateContext()
                      : s.templateContext),
                  }),
                  r.attachTemplatePortal(new Tf(e, null, a, o));
              } else {
                const a = r.attachComponentPortal(
                  new Va(e, s.viewContainerRef, o, s.componentFactoryResolver)
                );
                i.componentInstance = a.instance;
              }
            }
            _createInjector(e, i, r) {
              const s = e && e.viewContainerRef && e.viewContainerRef.injector,
                o = [
                  { provide: lK, useValue: e.data },
                  { provide: Zc, useValue: i },
                ];
              return (
                e.providers &&
                  ("function" == typeof e.providers
                    ? o.push(...e.providers(i, e, r))
                    : o.push(...e.providers)),
                e.direction &&
                  (!s || !s.get(rr, null, K.Optional)) &&
                  o.push({
                    provide: rr,
                    useValue: { value: e.direction, change: W() },
                  }),
                lt.create({ parent: s || this._injector, providers: o })
              );
            }
            _removeOpenDialog(e, i) {
              const r = this.openDialogs.indexOf(e);
              r > -1 &&
                (this.openDialogs.splice(r, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((s, o) => {
                    s
                      ? o.setAttribute("aria-hidden", s)
                      : o.removeAttribute("aria-hidden");
                  }),
                  this._ariaHiddenElements.clear(),
                  i && this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const e = this._overlayContainer.getContainerElement();
              if (e.parentElement) {
                const i = e.parentElement.children;
                for (let r = i.length - 1; r > -1; r--) {
                  const s = i[r];
                  s !== e &&
                    "SCRIPT" !== s.nodeName &&
                    "STYLE" !== s.nodeName &&
                    !s.hasAttribute("aria-live") &&
                    (this._ariaHiddenElements.set(
                      s,
                      s.getAttribute("aria-hidden")
                    ),
                    s.setAttribute("aria-hidden", "true"));
                }
              }
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                x(Kn),
                x(lt),
                x(cK, 8),
                x(n, 12),
                x(If),
                x(PI)
              );
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      function Lv(n, t) {
        let e = n.length;
        for (; e--; ) t(n[e]);
      }
      let fK = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = re({ type: n })),
          (n.ɵinj = ne({ providers: [FI, dK], imports: [ja, Kc, LA, Kc] })),
          n
        );
      })();
      function pK(n, t) {}
      const Ha = {
          params: {
            enterAnimationDuration: "150ms",
            exitAnimationDuration: "75ms",
          },
        },
        mK = {
          dialogContainer: kr("dialogContainer", [
            xn("void, exit", Ke({ opacity: 0, transform: "scale(0.7)" })),
            xn("enter", Ke({ transform: "none" })),
            pn(
              "* => enter",
              Yx([
                Dn(
                  "{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)",
                  Ke({ transform: "none", opacity: 1 })
                ),
                t_("@*", e_(), { optional: !0 }),
              ]),
              Ha
            ),
            pn(
              "* => void, * => exit",
              Yx([
                Dn(
                  "{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)",
                  Ke({ opacity: 0 })
                ),
                t_("@*", e_(), { optional: !0 }),
              ]),
              Ha
            ),
          ]),
        };
      class Rf {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.maxWidth = "80vw"),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.delayFocusTrap = !0),
            (this.closeOnNavigation = !0),
            (this.enterAnimationDuration = Ha.params.enterAnimationDuration),
            (this.exitAnimationDuration = Ha.params.exitAnimationDuration);
        }
      }
      let gK = (() => {
          class n extends RI {
            constructor(e, i, r, s, o, a, l, c) {
              super(e, i, r, s, o, a, l, c),
                (this._animationStateChanged = new fe());
            }
            _captureInitialFocus() {
              this._config.delayFocusTrap || this._trapFocus();
            }
            _openAnimationDone(e) {
              this._config.delayFocusTrap && this._trapFocus(),
                this._animationStateChanged.next({
                  state: "opened",
                  totalTime: e,
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                g(ce),
                g(Vh),
                g(ae, 8),
                g(Rf),
                g(yc),
                g(Q),
                g(Xc),
                g(ys)
              );
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["ng-component"]],
              features: [q],
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              encapsulation: 2,
            })),
            n
          );
        })(),
        _K = (() => {
          class n extends gK {
            constructor(e, i, r, s, o, a, l, c, u) {
              super(e, i, r, s, o, a, l, u),
                (this._changeDetectorRef = c),
                (this._state = "enter");
            }
            _onAnimationDone({ toState: e, totalTime: i }) {
              "enter" === e
                ? this._openAnimationDone(i)
                : "exit" === e &&
                  this._animationStateChanged.next({
                    state: "closed",
                    totalTime: i,
                  });
            }
            _onAnimationStart({ toState: e, totalTime: i }) {
              "enter" === e
                ? this._animationStateChanged.next({
                    state: "opening",
                    totalTime: i,
                  })
                : ("exit" === e || "void" === e) &&
                  this._animationStateChanged.next({
                    state: "closing",
                    totalTime: i,
                  });
            }
            _startExitAnimation() {
              (this._state = "exit"), this._changeDetectorRef.markForCheck();
            }
            _getAnimationState() {
              return {
                value: this._state,
                params: {
                  enterAnimationDuration:
                    this._config.enterAnimationDuration ||
                    Ha.params.enterAnimationDuration,
                  exitAnimationDuration:
                    this._config.exitAnimationDuration ||
                    Ha.params.exitAnimationDuration,
                },
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                g(ce),
                g(Vh),
                g(ae, 8),
                g(Rf),
                g(yc),
                g(Q),
                g(Xc),
                g(Et),
                g(ys)
              );
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-dialog-container"]],
              hostAttrs: ["tabindex", "-1", 1, "mat-dialog-container"],
              hostVars: 7,
              hostBindings: function (e, i) {
                1 & e &&
                  El("@dialogContainer.start", function (s) {
                    return i._onAnimationStart(s);
                  })("@dialogContainer.done", function (s) {
                    return i._onAnimationDone(s);
                  }),
                  2 & e &&
                    (Tl("id", i._config.id),
                    ze("aria-modal", i._config.ariaModal)(
                      "role",
                      i._config.role
                    )(
                      "aria-labelledby",
                      i._config.ariaLabel ? null : i._ariaLabelledBy
                    )("aria-label", i._config.ariaLabel)(
                      "aria-describedby",
                      i._config.ariaDescribedBy || null
                    ),
                    Al("@dialogContainer", i._getAnimationState()));
              },
              features: [q],
              decls: 1,
              vars: 0,
              consts: [["cdkPortalOutlet", ""]],
              template: function (e, i) {
                1 & e && B(0, pK, 0, 0, "ng-template", 0);
              },
              dependencies: [Yc],
              styles: [
                ".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions.mat-dialog-actions-align-center,.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions.mat-dialog-actions-align-end,.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}",
              ],
              encapsulation: 2,
              data: { animation: [mK.dialogContainer] },
            })),
            n
          );
        })();
      class Bv {
        constructor(t, e, i) {
          (this._ref = t),
            (this._containerInstance = i),
            (this._afterOpened = new $()),
            (this._beforeClosed = new $()),
            (this._state = 0),
            (this.disableClose = e.disableClose),
            (this.id = t.id),
            i._animationStateChanged
              .pipe(
                ct((r) => "opened" === r.state),
                Vt(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            i._animationStateChanged
              .pipe(
                ct((r) => "closed" === r.state),
                Vt(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            t.overlayRef.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._finishDialogClose();
            }),
            Xr(
              this.backdropClick(),
              this.keydownEvents().pipe(
                ct((r) => 27 === r.keyCode && !this.disableClose && !Si(r))
              )
            ).subscribe((r) => {
              this.disableClose ||
                (r.preventDefault(),
                (function yK(n, t, e) {
                  (n._closeInteractionType = t), n.close(e);
                })(this, "keydown" === r.type ? "keyboard" : "mouse"));
            });
        }
        close(t) {
          (this._result = t),
            this._containerInstance._animationStateChanged
              .pipe(
                ct((e) => "closing" === e.state),
                Vt(1)
              )
              .subscribe((e) => {
                this._beforeClosed.next(t),
                  this._beforeClosed.complete(),
                  this._ref.overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    e.totalTime + 100
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._ref.closed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._ref.backdropClick;
        }
        keydownEvents() {
          return this._ref.keydownEvents;
        }
        updatePosition(t) {
          let e = this._ref.config.positionStrategy;
          return (
            t && (t.left || t.right)
              ? t.left
                ? e.left(t.left)
                : e.right(t.right)
              : e.centerHorizontally(),
            t && (t.top || t.bottom)
              ? t.top
                ? e.top(t.top)
                : e.bottom(t.bottom)
              : e.centerVertically(),
            this._ref.updatePosition(),
            this
          );
        }
        updateSize(t = "", e = "") {
          return this._ref.updateSize(t, e), this;
        }
        addPanelClass(t) {
          return this._ref.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this._ref.removePanelClass(t), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2),
            this._ref.close(this._result, {
              focusOrigin: this._closeInteractionType,
            }),
            (this.componentInstance = null);
        }
      }
      const Qc = new R("MatDialogData"),
        vK = new R("mat-dialog-default-options"),
        NI = new R("mat-dialog-scroll-strategy"),
        CK = {
          provide: NI,
          deps: [Kn],
          useFactory: function bK(n) {
            return () => n.scrollStrategies.block();
          },
        };
      let wK = 0,
        MK = (() => {
          class n {
            constructor(e, i, r, s, o, a, l, c, u, d) {
              (this._overlay = e),
                (this._defaultOptions = r),
                (this._parentDialog = s),
                (this._dialogRefConstructor = l),
                (this._dialogContainerType = c),
                (this._dialogDataToken = u),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new $()),
                (this._afterOpenedAtThisLevel = new $()),
                (this._idPrefix = "mat-dialog-"),
                (this.afterAllClosed = ec(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(qn(void 0))
                )),
                (this._scrollStrategy = a),
                (this._dialog = i.get(FI));
            }
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            open(e, i) {
              let r;
              ((i = { ...(this._defaultOptions || new Rf()), ...i }).id =
                i.id || `${this._idPrefix}${wK++}`),
                (i.scrollStrategy = i.scrollStrategy || this._scrollStrategy());
              const s = this._dialog.open(e, {
                ...i,
                positionStrategy: this._overlay
                  .position()
                  .global()
                  .centerHorizontally()
                  .centerVertically(),
                disableClose: !0,
                closeOnDestroy: !1,
                container: {
                  type: this._dialogContainerType,
                  providers: () => [
                    { provide: Rf, useValue: i },
                    { provide: Of, useValue: i },
                  ],
                },
                templateContext: () => ({ dialogRef: r }),
                providers: (o, a, l) => (
                  (r = new this._dialogRefConstructor(o, i, l)),
                  r.updatePosition(i?.position),
                  [
                    { provide: this._dialogContainerType, useValue: l },
                    { provide: this._dialogDataToken, useValue: a.data },
                    { provide: this._dialogRefConstructor, useValue: r },
                  ]
                ),
              });
              return (
                (r.componentInstance = s.componentInstance),
                this.openDialogs.push(r),
                this.afterOpened.next(r),
                r.afterClosed().subscribe(() => {
                  const o = this.openDialogs.indexOf(r);
                  o > -1 &&
                    (this.openDialogs.splice(o, 1),
                    this.openDialogs.length ||
                      this._getAfterAllClosed().next());
                }),
                r
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _closeDialogs(e) {
              let i = e.length;
              for (; i--; ) e[i].close();
            }
          }
          return (
            (n.ɵfac = function (e) {
              js();
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Es = (() => {
          class n extends MK {
            constructor(e, i, r, s, o, a, l, c) {
              super(e, i, s, a, l, o, Bv, _K, Qc, c);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                x(Kn),
                x(lt),
                x(Bl, 8),
                x(vK, 8),
                x(NI),
                x(n, 12),
                x(If),
                x(Hn, 8)
              );
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        DK = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({
              providers: [Es, CK],
              imports: [fK, ja, Kc, Me, Me],
            })),
            n
          );
        })();
      function xK(n, t) {
        if ((1 & n && (b(0, "li", 1)(1, "span", 2), w(2), y()()), 2 & n)) {
          const e = t.$implicit;
          Cn("routerLink", "/equipes/dados/", e.id_equipe, ""),
            E(2),
            dt(" ", e.nome_equipe, "");
        }
      }
      let EK = (() => {
          class n {
            constructor(e, i, r) {
              (this.equipeService = e),
                (this.dialog = i),
                (this.authService = r),
                (this.equipes = []);
            }
            mostraEquipes() {
              this.equipeService.read().subscribe((e) => {
                this.equipes = e;
              });
            }
            ngOnInit() {
              this.mostraEquipes();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(sr), g(Es), g(fc));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-read-equipe"]],
              decls: 2,
              vars: 1,
              consts: [
                [3, "routerLink", 4, "ngFor", "ngForOf"],
                [3, "routerLink"],
                [1, "nome"],
              ],
              template: function (e, i) {
                1 & e && (b(0, "ul"), B(1, xK, 3, 2, "li", 0), y()),
                  2 & e && (E(1), T("ngForOf", i.equipes));
              },
              dependencies: [ir, Mn],
              styles: [
                "ul[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}li[_ngcontent-%COMP%]{background-color:#232b67;border:1px solid #000000;border-radius:10px;display:flex;flex-direction:column;justify-content:space-around;line-height:2rem;list-style:none;margin:10px;min-width:25rem;padding:30px;width:30%;text-align:left}li[_ngcontent-%COMP%]:hover{cursor:pointer}li[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{box-sizing:border-box}li[_ngcontent-%COMP%]   span.nome[_ngcontent-%COMP%]{color:#fff;font-size:1.5rem;font-weight:500;margin:2px;word-break:break-word;text-align:justify}",
              ],
            })),
            n
          );
        })(),
        SK = (() => {
          class n {
            constructor(e) {
              this.router = e;
            }
            ngOnInit() {}
            goToCreateEquipe() {
              this.router.navigate(["equipes/create"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Pe));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-equipe"]],
              decls: 5,
              vars: 0,
              consts: [
                [1, "title-view"],
                ["mat-raised-button", "", 1, "add", 3, "click"],
                [
                  "src",
                  "../../../assets/images/add_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                  1,
                  "adicionar",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "h1", 0),
                  w(1, "Equipes"),
                  y(),
                  ge(2, "app-read-equipe"),
                  b(3, "button", 1),
                  P("click", function () {
                    return i.goToCreateEquipe();
                  }),
                  ge(4, "img", 2),
                  y());
              },
              dependencies: [Kt, EK],
            })),
            n
          );
        })();
      function TK(n, t) {
        if (1 & n) {
          const e = Dr();
          b(0, "div", 2)(1, "button", 3),
            P("click", function () {
              return Ri(e), Pi(Re().action());
            }),
            w(2),
            y()();
        }
        if (2 & n) {
          const e = Re();
          E(2), gt(e.data.action);
        }
      }
      function AK(n, t) {}
      const LI = new R("MatSnackBarData");
      class Pf {
        constructor() {
          (this.politeness = "assertive"),
            (this.announcementMessage = ""),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = "center"),
            (this.verticalPosition = "bottom");
        }
      }
      const kK = Math.pow(2, 31) - 1;
      class Vv {
        constructor(t, e) {
          (this._overlayRef = e),
            (this._afterDismissed = new $()),
            (this._afterOpened = new $()),
            (this._onAction = new $()),
            (this._dismissedByAction = !1),
            (this.containerInstance = t),
            t._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(),
            clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed ||
            ((this._dismissedByAction = !0),
            this._onAction.next(),
            this._onAction.complete(),
            this.dismiss()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(t) {
          this._durationTimeoutId = setTimeout(
            () => this.dismiss(),
            Math.min(t, kK)
          );
        }
        _open() {
          this._afterOpened.closed ||
            (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({
              dismissedByAction: this._dismissedByAction,
            }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      let IK = (() => {
        class n {
          constructor(e, i) {
            (this.snackBarRef = e), (this.data = i);
          }
          action() {
            this.snackBarRef.dismissWithAction();
          }
          get hasAction() {
            return !!this.data.action;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(Vv), g(LI));
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["simple-snack-bar"]],
            hostAttrs: [1, "mat-simple-snackbar"],
            decls: 3,
            vars: 2,
            consts: [
              [1, "mat-simple-snack-bar-content"],
              ["class", "mat-simple-snackbar-action", 4, "ngIf"],
              [1, "mat-simple-snackbar-action"],
              ["mat-button", "", 3, "click"],
            ],
            template: function (e, i) {
              1 & e && (b(0, "span", 0), w(1), y(), B(2, TK, 3, 1, "div", 1)),
                2 & e &&
                  (E(1), gt(i.data.message), E(1), T("ngIf", i.hasAction));
            },
            dependencies: [At, Kt],
            styles: [
              ".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}",
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          n
        );
      })();
      const OK = {
        snackBarState: kr("state", [
          xn("void, hidden", Ke({ transform: "scale(0.8)", opacity: 0 })),
          xn("visible", Ke({ transform: "scale(1)", opacity: 1 })),
          pn("* => visible", Dn("150ms cubic-bezier(0, 0, 0.2, 1)")),
          pn(
            "* => void, * => hidden",
            Dn("75ms cubic-bezier(0.4, 0.0, 1, 1)", Ke({ opacity: 0 }))
          ),
        ]),
      };
      let RK = (() => {
          class n extends Af {
            constructor(e, i, r, s, o) {
              super(),
                (this._ngZone = e),
                (this._elementRef = i),
                (this._changeDetectorRef = r),
                (this._platform = s),
                (this.snackBarConfig = o),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new $()),
                (this._onExit = new $()),
                (this._onEnter = new $()),
                (this._animationState = "void"),
                (this.attachDomPortal = (a) => {
                  this._assertNotAttached();
                  const l = this._portalOutlet.attachDomPortal(a);
                  return this._afterPortalAttached(), l;
                }),
                (this._live =
                  "assertive" !== o.politeness || o.announcementMessage
                    ? "off" === o.politeness
                      ? "off"
                      : "polite"
                    : "assertive"),
                this._platform.FIREFOX &&
                  ("polite" === this._live && (this._role = "status"),
                  "assertive" === this._live && (this._role = "alert"));
            }
            attachComponentPortal(e) {
              this._assertNotAttached();
              const i = this._portalOutlet.attachComponentPortal(e);
              return this._afterPortalAttached(), i;
            }
            attachTemplatePortal(e) {
              this._assertNotAttached();
              const i = this._portalOutlet.attachTemplatePortal(e);
              return this._afterPortalAttached(), i;
            }
            onAnimationEnd(e) {
              const { fromState: i, toState: r } = e;
              if (
                ((("void" === r && "void" !== i) || "hidden" === r) &&
                  this._completeExit(),
                "visible" === r)
              ) {
                const s = this._onEnter;
                this._ngZone.run(() => {
                  s.next(), s.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = "visible"),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                this._ngZone.run(() => {
                  (this._animationState = "hidden"),
                    this._elementRef.nativeElement.setAttribute("mat-exit", ""),
                    clearTimeout(this._announceTimeoutId);
                }),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0), this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe(Vt(1)).subscribe(() => {
                this._ngZone.run(() => {
                  this._onExit.next(), this._onExit.complete();
                });
              });
            }
            _afterPortalAttached() {
              const e = this._elementRef.nativeElement,
                i = this.snackBarConfig.panelClass;
              i &&
                (Array.isArray(i)
                  ? i.forEach((r) => e.classList.add(r))
                  : e.classList.add(i));
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const e =
                        this._elementRef.nativeElement.querySelector(
                          "[aria-hidden]"
                        ),
                      i =
                        this._elementRef.nativeElement.querySelector(
                          "[aria-live]"
                        );
                    if (e && i) {
                      let r = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        e.contains(document.activeElement) &&
                        (r = document.activeElement),
                        e.removeAttribute("aria-hidden"),
                        i.appendChild(e),
                        r?.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Q), g(ce), g(Et), g(jt), g(Pf));
            }),
            (n.ɵdir = N({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && $t(Yc, 7), 2 & e)) {
                  let r;
                  se((r = oe())) && (i._portalOutlet = r.first);
                }
              },
              features: [q],
            })),
            n
          );
        })(),
        PK = (() => {
          class n extends RK {
            _afterPortalAttached() {
              super._afterPortalAttached(),
                "center" === this.snackBarConfig.horizontalPosition &&
                  this._elementRef.nativeElement.classList.add(
                    "mat-snack-bar-center"
                  ),
                "top" === this.snackBarConfig.verticalPosition &&
                  this._elementRef.nativeElement.classList.add(
                    "mat-snack-bar-top"
                  );
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = tt(n)))(i || n);
              };
            })()),
            (n.ɵcmp = G({
              type: n,
              selectors: [["snack-bar-container"]],
              hostAttrs: [1, "mat-snack-bar-container"],
              hostVars: 1,
              hostBindings: function (e, i) {
                1 & e &&
                  El("@state.done", function (s) {
                    return i.onAnimationEnd(s);
                  }),
                  2 & e && Al("@state", i._animationState);
              },
              features: [q],
              decls: 3,
              vars: 2,
              consts: [
                ["aria-hidden", "true"],
                ["cdkPortalOutlet", ""],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "div", 0),
                  B(1, AK, 0, 0, "ng-template", 1),
                  y(),
                  ge(2, "div")),
                  2 & e && (E(2), ze("aria-live", i._live)("role", i._role));
              },
              dependencies: [Yc],
              styles: [
                ".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}",
              ],
              encapsulation: 2,
              data: { animation: [OK.snackBarState] },
            })),
            n
          );
        })(),
        BI = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [ja, Kc, Ki, ZA, Me, Me] })),
            n
          );
        })();
      const VI = new R("mat-snack-bar-default-options", {
        providedIn: "root",
        factory: function FK() {
          return new Pf();
        },
      });
      let NK = (() => {
          class n {
            constructor(e, i, r, s, o, a) {
              (this._overlay = e),
                (this._live = i),
                (this._injector = r),
                (this._breakpointObserver = s),
                (this._parentSnackBar = o),
                (this._defaultConfig = a),
                (this._snackBarRefAtThisLevel = null);
            }
            get _openedSnackBarRef() {
              const e = this._parentSnackBar;
              return e ? e._openedSnackBarRef : this._snackBarRefAtThisLevel;
            }
            set _openedSnackBarRef(e) {
              this._parentSnackBar
                ? (this._parentSnackBar._openedSnackBarRef = e)
                : (this._snackBarRefAtThisLevel = e);
            }
            openFromComponent(e, i) {
              return this._attach(e, i);
            }
            openFromTemplate(e, i) {
              return this._attach(e, i);
            }
            open(e, i = "", r) {
              const s = { ...this._defaultConfig, ...r };
              return (
                (s.data = { message: e, action: i }),
                s.announcementMessage === e && (s.announcementMessage = void 0),
                this.openFromComponent(this.simpleSnackBarComponent, s)
              );
            }
            dismiss() {
              this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
            }
            ngOnDestroy() {
              this._snackBarRefAtThisLevel &&
                this._snackBarRefAtThisLevel.dismiss();
            }
            _attachSnackBarContainer(e, i) {
              const s = lt.create({
                  parent:
                    (i && i.viewContainerRef && i.viewContainerRef.injector) ||
                    this._injector,
                  providers: [{ provide: Pf, useValue: i }],
                }),
                o = new Va(
                  this.snackBarContainerComponent,
                  i.viewContainerRef,
                  s
                ),
                a = e.attach(o);
              return (a.instance.snackBarConfig = i), a.instance;
            }
            _attach(e, i) {
              const r = { ...new Pf(), ...this._defaultConfig, ...i },
                s = this._createOverlay(r),
                o = this._attachSnackBarContainer(s, r),
                a = new Vv(o, s);
              if (e instanceof jn) {
                const l = new Tf(e, null, {
                  $implicit: r.data,
                  snackBarRef: a,
                });
                a.instance = o.attachTemplatePortal(l);
              } else {
                const l = this._createInjector(r, a),
                  c = new Va(e, void 0, l),
                  u = o.attachComponentPortal(c);
                a.instance = u.instance;
              }
              return (
                this._breakpointObserver
                  .observe("(max-width: 599.98px) and (orientation: portrait)")
                  .pipe(_e(s.detachments()))
                  .subscribe((l) => {
                    s.overlayElement.classList.toggle(
                      this.handsetCssClass,
                      l.matches
                    );
                  }),
                r.announcementMessage &&
                  o._onAnnounce.subscribe(() => {
                    this._live.announce(r.announcementMessage, r.politeness);
                  }),
                this._animateSnackBar(a, r),
                (this._openedSnackBarRef = a),
                this._openedSnackBarRef
              );
            }
            _animateSnackBar(e, i) {
              e.afterDismissed().subscribe(() => {
                this._openedSnackBarRef == e &&
                  (this._openedSnackBarRef = null),
                  i.announcementMessage && this._live.clear();
              }),
                this._openedSnackBarRef
                  ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                      e.containerInstance.enter();
                    }),
                    this._openedSnackBarRef.dismiss())
                  : e.containerInstance.enter(),
                i.duration &&
                  i.duration > 0 &&
                  e.afterOpened().subscribe(() => e._dismissAfter(i.duration));
            }
            _createOverlay(e) {
              const i = new kf();
              i.direction = e.direction;
              let r = this._overlay.position().global();
              const s = "rtl" === e.direction,
                o =
                  "left" === e.horizontalPosition ||
                  ("start" === e.horizontalPosition && !s) ||
                  ("end" === e.horizontalPosition && s),
                a = !o && "center" !== e.horizontalPosition;
              return (
                o ? r.left("0") : a ? r.right("0") : r.centerHorizontally(),
                "top" === e.verticalPosition ? r.top("0") : r.bottom("0"),
                (i.positionStrategy = r),
                this._overlay.create(i)
              );
            }
            _createInjector(e, i) {
              return lt.create({
                parent:
                  (e && e.viewContainerRef && e.viewContainerRef.injector) ||
                  this._injector,
                providers: [
                  { provide: Vv, useValue: i },
                  { provide: LI, useValue: e.data },
                ],
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Kn), x(By), x(lt), x(Nh), x(n, 12), x(VI));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        LK = (() => {
          class n extends NK {
            constructor(e, i, r, s, o, a) {
              super(e, i, r, s, o, a),
                (this.simpleSnackBarComponent = IK),
                (this.snackBarContainerComponent = PK),
                (this.handsetCssClass = "mat-snack-bar-handset");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(Kn), x(By), x(lt), x(Nh), x(n, 12), x(VI));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: BI })),
            n
          );
        })(),
        Tn = (() => {
          class n {
            constructor(e) {
              this.snackBar = e;
            }
            showMsg({ msg: e }) {
              this.snackBar.open(e, "X", {
                duration: 3e3,
                horizontalPosition: "right",
                verticalPosition: "top",
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(x(LK));
            }),
            (n.ɵprov = F({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        BK = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this.dialogRef = e),
                (this.data = i),
                (this.message = r),
                (this.http = s),
                (this.route = o),
                (this.baseUrl = `${Nr_apiUrl}equipes/`);
            }
            fechaDialog() {
              this.dialogRef.close();
            }
            deletaEquipe(e) {
              this.http.delete(`${this.baseUrl}${e}`).subscribe(() => {
                this.message.showMsg({ msg: "Equipe deletada com sucesso." });
              }),
                this.fechaDialog(),
                this.route.navigate(["equipes"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Bv), g(Qc), g(Tn), g(Gn), g(Pe));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-delete-warning"]],
              decls: 13,
              vars: 0,
              consts: [
                [1, "material-icons"],
                [3, "click"],
                [1, "deletar", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "h1")(1, "i", 0),
                  w(2, " warning "),
                  y(),
                  w(3, " Aviso\n"),
                  y(),
                  b(4, "p"),
                  w(5, "Tem certeza que deseja deletar esta equipe?"),
                  y(),
                  b(6, "p"),
                  w(
                    7,
                    "Isso deletar\xe1 membros e projetos que tiverem associados a esta equipe."
                  ),
                  y(),
                  b(8, "div")(9, "button", 1),
                  P("click", function () {
                    return i.fechaDialog();
                  }),
                  w(10, "Fechar"),
                  y(),
                  b(11, "button", 2),
                  P("click", function () {
                    return i.deletaEquipe(i.data);
                  }),
                  w(12, "Deletar"),
                  y()());
              },
              styles: [
                "h1[_ngcontent-%COMP%]{align-items:center;display:flex}h1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:5px}button[_ngcontent-%COMP%]{border-radius:5px;height:1.5rem;margin-right:5px;padding:0 10px}button.deletar[_ngcontent-%COMP%]:hover{background-color:#f005}",
              ],
            })),
            n
          );
        })();
      function VK(n, t) {
        1 & n && (b(0, "mat-card-title"), w(1, " 0 "), y());
      }
      function jK(n, t) {
        if ((1 & n && (b(0, "mat-card-title"), w(1), y()), 2 & n)) {
          const e = Re();
          E(1), dt(" ", e.membros.length, " ");
        }
      }
      function HK(n, t) {
        1 & n && (b(0, "mat-card-title"), w(1, " 0 "), y());
      }
      function zK(n, t) {
        if ((1 & n && (b(0, "mat-card-title"), w(1), y()), 2 & n)) {
          const e = Re();
          E(1), dt(" ", e.projetos.length, " ");
        }
      }
      function UK(n, t) {
        if (
          (1 & n &&
            (b(0, "li", 18)(1, "mat-card", 19)(2, "mat-card-title")(
              3,
              "span",
              20
            ),
            w(4),
            y()(),
            b(5, "mat-card-subtitle")(6, "span", 21),
            w(7),
            y()()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          Cn("routerLink", "/membros/dados/", e.id_membro, ""),
            E(4),
            gt(e.nome_membro),
            E(3),
            gt(e.funcao);
        }
      }
      function $K(n, t) {
        if ((1 & n && (b(0, "ul", 16), B(1, UK, 8, 3, "li", 17), y()), 2 & n)) {
          const e = Re();
          E(1), T("ngForOf", e.membros);
        }
      }
      function qK(n, t) {
        1 & n &&
          (b(0, "div", 22),
          w(1, " N\xe3o h\xe1 nenhum projeto relacionado a esta equipe "),
          y());
      }
      function WK(n, t) {
        if (
          (1 & n &&
            (b(0, "li", 18)(1, "mat-card", 24)(2, "mat-card-title")(
              3,
              "span",
              25
            ),
            w(4),
            y()()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          Cn("routerLink", "../../../projetos/dados/", e.id_projeto, ""),
            E(4),
            gt(e.nome_projeto);
        }
      }
      function GK(n, t) {
        if ((1 & n && (b(0, "ul", 23), B(1, WK, 5, 2, "li", 17), y()), 2 & n)) {
          const e = Re();
          E(1), T("ngForOf", e.projetos);
        }
      }
      function YK(n, t) {
        1 & n &&
          (b(0, "div", 22),
          w(1, " N\xe3o h\xe1 nenhum projeto relacionado a esta equipe "),
          y());
      }
      let KK = (() => {
        class n {
          constructor(e, i, r) {
            (this.route = e),
              (this.equipeService = i),
              (this.dialog = r),
              (this.membros = []),
              (this.projetos = []),
              (this.equipe = { nome_equipe: "", membros: [], projetos: [] }),
              (this.primeiraLetra = "");
          }
          ngOnInit() {
            const e = this.route.snapshot.paramMap.get("id");
            this.equipeService.getById({ id: `${e}` }).subscribe((i) => {
              (this.equipe = i),
                (this.primeiraLetra = this.equipe.nome_equipe[0]),
                (this.membros = i.membros),
                (this.projetos = i.projetos);
            });
          }
          openDialog(e, i, r) {
            this.dialog.open(BK, {
              data: r,
              width: "250px",
              enterAnimationDuration: e,
              exitAnimationDuration: i,
            });
          }
          goBack() {
            history.back();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(Wn), g(sr), g(Es));
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["app-pagina-equipe"]],
            decls: 38,
            vars: 11,
            consts: [
              [1, "material-icons", "arrow", 3, "click"],
              [1, "geral"],
              [1, "dados"],
              [1, "imagem"],
              [1, "title-view", "nomeEquipe"],
              [1, "acoes"],
              ["mat-raised-button", "", 1, "editar", 3, "routerLink"],
              ["mat-raised-button", "", 1, "deletar", 3, "click"],
              [1, "info"],
              [1, "quantidades"],
              [1, "quantidade"],
              [4, "ngIf"],
              [1, "subtitle"],
              ["class", "membro", 4, "ngIf"],
              ["class", "listavazia", 4, "ngIf"],
              ["class", "projeto", 4, "ngIf"],
              [1, "membro"],
              [3, "routerLink", 4, "ngFor", "ngForOf"],
              [3, "routerLink"],
              [1, "card"],
              [1, "membro_nome"],
              [1, "membro_funcao"],
              [1, "listavazia"],
              [1, "projeto"],
              [1, "card", "card_projeto"],
              [1, "projeto_nome"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "i", 0),
                P("click", function () {
                  return i.goBack();
                }),
                w(1, " arrow_back "),
                y(),
                b(2, "div", 1)(3, "div", 2)(4, "div", 3)(5, "span"),
                w(6),
                y()(),
                b(7, "h1", 4),
                w(8),
                y(),
                b(9, "div", 5)(10, "button", 6),
                w(11, " Editar Equipe "),
                y(),
                b(12, "button", 7),
                P("click", function () {
                  return i.openDialog("0ms", "0ms", i.equipe.id_equipe);
                }),
                w(13, " Deletar Equipe "),
                y()()(),
                b(14, "div", 8)(15, "div", 9)(16, "mat-card", 10),
                B(17, VK, 2, 0, "mat-card-title", 11),
                B(18, jK, 2, 1, "mat-card-title", 11),
                b(19, "mat-card-subtitle"),
                w(20, " Membro(s)"),
                ge(21, "br"),
                w(22, " Cadastrado(s) "),
                y()(),
                b(23, "mat-card", 10),
                B(24, HK, 2, 0, "mat-card-title", 11),
                B(25, zK, 2, 1, "mat-card-title", 11),
                w(26, " Projeto(s)"),
                ge(27, "br"),
                w(28, " Cadastrado(s) "),
                ge(29, "mat-card-subtitle"),
                y()(),
                b(30, "span", 12),
                w(31, "Membros"),
                y(),
                B(32, $K, 2, 1, "ul", 13),
                B(33, qK, 2, 0, "div", 14),
                b(34, "span", 12),
                w(35, "Projetos"),
                y(),
                B(36, GK, 2, 1, "ul", 15),
                B(37, YK, 2, 0, "div", 14),
                y()()),
                2 & e &&
                  (E(6),
                  gt(i.primeiraLetra.toUpperCase()),
                  E(2),
                  gt(i.equipe.nome_equipe),
                  E(2),
                  Cn("routerLink", "/equipes/update/", i.equipe.id_equipe, ""),
                  E(7),
                  T("ngIf", null == i.membros),
                  E(1),
                  T("ngIf", null != i.membros),
                  E(6),
                  T("ngIf", null == i.projetos),
                  E(1),
                  T("ngIf", null != i.projetos),
                  E(7),
                  T("ngIf", null != i.membros),
                  E(1),
                  T("ngIf", null == i.membros),
                  E(3),
                  T("ngIf", null != i.projetos),
                  E(1),
                  T("ngIf", null == i.projetos));
            },
            dependencies: [ir, Mn, At, Kt, lr, or, ar],
            styles: [
              ".arrow[_ngcontent-%COMP%]{position:relative;top:10px;left:20px}.arrow[_ngcontent-%COMP%]:hover{cursor:pointer}.geral[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;text-align:center;margin:20px;height:100%;width:100%}.title-view[_ngcontent-%COMP%]{margin:20px 0}.dados[_ngcontent-%COMP%]{width:30%;align-items:center;min-width:30rem;padding:10px;box-sizing:border-box}.nomeEquipe[_ngcontent-%COMP%]{height:auto;text-overflow:ellipsis;overflow:hidden;word-wrap:break-word;word-break:break-all}.acoes[_ngcontent-%COMP%]{margin-top:20px}.acoes[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:5px;width:10rem}.imagem[_ngcontent-%COMP%]{text-align:center;width:15rem;height:15rem;border:1px solid #000000;border-radius:50%;align-items:center;justify-content:center}.imagem[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:8rem}.info[_ngcontent-%COMP%]{width:60%;min-width:30rem}.quantidades[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:nowrap;margin:20px}.quantidade[_ngcontent-%COMP%]{padding:20px;margin-left:2.5rem;width:10rem;text-align:center;margin-bottom:20px;height:4rem}div[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex-wrap:wrap}li[_ngcontent-%COMP%]{list-style:none}li[_ngcontent-%COMP%]:hover{cursor:pointer}.card[_ngcontent-%COMP%]{margin-top:10px;width:60%;min-width:35rem;box-sizing:content-box}.subtitle[_ngcontent-%COMP%]{font-size:30px;font-weight:700;margin-left:2.5rem;margin-top:20px}.card_projeto[_ngcontent-%COMP%]{text-align:left}.adicionar[_ngcontent-%COMP%]{align-items:center;background-color:#1e2d69;border-radius:50%;display:flex;justify-content:center;width:1rem}.titulo[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between}",
            ],
          })),
          n
        );
      })();
      function XK(n, t) {
        1 & n &&
          (b(0, "mat-error"), w(1, " Nome da equipe \xe9 requerido "), y());
      }
      let ZK = (() => {
        class n {
          constructor(e, i, r, s) {
            (this.createEquipeService = e),
              (this.formBuilder = i),
              (this.aviso = r),
              (this.router = s),
              (this.formulario = this.formBuilder.group({
                nome: [null, wt.required],
              })),
              (this.equipe = { nome_equipe: "" });
          }
          ngOnInit() {}
          goBack() {
            this.router.navigate(["equipes"]);
          }
          onSubmit() {
            this.createEquipeService
              .create({ equipe: this.equipe })
              .subscribe(() => {
                this.aviso.showMsg({ msg: "Equipe criada com sucesso" }),
                  this.goBack();
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(sr), g(Ir), g(Tn), g(Pe));
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["app-create-equipe"]],
            decls: 15,
            vars: 4,
            consts: [
              [1, "form"],
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill", 1, "create-equipe"],
              [
                "matInput",
                "",
                "placeholder",
                "Nome da equipe",
                "name",
                "name_team",
                "formControlName",
                "nome",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "mat-card", 0)(1, "mat-card-title"),
                w(2, " Criar equipe "),
                y(),
                b(3, "mat-card-subtitle"),
                w(4, " \xc1rea para cria\xe7\xe3o de novas equipes "),
                y()(),
                b(5, "form", 1),
                P("ngSubmit", function () {
                  return i.onSubmit();
                }),
                b(6, "mat-form-field", 2)(7, "mat-label"),
                w(8, "Nome da Equipe"),
                y(),
                b(9, "input", 3),
                P("ngModelChange", function (s) {
                  return (i.equipe.nome_equipe = s);
                }),
                y(),
                B(10, XK, 2, 0, "mat-error", 4),
                y(),
                b(11, "button", 5),
                w(12, " Salvar "),
                y(),
                b(13, "button", 6),
                P("click", function () {
                  return i.goBack();
                }),
                w(14, " Cancelar "),
                y()()),
                2 & e &&
                  (E(5),
                  T("formGroup", i.formulario),
                  E(4),
                  T("ngModel", i.equipe.nome_equipe),
                  E(1),
                  T("ngIf", i.formulario.controls.nome.hasError("required")),
                  E(1),
                  T("disabled", !i.formulario.valid));
            },
            dependencies: [
              At,
              er,
              oi,
              Qi,
              Ji,
              Kt,
              lr,
              or,
              ar,
              Vr,
              jr,
              Ai,
              Hr,
              En,
              Ei,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:150px}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{margin-top:10px;border:1px solid blue}button.limpar[_ngcontent-%COMP%]{margin-top:10px;border:1px solid yellow}",
            ],
          })),
          n
        );
      })();
      function QK(n, t) {
        1 & n &&
          (b(0, "mat-error"), w(1, " Nome da equipe \xe9 requerido "), y());
      }
      let JK = (() => {
          class n {
            constructor(e, i, r, s) {
              (this.equipeService = e),
                (this.route = i),
                (this.aviso = r),
                (this.form = s),
                (this.formulario = this.form.group({
                  nome: [null, wt.required],
                })),
                (this.equipe = { nome_equipe: "" });
            }
            ngOnInit() {
              const e = this.route.snapshot.paramMap.get("id");
              this.equipeService.getById({ id: `${e}` }).subscribe((i) => {
                this.equipe = i;
              });
            }
            onSubmit() {
              this.equipeService
                .update({ equipe: this.equipe })
                .subscribe(() => {
                  this.aviso.showMsg({ msg: "Equipe atualizada com sucesso" }),
                    this.goBack();
                });
            }
            goBack() {
              history.back();
            }
            limpar() {
              this.formulario.reset();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(sr), g(Wn), g(Tn), g(Ir));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-update-equipe"]],
              decls: 17,
              vars: 4,
              consts: [
                [1, "form"],
                [1, "form", 3, "formGroup", "ngSubmit"],
                ["appearance", "fill", 1, "create-equipe"],
                [
                  "matInput",
                  "",
                  "placeholder",
                  "Nome da equipe",
                  "name",
                  "name_team",
                  "formControlName",
                  "nome",
                  "maxlength",
                  "30",
                  3,
                  "ngModel",
                  "ngModelChange",
                ],
                [4, "ngIf"],
                ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
                ["mat-raised-button", "", 1, "cancelar", 3, "click"],
                ["mat-raised-button", "", 1, "limpar", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "mat-card", 0)(1, "mat-card-title"),
                  w(2, " Atualizar equipe "),
                  y(),
                  b(3, "mat-card-subtitle"),
                  w(4, " \xc1rea para atualiza\xe7\xe3o equipes "),
                  y()(),
                  b(5, "form", 1),
                  P("ngSubmit", function () {
                    return i.onSubmit();
                  }),
                  b(6, "mat-form-field", 2)(7, "mat-label"),
                  w(8, "Nome da Equipe"),
                  y(),
                  b(9, "input", 3),
                  P("ngModelChange", function (s) {
                    return (i.equipe.nome_equipe = s);
                  }),
                  y(),
                  B(10, QK, 2, 0, "mat-error", 4),
                  y(),
                  b(11, "button", 5),
                  w(12, " Salvar "),
                  y(),
                  b(13, "button", 6),
                  P("click", function () {
                    return i.goBack();
                  }),
                  w(14, " Cancelar "),
                  y(),
                  b(15, "button", 7),
                  P("click", function () {
                    return i.limpar();
                  }),
                  w(16, "Limpar"),
                  y()()),
                  2 & e &&
                    (E(5),
                    T("formGroup", i.formulario),
                    E(4),
                    T("ngModel", i.equipe.nome_equipe),
                    E(1),
                    T("ngIf", i.formulario.controls.nome.hasError("required")),
                    E(1),
                    T("disabled", !i.formulario.valid));
              },
              dependencies: [
                At,
                er,
                oi,
                Qi,
                Ji,
                ps,
                Kt,
                lr,
                or,
                ar,
                Vr,
                jr,
                Ai,
                Hr,
                En,
                Ei,
              ],
              styles: [
                ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:150px}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{margin-top:10px;border:1px solid #0000ff}button.limpar[_ngcontent-%COMP%]{margin-top:10px;border:1px solid #ffff00}",
              ],
            })),
            n
          );
        })(),
        jI = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this.dialogRef = e),
                (this.data = i),
                (this.http = r),
                (this.Aviso = s),
                (this.route = o),
                (this.url = `${Nr_apiUrl}membros/`);
            }
            fecha() {
              this.dialogRef.close();
            }
            deletaMembro(e) {
              this.http.delete(`${this.url}${e}`).subscribe(() => {
                this.Aviso.showMsg({ msg: "Membro deletado com sucesso" });
              }),
                this.route.navigate(["membros"]),
                this.fecha();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Bv), g(Qc), g(Gn), g(Tn), g(Pe));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-delete-warning"]],
              decls: 13,
              vars: 0,
              consts: [
                [1, "material-icons"],
                [3, "click"],
                [1, "deletar", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "h1")(1, "i", 0),
                  w(2, " warning "),
                  y(),
                  w(3, " Aviso\n"),
                  y(),
                  b(4, "p"),
                  w(5, "Tem certeza que deseja deletar esse membro?"),
                  y(),
                  b(6, "p"),
                  w(
                    7,
                    "Esta a\xe7\xe3o deletar\xe1 as tarefas que estiverem relacionadas a este membro"
                  ),
                  y(),
                  b(8, "div")(9, "button", 1),
                  P("click", function () {
                    return i.fecha();
                  }),
                  w(10, "Cancelar"),
                  y(),
                  b(11, "button", 2),
                  P("click", function () {
                    return i.deletaMembro(i.data);
                  }),
                  w(12, "Deletar"),
                  y()());
              },
              styles: [
                "h1[_ngcontent-%COMP%]{align-items:center;display:flex}h1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:5px}button[_ngcontent-%COMP%]{border-radius:5px;height:1.5rem;margin-right:5px;padding:0 10px}button.deletar[_ngcontent-%COMP%]:hover{background-color:#f005}",
              ],
            })),
            n
          );
        })();
      function eX(n, t) {
        if (
          (1 & n &&
            (b(0, "li")(1, "div", 1)(2, "span", 2),
            w(3),
            y(),
            b(4, "span", 3),
            w(5),
            y()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          E(1),
            Cn("routerLink", "/membros/dados/", e.id_membro, ""),
            E(2),
            gt(e.nome_membro),
            E(2),
            gt(e.funcao);
        }
      }
      let tX = (() => {
          class n {
            constructor(e, i) {
              (this.membrosService = e),
                (this.dialog = i),
                (this.membros = []),
                (this.equipes = []);
            }
            lerMembros() {
              this.membrosService.read().subscribe((e) => {
                this.membros = e;
              });
            }
            ngOnInit() {
              this.lerMembros();
            }
            openDialog(e, i, r) {
              this.dialog.open(jI, {
                data: r,
                width: "250px",
                enterAnimationDuration: e,
                exitAnimationDuration: i,
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(co), g(Es));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-read-membros"]],
              decls: 2,
              vars: 1,
              consts: [
                [4, "ngFor", "ngForOf"],
                [3, "routerLink"],
                [1, "nome"],
                [1, "funcao"],
              ],
              template: function (e, i) {
                1 & e && (b(0, "ul"), B(1, eX, 6, 3, "li", 0), y()),
                  2 & e && (E(1), T("ngForOf", i.membros));
              },
              dependencies: [ir, Mn],
              styles: [
                "span.nome[_ngcontent-%COMP%]{font-size:2rem;margin:2px}span.funcao[_ngcontent-%COMP%], span.equipe[_ngcontent-%COMP%]{font-size:1rem;margin:2px}span.equipe[_ngcontent-%COMP%]{align-items:center;display:flex}ul[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}li[_ngcontent-%COMP%]{background-color:#232b67;border:1px solid #000000;border-radius:10px;color:#fff;display:flex;flex-direction:column;justify-content:space-around;line-height:2rem;list-style:none;margin:10px;min-width:25rem;padding:30px;width:35%;box-sizing:border-box}li[_ngcontent-%COMP%]   span.nome[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;margin:2px}li[_ngcontent-%COMP%]:hover{cursor:pointer}li[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;word-wrap:break-word}",
              ],
            })),
            n
          );
        })(),
        nX = (() => {
          class n {
            constructor(e) {
              this.router = e;
            }
            ngOnInit() {}
            goToCreateMembro() {
              this.router.navigate(["membros/create"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Pe));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-membro"]],
              decls: 5,
              vars: 0,
              consts: [
                [1, "title-view"],
                ["mat-raised-button", "", 1, "add", 3, "click"],
                [
                  "src",
                  "./../../../../assets/images/add_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "h1", 0),
                  w(1, "Membros"),
                  y(),
                  ge(2, "app-read-membros"),
                  b(3, "button", 1),
                  P("click", function () {
                    return i.goToCreateMembro();
                  }),
                  ge(4, "img", 2),
                  y());
              },
              dependencies: [Kt, tX],
            })),
            n
          );
        })();
      class jv {
        constructor(t = !1, e, i = !0, r) {
          (this._multiple = t),
            (this._emitChanges = i),
            (this.compareWith = r),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new $()),
            e &&
              e.length &&
              (t
                ? e.forEach((s) => this._markSelected(s))
                : this._markSelected(e[0]),
              (this._selectedToEmit.length = 0));
        }
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        select(...t) {
          this._verifyValueAssignment(t),
            t.forEach((i) => this._markSelected(i));
          const e = this._hasQueuedChanges();
          return this._emitChangeEvent(), e;
        }
        deselect(...t) {
          this._verifyValueAssignment(t),
            t.forEach((i) => this._unmarkSelected(i));
          const e = this._hasQueuedChanges();
          return this._emitChangeEvent(), e;
        }
        setSelection(...t) {
          this._verifyValueAssignment(t);
          const e = this.selected,
            i = new Set(t);
          t.forEach((s) => this._markSelected(s)),
            e.filter((s) => !i.has(s)).forEach((s) => this._unmarkSelected(s));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        toggle(t) {
          return this.isSelected(t) ? this.deselect(t) : this.select(t);
        }
        clear(t = !0) {
          this._unmarkAll();
          const e = this._hasQueuedChanges();
          return t && this._emitChangeEvent(), e;
        }
        isSelected(t) {
          if (this.compareWith) {
            for (const e of this._selection)
              if (this.compareWith(e, t)) return !0;
            return !1;
          }
          return this._selection.has(t);
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(t) {
          this._multiple && this.selected && this._selected.sort(t);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(t) {
          this.isSelected(t) ||
            (this._multiple || this._unmarkAll(),
            this.isSelected(t) || this._selection.add(t),
            this._emitChanges && this._selectedToEmit.push(t));
        }
        _unmarkSelected(t) {
          this.isSelected(t) &&
            (this._selection.delete(t),
            this._emitChanges && this._deselectedToEmit.push(t));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach((t) => this._unmarkSelected(t));
        }
        _verifyValueAssignment(t) {}
        _hasQueuedChanges() {
          return !(
            !this._deselectedToEmit.length && !this._selectedToEmit.length
          );
        }
      }
      const sX = ["trigger"],
        oX = ["panel"];
      function aX(n, t) {
        if ((1 & n && (b(0, "span", 8), w(1), y()), 2 & n)) {
          const e = Re();
          E(1), gt(e.placeholder);
        }
      }
      function lX(n, t) {
        if ((1 & n && (b(0, "span", 12), w(1), y()), 2 & n)) {
          const e = Re(2);
          E(1), gt(e.triggerValue);
        }
      }
      function cX(n, t) {
        1 & n && De(0, 0, ["*ngSwitchCase", "true"]);
      }
      function uX(n, t) {
        1 & n &&
          (b(0, "span", 9),
          B(1, lX, 2, 1, "span", 10),
          B(2, cX, 1, 0, "ng-content", 11),
          y()),
          2 & n &&
            (T("ngSwitch", !!Re().customTrigger), E(2), T("ngSwitchCase", !0));
      }
      function dX(n, t) {
        if (1 & n) {
          const e = Dr();
          b(0, "div", 13)(1, "div", 14, 15),
            P("@transformPanel.done", function (r) {
              return Ri(e), Pi(Re()._panelDoneAnimatingStream.next(r.toState));
            })("keydown", function (r) {
              return Ri(e), Pi(Re()._handleKeydown(r));
            }),
            De(3, 1),
            y()();
        }
        if (2 & n) {
          const e = Re();
          T("@transformPanelWrap", void 0),
            E(1),
            nM("mat-select-panel ", e._getPanelTheme(), ""),
            Us("transform-origin", e._transformOrigin)(
              "font-size",
              e._triggerFontSize,
              "px"
            ),
            T("ngClass", e.panelClass)(
              "@transformPanel",
              e.multiple ? "showing-multiple" : "showing"
            ),
            ze("id", e.id + "-panel")("aria-multiselectable", e.multiple)(
              "aria-label",
              e.ariaLabel || null
            )("aria-labelledby", e._getPanelAriaLabelledby());
        }
      }
      const hX = [[["mat-select-trigger"]], "*"],
        fX = ["mat-select-trigger", "*"],
        HI = {
          transformPanelWrap: kr("transformPanelWrap", [
            pn("* => void", t_("@transformPanel", [e_()], { optional: !0 })),
          ]),
          transformPanel: kr("transformPanel", [
            xn(
              "void",
              Ke({ transform: "scaleY(0.8)", minWidth: "100%", opacity: 0 })
            ),
            xn(
              "showing",
              Ke({
                opacity: 1,
                minWidth: "calc(100% + 32px)",
                transform: "scaleY(1)",
              })
            ),
            xn(
              "showing-multiple",
              Ke({
                opacity: 1,
                minWidth: "calc(100% + 64px)",
                transform: "scaleY(1)",
              })
            ),
            pn("void => *", Dn("120ms cubic-bezier(0, 0, 0.2, 1)")),
            pn("* => void", Dn("100ms 25ms linear", Ke({ opacity: 0 }))),
          ]),
        };
      let zI = 0;
      const $I = new R("mat-select-scroll-strategy"),
        _X = new R("MAT_SELECT_CONFIG"),
        yX = {
          provide: $I,
          deps: [Kn],
          useFactory: function gX(n) {
            return () => n.scrollStrategies.reposition();
          },
        };
      class vX {
        constructor(t, e) {
          (this.source = t), (this.value = e);
        }
      }
      const bX = ao(
          Hy(
            Hh(
              jA(
                class {
                  constructor(n, t, e, i, r) {
                    (this._elementRef = n),
                      (this._defaultErrorStateMatcher = t),
                      (this._parentForm = e),
                      (this._parentFormGroup = i),
                      (this.ngControl = r),
                      (this.stateChanges = new $());
                  }
                }
              )
            )
          )
        ),
        CX = new R("MatSelectTrigger");
      let wX = (() => {
          class n extends bX {
            constructor(e, i, r, s, o, a, l, c, u, d, h, f, p, m) {
              super(o, s, l, c, d),
                (this._viewportRuler = e),
                (this._changeDetectorRef = i),
                (this._ngZone = r),
                (this._dir = a),
                (this._parentFormField = u),
                (this._liveAnnouncer = p),
                (this._defaultOptions = m),
                (this._panelOpen = !1),
                (this._compareWith = (_, v) => _ === v),
                (this._uid = "mat-select-" + zI++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new $()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = "mat-select-value-" + zI++),
                (this._panelDoneAnimatingStream = new $()),
                (this._overlayPanelClass =
                  this._defaultOptions?.overlayPanelClass || ""),
                (this._focused = !1),
                (this.controlType = "mat-select"),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  this._defaultOptions?.disableOptionCentering ?? !1),
                (this.ariaLabel = ""),
                (this.optionSelectionChanges = ec(() => {
                  const _ = this.options;
                  return _
                    ? _.changes.pipe(
                        qn(_),
                        ai(() => Xr(..._.map((v) => v.onSelectionChange)))
                      )
                    : this._ngZone.onStable.pipe(
                        Vt(1),
                        ai(() => this.optionSelectionChanges)
                      );
                })),
                (this.openedChange = new fe()),
                (this._openedStream = this.openedChange.pipe(
                  ct((_) => _),
                  Z(() => {})
                )),
                (this._closedStream = this.openedChange.pipe(
                  ct((_) => !_),
                  Z(() => {})
                )),
                (this.selectionChange = new fe()),
                (this.valueChange = new fe()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != m?.typeaheadDebounceInterval &&
                  (this._typeaheadDebounceInterval =
                    m.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = f),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(h) || 0),
                (this.id = this.id);
            }
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(e) {
              (this._placeholder = e), this.stateChanges.next();
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(wt.required) ??
                !1
              );
            }
            set required(e) {
              (this._required = ke(e)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(e) {
              this._multiple = ke(e);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(e) {
              this._disableOptionCentering = ke(e);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(e) {
              (this._compareWith = e),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(e) {
              this._assignValue(e) && this._onChange(e);
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(e) {
              this._typeaheadDebounceInterval = Ti(e);
            }
            get id() {
              return this._id;
            }
            set id(e) {
              (this._id = e || this._uid), this.stateChanges.next();
            }
            ngOnInit() {
              (this._selectionModel = new jv(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe(Fy(), _e(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe(_e(this._destroy))
                  .subscribe((e) => {
                    e.added.forEach((i) => i.select()),
                      e.removed.forEach((i) => i.deselect());
                  }),
                this.options.changes
                  .pipe(qn(null), _e(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const e = this._getTriggerAriaLabelledby(),
                i = this.ngControl;
              if (e !== this._triggerAriaLabelledBy) {
                const r = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = e),
                  e
                    ? r.setAttribute("aria-labelledby", e)
                    : r.removeAttribute("aria-labelledby");
              }
              i &&
                (this._previousControl !== i.control &&
                  (void 0 !== this._previousControl &&
                    null !== i.disabled &&
                    i.disabled !== this.disabled &&
                    (this.disabled = i.disabled),
                  (this._previousControl = i.control)),
                this.updateErrorState());
            }
            ngOnChanges(e) {
              (e.disabled || e.userAriaDescribedBy) && this.stateChanges.next(),
                e.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval
                  );
            }
            ngOnDestroy() {
              this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? "rtl" : "ltr"
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(e) {
              this._assignValue(e);
            }
            registerOnChange(e) {
              this._onChange = e;
            }
            registerOnTouched(e) {
              this._onTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel?.selected || []
                : this._selectionModel?.selected[0];
            }
            get triggerValue() {
              if (this.empty) return "";
              if (this._multiple) {
                const e = this._selectionModel.selected.map((i) => i.viewValue);
                return this._isRtl() && e.reverse(), e.join(", ");
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && "rtl" === this._dir.value;
            }
            _handleKeydown(e) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(e)
                  : this._handleClosedKeydown(e));
            }
            _handleClosedKeydown(e) {
              const i = e.keyCode,
                r = 40 === i || 38 === i || 37 === i || 39 === i,
                s = 13 === i || 32 === i,
                o = this._keyManager;
              if (
                (!o.isTyping() && s && !Si(e)) ||
                ((this.multiple || e.altKey) && r)
              )
                e.preventDefault(), this.open();
              else if (!this.multiple) {
                const a = this.selected;
                o.onKeydown(e);
                const l = this.selected;
                l && a !== l && this._liveAnnouncer.announce(l.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(e) {
              const i = this._keyManager,
                r = e.keyCode,
                s = 40 === r || 38 === r,
                o = i.isTyping();
              if (s && e.altKey) e.preventDefault(), this.close();
              else if (o || (13 !== r && 32 !== r) || !i.activeItem || Si(e))
                if (!o && this._multiple && 65 === r && e.ctrlKey) {
                  e.preventDefault();
                  const a = this.options.some(
                    (l) => !l.disabled && !l.selected
                  );
                  this.options.forEach((l) => {
                    l.disabled || (a ? l.select() : l.deselect());
                  });
                } else {
                  const a = i.activeItemIndex;
                  i.onKeydown(e),
                    this._multiple &&
                      s &&
                      e.shiftKey &&
                      i.activeItem &&
                      i.activeItemIndex !== a &&
                      i.activeItem._selectViaInteraction();
                }
              else e.preventDefault(), i.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange.pipe(Vt(1)).subscribe(() => {
                this._changeDetectorRef.detectChanges(),
                  this._positioningSettled();
              });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : "";
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this.ngControl && (this._value = this.ngControl.value),
                  this._setSelectionByValue(this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(e) {
              if (
                (this._selectionModel.selected.forEach((i) =>
                  i.setInactiveStyles()
                ),
                this._selectionModel.clear(),
                this.multiple && e)
              )
                Array.isArray(e),
                  e.forEach((i) => this._selectOptionByValue(i)),
                  this._sortValues();
              else {
                const i = this._selectOptionByValue(e);
                i
                  ? this._keyManager.updateActiveItem(i)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectOptionByValue(e) {
              const i = this.options.find((r) => {
                if (this._selectionModel.isSelected(r)) return !1;
                try {
                  return null != r.value && this._compareWith(r.value, e);
                } catch {
                  return !1;
                }
              });
              return i && this._selectionModel.select(i), i;
            }
            _assignValue(e) {
              return (
                !!(e !== this._value || (this._multiple && Array.isArray(e))) &&
                (this.options && this._setSelectionByValue(e),
                (this._value = e),
                !0)
              );
            }
            _initKeyManager() {
              (this._keyManager = new Y8(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr")
                .withHomeAndEnd()
                .withAllowedModifierKeys(["shiftKey"])),
                this._keyManager.tabOut
                  .pipe(_e(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      (!this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction(),
                      this.focus(),
                      this.close());
                  }),
                this._keyManager.change
                  .pipe(_e(this._destroy))
                  .subscribe(() => {
                    this._panelOpen && this.panel
                      ? this._scrollOptionIntoView(
                          this._keyManager.activeItemIndex || 0
                        )
                      : !this._panelOpen &&
                        !this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction();
                  });
            }
            _resetOptions() {
              const e = Xr(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe(_e(e)).subscribe((i) => {
                this._onSelect(i.source, i.isUserInput),
                  i.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                Xr(...this.options.map((i) => i._stateChanges))
                  .pipe(_e(e))
                  .subscribe(() => {
                    this._changeDetectorRef.markForCheck(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(e, i) {
              const r = this._selectionModel.isSelected(e);
              null != e.value || this._multiple
                ? (r !== e.selected &&
                    (e.selected
                      ? this._selectionModel.select(e)
                      : this._selectionModel.deselect(e)),
                  i && this._keyManager.setActiveItem(e),
                  this.multiple && (this._sortValues(), i && this.focus()))
                : (e.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(e.value)),
                r !== this._selectionModel.isSelected(e) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const e = this.options.toArray();
                this._selectionModel.sort((i, r) =>
                  this.sortComparator
                    ? this.sortComparator(i, r, e)
                    : e.indexOf(i) - e.indexOf(r)
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(e) {
              let i = null;
              (i = this.multiple
                ? this.selected.map((r) => r.value)
                : this.selected
                ? this.selected.value
                : e),
                (this._value = i),
                this.valueChange.emit(i),
                this._onChange(i),
                this.selectionChange.emit(this._getChangeEvent(i)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0]
                    ));
            }
            _canOpen() {
              return (
                !this._panelOpen && !this.disabled && this.options?.length > 0
              );
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _getPanelAriaLabelledby() {
              if (this.ariaLabel) return null;
              const e = this._parentFormField?.getLabelId();
              return this.ariaLabelledby
                ? (e ? e + " " : "") + this.ariaLabelledby
                : e;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              if (this.ariaLabel) return null;
              const e = this._parentFormField?.getLabelId();
              let i = (e ? e + " " : "") + this._valueId;
              return this.ariaLabelledby && (i += " " + this.ariaLabelledby), i;
            }
            _panelDoneAnimating(e) {
              this.openedChange.emit(e);
            }
            setDescribedByIds(e) {
              e.length
                ? this._elementRef.nativeElement.setAttribute(
                    "aria-describedby",
                    e.join(" ")
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    "aria-describedby"
                  );
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                g(Sf),
                g(Et),
                g(Q),
                g(zy),
                g(ce),
                g(rr, 8),
                g(Ql, 8),
                g(En, 8),
                g(qy, 8),
                g(Zi, 10),
                Li("tabindex"),
                g($I),
                g(By),
                g(_X, 8)
              );
            }),
            (n.ɵdir = N({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && ($t(sX, 5), $t(oX, 5), $t(OI, 5)), 2 & e)) {
                  let r;
                  se((r = oe())) && (i.trigger = r.first),
                    se((r = oe())) && (i.panel = r.first),
                    se((r = oe())) && (i._overlayDir = r.first);
                }
              },
              inputs: {
                userAriaDescribedBy: [
                  "aria-describedby",
                  "userAriaDescribedBy",
                ],
                panelClass: "panelClass",
                placeholder: "placeholder",
                required: "required",
                multiple: "multiple",
                disableOptionCentering: "disableOptionCentering",
                compareWith: "compareWith",
                value: "value",
                ariaLabel: ["aria-label", "ariaLabel"],
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                errorStateMatcher: "errorStateMatcher",
                typeaheadDebounceInterval: "typeaheadDebounceInterval",
                sortComparator: "sortComparator",
                id: "id",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                _closedStream: "closed",
                selectionChange: "selectionChange",
                valueChange: "valueChange",
              },
              features: [q, Gt],
            })),
            n
          );
        })(),
        Ua = (() => {
          class n extends wX {
            constructor() {
              super(...arguments),
                (this._scrollTop = 0),
                (this._triggerFontSize = 0),
                (this._transformOrigin = "top"),
                (this._offsetY = 0),
                (this._positions = [
                  {
                    originX: "start",
                    originY: "top",
                    overlayX: "start",
                    overlayY: "top",
                  },
                  {
                    originX: "start",
                    originY: "bottom",
                    overlayX: "start",
                    overlayY: "bottom",
                  },
                ]);
            }
            _calculateOverlayScroll(e, i, r) {
              const s = this._getItemHeight();
              return Math.min(Math.max(0, s * e - i + s / 2), r);
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe(_e(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._triggerRect =
                        this.trigger.nativeElement.getBoundingClientRect()),
                      this._changeDetectorRef.markForCheck());
                  });
            }
            open() {
              super._canOpen() &&
                (super.open(),
                (this._triggerRect =
                  this.trigger.nativeElement.getBoundingClientRect()),
                (this._triggerFontSize = parseInt(
                  getComputedStyle(this.trigger.nativeElement).fontSize || "0"
                )),
                this._calculateOverlayPosition(),
                this._ngZone.onStable.pipe(Vt(1)).subscribe(() => {
                  this._triggerFontSize &&
                    this._overlayDir.overlayRef &&
                    this._overlayDir.overlayRef.overlayElement &&
                    (this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`);
                }));
            }
            _scrollOptionIntoView(e) {
              const i = KA(e, this.options, this.optionGroups),
                r = this._getItemHeight();
              this.panel.nativeElement.scrollTop =
                0 === e && 1 === i
                  ? 0
                  : (function Oq(n, t, e, i) {
                      return n < e
                        ? n
                        : n + t > e + i
                        ? Math.max(0, n - i + t)
                        : e;
                    })((e + i) * r, r, this.panel.nativeElement.scrollTop, 256);
            }
            _positioningSettled() {
              this._calculateOverlayOffsetX(),
                (this.panel.nativeElement.scrollTop = this._scrollTop);
            }
            _panelDoneAnimating(e) {
              this.panelOpen
                ? (this._scrollTop = 0)
                : ((this._overlayDir.offsetX = 0),
                  this._changeDetectorRef.markForCheck()),
                super._panelDoneAnimating(e);
            }
            _getChangeEvent(e) {
              return new vX(this, e);
            }
            _calculateOverlayOffsetX() {
              const e =
                  this._overlayDir.overlayRef.overlayElement.getBoundingClientRect(),
                i = this._viewportRuler.getViewportSize(),
                r = this._isRtl(),
                s = this.multiple ? 56 : 32;
              let o;
              if (this.multiple) o = 40;
              else if (this.disableOptionCentering) o = 16;
              else {
                let c = this._selectionModel.selected[0] || this.options.first;
                o = c && c.group ? 32 : 16;
              }
              r || (o *= -1);
              const a = 0 - (e.left + o - (r ? s : 0)),
                l = e.right + o - i.width + (r ? 0 : s);
              a > 0 ? (o += a + 8) : l > 0 && (o -= l + 8),
                (this._overlayDir.offsetX = Math.round(o)),
                this._overlayDir.overlayRef.updatePosition();
            }
            _calculateOverlayOffsetY(e, i, r) {
              const s = this._getItemHeight(),
                o = (s - this._triggerRect.height) / 2,
                a = Math.floor(256 / s);
              let l;
              return this.disableOptionCentering
                ? 0
                : ((l =
                    0 === this._scrollTop
                      ? e * s
                      : this._scrollTop === r
                      ? (e - (this._getItemCount() - a)) * s +
                        (s - ((this._getItemCount() * s - 256) % s))
                      : i - s / 2),
                  Math.round(-1 * l - o));
            }
            _checkOverlayWithinViewport(e) {
              const i = this._getItemHeight(),
                r = this._viewportRuler.getViewportSize(),
                s = this._triggerRect.top - 8,
                o = r.height - this._triggerRect.bottom - 8,
                a = Math.abs(this._offsetY),
                c =
                  Math.min(this._getItemCount() * i, 256) -
                  a -
                  this._triggerRect.height;
              c > o
                ? this._adjustPanelUp(c, o)
                : a > s
                ? this._adjustPanelDown(a, s, e)
                : (this._transformOrigin = this._getOriginBasedOnOption());
            }
            _adjustPanelUp(e, i) {
              const r = Math.round(e - i);
              (this._scrollTop -= r),
                (this._offsetY -= r),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop <= 0 &&
                  ((this._scrollTop = 0),
                  (this._offsetY = 0),
                  (this._transformOrigin = "50% bottom 0px"));
            }
            _adjustPanelDown(e, i, r) {
              const s = Math.round(e - i);
              if (
                ((this._scrollTop += s),
                (this._offsetY += s),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop >= r)
              )
                return (
                  (this._scrollTop = r),
                  (this._offsetY = 0),
                  void (this._transformOrigin = "50% top 0px")
                );
            }
            _calculateOverlayPosition() {
              const e = this._getItemHeight(),
                i = this._getItemCount(),
                r = Math.min(i * e, 256),
                o = i * e - r;
              let a;
              (a = this.empty
                ? 0
                : Math.max(
                    this.options
                      .toArray()
                      .indexOf(this._selectionModel.selected[0]),
                    0
                  )),
                (a += KA(a, this.options, this.optionGroups));
              const l = r / 2;
              (this._scrollTop = this._calculateOverlayScroll(a, l, o)),
                (this._offsetY = this._calculateOverlayOffsetY(a, l, o)),
                this._checkOverlayWithinViewport(o);
            }
            _getOriginBasedOnOption() {
              const e = this._getItemHeight(),
                i = (e - this._triggerRect.height) / 2;
              return `50% ${Math.abs(this._offsetY) - i + e / 2}px 0px`;
            }
            _getItemHeight() {
              return 3 * this._triggerFontSize;
            }
            _getItemCount() {
              return this.options.length + this.optionGroups.length;
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = tt(n)))(i || n);
              };
            })()),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-select"]],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (Ue(r, CX, 5), Ue(r, lo, 5), Ue(r, YA, 5)), 2 & e)
                ) {
                  let s;
                  se((s = oe())) && (i.customTrigger = s.first),
                    se((s = oe())) && (i.options = s),
                    se((s = oe())) && (i.optionGroups = s);
                }
              },
              hostAttrs: [
                "role",
                "combobox",
                "aria-autocomplete",
                "none",
                "aria-haspopup",
                "true",
                1,
                "mat-select",
              ],
              hostVars: 19,
              hostBindings: function (e, i) {
                1 & e &&
                  P("keydown", function (s) {
                    return i._handleKeydown(s);
                  })("focus", function () {
                    return i._onFocus();
                  })("blur", function () {
                    return i._onBlur();
                  }),
                  2 & e &&
                    (ze("id", i.id)("tabindex", i.tabIndex)(
                      "aria-controls",
                      i.panelOpen ? i.id + "-panel" : null
                    )("aria-expanded", i.panelOpen)(
                      "aria-label",
                      i.ariaLabel || null
                    )("aria-required", i.required.toString())(
                      "aria-disabled",
                      i.disabled.toString()
                    )("aria-invalid", i.errorState)(
                      "aria-activedescendant",
                      i._getAriaActiveDescendant()
                    ),
                    Ye("mat-select-disabled", i.disabled)(
                      "mat-select-invalid",
                      i.errorState
                    )("mat-select-required", i.required)(
                      "mat-select-empty",
                      i.empty
                    )("mat-select-multiple", i.multiple));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                tabIndex: "tabIndex",
              },
              exportAs: ["matSelect"],
              features: [
                pe([
                  { provide: Uh, useExisting: n },
                  { provide: GA, useExisting: n },
                ]),
                q,
              ],
              ngContentSelectors: fX,
              decls: 9,
              vars: 12,
              consts: [
                ["cdk-overlay-origin", "", 1, "mat-select-trigger", 3, "click"],
                ["origin", "cdkOverlayOrigin", "trigger", ""],
                [1, "mat-select-value", 3, "ngSwitch"],
                [
                  "class",
                  "mat-select-placeholder mat-select-min-line",
                  4,
                  "ngSwitchCase",
                ],
                [
                  "class",
                  "mat-select-value-text",
                  3,
                  "ngSwitch",
                  4,
                  "ngSwitchCase",
                ],
                [1, "mat-select-arrow-wrapper"],
                [1, "mat-select-arrow"],
                [
                  "cdk-connected-overlay",
                  "",
                  "cdkConnectedOverlayLockPosition",
                  "",
                  "cdkConnectedOverlayHasBackdrop",
                  "",
                  "cdkConnectedOverlayBackdropClass",
                  "cdk-overlay-transparent-backdrop",
                  3,
                  "cdkConnectedOverlayPanelClass",
                  "cdkConnectedOverlayScrollStrategy",
                  "cdkConnectedOverlayOrigin",
                  "cdkConnectedOverlayOpen",
                  "cdkConnectedOverlayPositions",
                  "cdkConnectedOverlayMinWidth",
                  "cdkConnectedOverlayOffsetY",
                  "backdropClick",
                  "attach",
                  "detach",
                ],
                [1, "mat-select-placeholder", "mat-select-min-line"],
                [1, "mat-select-value-text", 3, "ngSwitch"],
                ["class", "mat-select-min-line", 4, "ngSwitchDefault"],
                [4, "ngSwitchCase"],
                [1, "mat-select-min-line"],
                [1, "mat-select-panel-wrap"],
                ["role", "listbox", "tabindex", "-1", 3, "ngClass", "keydown"],
                ["panel", ""],
              ],
              template: function (e, i) {
                if (
                  (1 & e &&
                    (Nt(hX),
                    b(0, "div", 0, 1),
                    P("click", function () {
                      return i.toggle();
                    }),
                    b(3, "div", 2),
                    B(4, aX, 2, 1, "span", 3),
                    B(5, uX, 3, 2, "span", 4),
                    y(),
                    b(6, "div", 5),
                    ge(7, "div", 6),
                    y()(),
                    B(8, dX, 4, 14, "ng-template", 7),
                    P("backdropClick", function () {
                      return i.close();
                    })("attach", function () {
                      return i._onAttached();
                    })("detach", function () {
                      return i.close();
                    })),
                  2 & e)
                ) {
                  const r = (function Km(n) {
                    return Ro(
                      (function kR() {
                        return le.lFrame.contextLView;
                      })(),
                      22 + n
                    );
                  })(1);
                  ze("aria-owns", i.panelOpen ? i.id + "-panel" : null),
                    E(3),
                    T("ngSwitch", i.empty),
                    ze("id", i._valueId),
                    E(1),
                    T("ngSwitchCase", !0),
                    E(1),
                    T("ngSwitchCase", !1),
                    E(3),
                    T("cdkConnectedOverlayPanelClass", i._overlayPanelClass)(
                      "cdkConnectedOverlayScrollStrategy",
                      i._scrollStrategy
                    )("cdkConnectedOverlayOrigin", r)(
                      "cdkConnectedOverlayOpen",
                      i.panelOpen
                    )("cdkConnectedOverlayPositions", i._positions)(
                      "cdkConnectedOverlayMinWidth",
                      null == i._triggerRect ? null : i._triggerRect.width
                    )("cdkConnectedOverlayOffsetY", i._offsetY);
                }
              },
              dependencies: [zg, Hl, $g, bx, OI, II],
              styles: [
                '.mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}',
              ],
              encapsulation: 2,
              data: { animation: [HI.transformPanelWrap, HI.transformPanel] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        MX = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({
              providers: [yX],
              imports: [Ki, ja, XA, Me, Co, Wy, XA, Me],
            })),
            n
          );
        })();
      function DX(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " Nome do membro \xe9 obrigat\xf3rio "),
          y());
      }
      function xX(n, t) {
        if ((1 & n && (b(0, "mat-option", 9), w(1), y()), 2 & n)) {
          const e = t.$implicit;
          T("value", e.id_equipe), E(1), dt(" ", e.nome_equipe, " ");
        }
      }
      function EX(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " \xc9 necess\xe1rio selecionar a equipe "),
          y());
      }
      let SX = (() => {
        class n {
          constructor(e, i, r, s) {
            (this.createMembroService = e),
              (this.equipesService = i),
              (this.formBuilder = r),
              (this.avisoMsg = s),
              (this.formulario = this.formBuilder.group({
                nome: [null, wt.required],
                funcao: [null],
                equipe: [null, wt.required],
              })),
              (this.membro = { nome_membro: "", funcao: "", id_equipe: 0 });
          }
          ngOnInit() {
            this.equipes = this.equipesService.read();
          }
          goBack() {
            history.back();
          }
          onSubmit() {
            this.createMembroService
              .create({ membro: this.membro })
              .subscribe(() => {
                this.goBack(),
                  this.avisoMsg.showMsg({ msg: " Membro criado com sucesso " });
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(co), g(sr), g(Ir), g(Tn));
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["app-create-membros"]],
            decls: 21,
            vars: 10,
            consts: [
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "name",
                "name_member",
                "formControlName",
                "nome",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              [
                "matInput",
                "",
                "placeholder",
                "Fun\xe7\xe3o do Membro",
                "name",
                "funcao",
                "formControlName",
                "funcao",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [
                "name",
                "id_equipe",
                "formControlName",
                "equipe",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [3, "value", 4, "ngFor", "ngForOf"],
              [
                "mat-raised-button",
                "",
                "type",
                "submit",
                1,
                "salvar",
                3,
                "disabled",
              ],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "form", 0),
                P("ngSubmit", function () {
                  return i.onSubmit();
                }),
                b(1, "mat-form-field", 1)(2, "mat-label"),
                w(3, "Nome do membro"),
                y(),
                b(4, "input", 2),
                P("ngModelChange", function (s) {
                  return (i.membro.nome_membro = s);
                }),
                y(),
                B(5, DX, 2, 0, "mat-error", 3),
                y(),
                b(6, "mat-form-field", 1)(7, "mat-label"),
                w(8, "Fun\xe7\xe3o do membro"),
                y(),
                b(9, "input", 4),
                P("ngModelChange", function (s) {
                  return (i.membro.funcao = s);
                }),
                y()(),
                b(10, "mat-form-field", 1)(11, "mat-label"),
                w(12, "Nome da Equipe"),
                y(),
                b(13, "mat-select", 5),
                P("ngModelChange", function (s) {
                  return (i.membro.id_equipe = s);
                }),
                B(14, xX, 2, 2, "mat-option", 6),
                qi(15, "async"),
                y(),
                B(16, EX, 2, 0, "mat-error", 3),
                y(),
                b(17, "button", 7),
                w(18, " Salvar "),
                y(),
                b(19, "button", 8),
                P("click", function () {
                  return i.goBack();
                }),
                w(20, " Cancelar "),
                y()()),
                2 & e &&
                  (T("formGroup", i.formulario),
                  E(4),
                  T("ngModel", i.membro.nome_membro),
                  E(1),
                  T("ngIf", i.formulario.controls.nome.hasError("required")),
                  E(4),
                  T("ngModel", i.membro.funcao),
                  E(4),
                  T("ngModel", i.membro.id_equipe),
                  E(1),
                  T("ngForOf", Wi(15, 8, i.equipes)),
                  E(2),
                  T("ngIf", i.formulario.controls.equipe.hasError("required")),
                  E(1),
                  T("disabled", !i.formulario.valid));
            },
            dependencies: [
              Mn,
              At,
              er,
              oi,
              Qi,
              Ji,
              ps,
              Kt,
              Vr,
              jr,
              Ai,
              Hr,
              Ua,
              lo,
              En,
              Ei,
              as,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:10rem}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function TX(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " Nome do membro \xe9 obrigat\xf3rio "),
          y());
      }
      function AX(n, t) {
        if ((1 & n && (b(0, "mat-option", 9), w(1), y()), 2 & n)) {
          const e = t.$implicit;
          T("value", e.id_equipe), E(1), dt(" ", e.nome_equipe, " ");
        }
      }
      function kX(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " \xc9 necess\xe1rio selecionar a equipe "),
          y());
      }
      let IX = (() => {
        class n {
          constructor(e, i, r, s, o, a) {
            (this.membroService = e),
              (this.equipesService = i),
              (this.formBuilder = r),
              (this.route = s),
              (this.router = o),
              (this.aviso = a),
              (this.formulario = this.formBuilder.group({
                nome: [null, wt.required],
                funcao: [null],
                equipe: [null, wt.required],
              })),
              (this.membro = { nome_membro: "", funcao: "", id_equipe: 0 });
          }
          ngOnInit() {
            this.equipes = this.equipesService.read();
            const e = this.route.snapshot.paramMap.get("id");
            this.membroService.getById({ id: `${e}` }).subscribe((i) => {
              this.membro = i;
            });
          }
          goBack() {
            history.back();
          }
          onSubmit() {
            this.membroService.update({ membro: this.membro }).subscribe(() => {
              this.aviso.showMsg({ msg: "Membro atualizado com sucesso" }),
                this.goBack();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(co), g(sr), g(Ir), g(Wn), g(Pe), g(Tn));
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["app-update-membro"]],
            decls: 21,
            vars: 10,
            consts: [
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "name",
                "name_member",
                "formControlName",
                "nome",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              [
                "matInput",
                "",
                "placeholder",
                "Fun\xe7\xe3o do Membro",
                "formControlName",
                "funcao",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["name", "id_equipe", "formControlName", "equipe", 3, "ngModel"],
              [3, "value", 4, "ngFor", "ngForOf"],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "form", 0),
                P("ngSubmit", function () {
                  return i.onSubmit();
                }),
                b(1, "mat-form-field", 1)(2, "mat-label"),
                w(3, "Nome do membro"),
                y(),
                b(4, "input", 2),
                P("ngModelChange", function (s) {
                  return (i.membro.nome_membro = s);
                }),
                y(),
                B(5, TX, 2, 0, "mat-error", 3),
                y(),
                b(6, "mat-form-field", 1)(7, "mat-label"),
                w(8, "Fun\xe7\xe3o do membro"),
                y(),
                b(9, "input", 4),
                P("ngModelChange", function (s) {
                  return (i.membro.funcao = s);
                }),
                y()(),
                b(10, "mat-form-field", 1)(11, "mat-label"),
                w(12, "Nome da Equipe"),
                y(),
                b(13, "mat-select", 5),
                B(14, AX, 2, 2, "mat-option", 6),
                qi(15, "async"),
                y(),
                B(16, kX, 2, 0, "mat-error", 3),
                y(),
                b(17, "button", 7),
                w(18, " Salvar "),
                y(),
                b(19, "button", 8),
                P("click", function () {
                  return i.goBack();
                }),
                w(20, " Cancelar "),
                y()()),
                2 & e &&
                  (T("formGroup", i.formulario),
                  E(4),
                  T("ngModel", i.membro.nome_membro),
                  E(1),
                  T("ngIf", i.formulario.controls.nome.hasError("required")),
                  E(4),
                  T("ngModel", i.membro.funcao),
                  E(4),
                  T("ngModel", i.membro.id_equipe),
                  E(1),
                  T("ngForOf", Wi(15, 8, i.equipes)),
                  E(2),
                  T("ngIf", i.formulario.controls.equipe.hasError("required")),
                  E(1),
                  T("disabled", !i.formulario.valid));
            },
            dependencies: [
              Mn,
              At,
              er,
              oi,
              Qi,
              Ji,
              ps,
              Kt,
              Vr,
              jr,
              Ai,
              Hr,
              Ua,
              lo,
              En,
              Ei,
              as,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:10rem}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function OX(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " Nome do projeto \xe9 necess\xe1rio "),
          y());
      }
      function RX(n, t) {
        if ((1 & n && (b(0, "mat-option", 10), w(1), y()), 2 & n)) {
          const e = t.$implicit;
          T("value", e.id_equipe),
            E(1),
            ss(" ", e.id_equipe, " - ", e.nome_equipe, " ");
        }
      }
      function PX(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " \xc9 necess\xe1rio escolher a equipe "),
          y());
      }
      let FX = (() => {
        class n {
          constructor(e, i, r, s, o) {
            (this.router = e),
              (this.avisoMsg = i),
              (this.createProjeto = r),
              (this.equipesService = s),
              (this.formBuilder = o),
              (this.formulario = this.formBuilder.group({
                nome: [null, wt.required],
                descricao: [null],
                equipe: [null, wt.required],
              })),
              (this.projeto = {
                nome_projeto: "",
                descricao: "",
                id_equipe: 0,
              });
          }
          ngOnInit() {
            this.equipes = this.equipesService.read();
          }
          goBack() {
            this.router.navigate(["projetos"]);
          }
          onSubmit() {
            this.createProjeto.create(this.projeto).subscribe(() => {
              this.goBack(),
                this.avisoMsg.showMsg({ msg: "Projeto criado com sucesso" });
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(Pe), g(Tn), g(uo), g(sr), g(Ir));
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["app-create-projetos"]],
            decls: 26,
            vars: 10,
            consts: [
              [1, "form"],
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "placeholder",
                "Nome do projeto",
                "name",
                "name_project",
                "formControlName",
                "nome",
                "maxlength",
                "40",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              [
                "matInput",
                "",
                "name",
                "description",
                "formControlName",
                "descricao",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [
                "name",
                "equipe_responsavel",
                "formControlName",
                "equipe",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [3, "value", 4, "ngFor", "ngForOf"],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "mat-card", 0)(1, "mat-card-title"),
                w(2, " Criar projetos "),
                y(),
                b(3, "mat-card-subtitle"),
                w(4, " \xc1rea para cria\xe7\xe3o de novos projetos "),
                y()(),
                b(5, "form", 1),
                P("ngSubmit", function () {
                  return i.onSubmit();
                }),
                b(6, "mat-form-field", 2)(7, "mat-label"),
                w(8, "Nome do projeto"),
                y(),
                b(9, "input", 3),
                P("ngModelChange", function (s) {
                  return (i.projeto.nome_projeto = s);
                }),
                y(),
                B(10, OX, 2, 0, "mat-error", 4),
                y(),
                b(11, "mat-form-field", 2)(12, "mat-label"),
                w(13, "Descri\xe7\xe3o do projeto"),
                y(),
                b(14, "textarea", 5),
                P("ngModelChange", function (s) {
                  return (i.projeto.descricao = s);
                }),
                y()(),
                b(15, "mat-form-field", 2)(16, "mat-label"),
                w(17, "Equipe respons\xe1vel"),
                y(),
                b(18, "mat-select", 6),
                P("ngModelChange", function (s) {
                  return (i.projeto.id_equipe = s);
                }),
                B(19, RX, 2, 3, "mat-option", 7),
                qi(20, "async"),
                y(),
                B(21, PX, 2, 0, "mat-error", 4),
                y(),
                b(22, "button", 8),
                w(23, " Salvar "),
                y(),
                b(24, "button", 9),
                P("click", function () {
                  return i.goBack();
                }),
                w(25, " Cancelar "),
                y()()),
                2 & e &&
                  (E(5),
                  T("formGroup", i.formulario),
                  E(4),
                  T("ngModel", i.projeto.nome_projeto),
                  E(1),
                  T("ngIf", i.formulario.controls.nome.hasError("required")),
                  E(4),
                  T("ngModel", i.projeto.descricao),
                  E(4),
                  T("ngModel", i.projeto.id_equipe),
                  E(1),
                  T("ngForOf", Wi(20, 8, i.equipes)),
                  E(2),
                  T("ngIf", i.formulario.controls.equipe.hasError("required")),
                  E(1),
                  T("disabled", !i.formulario.valid));
            },
            dependencies: [
              Mn,
              At,
              er,
              oi,
              Qi,
              Ji,
              ps,
              Kt,
              lr,
              or,
              ar,
              Vr,
              jr,
              Ai,
              Hr,
              Ua,
              lo,
              En,
              Ei,
              as,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:150px}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function NX(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " Nome do projeto \xe9 necess\xe1rio "),
          y());
      }
      function LX(n, t) {
        if ((1 & n && (b(0, "mat-option", 10), w(1), y()), 2 & n)) {
          const e = t.$implicit;
          T("value", e.id_equipe),
            E(1),
            ss(" ", e.id_equipe, " - ", e.nome_equipe, " ");
        }
      }
      function BX(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " \xc9 necess\xe1rio escolher a equipe "),
          y());
      }
      let VX = (() => {
        class n {
          constructor(e, i, r, s, o, a) {
            (this.createProjeto = e),
              (this.equipesService = i),
              (this.formBuilder = r),
              (this.avisoMsg = s),
              (this.route = o),
              (this.router = a),
              (this.formulario = this.formBuilder.group({
                nome: [null, wt.required],
                descricao: [null],
                equipe: [null, wt.required],
              })),
              (this.projeto = {
                nome_projeto: "",
                descricao: "",
                id_equipe: 0,
              });
          }
          ngOnInit() {
            this.equipes = this.equipesService.read();
            const e = this.route.snapshot.paramMap.get("id");
            this.createProjeto.getById(`${e}`).subscribe((i) => {
              this.projeto = i;
            });
          }
          goBack() {
            this.router.navigate(["projetos"]);
          }
          onSubmit() {
            this.createProjeto.update(this.projeto).subscribe(() => {
              this.avisoMsg.showMsg({ msg: "Projeto atualizado com sucesso" }),
                this.goBack();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(uo), g(sr), g(Ir), g(Tn), g(Wn), g(Pe));
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["app-update-projeto"]],
            decls: 26,
            vars: 10,
            consts: [
              [1, "form"],
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "placeholder",
                "Nome do projeto",
                "name",
                "name_project",
                "formControlName",
                "nome",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              [
                "matInput",
                "",
                "name",
                "description",
                "formControlName",
                "descricao",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [
                "name",
                "equipe_responsavel",
                "formControlName",
                "equipe",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [3, "value", 4, "ngFor", "ngForOf"],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "mat-card", 0)(1, "mat-card-title"),
                w(2, " Atualizar projetos "),
                y(),
                b(3, "mat-card-subtitle"),
                w(4, " \xc1rea para atualiza\xe7\xe3o de projetos"),
                y()(),
                b(5, "form", 1),
                P("ngSubmit", function () {
                  return i.onSubmit();
                }),
                b(6, "mat-form-field", 2)(7, "mat-label"),
                w(8, "Nome do projeto"),
                y(),
                b(9, "input", 3),
                P("ngModelChange", function (s) {
                  return (i.projeto.nome_projeto = s);
                }),
                y(),
                B(10, NX, 2, 0, "mat-error", 4),
                y(),
                b(11, "mat-form-field", 2)(12, "mat-label"),
                w(13, "Descri\xe7\xe3o do projeto"),
                y(),
                b(14, "textarea", 5),
                P("ngModelChange", function (s) {
                  return (i.projeto.descricao = s);
                }),
                y()(),
                b(15, "mat-form-field", 2)(16, "mat-label"),
                w(17, "Equipe respons\xe1vel"),
                y(),
                b(18, "mat-select", 6),
                P("ngModelChange", function (s) {
                  return (i.projeto.id_equipe = s);
                }),
                B(19, LX, 2, 3, "mat-option", 7),
                qi(20, "async"),
                y(),
                B(21, BX, 2, 0, "mat-error", 4),
                y(),
                b(22, "button", 8),
                w(23, " Salvar "),
                y(),
                b(24, "button", 9),
                P("click", function () {
                  return i.goBack();
                }),
                w(25, " Cancelar "),
                y()()),
                2 & e &&
                  (E(5),
                  T("formGroup", i.formulario),
                  E(4),
                  T("ngModel", i.projeto.nome_projeto),
                  E(1),
                  T("ngIf", i.formulario.controls.nome.hasError("required")),
                  E(4),
                  T("ngModel", i.projeto.descricao),
                  E(4),
                  T("ngModel", i.projeto.id_equipe),
                  E(1),
                  T("ngForOf", Wi(20, 8, i.equipes)),
                  E(2),
                  T("ngIf", i.formulario.controls.equipe.hasError("required")),
                  E(1),
                  T("disabled", !i.formulario.valid));
            },
            dependencies: [
              Mn,
              At,
              er,
              oi,
              Qi,
              Ji,
              Kt,
              lr,
              or,
              ar,
              Vr,
              jr,
              Ai,
              Hr,
              Ua,
              lo,
              En,
              Ei,
              as,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:150px}button.salvar[_ngcontent-%COMP%]{background-color:#60e160}button.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function jX(n, t) {
        if (
          (1 & n &&
            (b(0, "li", 1)(1, "span", 2),
            w(2),
            y(),
            b(3, "span", 3),
            w(4),
            y()()),
          2 & n)
        ) {
          const e = t.$implicit;
          Cn("routerLink", "dados/", e.id_projeto, ""),
            E(2),
            gt(e.nome_projeto),
            E(2),
            dt(" ", e.descricao, " ");
        }
      }
      let HX = (() => {
          class n {
            constructor(e, i, r) {
              (this.projetoService = e),
                (this.message = i),
                (this.dialog = r),
                (this.projetos = []);
            }
            ngOnInit() {
              this.projetoService.read().subscribe((e) => {
                this.projetos = e;
              });
            }
            atualizaProjeto() {
              this.message.showMsg({ msg: "Fun\xe7\xe3o em constru\xe7\xe3o" });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(uo), g(Tn), g(Es));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-read-projetos"]],
              decls: 2,
              vars: 1,
              consts: [
                [3, "routerLink", 4, "ngFor", "ngForOf"],
                [3, "routerLink"],
                [1, "nome"],
                [1, "descricao"],
              ],
              template: function (e, i) {
                1 & e && (b(0, "ul"), B(1, jX, 5, 3, "li", 0), y()),
                  2 & e && (E(1), T("ngForOf", i.projetos));
              },
              dependencies: [ir, Mn],
              styles: [
                "ul[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}li[_ngcontent-%COMP%]{background-color:#232b67;border:1px solid #000000;border-radius:10px;color:#fff;display:flex;flex-direction:column;justify-content:space-around;line-height:2rem;list-style:none;margin:10px;min-width:25rem;padding:30px;width:35%;box-sizing:content-box;cursor:pointer}li[_ngcontent-%COMP%]   span.nome[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;margin:2px}",
              ],
            })),
            n
          );
        })(),
        zX = (() => {
          class n {
            constructor(e) {
              this.router = e;
            }
            ngOnInit() {}
            goToCreateProjeto() {
              this.router.navigate(["projetos/create"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Pe));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-projetos"]],
              decls: 5,
              vars: 0,
              consts: [
                [1, "title-view"],
                ["mat-raised-button", "", 1, "add", 3, "click"],
                [
                  "src",
                  "./../../../../assets/images/add_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "h1", 0),
                  w(1, "Projetos"),
                  y(),
                  ge(2, "app-read-projetos"),
                  b(3, "button", 1),
                  P("click", function () {
                    return i.goToCreateProjeto();
                  }),
                  ge(4, "img", 2),
                  y());
              },
              dependencies: [Kt, HX],
            })),
            n
          );
        })(),
        UX = (() => {
          class n {
            constructor(e, i, r, s) {
              (this.dialog = e),
                (this.http = i),
                (this.message = r),
                (this.data = s);
            }
            fechaDialog() {
              this.dialog.close();
            }
            deletaTarefa(e) {
              this.http.delete(`${Nr_apiUrl}tarefas/${e}`).subscribe(() => {
                this.message.showMsg({
                  msg: "Tarefa deletada com sucesso\nFavor recarregar a p\xe1gina ",
                });
              }),
                this.fechaDialog();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Zc), g(Gn), g(Tn), g(Qc));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-delete-warning"]],
              decls: 11,
              vars: 0,
              consts: [
                [1, "material-icons"],
                [3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "h1")(1, "i", 0),
                  w(2, " warning "),
                  y(),
                  w(3, " Aviso\n"),
                  y(),
                  b(4, "p"),
                  w(5, "Tem certeza que deseja deletar essa tarefa?"),
                  y(),
                  b(6, "div")(7, "button", 1),
                  P("click", function () {
                    return i.fechaDialog();
                  }),
                  w(8, "Fechar"),
                  y(),
                  b(9, "button", 1),
                  P("click", function () {
                    return i.deletaTarefa(i.data);
                  }),
                  w(10, "Deletar"),
                  y()());
              },
              styles: [
                "h1[_ngcontent-%COMP%]{align-items:center;display:flex}h1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:5px}button[_ngcontent-%COMP%]{border-radius:5px;height:1.5rem;margin-right:5px;padding:0 10px}button.deletar[_ngcontent-%COMP%]:hover{background-color:#f005}",
              ],
            })),
            n
          );
        })();
      const $X = ["tooltip"],
        qI = "tooltip-panel",
        WI = Ta({ passive: !0 }),
        GI = new R("mat-tooltip-scroll-strategy"),
        YX = {
          provide: GI,
          deps: [Kn],
          useFactory: function GX(n) {
            return () => n.scrollStrategies.reposition({ scrollThrottle: 20 });
          },
        },
        KX = new R("mat-tooltip-default-options", {
          providedIn: "root",
          factory: function XX() {
            return { showDelay: 0, hideDelay: 0, touchendHideDelay: 1500 };
          },
        });
      let ZX = (() => {
          class n {
            constructor(e, i, r, s, o, a, l, c, u, d, h, f) {
              (this._overlay = e),
                (this._elementRef = i),
                (this._scrollDispatcher = r),
                (this._viewContainerRef = s),
                (this._ngZone = o),
                (this._platform = a),
                (this._ariaDescriber = l),
                (this._focusMonitor = c),
                (this._dir = d),
                (this._defaultOptions = h),
                (this._position = "below"),
                (this._disabled = !1),
                (this._viewInitialized = !1),
                (this._pointerExitEventsInitialized = !1),
                (this._viewportMargin = 8),
                (this._cssClassPrefix = "mat"),
                (this._showDelay = this._defaultOptions.showDelay),
                (this._hideDelay = this._defaultOptions.hideDelay),
                (this.touchGestures = "auto"),
                (this._message = ""),
                (this._passiveListeners = []),
                (this._destroyed = new $()),
                (this._scrollStrategy = u),
                (this._document = f),
                h &&
                  (h.position && (this.position = h.position),
                  h.touchGestures && (this.touchGestures = h.touchGestures)),
                d.change.pipe(_e(this._destroyed)).subscribe(() => {
                  this._overlayRef && this._updatePosition(this._overlayRef);
                });
            }
            get position() {
              return this._position;
            }
            set position(e) {
              e !== this._position &&
                ((this._position = e),
                this._overlayRef &&
                  (this._updatePosition(this._overlayRef),
                  this._tooltipInstance?.show(0),
                  this._overlayRef.updatePosition()));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = ke(e)),
                this._disabled
                  ? this.hide(0)
                  : this._setupPointerEnterEventsIfNeeded();
            }
            get showDelay() {
              return this._showDelay;
            }
            set showDelay(e) {
              this._showDelay = Ti(e);
            }
            get hideDelay() {
              return this._hideDelay;
            }
            set hideDelay(e) {
              (this._hideDelay = Ti(e)),
                this._tooltipInstance &&
                  (this._tooltipInstance._mouseLeaveHideDelay =
                    this._hideDelay);
            }
            get message() {
              return this._message;
            }
            set message(e) {
              this._ariaDescriber.removeDescription(
                this._elementRef.nativeElement,
                this._message,
                "tooltip"
              ),
                (this._message = null != e ? String(e).trim() : ""),
                !this._message && this._isTooltipVisible()
                  ? this.hide(0)
                  : (this._setupPointerEnterEventsIfNeeded(),
                    this._updateTooltipMessage(),
                    this._ngZone.runOutsideAngular(() => {
                      Promise.resolve().then(() => {
                        this._ariaDescriber.describe(
                          this._elementRef.nativeElement,
                          this.message,
                          "tooltip"
                        );
                      });
                    }));
            }
            get tooltipClass() {
              return this._tooltipClass;
            }
            set tooltipClass(e) {
              (this._tooltipClass = e),
                this._tooltipInstance &&
                  this._setTooltipClass(this._tooltipClass);
            }
            ngAfterViewInit() {
              (this._viewInitialized = !0),
                this._setupPointerEnterEventsIfNeeded(),
                this._focusMonitor
                  .monitor(this._elementRef)
                  .pipe(_e(this._destroyed))
                  .subscribe((e) => {
                    e
                      ? "keyboard" === e && this._ngZone.run(() => this.show())
                      : this._ngZone.run(() => this.hide(0));
                  });
            }
            ngOnDestroy() {
              const e = this._elementRef.nativeElement;
              clearTimeout(this._touchstartTimeout),
                this._overlayRef &&
                  (this._overlayRef.dispose(), (this._tooltipInstance = null)),
                this._passiveListeners.forEach(([i, r]) => {
                  e.removeEventListener(i, r, WI);
                }),
                (this._passiveListeners.length = 0),
                this._destroyed.next(),
                this._destroyed.complete(),
                this._ariaDescriber.removeDescription(
                  e,
                  this.message,
                  "tooltip"
                ),
                this._focusMonitor.stopMonitoring(e);
            }
            show(e = this.showDelay) {
              if (
                this.disabled ||
                !this.message ||
                (this._isTooltipVisible() &&
                  !this._tooltipInstance._showTimeoutId &&
                  !this._tooltipInstance._hideTimeoutId)
              )
                return;
              const i = this._createOverlay();
              this._detach(),
                (this._portal =
                  this._portal ||
                  new Va(this._tooltipComponent, this._viewContainerRef));
              const r = (this._tooltipInstance = i.attach(
                this._portal
              ).instance);
              (r._triggerElement = this._elementRef.nativeElement),
                (r._mouseLeaveHideDelay = this._hideDelay),
                r
                  .afterHidden()
                  .pipe(_e(this._destroyed))
                  .subscribe(() => this._detach()),
                this._setTooltipClass(this._tooltipClass),
                this._updateTooltipMessage(),
                r.show(e);
            }
            hide(e = this.hideDelay) {
              this._tooltipInstance && this._tooltipInstance.hide(e);
            }
            toggle() {
              this._isTooltipVisible() ? this.hide() : this.show();
            }
            _isTooltipVisible() {
              return (
                !!this._tooltipInstance && this._tooltipInstance.isVisible()
              );
            }
            _createOverlay() {
              if (this._overlayRef) return this._overlayRef;
              const e = this._scrollDispatcher.getAncestorScrollContainers(
                  this._elementRef
                ),
                i = this._overlay
                  .position()
                  .flexibleConnectedTo(this._elementRef)
                  .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)
                  .withFlexibleDimensions(!1)
                  .withViewportMargin(this._viewportMargin)
                  .withScrollableContainers(e);
              return (
                i.positionChanges.pipe(_e(this._destroyed)).subscribe((r) => {
                  this._updateCurrentPositionClass(r.connectionPair),
                    this._tooltipInstance &&
                      r.scrollableViewProperties.isOverlayClipped &&
                      this._tooltipInstance.isVisible() &&
                      this._ngZone.run(() => this.hide(0));
                }),
                (this._overlayRef = this._overlay.create({
                  direction: this._dir,
                  positionStrategy: i,
                  panelClass: `${this._cssClassPrefix}-${qI}`,
                  scrollStrategy: this._scrollStrategy(),
                })),
                this._updatePosition(this._overlayRef),
                this._overlayRef
                  .detachments()
                  .pipe(_e(this._destroyed))
                  .subscribe(() => this._detach()),
                this._overlayRef
                  .outsidePointerEvents()
                  .pipe(_e(this._destroyed))
                  .subscribe(() =>
                    this._tooltipInstance?._handleBodyInteraction()
                  ),
                this._overlayRef
                  .keydownEvents()
                  .pipe(_e(this._destroyed))
                  .subscribe((r) => {
                    this._isTooltipVisible() &&
                      27 === r.keyCode &&
                      !Si(r) &&
                      (r.preventDefault(),
                      r.stopPropagation(),
                      this._ngZone.run(() => this.hide(0)));
                  }),
                this._defaultOptions?.disableTooltipInteractivity &&
                  this._overlayRef.addPanelClass(
                    `${this._cssClassPrefix}-tooltip-panel-non-interactive`
                  ),
                this._overlayRef
              );
            }
            _detach() {
              this._overlayRef &&
                this._overlayRef.hasAttached() &&
                this._overlayRef.detach(),
                (this._tooltipInstance = null);
            }
            _updatePosition(e) {
              const i = e.getConfig().positionStrategy,
                r = this._getOrigin(),
                s = this._getOverlayPosition();
              i.withPositions([
                this._addOffset({ ...r.main, ...s.main }),
                this._addOffset({ ...r.fallback, ...s.fallback }),
              ]);
            }
            _addOffset(e) {
              return e;
            }
            _getOrigin() {
              const e = !this._dir || "ltr" == this._dir.value,
                i = this.position;
              let r;
              "above" == i || "below" == i
                ? (r = {
                    originX: "center",
                    originY: "above" == i ? "top" : "bottom",
                  })
                : "before" == i || ("left" == i && e) || ("right" == i && !e)
                ? (r = { originX: "start", originY: "center" })
                : ("after" == i ||
                    ("right" == i && e) ||
                    ("left" == i && !e)) &&
                  (r = { originX: "end", originY: "center" });
              const { x: s, y: o } = this._invertPosition(r.originX, r.originY);
              return { main: r, fallback: { originX: s, originY: o } };
            }
            _getOverlayPosition() {
              const e = !this._dir || "ltr" == this._dir.value,
                i = this.position;
              let r;
              "above" == i
                ? (r = { overlayX: "center", overlayY: "bottom" })
                : "below" == i
                ? (r = { overlayX: "center", overlayY: "top" })
                : "before" == i || ("left" == i && e) || ("right" == i && !e)
                ? (r = { overlayX: "end", overlayY: "center" })
                : ("after" == i ||
                    ("right" == i && e) ||
                    ("left" == i && !e)) &&
                  (r = { overlayX: "start", overlayY: "center" });
              const { x: s, y: o } = this._invertPosition(
                r.overlayX,
                r.overlayY
              );
              return { main: r, fallback: { overlayX: s, overlayY: o } };
            }
            _updateTooltipMessage() {
              this._tooltipInstance &&
                ((this._tooltipInstance.message = this.message),
                this._tooltipInstance._markForCheck(),
                this._ngZone.onMicrotaskEmpty
                  .pipe(Vt(1), _e(this._destroyed))
                  .subscribe(() => {
                    this._tooltipInstance && this._overlayRef.updatePosition();
                  }));
            }
            _setTooltipClass(e) {
              this._tooltipInstance &&
                ((this._tooltipInstance.tooltipClass = e),
                this._tooltipInstance._markForCheck());
            }
            _invertPosition(e, i) {
              return (
                "above" === this.position || "below" === this.position
                  ? "top" === i
                    ? (i = "bottom")
                    : "bottom" === i && (i = "top")
                  : "end" === e
                  ? (e = "start")
                  : "start" === e && (e = "end"),
                { x: e, y: i }
              );
            }
            _updateCurrentPositionClass(e) {
              const { overlayY: i, originX: r, originY: s } = e;
              let o;
              if (
                ((o =
                  "center" === i
                    ? this._dir && "rtl" === this._dir.value
                      ? "end" === r
                        ? "left"
                        : "right"
                      : "start" === r
                      ? "left"
                      : "right"
                    : "bottom" === i && "top" === s
                    ? "above"
                    : "below"),
                o !== this._currentPosition)
              ) {
                const a = this._overlayRef;
                if (a) {
                  const l = `${this._cssClassPrefix}-${qI}-`;
                  a.removePanelClass(l + this._currentPosition),
                    a.addPanelClass(l + o);
                }
                this._currentPosition = o;
              }
            }
            _setupPointerEnterEventsIfNeeded() {
              this._disabled ||
                !this.message ||
                !this._viewInitialized ||
                this._passiveListeners.length ||
                (this._platformSupportsMouseEvents()
                  ? this._passiveListeners.push([
                      "mouseenter",
                      () => {
                        this._setupPointerExitEventsIfNeeded(), this.show();
                      },
                    ])
                  : "off" !== this.touchGestures &&
                    (this._disableNativeGesturesIfNecessary(),
                    this._passiveListeners.push([
                      "touchstart",
                      () => {
                        this._setupPointerExitEventsIfNeeded(),
                          clearTimeout(this._touchstartTimeout),
                          (this._touchstartTimeout = setTimeout(
                            () => this.show(),
                            500
                          ));
                      },
                    ])),
                this._addListeners(this._passiveListeners));
            }
            _setupPointerExitEventsIfNeeded() {
              if (this._pointerExitEventsInitialized) return;
              this._pointerExitEventsInitialized = !0;
              const e = [];
              if (this._platformSupportsMouseEvents())
                e.push(
                  [
                    "mouseleave",
                    (i) => {
                      const r = i.relatedTarget;
                      (!r || !this._overlayRef?.overlayElement.contains(r)) &&
                        this.hide();
                    },
                  ],
                  ["wheel", (i) => this._wheelListener(i)]
                );
              else if ("off" !== this.touchGestures) {
                this._disableNativeGesturesIfNecessary();
                const i = () => {
                  clearTimeout(this._touchstartTimeout),
                    this.hide(this._defaultOptions.touchendHideDelay);
                };
                e.push(["touchend", i], ["touchcancel", i]);
              }
              this._addListeners(e), this._passiveListeners.push(...e);
            }
            _addListeners(e) {
              e.forEach(([i, r]) => {
                this._elementRef.nativeElement.addEventListener(i, r, WI);
              });
            }
            _platformSupportsMouseEvents() {
              return !this._platform.IOS && !this._platform.ANDROID;
            }
            _wheelListener(e) {
              if (this._isTooltipVisible()) {
                const i = this._document.elementFromPoint(e.clientX, e.clientY),
                  r = this._elementRef.nativeElement;
                i !== r && !r.contains(i) && this.hide();
              }
            }
            _disableNativeGesturesIfNecessary() {
              const e = this.touchGestures;
              if ("off" !== e) {
                const i = this._elementRef.nativeElement,
                  r = i.style;
                ("on" === e ||
                  ("INPUT" !== i.nodeName && "TEXTAREA" !== i.nodeName)) &&
                  (r.userSelect =
                    r.msUserSelect =
                    r.webkitUserSelect =
                    r.MozUserSelect =
                      "none"),
                  ("on" === e || !i.draggable) && (r.webkitUserDrag = "none"),
                  (r.touchAction = "none"),
                  (r.webkitTapHighlightColor = "transparent");
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              js();
            }),
            (n.ɵdir = N({
              type: n,
              inputs: {
                position: ["matTooltipPosition", "position"],
                disabled: ["matTooltipDisabled", "disabled"],
                showDelay: ["matTooltipShowDelay", "showDelay"],
                hideDelay: ["matTooltipHideDelay", "hideDelay"],
                touchGestures: ["matTooltipTouchGestures", "touchGestures"],
                message: ["matTooltip", "message"],
                tooltipClass: ["matTooltipClass", "tooltipClass"],
              },
            })),
            n
          );
        })(),
        QX = (() => {
          class n extends ZX {
            constructor(e, i, r, s, o, a, l, c, u, d, h, f) {
              super(e, i, r, s, o, a, l, c, u, d, h, f),
                (this._tooltipComponent = eZ);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                g(Kn),
                g(ce),
                g(Wc),
                g(en),
                g(Q),
                g(jt),
                g(G8),
                g(ys),
                g(GI),
                g(rr, 8),
                g(KX, 8),
                g(ae)
              );
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [["", "matTooltip", ""]],
              hostAttrs: [1, "mat-tooltip-trigger"],
              exportAs: ["matTooltip"],
              features: [q],
            })),
            n
          );
        })(),
        JX = (() => {
          class n {
            constructor(e, i) {
              (this._changeDetectorRef = e),
                (this._visibility = "initial"),
                (this._closeOnInteraction = !1),
                (this._isVisible = !1),
                (this._onHide = new $()),
                (this._animationsDisabled = "NoopAnimations" === i);
            }
            show(e) {
              clearTimeout(this._hideTimeoutId),
                (this._showTimeoutId = setTimeout(() => {
                  this._toggleVisibility(!0), (this._showTimeoutId = void 0);
                }, e));
            }
            hide(e) {
              clearTimeout(this._showTimeoutId),
                (this._hideTimeoutId = setTimeout(() => {
                  this._toggleVisibility(!1), (this._hideTimeoutId = void 0);
                }, e));
            }
            afterHidden() {
              return this._onHide;
            }
            isVisible() {
              return this._isVisible;
            }
            ngOnDestroy() {
              clearTimeout(this._showTimeoutId),
                clearTimeout(this._hideTimeoutId),
                this._onHide.complete(),
                (this._triggerElement = null);
            }
            _handleBodyInteraction() {
              this._closeOnInteraction && this.hide(0);
            }
            _markForCheck() {
              this._changeDetectorRef.markForCheck();
            }
            _handleMouseLeave({ relatedTarget: e }) {
              (!e || !this._triggerElement.contains(e)) &&
                this.hide(this._mouseLeaveHideDelay);
            }
            _onShow() {}
            _handleAnimationEnd({ animationName: e }) {
              (e === this._showAnimation || e === this._hideAnimation) &&
                this._finalizeAnimation(e === this._showAnimation);
            }
            _finalizeAnimation(e) {
              e
                ? (this._closeOnInteraction = !0)
                : this.isVisible() || this._onHide.next();
            }
            _toggleVisibility(e) {
              const i = this._tooltip.nativeElement,
                r = this._showAnimation,
                s = this._hideAnimation;
              if (
                (i.classList.remove(e ? s : r),
                i.classList.add(e ? r : s),
                (this._isVisible = e),
                e &&
                  !this._animationsDisabled &&
                  "function" == typeof getComputedStyle)
              ) {
                const o = getComputedStyle(i);
                ("0s" === o.getPropertyValue("animation-duration") ||
                  "none" === o.getPropertyValue("animation-name")) &&
                  (this._animationsDisabled = !0);
              }
              e && this._onShow(),
                this._animationsDisabled &&
                  (i.classList.add("_mat-animation-noopable"),
                  this._finalizeAnimation(e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Et), g(Hn, 8));
            }),
            (n.ɵdir = N({ type: n })),
            n
          );
        })(),
        eZ = (() => {
          class n extends JX {
            constructor(e, i, r) {
              super(e, r),
                (this._breakpointObserver = i),
                (this._isHandset = this._breakpointObserver.observe(
                  "(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)"
                )),
                (this._showAnimation = "mat-tooltip-show"),
                (this._hideAnimation = "mat-tooltip-hide");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Et), g(Nh), g(Hn, 8));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-tooltip-component"]],
              viewQuery: function (e, i) {
                if ((1 & e && $t($X, 7), 2 & e)) {
                  let r;
                  se((r = oe())) && (i._tooltip = r.first);
                }
              },
              hostAttrs: ["aria-hidden", "true"],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  P("mouseleave", function (s) {
                    return i._handleMouseLeave(s);
                  }),
                  2 & e && Us("zoom", i.isVisible() ? 1 : null);
              },
              features: [q],
              decls: 4,
              vars: 6,
              consts: [
                [1, "mat-tooltip", 3, "ngClass", "animationend"],
                ["tooltip", ""],
              ],
              template: function (e, i) {
                if (
                  (1 & e &&
                    (b(0, "div", 0, 1),
                    P("animationend", function (s) {
                      return i._handleAnimationEnd(s);
                    }),
                    qi(2, "async"),
                    w(3),
                    y()),
                  2 & e)
                ) {
                  let r;
                  Ye(
                    "mat-tooltip-handset",
                    null == (r = Wi(2, 4, i._isHandset)) ? null : r.matches
                  ),
                    T("ngClass", i.tooltipClass),
                    E(3),
                    gt(i.message);
                }
              },
              dependencies: [zg, as],
              styles: [
                ".mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis;transform:scale(0)}.mat-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}.mat-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-tooltip-show{0%{opacity:0;transform:scale(0)}50%{opacity:.5;transform:scale(0.99)}100%{opacity:1;transform:scale(1)}}@keyframes mat-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(1)}}.mat-tooltip-show{animation:mat-tooltip-show 200ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-tooltip-hide{animation:mat-tooltip-hide 100ms cubic-bezier(0, 0, 0.2, 1) forwards}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        tZ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({
              providers: [YX],
              imports: [LA, Ki, ja, Me, Me, Co],
            })),
            n
          );
        })();
      function nZ(n, t) {
        if (1 & n) {
          const e = Dr();
          b(0, "li")(1, "span", 1),
            w(2),
            y(),
            b(3, "span", 2),
            w(4),
            y(),
            b(5, "span", 3)(6, "i", 4),
            w(7, " description "),
            y(),
            w(8),
            y(),
            b(9, "span", 5)(10, "i", 4),
            w(11, " person "),
            y(),
            w(12),
            y(),
            b(13, "div")(14, "button", 6),
            P("click", function () {
              const s = Ri(e).$implicit;
              return Pi(Re().openDialog("0ms", "0ms", s.id_tarefa));
            }),
            b(15, "i", 7),
            w(16, " delete "),
            y()(),
            b(17, "button", 8)(18, "i", 7),
            w(19, " create "),
            y()()()();
        }
        if (2 & n) {
          const e = t.$implicit;
          E(2),
            gt(e.nome_tarefa),
            E(2),
            dt(" ", e.descricao, " "),
            E(4),
            dt(" ", e.nome_projeto, " "),
            E(4),
            dt(" ", e.nome_membro, " "),
            E(5),
            Cn("routerLink", "/tarefas/update/", e.id_tarefa, "");
        }
      }
      let iZ = (() => {
          class n {
            constructor(e, i, r, s) {
              (this.tarefaService = e),
                (this.message = i),
                (this.http = r),
                (this.dialog = s),
                (this.tarefas = []),
                (this.tarefasUrl = `${Nr_apiUrl}tarefas/`);
            }
            ngOnInit() {
              this.tarefaService.read().subscribe((e) => {
                this.tarefas = e;
              });
            }
            openDialog(e, i, r) {
              this.dialog.open(UX, {
                data: r,
                width: "250px",
                enterAnimationDuration: e,
                exitAnimationDuration: i,
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g($h), g(Tn), g(Gn), g(Es));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-read-tarefas"]],
              decls: 2,
              vars: 1,
              consts: [
                [4, "ngFor", "ngForOf"],
                [1, "nome"],
                [1, "descricao"],
                [1, "projeto"],
                [1, "material-icons", "icon-components"],
                [1, "membro"],
                ["matTooltip", "Deletar tarefa", 1, "deletar", 3, "click"],
                [1, "material-icons"],
                ["matTooltip", "Editar tarefa", 1, "editar", 3, "routerLink"],
              ],
              template: function (e, i) {
                1 & e && (b(0, "ul"), B(1, nZ, 20, 5, "li", 0), y()),
                  2 & e && (E(1), T("ngForOf", i.tarefas));
              },
              dependencies: [ir, Mn, QX],
              styles: [
                "ul[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}li[_ngcontent-%COMP%]{background-color:#232b67;border:1px solid black;border-radius:10px;color:#fff;display:flex;flex-direction:column;justify-content:space-around;line-height:2rem;list-style:none;margin:10px;min-width:25rem;padding:30px;width:35%;flex-wrap:wrap}li[_ngcontent-%COMP%]   span.nome[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:500;margin:2px}li[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{box-sizing:border-box;word-break:break-word;text-align:justify}",
              ],
            })),
            n
          );
        })(),
        rZ = (() => {
          class n {
            constructor(e) {
              this.Route = e;
            }
            ngOnInit() {}
            goToCreateTarefa() {
              this.Route.navigate(["tarefas/create"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Pe));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-tarefas"]],
              decls: 5,
              vars: 0,
              consts: [
                [1, "title-view"],
                ["mat-raised-button", "", 1, "add", 3, "click"],
                [
                  "src",
                  "./../../../../assets/images/add_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "h1", 0),
                  w(1, "Tarefas"),
                  y(),
                  ge(2, "app-read-tarefas"),
                  b(3, "button", 1),
                  P("click", function () {
                    return i.goToCreateTarefa();
                  }),
                  ge(4, "img", 2),
                  y());
              },
              dependencies: [Kt, iZ],
            })),
            n
          );
        })();
      function sZ(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " O canpo nome da tarefa n\xe3o pode estar em branco "),
          y());
      }
      function oZ(n, t) {
        if ((1 & n && (b(0, "mat-option", 12), w(1), y()), 2 & n)) {
          const e = t.$implicit;
          T("value", e.id_projeto),
            E(1),
            ss(" ", e.id_projeto, " - ", e.nome_projeto, " ");
        }
      }
      function aZ(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " Projeto da tarefa n\xe3o pode ser branco "),
          y());
      }
      function lZ(n, t) {
        if ((1 & n && (b(0, "mat-option", 12), w(1), y()), 2 & n)) {
          const e = t.$implicit;
          T("value", e.id_membro),
            E(1),
            ss(" ", e.id_membro, " - ", e.nome_membro, " ");
        }
      }
      function cZ(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " Nome do membro n\xe3o pode estar em branco "),
          y());
      }
      let uZ = (() => {
        class n {
          constructor(e, i, r, s, o, a) {
            (this.router = e),
              (this.projetoService = i),
              (this.membroService = r),
              (this.createTarefa = s),
              (this.formBuilder = o),
              (this.avisoMsg = a),
              (this.formulario = this.formBuilder.group({
                nome: [null, wt.required],
                descricao: [null],
                membro: [null, wt.required],
                projeto: [null, wt.required],
              })),
              (this.situacao = [
                { id: 1, nome: "A fazer" },
                { id: 2, nome: "Em desenvolvimento" },
                { id: 3, nome: "Done" },
              ]),
              (this.tarefa = {
                nome_tarefa: "",
                descricao: "",
                id_membro: 0,
                id_projeto: 0,
              });
          }
          ngOnInit() {
            (this.membros = this.membroService.read()),
              (this.projetos = this.projetoService.read());
          }
          goBack() {
            window.history.back();
          }
          onSubmit() {
            this.createTarefa.create(this.tarefa).subscribe(() => {
              this.goBack(),
                this.avisoMsg.showMsg({ msg: "Tarefa criada com sucesso" });
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(Pe), g(uo), g(co), g($h), g(Ir), g(Tn));
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["app-create-tarefas"]],
            decls: 33,
            vars: 15,
            consts: [
              [1, "form"],
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "placeholder",
                "Nome da tarefa",
                "name",
                "name_task",
                "formControlName",
                "nome",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              ["appearance", "fill", 1, "descricao"],
              [
                "matInput",
                "",
                "cols",
                "30",
                "rows",
                "10",
                "name",
                "description",
                "formControlName",
                "descricao",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [
                "name",
                "projeto_tarefa",
                "formControlName",
                "projeto",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [3, "value", 4, "ngFor", "ngForOf"],
              [
                "name",
                "membro_responsavel",
                "formControlName",
                "membro",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "mat-card", 0)(1, "mat-card-title"),
                w(2, " Criar tarefa "),
                y(),
                b(3, "mat-card-subtitle"),
                w(4, " \xc1rea para criar tarefas novas "),
                y()(),
                b(5, "form", 1),
                P("ngSubmit", function () {
                  return i.onSubmit();
                }),
                b(6, "mat-form-field", 2)(7, "mat-label"),
                w(8, "Nome da Tarefa"),
                y(),
                b(9, "input", 3),
                P("ngModelChange", function (s) {
                  return (i.tarefa.nome_tarefa = s);
                }),
                y(),
                B(10, sZ, 2, 0, "mat-error", 4),
                y(),
                b(11, "mat-form-field", 5)(12, "mat-label"),
                w(13, "Descri\xe7\xe3o da Tarefa"),
                y(),
                b(14, "textarea", 6),
                P("ngModelChange", function (s) {
                  return (i.tarefa.descricao = s);
                }),
                y()(),
                b(15, "mat-form-field", 2)(16, "mat-label"),
                w(17, "Projeto da Tarefa"),
                y(),
                b(18, "mat-select", 7),
                P("ngModelChange", function (s) {
                  return (i.tarefa.id_projeto = s);
                }),
                B(19, oZ, 2, 3, "mat-option", 8),
                qi(20, "async"),
                y(),
                B(21, aZ, 2, 0, "mat-error", 4),
                y(),
                b(22, "mat-form-field", 2)(23, "mat-label"),
                w(24, "Nome do Integrante"),
                y(),
                b(25, "mat-select", 9),
                P("ngModelChange", function (s) {
                  return (i.tarefa.id_membro = s);
                }),
                B(26, lZ, 2, 3, "mat-option", 8),
                qi(27, "async"),
                y(),
                B(28, cZ, 2, 0, "mat-error", 4),
                y(),
                b(29, "button", 10),
                w(30, " Salvar "),
                y(),
                b(31, "button", 11),
                P("click", function () {
                  return i.goBack();
                }),
                w(32, " Cancelar "),
                y()()),
                2 & e &&
                  (E(5),
                  T("formGroup", i.formulario),
                  E(4),
                  T("ngModel", i.tarefa.nome_tarefa),
                  E(1),
                  T("ngIf", i.formulario.controls.nome.hasError("required")),
                  E(4),
                  T("ngModel", i.tarefa.descricao),
                  E(4),
                  T("ngModel", i.tarefa.id_projeto),
                  E(1),
                  T("ngForOf", Wi(20, 11, i.projetos)),
                  E(2),
                  T("ngIf", i.formulario.controls.projeto.hasError("required")),
                  E(4),
                  T("ngModel", i.tarefa.id_membro),
                  E(1),
                  T("ngForOf", Wi(27, 13, i.membros)),
                  E(2),
                  T("ngIf", i.formulario.controls.membro.hasError("required")),
                  E(1),
                  T("disabled", !i.formulario.valid));
            },
            dependencies: [
              Mn,
              At,
              er,
              oi,
              Qi,
              Ji,
              ps,
              Kt,
              lr,
              or,
              ar,
              Vr,
              jr,
              Ai,
              Hr,
              Ua,
              lo,
              En,
              Ei,
              as,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:10rem}.salvar[_ngcontent-%COMP%]{background-color:#60e160}.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function dZ(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " O canpo nome da tarefa n\xe3o pode estar em branco "),
          y());
      }
      function hZ(n, t) {
        if ((1 & n && (b(0, "mat-option", 12), w(1), y()), 2 & n)) {
          const e = t.$implicit;
          T("value", e.id_projeto),
            E(1),
            ss(" ", e.id_projeto, " - ", e.nome_projeto, " ");
        }
      }
      function fZ(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " Projeto da tarefa n\xe3o pode ser branco "),
          y());
      }
      function pZ(n, t) {
        if ((1 & n && (b(0, "mat-option", 12), w(1), y()), 2 & n)) {
          const e = t.$implicit;
          T("value", e.id_membro),
            E(1),
            ss(" ", e.id_membro, " - ", e.nome_membro, " ");
        }
      }
      function mZ(n, t) {
        1 & n &&
          (b(0, "mat-error"),
          w(1, " Nome do membro n\xe3o pode estar em branco "),
          y());
      }
      let gZ = (() => {
        class n {
          constructor(e, i, r, s, o, a, l) {
            (this.projetoService = e),
              (this.membroService = i),
              (this.createTarefa = r),
              (this.formBuilder = s),
              (this.avisoMsg = o),
              (this.route = a),
              (this.router = l),
              (this.formulario = this.formBuilder.group({
                nome: [null, wt.required],
                descricao: [null],
                membro: [null, wt.required],
                projeto: [null, wt.required],
              })),
              (this.tarefa = {
                nome_tarefa: "",
                descricao: "",
                id_membro: 0,
                id_projeto: 0,
              });
          }
          ngOnInit() {
            (this.membros = this.membroService.read()),
              (this.projetos = this.projetoService.read());
            const e = this.route.snapshot.paramMap.get("id");
            this.createTarefa.getById(`${e}`).subscribe((i) => {
              this.tarefa = i;
            });
          }
          goBack() {
            this.router.navigate(["tarefas"]);
          }
          onSubmit() {
            this.createTarefa.update(this.tarefa).subscribe(() => {
              this.avisoMsg.showMsg({ msg: "Tarefa atualizada com sucesso" }),
                this.goBack();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              g(uo),
              g(co),
              g($h),
              g(Ir),
              g(Tn),
              g(Wn),
              g(Pe)
            );
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["app-update-tarefa"]],
            decls: 33,
            vars: 15,
            consts: [
              [1, "form"],
              [1, "form", 3, "formGroup", "ngSubmit"],
              ["appearance", "fill"],
              [
                "matInput",
                "",
                "placeholder",
                "Nome da tarefa",
                "name",
                "name_task",
                "formControlName",
                "nome",
                "maxlength",
                "30",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [4, "ngIf"],
              ["appearance", "fill", 1, "descricao"],
              [
                "matInput",
                "",
                "cols",
                "30",
                "rows",
                "10",
                "name",
                "description",
                "formControlName",
                "descricao",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [
                "name",
                "projeto_tarefa",
                "formControlName",
                "projeto",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [3, "value", 4, "ngFor", "ngForOf"],
              [
                "name",
                "membro_responsavel",
                "formControlName",
                "membro",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["mat-raised-button", "", 1, "salvar", 3, "disabled"],
              ["mat-raised-button", "", 1, "cancelar", 3, "click"],
              [3, "value"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "mat-card", 0)(1, "mat-card-title"),
                w(2, " Atualizar tarefa "),
                y(),
                b(3, "mat-card-subtitle"),
                w(4, " \xc1rea para atualizar tarefas "),
                y()(),
                b(5, "form", 1),
                P("ngSubmit", function () {
                  return i.onSubmit();
                }),
                b(6, "mat-form-field", 2)(7, "mat-label"),
                w(8, "Nome da Tarefa"),
                y(),
                b(9, "input", 3),
                P("ngModelChange", function (s) {
                  return (i.tarefa.nome_tarefa = s);
                }),
                y(),
                B(10, dZ, 2, 0, "mat-error", 4),
                y(),
                b(11, "mat-form-field", 5)(12, "mat-label"),
                w(13, "Descri\xe7\xe3o da Tarefa"),
                y(),
                b(14, "textarea", 6),
                P("ngModelChange", function (s) {
                  return (i.tarefa.descricao = s);
                }),
                y()(),
                b(15, "mat-form-field", 2)(16, "mat-label"),
                w(17, "Projeto da Tarefa"),
                y(),
                b(18, "mat-select", 7),
                P("ngModelChange", function (s) {
                  return (i.tarefa.id_projeto = s);
                }),
                B(19, hZ, 2, 3, "mat-option", 8),
                qi(20, "async"),
                y(),
                B(21, fZ, 2, 0, "mat-error", 4),
                y(),
                b(22, "mat-form-field", 2)(23, "mat-label"),
                w(24, "Nome do Integrante"),
                y(),
                b(25, "mat-select", 9),
                P("ngModelChange", function (s) {
                  return (i.tarefa.id_membro = s);
                }),
                B(26, pZ, 2, 3, "mat-option", 8),
                qi(27, "async"),
                y(),
                B(28, mZ, 2, 0, "mat-error", 4),
                y(),
                b(29, "button", 10),
                w(30, " Salvar "),
                y(),
                b(31, "button", 11),
                P("click", function () {
                  return i.goBack();
                }),
                w(32, " Cancelar "),
                y()()),
                2 & e &&
                  (E(5),
                  T("formGroup", i.formulario),
                  E(4),
                  T("ngModel", i.tarefa.nome_tarefa),
                  E(1),
                  T("ngIf", i.formulario.controls.nome.hasError("required")),
                  E(4),
                  T("ngModel", i.tarefa.descricao),
                  E(4),
                  T("ngModel", i.tarefa.id_projeto),
                  E(1),
                  T("ngForOf", Wi(20, 11, i.projetos)),
                  E(2),
                  T("ngIf", i.formulario.controls.projeto.hasError("required")),
                  E(4),
                  T("ngModel", i.tarefa.id_membro),
                  E(1),
                  T("ngForOf", Wi(27, 13, i.membros)),
                  E(2),
                  T("ngIf", i.formulario.controls.membro.hasError("required")),
                  E(1),
                  T("disabled", !i.formulario.valid));
            },
            dependencies: [
              Mn,
              At,
              er,
              oi,
              Qi,
              Ji,
              ps,
              Kt,
              lr,
              or,
              ar,
              Vr,
              jr,
              Ai,
              Hr,
              Ua,
              lo,
              En,
              Ei,
              as,
            ],
            styles: [
              ".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:10rem}.salvar[_ngcontent-%COMP%]{background-color:#60e160}.cancelar[_ngcontent-%COMP%]{border:1px solid blue;margin-top:10px}",
            ],
          })),
          n
        );
      })();
      function _Z(n, t) {
        if (
          (1 & n &&
            (b(0, "li", 17)(1, "mat-card", 18)(2, "mat-card-title"),
            w(3),
            y(),
            b(4, "mat-card-subtitle"),
            w(5),
            y()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          E(3), dt(" ", e.nome_tarefa, " "), E(2), dt(" ", e.descricao, " ");
        }
      }
      function yZ(n, t) {
        if ((1 & n && (b(0, "ul", 9), B(1, _Z, 6, 2, "li", 16), y()), 2 & n)) {
          const e = Re();
          E(1), T("ngForOf", e.tarefas);
        }
      }
      function vZ(n, t) {
        1 & n &&
          (b(0, "div", 19),
          ge(1, "img", 20),
          w(2, " N\xe3o h\xe1 nenhuma tarefa atribu\xedda a esta pesssoa "),
          y());
      }
      let bZ = (() => {
          class n {
            constructor(e, i, r) {
              (this.route = e),
                (this.dialog = i),
                (this.membroService = r),
                (this.tarefas = []),
                (this.membro = {
                  id_membro: 0,
                  nome_membro: "",
                  id_equipe: 0,
                  nome_equipe: "",
                  funcao: "",
                  tarefas: [],
                });
            }
            ngOnInit() {
              const e = this.route.snapshot.paramMap.get("id");
              this.membroService.getById({ id: `${e}` }).subscribe((i) => {
                (this.membro.nome_membro = i.nome_membro),
                  (this.membro.id_membro = i.id_membro),
                  (this.membro.id_equipe = i.id_equipe),
                  (this.membro.nome_equipe = i.nome_equipe),
                  (this.membro.funcao = i.funcao),
                  (this.tarefas = i.tarefas);
              });
            }
            openDialog(e, i, r) {
              this.dialog.open(jI, {
                data: r,
                width: "250px",
                enterAnimationDuration: e,
                exitAnimationDuration: i,
              });
            }
            goBack() {
              history.back();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Wn), g(Es), g(co));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-pagina-membro"]],
              decls: 24,
              vars: 7,
              consts: [
                [1, "material-icons", "arrow", 3, "click"],
                [1, "geral"],
                [1, "dados"],
                [1, "imagem"],
                [1, "title-view"],
                [1, "equipe", 3, "routerLink"],
                [1, "acoes"],
                ["mat-raised-button", "", 1, "editar", 3, "routerLink"],
                ["mat-raised-button", "", 1, "deletar", 3, "click"],
                [1, "tarefas"],
                [1, "titulo"],
                [1, "subtitle"],
                [
                  "mat-raised-button",
                  "",
                  "routerLink",
                  "/tarefas/create",
                  1,
                  "adicionar",
                ],
                [
                  "src",
                  "../../../assets/images/add_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                ],
                ["class", "tarefas", 4, "ngIf"],
                ["class", "vazio", 4, "ngIf"],
                ["class", "card", 4, "ngFor", "ngForOf"],
                [1, "card"],
                [1, "tarefa"],
                [1, "vazio"],
                [
                  "src",
                  "./../../../../assets/images/info_FILL0_wght400_GRAD0_opsz48.svg",
                  "alt",
                  "",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "i", 0),
                  P("click", function () {
                    return i.goBack();
                  }),
                  w(1, " arrow_back "),
                  y(),
                  b(2, "div", 1)(3, "div", 2)(4, "div", 3)(5, "span"),
                  w(6),
                  y()(),
                  b(7, "h1", 4),
                  w(8),
                  y(),
                  b(9, "span", 5),
                  w(10),
                  y(),
                  b(11, "div", 6)(12, "button", 7),
                  w(13, " Editar Membro "),
                  y(),
                  b(14, "button", 8),
                  P("click", function () {
                    return i.openDialog("0ms", "0ms", i.membro.id_membro);
                  }),
                  w(15, " Deletar Membro "),
                  y()()(),
                  b(16, "div", 9)(17, "div", 10)(18, "span", 11),
                  w(19, " Tarefas "),
                  y(),
                  b(20, "button", 12),
                  ge(21, "img", 13),
                  y()(),
                  B(22, yZ, 2, 1, "ul", 14),
                  B(23, vZ, 3, 0, "div", 15),
                  y()()),
                  2 & e &&
                    (E(6),
                    gt(i.membro.nome_membro[0]),
                    E(2),
                    gt(i.membro.nome_membro),
                    E(1),
                    Cn("routerLink", "/equipes/dados/", i.membro.id_equipe, ""),
                    E(1),
                    dt(" ", i.membro.nome_equipe, " "),
                    E(2),
                    Cn(
                      "routerLink",
                      "/membros/update/",
                      i.membro.id_membro,
                      ""
                    ),
                    E(10),
                    T("ngIf", null != i.tarefas),
                    E(1),
                    T("ngIf", null == i.tarefas));
              },
              dependencies: [ir, Mn, At, Kt, lr, or, ar],
              styles: [
                ".arrow[_ngcontent-%COMP%]{position:relative;top:10px;left:20px}.arrow[_ngcontent-%COMP%]:hover{cursor:pointer}.geral[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;text-align:center}.dados[_ngcontent-%COMP%]{width:30%;min-width:30rem;padding:10px;display:flex;align-items:center;flex-direction:column}.dados[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{margin-top:10px}.imagem[_ngcontent-%COMP%]{display:flex;text-align:center;width:15rem;height:15rem;border:1px solid #000000;border-radius:50%;align-items:center;justify-content:center}.title-view[_ngcontent-%COMP%]{margin:0;height:auto}.imagem[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:8rem}.acoes[_ngcontent-%COMP%]{margin-top:20px}.equipe[_ngcontent-%COMP%]{font-size:1.5rem;line-height:normal}.equipe[_ngcontent-%COMP%]:hover{cursor:pointer}.acoes[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:5px;width:10rem}li[_ngcontent-%COMP%]{list-style:none}.tarefas[_ngcontent-%COMP%]{width:60%;display:flex;flex-direction:column;align-items:left}.subtitle[_ngcontent-%COMP%]{font-size:30px;font-weight:700;margin-left:2.5rem;margin-top:20px}.card[_ngcontent-%COMP%]{text-align:left;margin-top:10px;width:60%;min-width:35rem;box-sizing:content-box}.vazio[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;font-size:20px}.vazio[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:5rem}.adicionar[_ngcontent-%COMP%]{align-items:center;background-color:#1e2d69;border-radius:50%;display:flex;justify-content:center;width:2rem}.adicionar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:2rem;height:2rem}.titulo[_ngcontent-%COMP%]{width:35rem;display:flex;flex-direction:row;justify-content:space-between}",
              ],
            })),
            n
          );
        })(),
        CZ = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this.dialog = e),
                (this.data = i),
                (this.http = r),
                (this.message = s),
                (this.router = o),
                (this.urlProjeto =
                  "https://api-go-projects.herokuapp.com/projetos/");
            }
            fechaDialog() {
              this.dialog.close();
            }
            deletaProjeto(e) {
              this.http.delete(`${this.urlProjeto}${e}`).subscribe(() => {
                this.message.showMsg({ msg: "Projeto deletado com sucesso" });
              }),
                this.fechaDialog(),
                this.router.navigate(["/projetos"]);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Zc), g(Qc), g(Gn), g(Tn), g(Pe));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-delete-warning"]],
              decls: 13,
              vars: 0,
              consts: [
                [1, "material-icons"],
                [3, "click"],
                [1, "deletar", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "h1")(1, "i", 0),
                  w(2, " warning "),
                  y(),
                  w(3, " Aviso\n"),
                  y(),
                  b(4, "p"),
                  w(5, "Tem certeza que deseja deletar este projeto?"),
                  y(),
                  b(6, "p"),
                  w(
                    7,
                    "Isto deletar\xe1 as tarefas que estiverem rela\xe7\xe3o a esse projeto"
                  ),
                  y(),
                  b(8, "div")(9, "button", 1),
                  P("click", function () {
                    return i.fechaDialog();
                  }),
                  w(10, "Fechar"),
                  y(),
                  b(11, "button", 2),
                  P("click", function () {
                    return i.deletaProjeto(i.data);
                  }),
                  w(12, "Deletar"),
                  y()());
              },
              styles: [
                "h1[_ngcontent-%COMP%]{align-items:center;display:flex}h1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:5px}button[_ngcontent-%COMP%]{border-radius:5px;height:1.5rem;margin-right:5px;padding:0 10px}button.deletar[_ngcontent-%COMP%]:hover{background-color:#f005}",
              ],
            })),
            n
          );
        })();
      function wZ(n, t) {
        if (
          (1 & n &&
            (b(0, "li", 17)(1, "mat-card", 18)(2, "mat-card-title"),
            w(3),
            y(),
            b(4, "mat-card-subtitle"),
            w(5),
            y()()()),
          2 & n)
        ) {
          const e = t.$implicit;
          E(3), dt(" ", e.nome_tarefa, " "), E(2), dt(" ", e.descricao, " ");
        }
      }
      function MZ(n, t) {
        if ((1 & n && (b(0, "ul", 9), B(1, wZ, 6, 2, "li", 16), y()), 2 & n)) {
          const e = Re();
          E(1), T("ngForOf", e.tarefas);
        }
      }
      function DZ(n, t) {
        1 & n &&
          (b(0, "div", 19),
          ge(1, "img", 20),
          w(2, " N\xe3o h\xe1 nenhuma tarefa relacionada a este projeto "),
          y());
      }
      const xZ = [
        { path: "", component: DW },
        {
          path: "dashboard",
          component: T9,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "equipes",
          component: SK,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "equipes/dados/:id",
          component: KK,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "equipes/create",
          component: ZK,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "equipes/update/:id",
          component: JK,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "membros",
          component: nX,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "membros/create",
          component: SX,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "membros/update/:id",
          component: IX,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "membros/dados/:id",
          component: bZ,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "projetos",
          component: zX,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "projetos/create",
          component: FX,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "projetos/update/:id",
          component: VX,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "projetos/dados/:id",
          component: (() => {
            class n {
              constructor(e, i, r) {
                (this.route = e),
                  (this.dialog = i),
                  (this.projetoService = r),
                  (this.tarefas = []),
                  (this.projeto = {
                    id_projeto: 0,
                    nome_projeto: "",
                    descricao: "",
                    id_equipe: 0,
                    nome_equipe: "",
                    tarefas: [],
                  });
              }
              ngOnInit() {
                const e = this.route.snapshot.paramMap.get("id");
                this.projetoService.getById(`${e}`).subscribe((i) => {
                  (this.projeto = i), (this.tarefas = i.tarefas);
                });
              }
              goBack() {
                history.back();
              }
              openDialog(e, i, r) {
                this.dialog.open(CZ, {
                  data: r,
                  width: "250px",
                  enterAnimationDuration: e,
                  exitAnimationDuration: i,
                });
              }
            }
            return (
              (n.ɵfac = function (e) {
                return new (e || n)(g(Wn), g(Es), g(uo));
              }),
              (n.ɵcmp = G({
                type: n,
                selectors: [["app-pagina-projeto"]],
                decls: 24,
                vars: 7,
                consts: [
                  [1, "material-icons", "arrow", 3, "click"],
                  [1, "geral"],
                  [1, "dados"],
                  [1, "imagem"],
                  [1, "title-view", "nomeProjeto"],
                  [1, "equipe", 3, "routerLink"],
                  [1, "acoes"],
                  ["mat-raised-button", "", 1, "editar", 3, "routerLink"],
                  ["mat-raised-button", "", 1, "deletar", 3, "click"],
                  [1, "tarefas"],
                  [1, "topo"],
                  [1, "subtitle"],
                  [1, "adicionar"],
                  [
                    "src",
                    "../../../../assets/images/add_FILL0_wght400_GRAD0_opsz48.svg",
                    "alt",
                    "",
                  ],
                  ["class", "tarefas", 4, "ngIf"],
                  ["class", "listavazia", 4, "ngIf"],
                  ["class", "card", 4, "ngFor", "ngForOf"],
                  [1, "card"],
                  [1, "tarefa"],
                  [1, "listavazia"],
                  [
                    "src",
                    "../../../../assets/images/info_FILL0_wght400_GRAD0_opsz48.svg",
                    "alt",
                    "",
                  ],
                ],
                template: function (e, i) {
                  1 & e &&
                    (b(0, "i", 0),
                    P("click", function () {
                      return i.goBack();
                    }),
                    w(1, " arrow_back "),
                    y(),
                    b(2, "div", 1)(3, "div", 2)(4, "div", 3)(5, "span"),
                    w(6),
                    y()(),
                    b(7, "h1", 4),
                    w(8),
                    y(),
                    b(9, "span", 5),
                    w(10),
                    y(),
                    b(11, "div", 6)(12, "button", 7),
                    w(13, " Editar Projeto "),
                    y(),
                    b(14, "button", 8),
                    P("click", function () {
                      return i.openDialog("0ms", "0ms", i.projeto.id_projeto);
                    }),
                    w(15, " Deletar Projeto "),
                    y()()(),
                    b(16, "div", 9)(17, "div", 10)(18, "span", 11),
                    w(19, " Tarefas "),
                    y(),
                    b(20, "button", 12),
                    ge(21, "img", 13),
                    y()(),
                    B(22, MZ, 2, 1, "ul", 14),
                    B(23, DZ, 3, 0, "div", 15),
                    y()()),
                    2 & e &&
                      (E(6),
                      gt(i.projeto.nome_projeto[0]),
                      E(2),
                      gt(i.projeto.nome_projeto),
                      E(1),
                      Cn(
                        "routerLink",
                        "/equipes/dados/",
                        i.projeto.id_equipe,
                        ""
                      ),
                      E(1),
                      dt(" ", i.projeto.nome_equipe, " "),
                      E(2),
                      Cn(
                        "routerLink",
                        "/projetos/update/",
                        i.projeto.id_projeto,
                        ""
                      ),
                      E(10),
                      T("ngIf", null != i.tarefas),
                      E(1),
                      T("ngIf", null == i.tarefas));
                },
                dependencies: [ir, Mn, At, Kt, lr, or, ar],
                styles: [
                  ".arrow[_ngcontent-%COMP%]{position:relative;top:10px;left:20px}.title-view[_ngcontent-%COMP%]{height:auto}.arrow[_ngcontent-%COMP%]:hover{cursor:pointer}.geral[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;text-align:center}.dados[_ngcontent-%COMP%]{width:30%;min-width:30rem;padding:10px;display:flex;align-items:center;flex-direction:column}.dados[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{margin-top:10px}.imagem[_ngcontent-%COMP%]{display:flex;text-align:center;width:15rem;height:15rem;border:1px solid #000000;border-radius:50%;align-items:center;justify-content:center}.title-view[_ngcontent-%COMP%]{margin:0}.nomeProjeto[_ngcontent-%COMP%]{height:auto}.imagem[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:8rem}.acoes[_ngcontent-%COMP%]{margin-top:20px}.equipe[_ngcontent-%COMP%]{font-size:1.5rem}.equipe[_ngcontent-%COMP%]:hover{cursor:pointer}.acoes[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:5px;width:10rem}li[_ngcontent-%COMP%]{list-style:none}.tarefas[_ngcontent-%COMP%]{width:60%;display:flex;flex-direction:column;align-items:left}.subtitle[_ngcontent-%COMP%]{font-size:30px;font-weight:700;margin-left:2.5rem;margin-top:20px}.card[_ngcontent-%COMP%]{text-align:left;margin-top:10px;width:60%;min-width:35rem;box-sizing:content-box}.listavazia[_ngcontent-%COMP%]{margin:2rem;display:flex;flex-direction:column;align-items:center}.topo[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between}.adicionar[_ngcontent-%COMP%]{align-items:center;background-color:#1e2d69;border-radius:50%;display:flex;justify-content:center;width:3rem;height:3rem}",
                ],
              })),
              n
            );
          })(),
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "tarefas",
          component: rZ,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "tarefas/create",
          component: uZ,
          canActivate: [qt],
          pathMatch: "full",
        },
        {
          path: "tarefas/update/:id",
          component: gZ,
          canActivate: [qt],
          pathMatch: "full",
        },
        { path: "**", component: o8 },
      ];
      let EZ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [JT.forRoot(xZ), JT] })),
            n
          );
        })(),
        SZ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [Me, Me] })),
            n
          );
        })();
      const YI = ["*"],
        AZ = [
          [
            ["", "mat-list-avatar", ""],
            ["", "mat-list-icon", ""],
            ["", "matListAvatar", ""],
            ["", "matListIcon", ""],
          ],
          [
            ["", "mat-line", ""],
            ["", "matLine", ""],
          ],
          "*",
        ],
        kZ = [
          "[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]",
          "[mat-line], [matLine]",
          "*",
        ],
        FZ = Hh(ao(class {})),
        NZ = ao(class {}),
        LZ = new R("MatList"),
        KI = new R("MatNavList");
      let BZ = (() => {
          class n extends FZ {
            constructor() {
              super(...arguments), (this._stateChanges = new $());
            }
            ngOnChanges() {
              this._stateChanges.next();
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = tt(n)))(i || n);
              };
            })()),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-nav-list"]],
              hostAttrs: [
                "role",
                "navigation",
                1,
                "mat-nav-list",
                "mat-list-base",
              ],
              inputs: { disableRipple: "disableRipple", disabled: "disabled" },
              exportAs: ["matNavList"],
              features: [pe([{ provide: KI, useExisting: n }]), q, Gt],
              ngContentSelectors: YI,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Nt(), De(0));
              },
              styles: [
                '.mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}button.mat-list-item,button.mat-list-option{padding:0;width:100%;background:none;color:inherit;border:none;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] button.mat-list-item,[dir=rtl] button.mat-list-option{text-align:right}button.mat-list-item::-moz-focus-inner,button.mat-list-option::-moz-focus-inner{border:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:hover{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        XI = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["", "mat-list-avatar", ""],
                ["", "matListAvatar", ""],
              ],
              hostAttrs: [1, "mat-list-avatar"],
            })),
            n
          );
        })(),
        ZI = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [
                ["", "mat-list-icon", ""],
                ["", "matListIcon", ""],
              ],
              hostAttrs: [1, "mat-list-icon"],
            })),
            n
          );
        })(),
        VZ = (() => {
          class n extends NZ {
            constructor(e, i, r, s) {
              super(),
                (this._element = e),
                (this._isInteractiveList = !1),
                (this._destroyed = new $()),
                (this._disabled = !1),
                (this._isInteractiveList = !!(
                  r ||
                  (s && "action-list" === s._getListType())
                )),
                (this._list = r || s);
              const o = this._getHostElement();
              "button" === o.nodeName.toLowerCase() &&
                !o.hasAttribute("type") &&
                o.setAttribute("type", "button"),
                this._list &&
                  this._list._stateChanges
                    .pipe(_e(this._destroyed))
                    .subscribe(() => {
                      i.markForCheck();
                    });
            }
            get disabled() {
              return this._disabled || !(!this._list || !this._list.disabled);
            }
            set disabled(e) {
              this._disabled = ke(e);
            }
            ngAfterContentInit() {
              !(function zA(n, t, e = "mat") {
                n.changes.pipe(qn(n)).subscribe(({ length: i }) => {
                  bc(t, `${e}-2-line`, !1),
                    bc(t, `${e}-3-line`, !1),
                    bc(t, `${e}-multi-line`, !1),
                    2 === i || 3 === i
                      ? bc(t, `${e}-${i}-line`, !0)
                      : i > 3 && bc(t, `${e}-multi-line`, !0);
                });
              })(this._lines, this._element);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _isRippleDisabled() {
              return (
                !this._isInteractiveList ||
                this.disableRipple ||
                !(!this._list || !this._list.disableRipple)
              );
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(ce), g(Et), g(KI, 8), g(LZ, 8));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [
                ["mat-list-item"],
                ["a", "mat-list-item", ""],
                ["button", "mat-list-item", ""],
              ],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (Ue(r, XI, 5), Ue(r, ZI, 5), Ue(r, HA, 5)), 2 & e)
                ) {
                  let s;
                  se((s = oe())) && (i._avatar = s.first),
                    se((s = oe())) && (i._icon = s.first),
                    se((s = oe())) && (i._lines = s);
                }
              },
              hostAttrs: [1, "mat-list-item", "mat-focus-indicator"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  Ye("mat-list-item-disabled", i.disabled)(
                    "mat-list-item-with-avatar",
                    i._avatar || i._icon
                  );
              },
              inputs: { disableRipple: "disableRipple", disabled: "disabled" },
              exportAs: ["matListItem"],
              features: [q],
              ngContentSelectors: kZ,
              decls: 6,
              vars: 2,
              consts: [
                [1, "mat-list-item-content"],
                [
                  "mat-ripple",
                  "",
                  1,
                  "mat-list-item-ripple",
                  3,
                  "matRippleTrigger",
                  "matRippleDisabled",
                ],
                [1, "mat-list-text"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Nt(AZ),
                  b(0, "span", 0),
                  ge(1, "span", 1),
                  De(2),
                  b(3, "span", 2),
                  De(4, 1),
                  y(),
                  De(5, 2),
                  y()),
                  2 & e &&
                    (E(1),
                    T("matRippleTrigger", i._getHostElement())(
                      "matRippleDisabled",
                      i._isRippleDisabled()
                    ));
              },
              dependencies: [Ia],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        qZ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [zh, Cc, Me, $y, Ki, zh, Me, $y, SZ] })),
            n
          );
        })();
      const Nf = ["*"],
        WZ = ["content"];
      function GZ(n, t) {
        if (1 & n) {
          const e = Dr();
          b(0, "div", 2),
            P("click", function () {
              return Ri(e), Pi(Re()._onBackdropClicked());
            }),
            y();
        }
        2 & n && Ye("mat-drawer-shown", Re()._isShowingBackdrop());
      }
      function YZ(n, t) {
        1 & n && (b(0, "mat-drawer-content"), De(1, 2), y());
      }
      const KZ = [[["mat-drawer"]], [["mat-drawer-content"]], "*"],
        XZ = ["mat-drawer", "mat-drawer-content", "*"];
      function ZZ(n, t) {
        if (1 & n) {
          const e = Dr();
          b(0, "div", 2),
            P("click", function () {
              return Ri(e), Pi(Re()._onBackdropClicked());
            }),
            y();
        }
        2 & n && Ye("mat-drawer-shown", Re()._isShowingBackdrop());
      }
      function QZ(n, t) {
        1 & n && (b(0, "mat-sidenav-content"), De(1, 2), y());
      }
      const JZ = [[["mat-sidenav"]], [["mat-sidenav-content"]], "*"],
        eQ = ["mat-sidenav", "mat-sidenav-content", "*"],
        JI = {
          transformDrawer: kr("transform", [
            xn(
              "open, open-instant",
              Ke({ transform: "none", visibility: "visible" })
            ),
            xn("void", Ke({ "box-shadow": "none", visibility: "hidden" })),
            pn("void => open-instant", Dn("0ms")),
            pn(
              "void <=> open, open-instant => void",
              Dn("400ms cubic-bezier(0.25, 0.8, 0.25, 1)")
            ),
          ]),
        },
        nQ = new R("MAT_DRAWER_DEFAULT_AUTOSIZE", {
          providedIn: "root",
          factory: function iQ() {
            return !1;
          },
        }),
        Hv = new R("MAT_DRAWER_CONTAINER");
      let Lf = (() => {
          class n extends Gc {
            constructor(e, i, r, s, o) {
              super(r, s, o),
                (this._changeDetectorRef = e),
                (this._container = i);
            }
            ngAfterContentInit() {
              this._container._contentMarginChanges.subscribe(() => {
                this._changeDetectorRef.markForCheck();
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Et), g(Le(() => tO)), g(ce), g(Wc), g(Q));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-drawer-content"]],
              hostAttrs: [1, "mat-drawer-content"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  Us("margin-left", i._container._contentMargins.left, "px")(
                    "margin-right",
                    i._container._contentMargins.right,
                    "px"
                  );
              },
              features: [pe([{ provide: Gc, useExisting: n }]), q],
              ngContentSelectors: Nf,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Nt(), De(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        eO = (() => {
          class n {
            constructor(e, i, r, s, o, a, l, c) {
              (this._elementRef = e),
                (this._focusTrapFactory = i),
                (this._focusMonitor = r),
                (this._platform = s),
                (this._ngZone = o),
                (this._interactivityChecker = a),
                (this._doc = l),
                (this._container = c),
                (this._elementFocusedBeforeDrawerWasOpened = null),
                (this._enableAnimations = !1),
                (this._position = "start"),
                (this._mode = "over"),
                (this._disableClose = !1),
                (this._opened = !1),
                (this._animationStarted = new $()),
                (this._animationEnd = new $()),
                (this._animationState = "void"),
                (this.openedChange = new fe(!0)),
                (this._openedStream = this.openedChange.pipe(
                  ct((u) => u),
                  Z(() => {})
                )),
                (this.openedStart = this._animationStarted.pipe(
                  ct(
                    (u) =>
                      u.fromState !== u.toState &&
                      0 === u.toState.indexOf("open")
                  ),
                  K_(void 0)
                )),
                (this._closedStream = this.openedChange.pipe(
                  ct((u) => !u),
                  Z(() => {})
                )),
                (this.closedStart = this._animationStarted.pipe(
                  ct((u) => u.fromState !== u.toState && "void" === u.toState),
                  K_(void 0)
                )),
                (this._destroyed = new $()),
                (this.onPositionChanged = new fe()),
                (this._modeChanged = new $()),
                this.openedChange.subscribe((u) => {
                  u
                    ? (this._doc &&
                        (this._elementFocusedBeforeDrawerWasOpened =
                          this._doc.activeElement),
                      this._takeFocus())
                    : this._isFocusWithinDrawer() &&
                      this._restoreFocus(this._openedVia || "program");
                }),
                this._ngZone.runOutsideAngular(() => {
                  Oa(this._elementRef.nativeElement, "keydown")
                    .pipe(
                      ct(
                        (u) => 27 === u.keyCode && !this.disableClose && !Si(u)
                      ),
                      _e(this._destroyed)
                    )
                    .subscribe((u) =>
                      this._ngZone.run(() => {
                        this.close(), u.stopPropagation(), u.preventDefault();
                      })
                    );
                }),
                this._animationEnd
                  .pipe(
                    Fy(
                      (u, d) =>
                        u.fromState === d.fromState && u.toState === d.toState
                    )
                  )
                  .subscribe((u) => {
                    const { fromState: d, toState: h } = u;
                    ((0 === h.indexOf("open") && "void" === d) ||
                      ("void" === h && 0 === d.indexOf("open"))) &&
                      this.openedChange.emit(this._opened);
                  });
            }
            get position() {
              return this._position;
            }
            set position(e) {
              (e = "end" === e ? "end" : "start") !== this._position &&
                (this._isAttached && this._updatePositionInParent(e),
                (this._position = e),
                this.onPositionChanged.emit());
            }
            get mode() {
              return this._mode;
            }
            set mode(e) {
              (this._mode = e),
                this._updateFocusTrapState(),
                this._modeChanged.next();
            }
            get disableClose() {
              return this._disableClose;
            }
            set disableClose(e) {
              this._disableClose = ke(e);
            }
            get autoFocus() {
              return (
                this._autoFocus ??
                ("side" === this.mode ? "dialog" : "first-tabbable")
              );
            }
            set autoFocus(e) {
              ("true" === e || "false" === e || null == e) && (e = ke(e)),
                (this._autoFocus = e);
            }
            get opened() {
              return this._opened;
            }
            set opened(e) {
              this.toggle(ke(e));
            }
            _forceFocus(e, i) {
              this._interactivityChecker.isFocusable(e) ||
                ((e.tabIndex = -1),
                this._ngZone.runOutsideAngular(() => {
                  const r = () => {
                    e.removeEventListener("blur", r),
                      e.removeEventListener("mousedown", r),
                      e.removeAttribute("tabindex");
                  };
                  e.addEventListener("blur", r),
                    e.addEventListener("mousedown", r);
                })),
                e.focus(i);
            }
            _focusByCssSelector(e, i) {
              let r = this._elementRef.nativeElement.querySelector(e);
              r && this._forceFocus(r, i);
            }
            _takeFocus() {
              if (!this._focusTrap) return;
              const e = this._elementRef.nativeElement;
              switch (this.autoFocus) {
                case !1:
                case "dialog":
                  return;
                case !0:
                case "first-tabbable":
                  this._focusTrap.focusInitialElementWhenReady().then((i) => {
                    !i &&
                      "function" ==
                        typeof this._elementRef.nativeElement.focus &&
                      e.focus();
                  });
                  break;
                case "first-heading":
                  this._focusByCssSelector(
                    'h1, h2, h3, h4, h5, h6, [role="heading"]'
                  );
                  break;
                default:
                  this._focusByCssSelector(this.autoFocus);
              }
            }
            _restoreFocus(e) {
              "dialog" !== this.autoFocus &&
                (this._elementFocusedBeforeDrawerWasOpened
                  ? this._focusMonitor.focusVia(
                      this._elementFocusedBeforeDrawerWasOpened,
                      e
                    )
                  : this._elementRef.nativeElement.blur(),
                (this._elementFocusedBeforeDrawerWasOpened = null));
            }
            _isFocusWithinDrawer() {
              const e = this._doc.activeElement;
              return !!e && this._elementRef.nativeElement.contains(e);
            }
            ngAfterViewInit() {
              (this._isAttached = !0),
                (this._focusTrap = this._focusTrapFactory.create(
                  this._elementRef.nativeElement
                )),
                this._updateFocusTrapState(),
                "end" === this._position && this._updatePositionInParent("end");
            }
            ngAfterContentChecked() {
              this._platform.isBrowser && (this._enableAnimations = !0);
            }
            ngOnDestroy() {
              this._focusTrap && this._focusTrap.destroy(),
                this._anchor?.remove(),
                (this._anchor = null),
                this._animationStarted.complete(),
                this._animationEnd.complete(),
                this._modeChanged.complete(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open(e) {
              return this.toggle(!0, e);
            }
            close() {
              return this.toggle(!1);
            }
            _closeViaBackdropClick() {
              return this._setOpen(!1, !0, "mouse");
            }
            toggle(e = !this.opened, i) {
              e && i && (this._openedVia = i);
              const r = this._setOpen(
                e,
                !e && this._isFocusWithinDrawer(),
                this._openedVia || "program"
              );
              return e || (this._openedVia = null), r;
            }
            _setOpen(e, i, r) {
              return (
                (this._opened = e),
                e
                  ? (this._animationState = this._enableAnimations
                      ? "open"
                      : "open-instant")
                  : ((this._animationState = "void"),
                    i && this._restoreFocus(r)),
                this._updateFocusTrapState(),
                new Promise((s) => {
                  this.openedChange
                    .pipe(Vt(1))
                    .subscribe((o) => s(o ? "open" : "close"));
                })
              );
            }
            _getWidth() {
              return (
                (this._elementRef.nativeElement &&
                  this._elementRef.nativeElement.offsetWidth) ||
                0
              );
            }
            _updateFocusTrapState() {
              this._focusTrap &&
                (this._focusTrap.enabled = this.opened && "side" !== this.mode);
            }
            _updatePositionInParent(e) {
              const i = this._elementRef.nativeElement,
                r = i.parentNode;
              "end" === e
                ? (this._anchor ||
                    ((this._anchor =
                      this._doc.createComment("mat-drawer-anchor")),
                    r.insertBefore(this._anchor, i)),
                  r.appendChild(i))
                : this._anchor &&
                  this._anchor.parentNode.insertBefore(i, this._anchor);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                g(ce),
                g(Vh),
                g(ys),
                g(jt),
                g(Q),
                g(yc),
                g(ae, 8),
                g(Hv, 8)
              );
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-drawer"]],
              viewQuery: function (e, i) {
                if ((1 & e && $t(WZ, 5), 2 & e)) {
                  let r;
                  se((r = oe())) && (i._content = r.first);
                }
              },
              hostAttrs: ["tabIndex", "-1", 1, "mat-drawer"],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  El("@transform.start", function (s) {
                    return i._animationStarted.next(s);
                  })("@transform.done", function (s) {
                    return i._animationEnd.next(s);
                  }),
                  2 & e &&
                    (ze("align", null),
                    Al("@transform", i._animationState),
                    Ye("mat-drawer-end", "end" === i.position)(
                      "mat-drawer-over",
                      "over" === i.mode
                    )("mat-drawer-push", "push" === i.mode)(
                      "mat-drawer-side",
                      "side" === i.mode
                    )("mat-drawer-opened", i.opened));
              },
              inputs: {
                position: "position",
                mode: "mode",
                disableClose: "disableClose",
                autoFocus: "autoFocus",
                opened: "opened",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                openedStart: "openedStart",
                _closedStream: "closed",
                closedStart: "closedStart",
                onPositionChanged: "positionChanged",
              },
              exportAs: ["matDrawer"],
              ngContentSelectors: Nf,
              decls: 3,
              vars: 0,
              consts: [
                ["cdkScrollable", "", 1, "mat-drawer-inner-container"],
                ["content", ""],
              ],
              template: function (e, i) {
                1 & e && (Nt(), b(0, "div", 0, 1), De(2), y());
              },
              dependencies: [Gc],
              encapsulation: 2,
              data: { animation: [JI.transformDrawer] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        tO = (() => {
          class n {
            constructor(e, i, r, s, o, a = !1, l) {
              (this._dir = e),
                (this._element = i),
                (this._ngZone = r),
                (this._changeDetectorRef = s),
                (this._animationMode = l),
                (this._drawers = new fa()),
                (this.backdropClick = new fe()),
                (this._destroyed = new $()),
                (this._doCheckSubject = new $()),
                (this._contentMargins = { left: null, right: null }),
                (this._contentMarginChanges = new $()),
                e &&
                  e.change.pipe(_e(this._destroyed)).subscribe(() => {
                    this._validateDrawers(), this.updateContentMargins();
                  }),
                o
                  .change()
                  .pipe(_e(this._destroyed))
                  .subscribe(() => this.updateContentMargins()),
                (this._autosize = a);
            }
            get start() {
              return this._start;
            }
            get end() {
              return this._end;
            }
            get autosize() {
              return this._autosize;
            }
            set autosize(e) {
              this._autosize = ke(e);
            }
            get hasBackdrop() {
              return (
                this._backdropOverride ??
                (!this._start ||
                  "side" !== this._start.mode ||
                  !this._end ||
                  "side" !== this._end.mode)
              );
            }
            set hasBackdrop(e) {
              this._backdropOverride = null == e ? null : ke(e);
            }
            get scrollable() {
              return this._userContent || this._content;
            }
            ngAfterContentInit() {
              this._allDrawers.changes
                .pipe(qn(this._allDrawers), _e(this._destroyed))
                .subscribe((e) => {
                  this._drawers.reset(
                    e.filter((i) => !i._container || i._container === this)
                  ),
                    this._drawers.notifyOnChanges();
                }),
                this._drawers.changes.pipe(qn(null)).subscribe(() => {
                  this._validateDrawers(),
                    this._drawers.forEach((e) => {
                      this._watchDrawerToggle(e),
                        this._watchDrawerPosition(e),
                        this._watchDrawerMode(e);
                    }),
                    (!this._drawers.length ||
                      this._isDrawerOpen(this._start) ||
                      this._isDrawerOpen(this._end)) &&
                      this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._ngZone.runOutsideAngular(() => {
                  this._doCheckSubject
                    .pipe(Ph(10), _e(this._destroyed))
                    .subscribe(() => this.updateContentMargins());
                });
            }
            ngOnDestroy() {
              this._contentMarginChanges.complete(),
                this._doCheckSubject.complete(),
                this._drawers.destroy(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open() {
              this._drawers.forEach((e) => e.open());
            }
            close() {
              this._drawers.forEach((e) => e.close());
            }
            updateContentMargins() {
              let e = 0,
                i = 0;
              if (this._left && this._left.opened)
                if ("side" == this._left.mode) e += this._left._getWidth();
                else if ("push" == this._left.mode) {
                  const r = this._left._getWidth();
                  (e += r), (i -= r);
                }
              if (this._right && this._right.opened)
                if ("side" == this._right.mode) i += this._right._getWidth();
                else if ("push" == this._right.mode) {
                  const r = this._right._getWidth();
                  (i += r), (e -= r);
                }
              (e = e || null),
                (i = i || null),
                (e !== this._contentMargins.left ||
                  i !== this._contentMargins.right) &&
                  ((this._contentMargins = { left: e, right: i }),
                  this._ngZone.run(() =>
                    this._contentMarginChanges.next(this._contentMargins)
                  ));
            }
            ngDoCheck() {
              this._autosize &&
                this._isPushed() &&
                this._ngZone.runOutsideAngular(() =>
                  this._doCheckSubject.next()
                );
            }
            _watchDrawerToggle(e) {
              e._animationStarted
                .pipe(
                  ct((i) => i.fromState !== i.toState),
                  _e(this._drawers.changes)
                )
                .subscribe((i) => {
                  "open-instant" !== i.toState &&
                    "NoopAnimations" !== this._animationMode &&
                    this._element.nativeElement.classList.add(
                      "mat-drawer-transition"
                    ),
                    this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                "side" !== e.mode &&
                  e.openedChange
                    .pipe(_e(this._drawers.changes))
                    .subscribe(() => this._setContainerClass(e.opened));
            }
            _watchDrawerPosition(e) {
              !e ||
                e.onPositionChanged
                  .pipe(_e(this._drawers.changes))
                  .subscribe(() => {
                    this._ngZone.onMicrotaskEmpty.pipe(Vt(1)).subscribe(() => {
                      this._validateDrawers();
                    });
                  });
            }
            _watchDrawerMode(e) {
              e &&
                e._modeChanged
                  .pipe(_e(Xr(this._drawers.changes, this._destroyed)))
                  .subscribe(() => {
                    this.updateContentMargins(),
                      this._changeDetectorRef.markForCheck();
                  });
            }
            _setContainerClass(e) {
              const i = this._element.nativeElement.classList,
                r = "mat-drawer-container-has-open";
              e ? i.add(r) : i.remove(r);
            }
            _validateDrawers() {
              (this._start = this._end = null),
                this._drawers.forEach((e) => {
                  "end" == e.position ? (this._end = e) : (this._start = e);
                }),
                (this._right = this._left = null),
                this._dir && "rtl" === this._dir.value
                  ? ((this._left = this._end), (this._right = this._start))
                  : ((this._left = this._start), (this._right = this._end));
            }
            _isPushed() {
              return (
                (this._isDrawerOpen(this._start) &&
                  "over" != this._start.mode) ||
                (this._isDrawerOpen(this._end) && "over" != this._end.mode)
              );
            }
            _onBackdropClicked() {
              this.backdropClick.emit(), this._closeModalDrawersViaBackdrop();
            }
            _closeModalDrawersViaBackdrop() {
              [this._start, this._end]
                .filter((e) => e && !e.disableClose && this._canHaveBackdrop(e))
                .forEach((e) => e._closeViaBackdropClick());
            }
            _isShowingBackdrop() {
              return (
                (this._isDrawerOpen(this._start) &&
                  this._canHaveBackdrop(this._start)) ||
                (this._isDrawerOpen(this._end) &&
                  this._canHaveBackdrop(this._end))
              );
            }
            _canHaveBackdrop(e) {
              return "side" !== e.mode || !!this._backdropOverride;
            }
            _isDrawerOpen(e) {
              return null != e && e.opened;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                g(rr, 8),
                g(ce),
                g(Q),
                g(Et),
                g(Sf),
                g(nQ),
                g(Hn, 8)
              );
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-drawer-container"]],
              contentQueries: function (e, i, r) {
                if ((1 & e && (Ue(r, Lf, 5), Ue(r, eO, 5)), 2 & e)) {
                  let s;
                  se((s = oe())) && (i._content = s.first),
                    se((s = oe())) && (i._allDrawers = s);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && $t(Lf, 5), 2 & e)) {
                  let r;
                  se((r = oe())) && (i._userContent = r.first);
                }
              },
              hostAttrs: [1, "mat-drawer-container"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  Ye(
                    "mat-drawer-container-explicit-backdrop",
                    i._backdropOverride
                  );
              },
              inputs: { autosize: "autosize", hasBackdrop: "hasBackdrop" },
              outputs: { backdropClick: "backdropClick" },
              exportAs: ["matDrawerContainer"],
              features: [pe([{ provide: Hv, useExisting: n }])],
              ngContentSelectors: XZ,
              decls: 4,
              vars: 2,
              consts: [
                [
                  "class",
                  "mat-drawer-backdrop",
                  3,
                  "mat-drawer-shown",
                  "click",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [1, "mat-drawer-backdrop", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Nt(KZ),
                  B(0, GZ, 1, 2, "div", 0),
                  De(1),
                  De(2, 1),
                  B(3, YZ, 2, 0, "mat-drawer-content", 1)),
                  2 & e &&
                    (T("ngIf", i.hasBackdrop), E(3), T("ngIf", !i._content));
              },
              dependencies: [At, Lf],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        nO = (() => {
          class n extends Lf {
            constructor(e, i, r, s, o) {
              super(e, i, r, s, o);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(Et), g(Le(() => rO)), g(ce), g(Wc), g(Q));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-sidenav-content"]],
              hostAttrs: [1, "mat-drawer-content", "mat-sidenav-content"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  Us("margin-left", i._container._contentMargins.left, "px")(
                    "margin-right",
                    i._container._contentMargins.right,
                    "px"
                  );
              },
              features: [pe([{ provide: Gc, useExisting: n }]), q],
              ngContentSelectors: Nf,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Nt(), De(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        iO = (() => {
          class n extends eO {
            constructor() {
              super(...arguments),
                (this._fixedInViewport = !1),
                (this._fixedTopGap = 0),
                (this._fixedBottomGap = 0);
            }
            get fixedInViewport() {
              return this._fixedInViewport;
            }
            set fixedInViewport(e) {
              this._fixedInViewport = ke(e);
            }
            get fixedTopGap() {
              return this._fixedTopGap;
            }
            set fixedTopGap(e) {
              this._fixedTopGap = Ti(e);
            }
            get fixedBottomGap() {
              return this._fixedBottomGap;
            }
            set fixedBottomGap(e) {
              this._fixedBottomGap = Ti(e);
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = tt(n)))(i || n);
              };
            })()),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-sidenav"]],
              hostAttrs: ["tabIndex", "-1", 1, "mat-drawer", "mat-sidenav"],
              hostVars: 17,
              hostBindings: function (e, i) {
                2 & e &&
                  (ze("align", null),
                  Us("top", i.fixedInViewport ? i.fixedTopGap : null, "px")(
                    "bottom",
                    i.fixedInViewport ? i.fixedBottomGap : null,
                    "px"
                  ),
                  Ye("mat-drawer-end", "end" === i.position)(
                    "mat-drawer-over",
                    "over" === i.mode
                  )("mat-drawer-push", "push" === i.mode)(
                    "mat-drawer-side",
                    "side" === i.mode
                  )("mat-drawer-opened", i.opened)(
                    "mat-sidenav-fixed",
                    i.fixedInViewport
                  ));
              },
              inputs: {
                fixedInViewport: "fixedInViewport",
                fixedTopGap: "fixedTopGap",
                fixedBottomGap: "fixedBottomGap",
              },
              exportAs: ["matSidenav"],
              features: [q],
              ngContentSelectors: Nf,
              decls: 3,
              vars: 0,
              consts: [
                ["cdkScrollable", "", 1, "mat-drawer-inner-container"],
                ["content", ""],
              ],
              template: function (e, i) {
                1 & e && (Nt(), b(0, "div", 0, 1), De(2), y());
              },
              dependencies: [Gc],
              encapsulation: 2,
              data: { animation: [JI.transformDrawer] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        rO = (() => {
          class n extends tO {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = tt(n)))(i || n);
              };
            })()),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-sidenav-container"]],
              contentQueries: function (e, i, r) {
                if ((1 & e && (Ue(r, nO, 5), Ue(r, iO, 5)), 2 & e)) {
                  let s;
                  se((s = oe())) && (i._content = s.first),
                    se((s = oe())) && (i._allDrawers = s);
                }
              },
              hostAttrs: [1, "mat-drawer-container", "mat-sidenav-container"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  Ye(
                    "mat-drawer-container-explicit-backdrop",
                    i._backdropOverride
                  );
              },
              exportAs: ["matSidenavContainer"],
              features: [pe([{ provide: Hv, useExisting: n }]), q],
              ngContentSelectors: eQ,
              decls: 4,
              vars: 2,
              consts: [
                [
                  "class",
                  "mat-drawer-backdrop",
                  3,
                  "mat-drawer-shown",
                  "click",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [1, "mat-drawer-backdrop", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Nt(JZ),
                  B(0, ZZ, 1, 2, "div", 0),
                  De(1),
                  De(2, 1),
                  B(3, QZ, 2, 0, "mat-sidenav-content", 1)),
                  2 & e &&
                    (T("ngIf", i.hasBackdrop), E(3), T("ngIf", !i._content));
              },
              dependencies: [At, nO],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        rQ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [Ki, Me, Co, Co, Me] })),
            n
          );
        })();
      function sQ(n, t) {
        if (1 & n) {
          const e = Dr();
          b(0, "button", 16),
            P("click", function () {
              return Ri(e), Pi(Re(2).logout());
            }),
            b(1, "i", 10),
            w(2, " logout "),
            y(),
            w(3, " Logout "),
            y();
        }
      }
      function oQ(n, t) {
        if (
          (1 & n &&
            (b(0, "mat-sidenav", 5)(1, "a", 6),
            ge(2, "img", 7),
            y(),
            b(3, "mat-nav-list", 8)(4, "a", 9)(5, "i", 10),
            w(6, " dashboard "),
            y(),
            w(7, " Dashboard "),
            y(),
            b(8, "a", 11)(9, "i", 10),
            w(10, " people "),
            y(),
            w(11, " Equipe "),
            y(),
            b(12, "a", 12)(13, "i", 10),
            w(14, " person "),
            y(),
            w(15, " Membro "),
            y(),
            b(16, "a", 13)(17, "i", 10),
            w(18, " description "),
            y(),
            w(19, " Projetos "),
            y(),
            b(20, "a", 14)(21, "i", 10),
            w(22, " assignment "),
            y(),
            w(23, " Tarefas "),
            y()(),
            B(24, sQ, 4, 0, "button", 15),
            y()),
          2 & n)
        ) {
          const e = Re();
          E(24), T("ngIf", e.mostraMenu);
        }
      }
      let aQ = (() => {
        class n {
          constructor(e, i) {
            (this.authGuard = e),
              (this.router = i),
              (this.mostraMenu = !1),
              (this.menuResp = "none");
          }
          ngOnInit() {
            this.authGuard.mostrarMenuEmmiter.subscribe(
              (e) => (this.mostraMenu = e)
            );
          }
          logout() {
            window.localStorage.setItem("token", ""),
              (window.location.pathname = "/");
          }
          menuResponsivo() {
            this.menuResp = "flex";
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(g(qt), g(Pe));
          }),
          (n.ɵcmp = G({
            type: n,
            selectors: [["app-nav"]],
            decls: 10,
            vars: 1,
            consts: [
              ["id", "menu", 3, "click"],
              [1, "barra"],
              [1, "menuMaior"],
              [1, "container"],
              [
                "class",
                "sidenav",
                "mode",
                "side",
                "opened",
                "",
                "fixedInViewport",
                "True",
                4,
                "ngIf",
              ],
              [
                "mode",
                "side",
                "opened",
                "",
                "fixedInViewport",
                "True",
                1,
                "sidenav",
              ],
              ["mat-list-item", ""],
              [
                "src",
                "../../../../assets/images/Brisanet_logo.png",
                "alt",
                "Logo Brisanet",
                1,
                "logo",
              ],
              [1, "nav-list", 3, "display"],
              ["mat-list-item", "", "routerLink", "dashboard"],
              [1, "material-icons"],
              ["mat-list-item", "", "routerLink", "equipes"],
              ["mat-list-item", "", "routerLink", "membros"],
              ["mat-list-item", "", "routerLink", "projetos"],
              ["mat-list-item", "", "routerLink", "tarefas"],
              ["class", "logout", 3, "click", 4, "ngIf"],
              [1, "logout", 3, "click"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "div")(1, "button", 0),
                P("click", function () {
                  return i.menuResponsivo();
                }),
                ge(2, "span", 1)(3, "span", 1)(4, "span", 1),
                y(),
                b(5, "div", 2)(6, "mat-sidenav-container", 3),
                B(7, oQ, 25, 1, "mat-sidenav", 4),
                b(8, "mat-card-content"),
                ge(9, "router-outlet"),
                y()()()()),
                2 & e && (E(7), T("ngIf", i.mostraMenu));
            },
            dependencies: [cy, xh, At, rk, BZ, VZ, iO, rO],
            styles: [
              ".sidenav[_ngcontent-%COMP%]{border-radius:5px;display:flex;flex-direction:column;height:auto;transition:.5s;width:12rem}a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin:2rem 1rem}.mat-list-item[_ngcontent-%COMP%]{transition:.5s}.mat-list-item[_ngcontent-%COMP%]:hover{color:#f56e28;height:3rem;transition:.5s;transform:scale(1.1)}.logo[_ngcontent-%COMP%]{margin-top:1rem;margin-left:1rem;max-height:3rem}a[_ngcontent-%COMP%]:focus{color:#f56e28}.logout[_ngcontent-%COMP%]{position:absolute;bottom:40px;display:flex;justify-content:space-evenly;margin-left:25px;align-items:center;width:100px;height:40px;border-radius:5px}@media (max-width: 600px){.sidenav[_ngcontent-%COMP%]{display:none}button#menu[_ngcontent-%COMP%]{position:absolute;top:10px;z-index:2}span.barra[_ngcontent-%COMP%]{margin-top:5px;height:5px;width:2.5rem;border-radius:10px;background-color:#2b2828}}",
            ],
          })),
          n
        );
      })();
      const lQ = ["*", [["mat-toolbar-row"]]],
        cQ = ["*", "mat-toolbar-row"],
        uQ = jy(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          }
        );
      let dQ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = N({
              type: n,
              selectors: [["mat-toolbar-row"]],
              hostAttrs: [1, "mat-toolbar-row"],
              exportAs: ["matToolbarRow"],
            })),
            n
          );
        })(),
        hQ = (() => {
          class n extends uQ {
            constructor(e, i, r) {
              super(e), (this._platform = i), (this._document = r);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                (this._checkToolbarMixedModes(),
                this._toolbarRows.changes.subscribe(() =>
                  this._checkToolbarMixedModes()
                ));
            }
            _checkToolbarMixedModes() {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(g(ce), g(jt), g(ae));
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["mat-toolbar"]],
              contentQueries: function (e, i, r) {
                if ((1 & e && Ue(r, dQ, 5), 2 & e)) {
                  let s;
                  se((s = oe())) && (i._toolbarRows = s);
                }
              },
              hostAttrs: [1, "mat-toolbar"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  Ye("mat-toolbar-multiple-rows", i._toolbarRows.length > 0)(
                    "mat-toolbar-single-row",
                    0 === i._toolbarRows.length
                  );
              },
              inputs: { color: "color" },
              exportAs: ["matToolbar"],
              features: [q],
              ngContentSelectors: cQ,
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && (Nt(lQ), De(0), De(1, 1));
              },
              styles: [
                ".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        fQ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [Me, Me] })),
            n
          );
        })(),
        pQ = (() => {
          class n {
            constructor() {}
            ngOnInit() {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-header"]],
              decls: 4,
              vars: 0,
              consts: [[1, "header"]],
              template: function (e, i) {
                1 & e &&
                  (b(0, "mat-toolbar", 0)(1, "span")(2, "a"),
                  w(3, " Sistema de Gerenciamento de Projetos "),
                  y()()());
              },
              dependencies: [hQ],
              styles: [
                ".header[_ngcontent-%COMP%]{background-color:#fff;justify-content:flex-end}",
              ],
            })),
            n
          );
        })(),
        mQ = (() => {
          class n {
            constructor() {
              this.title = "projeto-brisa";
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = G({
              type: n,
              selectors: [["app-root"]],
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && ge(0, "app-header")(1, "app-nav");
              },
              dependencies: [aQ, pQ],
              styles: ["app-header[_ngcontent-%COMP%]{position:relative}"],
            })),
            n
          );
        })(),
        yQ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [zh, Me, zh, Me] })),
            n
          );
        })(),
        IQ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [Cc, Me, Me] })),
            n
          );
        })(),
        NQ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({})),
            n
          );
        })(),
        $Q = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [NQ, Me, Me] })),
            n
          );
        })(),
        XQ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = re({ type: n })),
            (n.ɵinj = ne({ imports: [Me, Me] })),
            n
          );
        })();
      const eJ = {
        provide: new R("mat-menu-scroll-strategy"),
        deps: [Kn],
        useFactory: function JQ(n) {
          return () => n.scrollStrategies.reposition();
        },
      };
      let tJ = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = re({ type: n })),
          (n.ɵinj = ne({ providers: [eJ], imports: [Ki, Me, Cc, ja, Co, Me] })),
          n
        );
      })();
      const nJ = [
        {
          provide: My,
          useClass: (() => {
            class n {
              constructor(e) {
                this.authService = e;
              }
              intercept(e, i) {
                const r = window.localStorage.getItem("token");
                let s = e;
                return (
                  r &&
                    (s = e.clone({
                      headers: e.headers.set("Authorization", "Bearer " + r),
                    })),
                  i.handle(s).pipe(tr(this.handleError))
                );
              }
              handleError(e) {
                return (
                  e.error instanceof ErrorEvent
                    ? console.error("Ocorreu um erro:", e.error.message)
                    : console.error(
                        `C\xf3digo do erro ${e.status}, Erro: ${JSON.stringify(
                          e.error
                        )}`
                      ),
                  eo("Ocorreu um erro, tente novamente")
                );
              }
            }
            return (
              (n.ɵfac = function (e) {
                return new (e || n)(x(fc));
              }),
              (n.ɵprov = F({ token: n, factory: n.ɵfac })),
              n
            );
          })(),
          multi: !0,
        },
      ];
      let iJ = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = re({ type: n, bootstrap: [mQ] })),
          (n.ɵinj = ne({
            providers: [fc, qt, nJ],
            imports: [
              EZ,
              RU,
              Hx,
              Ki,
              N$,
              b8,
              H8,
              ZA,
              kW,
              DK,
              yQ,
              bW,
              XQ,
              qZ,
              tJ,
              IQ,
              MX,
              rQ,
              BI,
              fQ,
              tZ,
              $Q,
              HS,
            ],
          })),
          n
        );
      })();
      (function cj() {
        $D = !1;
      })(),
        Cz()
          .bootstrapModule(iJ)
          .catch((n) => console.error(n));
    },
  },
  (Ae) => {
    Ae((Ae.s = 974));
  },
]);
